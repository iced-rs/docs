(function() {var type_impls = {
"iced_wgpu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Stack%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Stack%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Stack&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Layer,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iced_wgpu::layer::Stack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Stack%3CT%3E\" class=\"impl\"><a href=\"#impl-Default-for-Stack%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Stack&lt;T&gt;<div class=\"where\">where\n    T: Layer,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Stack&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","iced_wgpu::layer::Stack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stack%3CT%3E\" class=\"impl\"><a href=\"#impl-Stack%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Stack&lt;T&gt;<div class=\"where\">where\n    T: Layer,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>() -&gt; Stack&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new empty [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">current_mut</a>(&amp;mut self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, Transformation)</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the current [<code>Layer</code>] of the [<code>Stack</code>], together with\nthe current [<code>Transformation</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transformation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">transformation</a>(&amp;self) -&gt; Transformation</h4></section></summary><div class=\"docblock\"><p>Returns the current [<code>Transformation</code>] of the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_clip\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push_clip</a>(&amp;mut self, bounds: Rectangle)</h4></section></summary><div class=\"docblock\"><p>Pushes a new clipping region in the [<code>Stack</code>]; creating a new layer in the\nprocess.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_clip\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop_clip</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Pops the current clipping region from the [<code>Stack</code>] and restores the previous one.</p>\n<p>The current layer will be recorded for drawing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_transformation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push_transformation</a>(&amp;mut self, transformation: Transformation)</h4></section></summary><div class=\"docblock\"><p>Pushes a new [<code>Transformation</code>] in the [<code>Stack</code>].</p>\n<p>Future drawing operations will be affected by this new [<code>Transformation</code>] until\nit is popped using <a href=\"Self::pop_transformation\"><code>pop_transformation</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_transformation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop_transformation</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Pops the current [<code>Transformation</code>] in the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over mutable references to the layers in the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over immutable references to the layers in the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns the slice of layers in the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">flush</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Flushes and settles any primitives in the current layer of the [<code>Stack</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the layers of the [<code>Stack</code>], allowing reuse.</p>\n<p>This will normally keep layer allocations for future drawing operations.</p>\n</div></details></div></details>",0,"iced_wgpu::layer::Stack"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()