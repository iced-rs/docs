(function() {
    var type_impls = Object.fromEntries([["iced_renderer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compositor-for-Compositor%3CA,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#207-387\">source</a><a href=\"#impl-Compositor-for-Compositor%3CA,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Compositor for <a class=\"enum\" href=\"iced_renderer/fallback/enum.Compositor.html\" title=\"enum iced_renderer::fallback::Compositor\">Compositor</a>&lt;A, B&gt;<div class=\"where\">where\n    A: Compositor,\n    B: Compositor,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Renderer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#212\">source</a><a href=\"#associatedtype.Renderer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Renderer</a> = <a class=\"enum\" href=\"iced_renderer/fallback/enum.Renderer.html\" title=\"enum iced_renderer::fallback::Renderer\">Renderer</a>&lt;&lt;A as Compositor&gt;::Renderer, &lt;B as Compositor&gt;::Renderer&gt;</h4></section></summary><div class='docblock'>The iced renderer of the backend.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Surface\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#213\">source</a><a href=\"#associatedtype.Surface\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Surface</a> = <a class=\"enum\" href=\"iced_renderer/fallback/enum.Surface.html\" title=\"enum iced_renderer::fallback::Surface\">Surface</a>&lt;&lt;A as Compositor&gt;::Surface, &lt;B as Compositor&gt;::Surface&gt;</h4></section></summary><div class='docblock'>The surface of the backend.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_backend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#215-264\">source</a><a href=\"#method.with_backend\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">with_backend</a>&lt;W: Window + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;(\n    settings: Settings,\n    compatible_window: W,\n    backend: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Creates a new [<code>Compositor</code>] with a backend preference. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_renderer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#266-275\">source</a><a href=\"#method.create_renderer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_renderer</a>(&amp;self) -&gt; Self::Renderer</h4></section></summary><div class='docblock'>Creates a [<code>Self::Renderer</code>] for the [<code>Compositor</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_surface\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#277-291\">source</a><a href=\"#method.create_surface\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">create_surface</a>&lt;W: Window + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;(\n    &amp;mut self,\n    window: W,\n    width: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    height: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; Self::Surface</h4></section></summary><div class='docblock'>Crates a new <a href=\"Self::Surface\"><code>Surface</code></a> for the given window.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.configure_surface\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#293-308\">source</a><a href=\"#method.configure_surface\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">configure_surface</a>(\n    &amp;mut self,\n    surface: &amp;mut Self::Surface,\n    width: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    height: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n)</h4></section></summary><div class='docblock'>Configures a new <a href=\"Self::Surface\"><code>Surface</code></a> with the given dimensions.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_font\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#310-312\">source</a><a href=\"#method.load_font\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">load_font</a>(&amp;mut self, font: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;)</h4></section></summary><div class='docblock'>Loads a font from its bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fetch_information\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#314-316\">source</a><a href=\"#method.fetch_information\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fetch_information</a>(&amp;self) -&gt; Information</h4></section></summary><div class='docblock'>Returns [<code>Information</code>] used by this [<code>Compositor</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.present\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#318-351\">source</a><a href=\"#method.present\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">present</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;(\n    &amp;mut self,\n    renderer: &amp;mut Self::Renderer,\n    surface: &amp;mut Self::Surface,\n    viewport: &amp;Viewport,\n    background_color: Color,\n    overlay: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, SurfaceError&gt;</h4></section></summary><div class='docblock'>Presents the <a href=\"Self::Renderer\"><code>Renderer</code></a> primitives to the next frame of the given <a href=\"Self::Surface\"><code>Surface</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screenshot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#353-386\">source</a><a href=\"#method.screenshot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">screenshot</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;(\n    &amp;mut self,\n    renderer: &amp;mut Self::Renderer,\n    surface: &amp;mut Self::Surface,\n    viewport: &amp;Viewport,\n    background_color: Color,\n    overlay: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Screenshots the current <a href=\"Self::Renderer\"><code>Renderer</code></a> primitives to an offscreen texture, and returns the bytes of\nthe texture ordered as <code>RGBA</code> in the <code>sRGB</code> color space.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>&lt;W&gt;(\n    settings: Settings,\n    compatible_window: W,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;&gt;<div class=\"where\">where\n    W: Window + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Creates a new [<code>Compositor</code>].</div></details></div></details>","Compositor","iced_renderer::Compositor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Compositor%3CA,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#184\">source</a><a href=\"#impl-Debug-for-Compositor%3CA,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"iced_renderer/fallback/enum.Compositor.html\" title=\"enum iced_renderer::fallback::Compositor\">Compositor</a>&lt;A, B&gt;<div class=\"where\">where\n    A: Compositor + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    B: Compositor + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iced_renderer/fallback.rs.html#184\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iced_renderer::Compositor"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11996]}