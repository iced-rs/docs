var searchIndex = JSON.parse('{\
"iced":{"doc":"Iced is a cross-platform GUI library focused on simplicity …","t":"TGTGFPPPPPFPFPGPPTPFPIPPGGKPPPPPPFGPPPPTTTPPPPGPPTPPPPPTPPTFFPFPETFFIIPPEFPFPPPFTGPPPPFTFTPPTTTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOQCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEONNNNCNNNNOOENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNCNNNNNNNNNNNCMNNNNNNNNNNNNNNNNNNONCNNNNNNNNCHOOONHNNNNNNCNNNMONNNNNNNNNNNNNNNNNONNNNNNNCCCCNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNOOOCNNNNNNOOOOOOKKRRFRKKRFFRKNNNNNNNNNNNNNNNNNNNNNNNONNMCNNNNNNNONNNNNNNNNNMMNNNMMMNNNONNNNNNNNNEOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMMONCNNMNNNNNNCNNNNMNCNNNNNNOMONMMNNNCNNCNCNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMOMNNNCNNNNMKGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNFPGGFRPPPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNOOOFFTFNNNNNNNNNNNNHNNNNNNNNNNNNHNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHHNNNHNNNNNNNNNNNNNNNNNNNNNNNGPPNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNPPGPPFPGPPPGPPPPGPPPPPPPPPPPGPPPPPNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNNNNNONNNNOMNNNNNNNNNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMONNNNNNNNNNNNNNNNNNNNNNNIIRKMMPGFPKNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNTPPPPTPGKRRRRRKGTRGPKRPKRPGFNNNNNNNNNNNNNNMOMNNNNMNNOMMNMMMNNNNNNNNCNNNNNMMMNNONNNNNNMMMCMMONNNNNNNNNNNNNNNNNNMMOMMNNMMMMOONNNNNNNNNNNNNNNNNNMMNMONNMMGPPPGPGPPPPGPKPPRPPPPGPPPPPPPPPPPPPPNNNNNNNNNNNNNNMNNNNNNMMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMMMMMNNNNNNNNNNNNNNNNNNMNNMOFRKRFRNNNNNNNNNNNNNNMNNNNNONNMNNNNNNNNNNNNNONNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNFKFFKNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNCNNNMNNNNNONNNOCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPKGKPKNNNNNNNNMNNNNNNNMCNNNNNNNNNNNNMHMMMHMCNMMCNNNNNNNNMNNFKNNNNNNNNNNHNNNNNNNNNHNHMHHONNNNNNNNNNNNMNNONNNNNNNMNNFFKHMHMOOOOKHMHMHMHMPPPPKRIKGPPGFFIFOMHMHMPPGFFNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNGPPPPPGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOHHHHFHPGPPGPPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNIKNMMPPPPGPPPPPGPFPPPPPPPPPPPPPPGGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFGFPNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNTTTPGGPPTPGFPPPPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPPGPPPGPPPPGPPPPPPPPPPPGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFKKRRRRNNNNNONNNNNMNNNNNNNNNNNNNNNNNNMNNNNONMNNNNNNNNNMMNICKRFFFIOOHMNOOMOFKKRRFKRRRKKKNNNNNNONNNNNMNNNNNNNNNNNNNNNNNNNMNHNNNNNNNONNMNNNNNNNNNNMMMMNNFNONNNNNNNNNNOONNNNONONNNONNNNNNNNNNNNNNNNNNNNONFHHHHFNNNNNNNNNNOONNNNHNNNNOONNNNNNNNNOOOOOONNNNNNNNNNTTTTPPPPFPTTPPTPTTPPTTTPPPTPTPTTPPTPFTTPPTTTGPPPNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOONNNNNNNNNNNNNNNNNNNNNNNFFJJJJJJJJJJJJJJJJJJJJJJFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOFFPPPPFFFKFPTTTTTTPPRPPPFPPPFPPFPPPFFPFFFIFFFFPFFPPFFRFIFFGFFPPPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHCHNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHQCHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNCCHNCHNNNNNNCHCHHHQCCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNHQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNCHNNCHCHNNNNNNNNNNNNCHCHCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMHNHCHHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFKRPPPGFINNNNNNNNNNOONNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOMHHONNNNNNNNNNNNNNNNNNNNNPPIFGFIIGPPGFGPPPFKPPPPRFGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNCCNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNONCONNOOOOCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNPGPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNGFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOONNNNNNNNNNNNNNNNNNNNFFFNNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNFFNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNOOOOONNNNNNNNNNFIFKIPPPPPFPPPPPPFPGFGTTTIFPPPGGPPSPPPFFFFFIFFKKPPPPPPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNCNNNNNNNNNNMNNNNNNCCNNOOCMNNNNONNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFKFFKRKFFNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOMNNNNNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNMNNNNNNNNNMNNNNNNMMNNNNNNMNMNMNMNMNMNMNNNNNNNNNNNNMNMNMNMNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFIFTTTTTTFFFTTTTIFITTKRIKIFTTTIIFITNONNNNNNNNNNNNNNMNNNNNNNNONNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOONONNNNNNNNNNNNNHONNCNNNOOOMNNNNNNNNNNNNNNHNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNONNNNOONMNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMHONNNNNNNNNNNONNNNNNNNNOOONNNNOONNNNNNNNNOOONNNNNFFFFNNNNNNNONNNNNONONNNNNNNNNNNNONOOOOOONNNNNNNNNOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNOONNNNNONNNNNNNNNNNNNNONNNNNNNNNFFFFFFFFFFFFFFFFFFFFFKFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNCNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNONNNNNNNNNNNNHHNNNNNNNNNNNONOMHNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNOOOOOOOOONNNNNNNNNNNOOOOOOOOONNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNKMNMHHIIIIIIIIIIIIIIIIIIIIOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKKKKMMMMMFFFFNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNRKKMMMMNNMMMMMMMMMNNHHHHHHFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIIOOOOOOOOOOHOHHOOOOOOOIFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKKRKNNNNNNNNMMMMNMMMNNNMMMMMNMMMMMMMMMNNMMMMNNMNPPPGFGPPPPPFGOOOOOOOPKFRPPFGFINNNNNNNNNNNNNNNOONNNNNNNNNNNNONNNHMNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNOHHOOMHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRFFFINNNNNNNNNNOOHNNNNNNNNNNMNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHOMONNHNNNNNNNNNNNNNNNNNHNNNNGFFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNFFNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFCKRFFFINNNNNNNNNNNNNNNOONNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPKPRGFGGPGKPGPPFPPPFPGFPPPFPGFPPFPPFFIGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOONNNNONNNNCMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOGPPFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOOOPPKRPGPFPPFPGFINNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKRFFINNNNNOOONNNNNHMNNNNNNNNNNNNNNNNNHHMHNNNNNNNNNNKRFPGGPPPPPPPPFPFIPGNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKRPFGFINNNNNNNNNNOOONNNNNNNNNNHMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNOOPKRGPPPFFINNNNNNNNNNNNNNNNNNONNHMNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNOFPGPKRGPTPPPFFFTFFFPGFIPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOOOOOOOOOOGPPKRKPFRFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTPFFPGPPPGGPPPPPPPPPPPPPPPPPPTTTTTTTTTPGFPPPPPPPPPPPPPPPPFFFFFFGGFGGFPFPPIPFFGIIFFFFTTTTTTTTTSSTTTTTPPPPFFFFFFIGPGFFFFFPPFPPPPPPPPPPTTTTTTTTPPPPPPPPFPFPFIGGPPPFFPPPPGPIPPPPPPGGPPPPPPFTTTTTTTGFPPPGPPPPPPPPPPPPFPGPTTTPGPPPPPTTTTTTTFIFIFIFFFPPPGPFPFFPPPIPPFPPPPPGPPPTSTTTTTTTTTTTTPIGGGPPPPFTTTPPPPPPPTPPPPPPPPPPPPPFFFPPPPPPTTTTTTTSFFPFPPPPPPPGPGPGGFFGFTSSSFIGFFPPPPPPPPPPPPTTTTTTTTTPPPPFFIFFFFFFFFFPPPIFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTTTTTTTTTTTTTTFPPPGGFIGFFFGFPPPPPPPPPPPPPPPPPPPPPPPPFPGFPPGPGFPPPFFIGGGGFTTTTTTTTTTTTFPGIGGFFGFFPPFGPPPPPPTTTTPPPPPPPPPPPKPPPPPPPPTTTTTTTTSTTTPPPPPPFFGFGPPTTPPPPKKKPPKPPTTPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNOOOOOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONOOOOOOOOONNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONOOOOONNOOOOONNNOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOONOOONNOOOONNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNOOOOOONNNNNNNONNNNONNNNOOOONOOOONNNNOOOOONNNNNNNNNNNNNNNOONOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNOOONNONNNOOOONOOOONOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNCOOQOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNOONNNNOOOOOOOOOOOOOOOOOOOOOOOOOISSSPIPCCCCCCQQQQQQQQQQQCCHCCCCCCCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFPGFFFFFFGIPPPPGPFGPGPPPFPPGGGPPPPPPPPPGPPPPPPPPPPPPPPPFPPPPPPPPPPPPFFPGPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPGPPFFPPPPPPPPPPPPPPPGPPPGFFGFFFGFPPGPGPPGPPPPPPPPPPPPGPPGPPPPPPPPGPIIIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFGPPPPGPPPPGFFIFFFPGFFFFFGGFPGPPPPPPPPPPPGPPGPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNOOONNNOOOOOCOOOOONNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIFPIGIFFFFGFFPPPPPFPPFFPPPGGPPSPFGPPPNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONCOOCOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPFPFPPGGPPFFPPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNONNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNONNKTMMMMFFFNNNOONNNNNNNNNNNNOOOONNNNNNOOOONNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIISFIIIIIIIIIIIIIKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMNNNMNKKFFIRNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGPFGFPFPFPPPPPPGPPPPPGIGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNTTSPPPPPPPPPPPPGPPPPFPPGPPPPPPPPPGPPTSFPPPPPPPGGPPFPPPPGPPPIPPPPPPPPPPGFPPPPPPPPPPPPPPPPPPGGPPPPPFPFPPPPPPPGPPTPTPIIIIPPPPPPPPPPPPPFPFPFPFPPPPPFPPPTPTPPGGPGPPPPPPPPGPPPPPTPPPPPPGPPPPFPPPPPPPPPGPPPPPPPPFPPPPPPPPPPPPGPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPFPPGPPPPPGFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTTPPGPPPGPFPGPGPPPPPPPPFFIFPPGPPPFGPPFPPPFGPGPPPPPPFGPPTTPPGPPFPPPPPPPGPPPPTPFPPPPPPPTPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOOOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNOOOONNOOOOOOOOONNNNNNNNNNNNNNNNNNNNOONNONNNNNNNNNNNNNNNNNNNNNNNNNNOCNNOONNNONNNNNNNNNONNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOTTTTTTFTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNCNNNNCNNNNNNNNNNNNNNNTTTITTTTTPTTTTPPPGSTTFPTTTTPTTTPPTFFFFTTSSTTTTFPPFGPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNONONNONNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNOONNNNNNNNNNNNOOOOFIPGGPPFFGPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOGFIPGIFGPPPIPPPPFFPIFPPPPPPPPPPPPPPFNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNOOOCOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOGPGPPPGGPGPPFPPPPPPPPPPPPPNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTPPPPPPPPPPPPPPFIPPPTPGPPPPPPPTTFPPTPPPPPPPPTPTPTTPPGPTPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPTPTPPPPPPPPPTPPPPTPPPPPPPPPPPPFPPTPFPPPPPPPPPPPPPPPPPPPTTPPPPPPPPTPPPPPPPTPPPPTPTPPPPPPPPTPPTPPPPPPPPTPTTTPPPPPPPPPPPPPPPPPPPPPPPPTPPTPTPPPPPPPPPPPTTPPPFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNCSFPPPPPFGPPFGPPPTFPPIPFTPPPPPPPFPPPPPGGPPPPPPPPPPPPPPPPPPPPFGFPPPTPGFPPTPPSPPPFGPTPPPPPPTPFPPGPPPNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNOOCNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOFGPPGGGPPPPPPPHNNNNNONNONNNNNNNHNNNNOOONNNNNNNNNNNNNNNNNNNTPPPPPPTTPPPPTTTTTTTTGFPPPPPGPPPPGPGPPTTTGPPTTPPGPPPPPPPGFPTTPPPPGFFPGTTTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPGTTPPPPPPPPPPPPPFPPPPPPPPPPPPPPTTPPTTTPPPTTTTTFPPPPPPGFTPPFFPPPPPTGFFGTTPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNONNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOTPPPPGFFPGGGPGPPPPPPPPPFPPPIGPPPPPPPPPPPPPPPPPPPPPFFPFFTFPPFFGPPPPPPPPFFFPTTPNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONOOOONNONNONNNNNOOOOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOPGPPPPPPPPPPGFPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNPPPPPPPFGIPIGFFFPGGGGPGGPFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFIPKFFFGFPPTFGIGGFFGGPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGGPPGPPPGPPFFPPPPPPFPFFPPGIPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOPTTTRFFFGFFGGFFFFFFFKRFKFFTTTRFFRFFPRFFFFFFFPFTTTTTTTTTTTFFRKRFPFFRFFTTTTTFFKPPPRGITTPFTRIFFTTTTKRFFPTTIPPPTTSSSSSSTTTTTFITTPFPTTTFPPPTTTTTTTTGRFFFTSRKRTFFFRFPTTTTTTTTTTTTTRFGGRFPPKRFFGRTTRFFFFFFFRFPPTTTPJTFFOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOCMMMMMOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOMOONNMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNNNNNNNNNNNMMNMMMOOOOMMMMMMMMMMMMMMMOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMMMMMMMMMMMMMMONNNNNNNNNNNOOMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNNNNNNNNNOMMMOOMMOOOOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNOOOOOOOOOOOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNMNNNNNNNNNNNMMCOONNNNNNNNNNNOOOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOONMNNOOOONOOOOOOOOOOONNNNNNNNNNNNNOOOOOOMOOMMOOOOOOOOOOONNNNNNNNNNNMMOOOOOOOONNNNNNNNNNNMMMMMMMMMMOOOOOOONNNNOOOOOOMOOMONNNNNNNNNNNNNNNNNNNNNNMOMNNNNNNNNNNNOOOOOMOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMOMOOSCHCCCCCCCCCSSSSSSSSSSSFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFPFFFFFFPFFFPFGFNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFFFFFFFFFFFFTTGPFFPFFFPFTFGFFFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPFPFPPFFFPPFFPPFFPPFFGKKKKPPPFFGGPPFFPPPFFPPPFFPFFPFPFFPFPPFFPPFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOMNMNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOMNNFKFFFFPPKFGNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNHNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONNNNNNNHHOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNHHNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNOOOPKPRPFGPFPFGFINNNNNOOONNNNOONHMNNNNNNNNONNNNNNNNNOOMNNNNNNNNNNOOOOKRFPPGFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPKRIKGPPGFFIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNHNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPKRPFPPPPPPGPPPPPPPPGPPPPPPPPPFGFIFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOPKRFSPPPFFPPGFGFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNCNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNHNNNNNNNNONNNNNHNNNOOOONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPPPFPPPPPPPPPPPPPPFPPGPPPOOCOOOFFJJJJJJJJJJJJJJJJJJJJJJFFFFFFOOOOOOOOOOOOOOOOOOOOOOOOOOOOPKRPGFIFNNNNNNNNNNOOONNNNNNNNNNHMNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNOOPPPGPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPRPFGPPGFIFNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOGPPPPPPPPPPPPPGPPPPPPPPPPPPPFFFPGTPPGPPPPPGGPPPPPFPFPPPPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHHHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHOHHNNNNNNOOHOHHCHCHOOHNNNNNNNNNNHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOOOOOOGFPPPNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNPFPFPPFFFPPFFPPFFPPFFGKKKKPPPFFGGPPFFPPPFFPPPFFPFFPFPFFPFPPFFPPFFOOOOOOOMOOOOOOOOOOMMOOOOOOOOOOMGPFPNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNFFNONNNNNNNNNONNNNNNNNNONNNNONNNNNNNNNOOONOOOONONNNNNNNNON","n":["ALL","Alignment","BLACK","Background","Border","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Center","Color","Color","Command","Contain","ContentFit","Cover","Custom","DEFAULT","Dark","Degrees","Dracula","Element","End","Err","Error","Event","Executor","ExecutorCreationFailed","Ferra","Fill","Fill","FillPortion","Fixed","Font","Gradient","Gradient","GraphicsCreationFailed","GruvboxDark","GruvboxLight","IDENTITY","INFINITE","INFINITY","KanagawaDragon","KanagawaLotus","KanagawaWave","Keyboard","Length","Light","Linear","MONOSPACE","Moonfly","Mouse","Nightfly","None","Nord","ORIGIN","Ok","Oxocarbon","PI","Padding","Pixels","PlatformSpecific","Point","Primary","Program","RANGE","Radians","Rectangle","Renderer","Result","ScaleDown","Secondary","Settings","Shadow","Shrink","Size","SolarizedDark","SolarizedLight","Start","Subscription","TRANSPARENT","Theme","TokyoNight","TokyoNightLight","TokyoNightStorm","Touch","Transformation","UNIT","Vector","WHITE","Window","WindowCreationFailed","ZERO","ZERO","ZERO","a","actions","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add_assign","advanced","alignment","area","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","b","batch","batch","blur_radius","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","center","center_x","center_y","clipboard","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","color","command","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","custom","custom_with_fn","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_style","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance","div","div","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enclose","enter","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","executor","expand","expand","extended_palette","family","fill_factor","fit","fit","fluid","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_f64","from_i64","from_linear_rgba","from_recipe","from_rgb","from_rgb8","from_rgba","from_rgba8","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_u64","futures","g","get_hash","get_hash","get_hash","get_hash","gradient","hash","hash","hash","hash","height","height","highlighter","horizontal","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_linear","into_recipes","into_rgba8","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","inverse","invert","is_fill","is_within","keyboard","left","map","map","max","min","mouse","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","multi_window","new","new","new","new","new","new","new","none","none","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","orthographic","overlay","palette","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perform","position","program","program","r","radius","right","rounded","run","run","scale","scale_alpha","scale_alpha","scale_alpha","scale_factor","settings","single","size","snap","spawn","stretch","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","sub","sub","sub","sub","sub","sub","sub_assign","subscription","system","theme","time","to_distance","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","top","touch","translate","translation","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertical","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","widget","widget","width","width","width","window","with","with_color","with_name","with_radius","with_size","with_width","x","x","x","y","y","y","Application","Clipboard","Executor","Flags","Layout","Message","Overlay","Renderer","Renderer","Shell","Text","Theme","Widget","adapt_into_using","adapt_into_using","adapt_into_using","are_widgets_invalid","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","children","children","clear","clipboard","clone","clone","clone_into","clone_into","components_from","components_from","components_from","content","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","draw","draw","drop","drop","drop","end_layer","end_transformation","fill_quad","fmt","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","graphics","horizontal_alignment","image","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","invalidate_layout","invalidate_widgets","is_empty","is_layout_invalid","is_over","layout","layout","layout","line_height","merge","mouse","mouse_interaction","mouse_interaction","new","new","new","on_event","on_event","operate","operate","overlay","overlay","overlay","position","publish","read","redraw_request","renderer","request_redraw","revalidate_layout","run","run","scale_factor","scale_factor","shaping","size","size","size_hint","start_layer","start_transformation","state","style","style","subscription","subscription","subscription","svg","tag","text","theme","theme","title","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","update","vertical_alignment","view","vzip","vzip","vzip","widget","with_layer","with_offset","with_transformation","with_translation","write","Clipboard","Kind","Null","Primary","Standard","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","read","read","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","write","write","Bytes","Bytes","Data","FilterMethod","Handle","Handle","Linear","Nearest","Path","Renderer","Rgba","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","downcast","downcast","draw_image","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","measure_image","new","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","height","pixels","width","Layout","Limits","NONE","Node","adapt_into_using","adapt_into_using","align","align_mut","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","atomic","borrow","borrow","borrow_mut","borrow_mut","bounds","children","clone","clone","clone_into","clone_into","components_from","components_from","contained","container","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","flex","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","height","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","loose","max","max_height","max_width","min","min_height","min_width","move_to","move_to_mut","new","new","next_to_each_other","null_value","padded","positioned","resolve","shrink","size","sized","to_owned","to_owned","translate","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","width","with_children","Axis","Horizontal","Vertical","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","resolve","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Available","Back","Button","ButtonPressed","ButtonReleased","Click","Crosshair","Cursor","CursorEntered","CursorLeft","CursorMoved","Event","Forward","Grab","Grabbing","Idle","Interaction","Left","Lines","Middle","None","NotAllowed","Other","Pixels","Pointer","ResizingHorizontally","ResizingVertically","Right","ScrollDelta","Text","Unavailable","WheelScrolled","Working","ZoomIn","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","click","clone","clone_into","components_from","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","kind","new","position","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","delta","position","x","x","y","y","Click","Double","Kind","Single","Triple","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Element","Group","Overlay","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","draw","draw","drop","drop","from","from","from","from_angle","from_angle","from_children","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_over","is_over","is_over","layout","layout","layout","map","mouse_interaction","mouse_interaction","mouse_interaction","new","new","null_value","on_event","on_event","on_event","operate","operate","operate","overlay","overlay","overlay","overlay","push","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_children","Quad","Renderer","Style","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","border","borrow","borrow","borrow_mut","borrow_mut","bounds","clear","clone","clone","clone_into","clone_into","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end_layer","end_transformation","eq","eq","fill_quad","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","null_value","shadow","start_layer","start_transformation","text_color","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_layer","with_transformation","with_translation","EventStream","Hasher","Output","Recipe","hash","stream","Bytes","Data","Handle","Path","Renderer","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","draw_svg","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","get_hash","hash","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","measure_svg","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ARROW_DOWN_ICON","Absolute","Advanced","Basic","Bounds","CHECKMARK_ICON","CharOffset","Difference","Editor","Editor","Font","Font","Font","Highlight","Highlighter","Hit","ICON_FONT","Iterator","LineHeight","None","Paragraph","Paragraph","Relative","Renderer","Settings","Shape","Shaping","Text","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","bounds","bounds","change_line","clone","clone","clone_into","clone_into","compare","components_from","components_from","content","current_line","cursor","cursor","cursor_position","default_font","default_size","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","editor","eq","eq","equivalent","equivalent","equivalent","fill_editor","fill_paragraph","fill_text","fmt","fmt","font","from","from","from_angle","from_angle","from_stimulus","from_stimulus","grapheme_position","highlight","highlight_line","highlighter","hit_test","horizontal_alignment","horizontal_alignment","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line","line_count","line_height","min_bounds","min_bounds","min_height","min_width","new","perform","resize","selection","shaping","size","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","update","update","update","vertical_alignment","vertical_alignment","vzip","vzip","with_text","with_text","Action","Backspace","Caret","Click","Cursor","Delete","Direction","DocumentEnd","DocumentStart","Down","Drag","Edit","Edit","Editor","End","Enter","Font","Home","Insert","Left","Left","Motion","Move","PageDown","PageUp","Paste","Right","Right","Scroll","Select","SelectLine","SelectWord","Selection","Up","WordLeft","WordRight","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","bounds","clone","clone","clone_into","clone_into","components_from","components_from","cursor","cursor_position","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","highlight","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line","line_count","min_bounds","perform","selection","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","update","vzip","vzip","with_text","lines","Format","Highlight","Highlighter","Iterator","PlainText","Settings","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_line","change_line","clone","clone","clone_into","clone_into","color","components_from","components_from","current_line","current_line","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","fmt","fmt","font","from","from","from_angle","from_angle","from_stimulus","from_stimulus","highlight_line","highlight_line","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","new","null_value","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","update","update","vzip","vzip","Id","Operation","Text","Tree","Widget","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","children","class","clone","clone_into","color","color_maybe","components_from","components_from","components_from","container","custom","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","diff","diff_children","diff_children_custom","downcast","downcast","downcast","draw","draw","drop","drop","drop","empty","eq","equivalent","equivalent","equivalent","finish","fmt","fmt","focusable","font","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","height","horizontal_alignment","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","layout","line_height","mouse_interaction","new","new","new","on_event","operate","operation","overlay","scrollable","shaping","size","size","size","size_hint","state","state","state","style","tag","tag","tag","text","text_input","to_owned","tree","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","unique","upcast","upcast","upcast","vertical_alignment","vzip","vzip","vzip","width","Chain","Focusable","None","Operation","Outcome","Scrollable","Some","TextInput","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","container","custom","deref","deref_mut","downcast","drop","finish","fmt","focus","focusable","focusable","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","is_focused","map","move_cursor_to","move_cursor_to_end","move_cursor_to_front","scope","scroll_to","scrollable","scrollable","select_all","snap_to","text_input","text_input","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unfocus","upcast","vzip","Count","Focusable","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","count","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","find_focused","fmt","focus","focus","focus_next","focus_previous","focused","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","is_focused","null_value","to_owned","total","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unfocus","upcast","vzip","AbsoluteOffset","RelativeOffset","Scrollable","scroll_to","scroll_to","snap_to","snap_to","x","x","y","y","TextInput","move_cursor_to","move_cursor_to","move_cursor_to_end","move_cursor_to_end","move_cursor_to_front","move_cursor_to_front","select_all","select_all","Absolute","Advanced","Basic","Borrowed","Catalog","Class","Fragment","IntoFragment","LineHeight","Owned","Relative","Shaping","State","Style","StyleFn","Text","color","default","draw","into_fragment","layout","style","None","Some","State","Tag","Tree","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","cmp","compare","components_from","components_from","deref","deref","deref_mut","deref_mut","diff_children_custom_with_search","downcast","downcast","downcast_mut","downcast_ref","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","of","partial_cmp","state","stateless","tag","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Alignment","Bottom","Center","Center","Center","End","Horizontal","Left","Right","Start","Top","Vertical","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Border","Radius","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","color","components_from","default","deref","deref_mut","downcast","drop","eq","fmt","from","from","from","from","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","null_value","radius","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","width","read","read_primary","write","write_primary","Command","channel","Captured","Event","Ignored","Keyboard","MacOS","MacOS","Mouse","PlatformSpecific","PlatformSpecific","ReceivedUrl","Status","Touch","Window","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","listen","listen_raw","listen_with","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Default","Executor","enter","new","spawn","Black","Bold","Condensed","Cursive","Error","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Family","Fantasy","Font","Italic","Light","Medium","Monospace","Name","Normal","Normal","Normal","Oblique","SansSerif","SemiCondensed","SemiExpanded","Semibold","Serif","Stretch","Style","Thin","UltraCondensed","UltraExpanded","Weight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","family","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","load","null_value","null_value","null_value","null_value","stretch","style","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","weight","ColorStop","Gradient","Linear","Linear","adapt_into_using","adapt_into_using","add_stop","add_stops","angle","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","null_value","offset","scale_alpha","stops","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","ALT","COMMAND","CTRL","Character","Event","Key","KeyPressed","KeyReleased","LOGO","Left","Location","Modifiers","ModifiersChanged","Named","Numpad","Right","SHIFT","Standard","Unidentified","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","alt","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","command","compare","compare","complement","components_from","components_from","components_from","components_from","contains","control","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","drop","drop","drop","drop","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","init","init","insert","intersection","intersects","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_empty","iter","iter_names","key","logo","not","null_value","on_key_press","on_key_release","partial_cmp","partial_cmp","remove","set","shift","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","union","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","key","key","location","location","modifiers","modifiers","text","AVRInput","AVRPower","Accept","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AppSwitch","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeMute","AudioVolumeUp","Backspace","BrightnessDown","BrightnessUp","BrowserBack","BrowserFavorites","BrowserForward","BrowserHome","BrowserRefresh","BrowserSearch","BrowserStop","Call","Camera","CameraFocus","Cancel","CapsLock","ChannelDown","ChannelUp","Character","Clear","Close","ClosedCaptionToggle","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Compose","ContextMenu","Control","Convert","Copy","CrSel","Cut","DVR","Delete","Dimmer","DisplaySwap","Eisu","Eject","End","EndCall","Enter","EraseEof","Escape","ExSel","Execute","Exit","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F25","F26","F27","F28","F29","F3","F30","F31","F32","F33","F34","F35","F4","F5","F6","F7","F8","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Fn","FnLock","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Hibernate","Hiragana","HiraganaKatakana","Home","Hyper","Info","Insert","InstantReplay","JunjaMode","KanaMode","KanjiMode","Katakana","Key","Key11","Key12","LastNumberRedial","LaunchApplication1","LaunchApplication2","LaunchCalendar","LaunchContacts","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailReply","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaLast","MediaPause","MediaPlay","MediaPlayPause","MediaRecord","MediaRewind","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackPrevious","Meta","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","ModeChange","Named","Named","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","Notification","NumLock","OnDemand","Open","PageDown","PageUp","Pairing","Paste","Pause","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","PowerOff","PreviousCandidate","Print","PrintScreen","Process","Props","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RfBypass","Romaji","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","Select","Settings","Shift","SingleCandidate","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Teletext","Undo","Unidentified","VideoModeNext","VoiceDial","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","compare","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","get_hash","hash","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","partial_cmp","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Available","Back","Button","ButtonPressed","ButtonReleased","Crosshair","Cursor","CursorEntered","CursorLeft","CursorMoved","Event","Forward","Grab","Grabbing","Idle","Interaction","Left","Lines","Middle","None","NotAllowed","Other","Pixels","Pointer","ResizingHorizontally","ResizingVertically","Right","ScrollDelta","Text","Unavailable","WheelScrolled","Working","ZoomIn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_over","null_value","null_value","partial_cmp","position","position_from","position_in","position_over","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","delta","position","x","x","y","y","Appearance","Application","DefaultStyle","Executor","Flags","Message","Theme","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","background_color","borrow","borrow_mut","clone","clone_into","components_from","default_style","deref","deref_mut","downcast","drop","eq","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","new","run","scale_factor","style","subscription","text_color","theme","title","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","update","view","vzip","Element","menu","Catalog","Class","Menu","State","Style","StyleFn","background","border","default","default","default_scrollable","selected_background","selected_text_color","style","text_color","Appearance","DefaultStyle","Definition","Executor","Message","Program","Renderer","Renderer","State","Theme","Title","Update","View","adapt_into_using","antialiasing","arrays_from","arrays_into","as_any","as_any_mut","background_color","borrow","borrow_mut","centered","components_from","default_font","default_style","deref","deref_mut","downcast","drop","exit_on_close_request","fmt","font","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","load","load","program","run","run_with","settings","style","style","subscription","subscription","text_color","theme","theme","title","title","transparent","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","update","update","view","view","vzip","window_size","Settings","adapt_into_using","antialiasing","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","default","default_font","default_text_size","deref","deref_mut","downcast","drop","flags","fmt","fonts","from","from_angle","from_stimulus","id","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","null_value","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","window","with_flags","Subscription","channel","run","run_with_id","unfold","Information","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","cpu_brand","cpu_cores","deref","deref_mut","downcast","drop","fetch_information","fmt","from","from_angle","from_stimulus","graphics_adapter","graphics_backend","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","memory_total","memory_used","system_kernel","system_name","system_short_version","system_version","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","CATPPUCCIN_FRAPPE","CATPPUCCIN_LATTE","CATPPUCCIN_MACCHIATO","CATPPUCCIN_MOCHA","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Custom","Custom","DARK","DRACULA","Dark","Dracula","FERRA","Ferra","GRUVBOX_DARK","GRUVBOX_LIGHT","GruvboxDark","GruvboxLight","KANAGAWA_DRAGON","KANAGAWA_LOTUS","KANAGAWA_WAVE","KanagawaDragon","KanagawaLotus","KanagawaWave","LIGHT","Light","MOONFLY","Moonfly","NIGHTFLY","NORD","Nightfly","Nord","OXOCARBON","Oxocarbon","Palette","SOLARIZED_DARK","SOLARIZED_LIGHT","SolarizedDark","SolarizedLight","TOKYO_NIGHT","TOKYO_NIGHT_LIGHT","TOKYO_NIGHT_STORM","Theme","TokyoNight","TokyoNightLight","TokyoNightStorm","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","danger","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","palette","primary","success","text","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_fn","Background","Danger","EXTENDED_CATPPUCCIN_FRAPPE","EXTENDED_CATPPUCCIN_LATTE","EXTENDED_CATPPUCCIN_MACCHIATO","EXTENDED_CATPPUCCIN_MOCHA","EXTENDED_DARK","EXTENDED_DRACULA","EXTENDED_FERRA","EXTENDED_GRUVBOX_DARK","EXTENDED_GRUVBOX_LIGHT","EXTENDED_KANAGAWA_DRAGON","EXTENDED_KANAGAWA_LOTUS","EXTENDED_KANAGAWA_WAVE","EXTENDED_LIGHT","EXTENDED_MOONFLY","EXTENDED_NIGHTFLY","EXTENDED_NORD","EXTENDED_OXOCARBON","EXTENDED_SOLARIZED_DARK","EXTENDED_SOLARIZED_LIGHT","EXTENDED_TOKYO_NIGHT","EXTENDED_TOKYO_NIGHT_LIGHT","EXTENDED_TOKYO_NIGHT_STORM","Extended","Pair","Palette","Primary","Secondary","Success","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","background","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","danger","danger","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","generate","generate","generate","generate","generate","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_dark","new","new","primary","primary","secondary","strong","strong","strong","strong","strong","success","success","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak","weak","weak","weak","weak","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","adapt_into_using","adapt_into_using","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_add_signed","checked_div","checked_duration_since","checked_mul","checked_sub","checked_sub","checked_sub_signed","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","components_from","components_from","default","deref","deref","deref_mut","deref_mut","deserialize","deserializer_for_signature","div","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","downcast","downcast","drop","drop","duration_since","dynamic_signature","elapsed","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","saturating_add","saturating_duration_since","saturating_mul","saturating_sub","serialize","signature","signed_duration_since","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Event","Finger","FingerLifted","FingerLost","FingerMoved","FingerPressed","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","id","id","id","id","position","position","position","position","Button","Canvas","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Checkbox","Column","ComboBox","Component","Container","Custom","DEFAULT_HEIGHT","DEFAULT_HEIGHT","DEFAULT_SIZE","DEFAULT_SIZE","DEFAULT_SPACING","DEFAULT_WIDTH","Dark","Dracula","Event","Ferra","GruvboxDark","GruvboxLight","Image","KanagawaDragon","KanagawaLotus","KanagawaWave","Lazy","Light","Moonfly","MouseArea","Nightfly","Nord","Oxocarbon","PaneGrid","PickList","Primary","ProgressBar","QRCode","Radio","Renderer","Responsive","Row","Rule","Scrollable","Secondary","Shader","Slider","SolarizedDark","SolarizedLight","Space","Stack","State","Svg","Text","TextEditor","TextInput","Theme","Themer","Toggler","TokyoNight","TokyoNightLight","TokyoNightStorm","Tooltip","VerticalSlider","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","align_items","align_items","align_x","align_y","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","canvas","canvas","cell_size","center_x","center_y","checkbox","checkbox","children","children","children","children","children","children","children","children","children","children","children","children","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","clip","clip","clip","clip","column","column","combo_box","combo_box","component","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","container","container","content_fit","content_fit","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","diff","diff","diff","diff","diff","diff","diff","diff","diff","diff","diff","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extend","extend","extend","filter_method","fmt","fmt","fmt","focus_next","focus_previous","font","font","font","font","font","font","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_path","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_vec","from_vec","from_vec","gap","handle","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","highlight","horizontal","horizontal_rule","horizontal_space","hover","icon","icon","icon","id","id","id","image","image","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_class","input_style","interaction","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","keyed","keyed_column","keyed_column","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","layout","lazy","line_height","line_height","line_height","max_height","max_width","max_width","menu_class","menu_style","mouse_area","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","mouse_interaction","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","null_value","null_value","null_value","on_action","on_click","on_close","on_close","on_drag","on_enter","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_event","on_exit","on_input","on_input","on_middle_press","on_middle_release","on_move","on_open","on_option_hovered","on_paste","on_press","on_press","on_press_maybe","on_release","on_release","on_release","on_resize","on_right_press","on_right_release","on_scroll","on_submit","on_toggle","on_toggle_maybe","opaque","operate","operate","operate","operate","operate","operate","operate","operate","operate","operate","operate","operate","operate","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","overlay","padding","padding","padding","padding","padding","padding","padding","padding","padding","pane_grid","pick_list","pick_list","placeholder","progress_bar","progress_bar","push","push","push","push_maybe","push_maybe","push_maybe","qr_code","qr_code","radio","radio","responsive","row","row","rule","scrollable","scrollable","secure","shader","shader","shift_step","shift_step","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size","size_hint","size_hint","size_hint","slider","slider","snap_within_viewport","spacing","spacing","spacing","spacing","spacing","spacing","stack","stack","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","state","step","step","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","svg","svg","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","tag","text","text","text_alignment","text_color","text_editor","text_editor","text_input","text_input","text_line_height","text_line_height","text_line_height","text_line_height","text_shaping","text_shaping","text_shaping","text_shaping","text_size","text_size","text_size","text_size","theme","themer","toggler","toggler","tooltip","tooltip","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","value","vertical","vertical_rule","vertical_slider","vertical_slider","vertical_space","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","with_capacity","with_capacity","with_capacity","with_children","with_children","with_children","with_direction","with_height","with_width","Active","Button","Catalog","Class","Disabled","Hovered","Pressed","Status","Style","StyleFn","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","danger","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","primary","secondary","shadow","style","success","text","text_color","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_background","Bevel","Butt","Cache","Canvas","Event","Fill","Frame","Geometry","Gradient","Gradient","Keyboard","LineCap","LineDash","LineJoin","Linear","Miter","Mouse","Path","Program","Round","Round","Solid","Square","State","Stroke","Style","Text","Touch","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","circle","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","content","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_with","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","event","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gradient","horizontal_alignment","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line","line_cap","line_dash","line_height","line_join","mouse_interaction","new","null_value","null_value","null_value","null_value","null_value","null_value","offset","pack","path","position","raw","rectangle","rule","segments","shaping","size","stroke","style","style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transform","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vertical_alignment","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_color","with_line_cap","with_line_join","with_width","Captured","Event","Ignored","Keyboard","Mouse","Status","Touch","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","merge","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","EvenOdd","Fill","Gradient","NonZero","Rule","Solid","Style","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","rule","style","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Gradient","Linear","Linear","Packed","adapt_into_using","adapt_into_using","add_stop","add_stops","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_valid_bit_pattern","new","pack","pack","start","stops","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Builder","Path","adapt_into_using","adapt_into_using","arc","arc","arc_to","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","bezier_curve_to","borrow","borrow","borrow_mut","borrow_mut","build","center","circle","clone","clone_into","close","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ellipse","end_angle","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line_to","move_to","new","null_value","quadratic_curve_to","radius","rectangle","start_angle","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Elliptical","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","center","clone","clone_into","components_from","deref","deref_mut","downcast","drop","end_angle","end_angle","fmt","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","radii","radius","rotation","start_angle","start_angle","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ArcFlags","AttributeIndex","AttributeSlice","AttributeStore","Attributes","Begin","Begin","Begin","Bevel","Butt","ControlPointId","Cubic","Cubic","Cubic","End","End","End","EndpointId","EvenOdd","Event","EventId","FillRule","INVALID","INVALID","INVALID","IdEvent","IdPolygon","Line","Line","Line","LineCap","LineJoin","Miter","MiterClip","NO_ATTRIBUTES","Negative","Negative","NonZero","Path","PathBuffer","PathBufferSlice","PathCommands","PathCommandsSlice","PathEvent","PathSlice","Polygon","Position","PositionStore","Positive","Positive","Quadratic","Quadratic","Quadratic","Round","Round","Side","Square","Winding","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_slice","as_slice","as_slice","attributes","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","builder","builder_with_attributes","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed","closed","commands","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event","event","event","events","first_endpoint","first_endpoint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_iter","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_usize","from_usize","get","get","get","get","get","get","get_control_point","get_control_point","get_control_point","get_control_point","get_endpoint","get_endpoint","get_endpoint","get_endpoint","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","id_iter","id_iter","id_iter","index","index","index","index","index","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edge","is_empty","is_empty","is_empty","is_in","is_negative","is_out","is_positive","iter","iter","iter","iter","iter","iter","iter","iter","iter_with_attributes","iter_with_attributes","iterator","large_arc","last_endpoint","last_endpoint","len","len","math","new","new","new","next_event_id_in_path","next_event_id_in_path","next_event_id_in_sub_path","next_event_id_in_sub_path","null_value","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","offset","offset","opposite","path","path_buffer","path_events","path_slice","points","points","polygon","position","reserve","reversed","reversed","svg_builder","sweep","to","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_usize","to_usize","to_usize","traits","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_attributes","with_capacity","with_points","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","BorderRadii","Build","Flattened","NoAttributes","PathBuilder","PathType","SvgPathBuilder","Transformed","WithSvg","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_circle","add_circle","add_ellipse","add_ellipse","add_line_segment","add_line_segment","add_point","add_point","add_polygon","add_polygon","add_polygon","add_rectangle","add_rectangle","add_rounded_rectangle","add_rounded_rectangle","arc","arc_to","arc_to","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","build","build","build","build","build","build","build","build","clone","clone","clone_into","clone_into","close","close","close","close","close","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","current_position","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","end","end","end","end","eq","eq","event","extend_from_paths","flattened","flattened","flattened","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","horizontal_line_to","horizontal_line_to","init","init","init","init","init","inner","inner_mut","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","line_to","line_to","line_to","line_to","move_to","move_to","move_to","new","new","new","new","new","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","partial_cmp","path_event","path_event","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_arc_to","relative_cubic_bezier_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_horizontal_line_to","relative_line_to","relative_line_to","relative_move_to","relative_move_to","relative_quadratic_bezier_to","relative_quadratic_bezier_to","relative_vertical_line_to","relative_vertical_line_to","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","set_tolerance","set_transform","set_transform","smooth_cubic_bezier_to","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","smooth_relative_quadratic_bezier_to","to_owned","to_owned","to_smolstr","to_string","top_left","top_right","transformed","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vertical_line_to","vertical_line_to","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","with_svg","wrap","CommandsPathSlice","Events","Iter","PathCommands","PathCommandsBuilder","PathCommandsSlice","PointEvents","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","events","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_control_point","get_endpoint","index","index","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","iter","line_to","new","next","next","next","null_value","points","quadratic_bezier_to","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","with_capacity","Angle","Arc","ArcFlags","Box2D","CubicBezierSegment","DIV_EPSILON","EIGHT","EPSILON","FIVE","FOUR","HALF","Line","LineEquation","LineSegment","MAX","MIN","NINE","ONE","Point","QuadraticBezierSegment","Rotation","SEVEN","SIX","Scalar","Scalar","Scale","Segment","Size","SvgArc","TEN","THREE","TWO","Transform","Translation","Triangle","Vector","ZERO","a","a","ab","ac","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add_assign","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","angle","angle_to","approx_epsilon","approx_eq_eps","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","arc","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","b","b","ba","baseline","baseline","bc","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_y","bounding_range_y","bounding_range_y","bounding_range_y","bounding_triangle","c","c","ca","cast","cb","center","circle","clipped","clipped_x","clipped_y","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_point","closest_point","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains_point","contains_segment","ctrl","ctrl1","ctrl2","cubic_bezier","cubic_intersections","cubic_intersections_t","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivative","derivative","derivative","derivative","derivative","derivative","derivative","distance_to_point","distance_to_point","distance_to_point","distance_to_point","div","div","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drag","drag_with_weight","drop","drop","drop","drop","drop","drop","drop","drop","drop","dx","dx","dx","dx","dx","dx","dy","dy","dy","dy","dy","dy","end_angle","epsilon_for","eq","eq","eq","eq","eq","eq","eq","eq","equation","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fast_bounding_box","fast_bounding_box","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_y","fast_bounding_range_y","fast_bounding_range_y","fat_line","fat_line","flags","flattened","flattened","flattened","flattened_t","flattening_step","flip","flip","flip","flip","flip","flip","flip","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_cubic_bezier","for_each_cubic_bezier","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_inflection_t","for_each_local_x_extremum_t","for_each_local_x_extremum_t","for_each_local_y_extremum_t","for_each_local_y_extremum_t","for_each_monotonic","for_each_monotonic","for_each_monotonic_range","for_each_monotonic_range","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_x_monotonic","for_each_x_monotonic","for_each_x_monotonic_range","for_each_x_monotonic_range","for_each_y_monotonic","for_each_y_monotonic","for_each_y_monotonic_range","for_each_y_monotonic_range","frac_pi_2","frac_pi_3","frac_pi_4","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_svg_arc","get","get_angle","get_hash","hash","height","horizontal_line_intersection","horizontal_line_intersection_t","init","init","init","init","init","init","init","init","init","intersection","intersection","intersection_t","intersects","intersects","intersects_box","intersects_line","intersects_line_segment","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invert","is_a_point","is_finite","is_horizontal","is_linear","is_linear","is_monotonic","is_monotonic","is_quadratic","is_straight_line","is_vertical","is_x_monotonic","is_x_monotonic","is_y_monotonic","is_y_monotonic","large_arc","length","length","lerp","line_intersection","line_intersection_t","line_intersections","line_intersections","line_intersections_t","line_intersections_t","line_segment_intersections","line_segment_intersections","line_segment_intersections_t","line_segment_intersections_t","local_x_extremum_t","local_y_extremum_t","m11","m12","m21","m22","m31","m32","max","mid_point","min","mul","mul_assign","neg","new","normal","null_value","num_quadratics","offset","overlaps_line","overlaps_segment","parallel_line","partial_cmp","pi","point","point","positive","project_point","quadratic_bezier","quadratic_intersections","quadratic_intersections_t","radians","radians","radii","radii","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_tangent","set_length","signed","signed_distance_to_point","signed_distance_to_point","sin_cos","size","solve_t_for_x","solve_t_for_x","solve_t_for_y","solve_t_for_y","solve_x_for_y","solve_x_for_y","solve_y_for_x","solve_y_for_x","split","split","split","split","split","split","split","split","split","split_at_x","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","square_distance_to_point","square_distance_to_point","square_distance_to_point","square_length","start_angle","sub","sub_assign","sum","sum","sweep","sweep_angle","tangent","to","to","to","to","to","to","to","to","to","to","to","to","to","to_arc","to_cubic","to_degrees","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_line","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_quadratic","to_quadratic_error","to_svg_arc","to_vector","traits","transform","transformed","transformed","transformed","translate","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utils","value","vector","vector","vertical_line_intersection","vertical_line_intersection_t","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","x","x","x","x","x","x","x","x","x","x","x","x","x_maximum_t","x_maximum_t","x_minimum_t","x_minimum_t","x_rotation","x_rotation","y","y","y","y","y","y","y","y","y","y","y","y","y_maximum_t","y_maximum_t","y_minimum_t","y_minimum_t","zero","Arc","ArcFlags","Flattened","SvgArc","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","components_from","deref","deref_mut","downcast","drop","flags","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","large_arc","next","radii","radii","start_angle","sweep","sweep_angle","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","x_rotation","x_rotation","ArrayString","ArrayVec","CapacityError","Drain","IntoIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","drop","drop","drop","element","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_byte_string","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_str","ge","ge","ge","get_hash","get_hash","gt","gt","gt","hash","hash","init","init","init","init","init","insert","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_empty","is_full","is_full","le","le","le","len","len","len","limit_ptr","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","null_value","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","start_ptr","swap_pop","swap_remove","take","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","truncate","truncate","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_char","write_f32","write_f64","write_i128","write_i16","write_i32","write_i64","write_i8","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","zero_filled","CubicBezierSegment","Flattened","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","components_into","ctrl1","ctrl2","deref","deref_mut","downcast","drop","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","next","size_hint","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Angle","BoolVector2D","BoolVector3D","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Trig","UnknownUnit","Vector2D","Vector3D","abs","abs","abs","abs","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_size","add_size","all","all","and","and","angle","angle_from_x_axis","angle_to","angle_to","any","any","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_eq","approx_eq","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approxeq","approxord","area","area","area","around_axis","around_x","around_y","around_z","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","box3d","bvec2","bvec3","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","center","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","component_div","component_div","component_mul","component_mul","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","contains","contains","contains","contains_box","contains_box","contains_rect","cos","cross","cross","decompose_reversed","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","degrees_to_radians","depth","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","distance_to","distance_to","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","dot","dot","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","equal","equal","equal","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler","extend","extend","fast_atan2","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_and_length","from_array","from_array","from_arrays","from_arrays","from_length_all_same","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_origin_and_size","from_points","from_points","from_points","from_rotation","from_scale","from_size","from_size","from_size","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_translation","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_vectors_inner","from_vectors_outer","get","get","get_angle","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","greater_than","greater_than","greater_than","greater_than","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","horizontal","i","identity","identity","identity","identity","identity","identity","identity","identity","inflate","inflate","inflate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_box","inner_rect","intersection","intersection","intersection","intersection_unchecked","intersection_unchecked","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_2d","is_backface_visible","is_empty","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_identity","is_identity","is_identity","is_invertible","is_invertible","is_negative","is_negative","is_normalized","is_positive","is_positive","is_zero","j","k","left","length","length","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lower_than","lower_than","lower_than","lower_than","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","max","max","max","max","max","max","max","max","max","max_x","max_y","min","min","min","min","min","min","min","min","min","min","min","min_x","min_y","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_s","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_2d","new_all_same","new_from_reversed","none","none","norm","normalize","normalize","normalize","not","not","not_equal","not_equal","not_equal","not_equal","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","num","one","one","one","or","or","origin","origin","origin","ortho","outer_box","outer_rect","outer_transformed_box","outer_transformed_box2d","outer_transformed_box3d","outer_transformed_rect","outer_transformed_rect","partial_cmp","partial_cmp","partial_cmp","perspective","point2","point3","position","pre_rotate","pre_rotate","pre_scale","pre_scale","pre_translate","pre_translate","project_onto_vector","project_onto_vector","project_to_2d","quaternion","r","radians","radians","radians_to_degrees","rect","reflect","reflect","rem_euclid","rem_euclid","right","robust_normalize","robust_normalize","rotation","rotation","rotation","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","saturating_add","saturating_sub","scale","scale","scale","scale","scale","select_point","select_point","select_size","select_size","select_vector","select_vector","set_size","sin","size","size","size","size2","size3","skew","slerp","splat","splat","splat","splat","splat","splat","splat","splat","square_length","square_length","square_norm","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","tan","then","then","then","then","then","then_rotate","then_rotate","then_scale","then_scale","then_translate","then_translate","to_2d","to_2d","to_2d","to_3d","to_3d","to_3d","to_3d","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array_4d","to_array_4d","to_array_transposed","to_array_transposed","to_arrays","to_arrays","to_arrays_transposed","to_box2d","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_non_empty","to_non_empty","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_point","to_point2d","to_point3d","to_rect","to_size","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple_4d","to_tuple_4d","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u64","to_u64","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_vector","to_vector","to_vector","to_vector","to_vector","to_vector","top","transform_box","transform_box2d","transform_box2d","transform_box3d","transform_box3d","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point2d","transform_point2d","transform_point2d","transform_point2d_homogeneous","transform_point3d","transform_point3d","transform_point3d","transform_point3d","transform_point3d_homogeneous","transform_rect","transform_rect","transform_rect","transform_size","transform_size","transform_size","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector2d","transform_vector2d","transform_vector3d","transform_vector3d","translate","translate","translate","translation","translation","translation","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","union","union","unit_quaternion","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vec2","vec3","vector_part","vertical","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","width","width","width","width","width","with_destination","with_destination","with_length","with_max_length","with_max_length","with_min_length","with_min_length","with_source","with_source","x","x","x","x","x","x","x","x","x","x_range","x_range","x_range","xy","xy","xy","xy_area","xz","xz","xz","xz_area","y","y","y","y","y","y","y","y","y","y_range","y_range","y_range","yx","yx","yz","yz","yz","yz_area","z","z","z","z","z","z_range","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","ApproxEq","approx_epsilon","approx_eq","approx_eq_eps","max","min","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Vector2D","Vector3D","angle","bottom","depth","height","height","i","j","k","left","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","min","min","origin","r","right","rotation","size","top","translation","w","width","width","x","x","x","x","x","x","x","y","y","y","y","y","y","y","z","z","z","z","Ceil","Floor","One","Round","Zero","ceil","floor","one","round","zero","Flattened","FlattenedT","FlatteningParameters","QuadraticBezierSegment","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","components_from","components_from","components_from","ctrl","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","new","next","next","size_hint","size_hint","to","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","Scalar","Segment","Transformation","after_split","approximate_length","before_split","derivative","dx","dy","flip","for_each_flattened_with_t","from","sample","split","split_range","to","transform_point","transform_vector","x","y","cubic_polynomial_roots","directed_angle","directed_angle2","min_max","normalized_tangent","tangent","Flattened","FromPolyline","NoAttributes","PathIterator","Transformed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","flattened","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","new","new","next","next","next","next","open","size_hint","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_attributes","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","angle","height","m11","m12","m21","m22","m31","m32","max","min","point","radians","size","vector","width","x","x","x","y","y","y","Builder","BuilderImpl","BuilderWithAttributes","IdIter","Iter","IterWithAttributes","Path","PathSlice","Reversed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","end","end","end","extend_from_paths","extend_from_paths","fmt","for_each_flattened","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_path","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","new","new","next","next","next","next","null_value","num_attributes","num_attributes","num_attributes","points","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","Builder","BuilderWithAttributes","Iter","PathBuffer","PathBufferSlice","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","clone","clone_into","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end","end","end","end","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","new","next","next_back","num_attributes","num_attributes","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reserve","size_hint","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","with_attributes","IdPolygon","IdPolygonIter","PathEvents","Polygon","PolygonIdIter","PolygonIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","next","next","next","next","par_bridge","points","points","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Build","PathBuilder","PathIterator","PathType","SvgPathBuilder","add_circle","add_ellipse","add_line_segment","add_point","add_polygon","add_polygon","add_rectangle","add_rounded_rectangle","arc_to","begin","build","close","close","cubic_bezier_to","cubic_bezier_to","end","event","flattened","flattened","horizontal_line_to","line_to","line_to","move_to","num_attributes","path_event","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_line_to","relative_move_to","relative_quadratic_bezier_to","relative_vertical_line_to","reserve","reserve","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","transformed","transformed","vertical_line_to","with_svg","Bevel","Butt","Gradient","LineCap","LineDash","LineJoin","Miter","Round","Round","Solid","Square","Stroke","Style","line_cap","line_dash","line_join","offset","segments","style","width","Active","Catalog","Checkbox","Class","Disabled","Hovered","Icon","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","danger","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","icon_color","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","line_height","primary","secondary","shaping","size","style","success","text_color","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","is_checked","is_checked","is_checked","Catalog","ComboBox","State","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","default_input","default_menu","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","new","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","with_selection","Catalog","Class","Container","Id","Style","StyleFn","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","border","bordered_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","draw_background","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","hash","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layout","new","null_value","rounded_box","shadow","style","text_color","to_owned","to_owned","transparent","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","unique","upcast","upcast","visible_bounds","vzip","vzip","with_background","with_border","FilterMethod","Handle","Image","Linear","Nearest","Viewer","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","components_from","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw","draw","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter_method","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_memory","from_path","from_pixels","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","height","id","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","layout","max_scale","min_scale","mouse_interaction","new","null_value","on_event","padding","scale_step","size","state","tag","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","viewer","viewer","vzip","vzip","vzip","width","State","Viewer","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","default","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","image_size","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","is_cursor_grabbed","new","null_value","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Column","adapt_into_using","align_items","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","children","column","components_from","default","deref","deref_mut","diff","downcast","draw","drop","extend","from","from_angle","from_stimulus","from_vecs","height","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","layout","max_width","mouse_interaction","new","null_value","on_event","operate","overlay","padding","push","push_maybe","size","spacing","state","tag","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","width","with_capacity","with_children","Column","menu","Catalog","Class","Menu","State","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","components_from","default","default","default","default_scrollable","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","new","new","null_value","overlay","padding","selected_background","selected_text_color","style","text_color","text_line_height","text_shaping","text_size","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","All","Axis","Bottom","Canceled","Catalog","Center","Class","Configuration","Content","Contents","Direction","Down","DragEvent","Draggable","Dropped","Edge","Edge","Edge","Highlight","Horizontal","Left","Left","Line","Maximized","Node","Pane","Pane","Pane","Pane","PaneGrid","Picked","Region","ResizeEvent","Right","Right","Split","Split","Split","State","Style","StyleFn","Target","TitleBar","Top","Up","Vertical","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adjacent","always_show_controls","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_dragged_at","can_be_dragged_at","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","color","compare","compare","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","controls","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get","get_hash","get_hash","get_hash","get_hash","get_mut","hash","hash","hash","hash","hovered_region","hovered_split","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_over_pick_area","iter","iter","iter_mut","layout","layout","len","maximize","maximized","move_to_edge","new","new","new","null_value","padding","pane_regions","panes","partial_cmp","partial_cmp","picked_split","ratio","resize","restore","split","split","split","split_line_bounds","split_regions","split_with","splits","state","style","style","style","swap","title_bar","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_configuration","a","axis","b","ratio","pane","pane","pane","target","a","axis","b","id","ratio","Action","Dragging","Idle","Internal","Resizing","State","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","fmt","fmt","from","from","from_angle","from_angle","from_configuration","from_stimulus","from_stimulus","init","init","internal","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layout","panes","picked_pane","picked_split","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","axis","origin","pane","split","Active","Arrow","Catalog","Class","Dynamic","Handle","Hovered","Icon","None","Opened","PickList","Static","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","components_from","default","default","default","default_menu","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","font","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","handle_color","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_height","null_value","placeholder_color","shaping","size","style","text_color","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","closed","open","size","Catalog","Class","ProgressBar","Style","StyleFn","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","background","bar","border","borrow","borrow_mut","clone","clone_into","components_from","danger","default","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","primary","secondary","style","success","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Catalog","Class","Data","DataTooLong","Error","ErrorCorrection","High","InvalidCharacter","InvalidEciDesignator","InvalidVersion","Low","Medium","Micro","Normal","QRCode","Quartile","Style","StyleFn","UnsupportedCharacterSet","Version","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","style","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","with_error_correction","with_version","Active","Catalog","Class","Hovered","Radio","Status","Style","StyleFn","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","border_color","border_width","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","dot_color","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","style","text_color","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","is_selected","is_selected","AsymmetricPadding","Catalog","Class","FillMode","Full","Padded","Percent","Rule","Style","StyleFn","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fill","fill_mode","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","radius","style","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","width","AbsoluteOffset","Active","Alignment","Both","Catalog","Class","Direction","Dragged","END","End","Horizontal","Hovered","Id","Properties","RelativeOffset","START","Scrollable","Scrollbar","Scroller","Start","Status","Style","StyleFn","Vertical","Viewport","absolute_offset","absolute_offset_reversed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","alignment","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","container","content_bounds","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gap","get_hash","hash","horizontal","horizontal_scrollbar","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","margin","new","new","null_value","null_value","null_value","null_value","null_value","relative_offset","scroll_to","scroller","scroller_width","snap_to","style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unique","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertical","vertical_scrollbar","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","x","x","y","y","horizontal","vertical","is_horizontal_scrollbar_dragged","is_horizontal_scrollbar_hovered","is_vertical_scrollbar_dragged","is_vertical_scrollbar_hovered","Event","Keyboard","Mouse","Primitive","Primitive","Program","RedrawRequested","Shader","State","Storage","Touch","Viewport","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","components_from","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get","get_mut","has","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","logical_size","mouse_interaction","null_value","physical_height","physical_size","physical_width","prepare","projection","render","scale_factor","store","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","update","vzip","vzip","vzip","with_physical_size","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","AccelerationStructure","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","ComputePass","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","Constant","Cpu","CreateSurfaceError","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Destroyed","Device","DeviceDescriptor","DeviceLostReason","DeviceType","Discard","DiscreteGpu","DisplayP3","DownlevelCapabilities","DownlevelFlags","Dropped","Dst","DstAlpha","Dx12","Dx12Compiler","Dxc","DynamicOffset","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Error","ErrorFilter","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FLOAT32_FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","Fxc","GL","GREEN","GREEN","Gl","Gles3MinorVersion","Good","Greater","GreaterEqual","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","Id","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageCopyTextureTagged","ImageCopyTextureTaggedBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainBase","MaintainResult","MapMode","Max","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","NV12","Nearest","Never","NonFiltering","None","None","NotEqual","OVER","Occlusion","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Operations","Origin2d","Origin3d","Other","OutOfMemory","OutOfMemory","OutOfMemory","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Plane0","Plane1","Plane2","Point","PointList","Poll","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","QueueWriteBufferView","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","RAY_QUERY","RAY_TRACING_ACCELERATION_STRUCTURE","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","RawHandle","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","ReplacedCallback","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SHADER_UNUSED_VERTEX_OUTPUT","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SURFACE_VIEW_FORMATS","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Some","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Store","StoreOp","SubmissionIndex","SubmissionQueueEmpty","Suboptimal","Subtract","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTarget","SurfaceTargetUnsafe","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TEXTURE_FORMAT_NV12","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unknown","Unorm","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_AND_INSTANCE_INDEX_RESPECTS_RESPECTIVE_FIRST_VALUE_IN_INDIRECT_DRAW","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","Validation","Validation","Version0","Version1","Version2","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","Wait","WaitForSubmissionIndex","WaitForSubmissionIndex","WasmNotSend","WasmNotSendSync","WasmNotSync","Wgsl","Window","WindowHandle","Write","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_srgb_suffix","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_mode","alpha_modes","alpha_to_coverage_enabled","anisotropy_clamp","any_backend_feature_enabled","array_layer_count","array_layer_count","array_stride","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_entire_binding","as_entire_buffer_binding","as_hal","as_hal","as_hal","as_hal","as_hal","as_image_copy","as_mut","as_mut","as_ref","aspect","aspect","aspect","aspect","aspect","aspect","aspect_specific_format","attributes","b","back","backend","backends","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_occlusion_query","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bias","bind_group_layouts","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_copy_size","block_dimensions","block_size","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffers","bytes_per_row","check_limits","check_limits_with_fail_fn","clamp","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","color_space","color_space","compare","compare","compare","compare","compare","compare","compare","compatible_surface","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_with_aspect","configure","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_from_hal","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_surface_unsafe","create_texture","create_texture_from_hal","create_texture_with_data","create_view","cull_mode","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desired_maximum_frame_latency","destroy","destroy","destroy","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","encode_hex","encode_hex_upper","end_occlusion_query","end_of_pass_write_index","end_of_pass_write_index","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","features","finish","finish","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","force_fallback_adapter","format","format","format","format","format","format","format","format","formats","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_core","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_plane","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_window","front","front_face","g","generate_report","get_bind_group_layout","get_bind_group_layout","get_capabilities","get_current_texture","get_default_config","get_downlevel_capabilities","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_info","get_mapped_range","get_mapped_range_mut","get_presentation_timestamp","get_texture_format_features","get_timestamp_period","gles_minor_version","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","include_spirv_raw","include_wgsl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_multi_planar_format","is_queue_empty","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_surface_supported","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","layout","limits","limits","limits","load","lod_max_clamp","lod_min_clamp","mag_filter","map_async","map_index","map_label","mapped_at_creation","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","multiview","multiview","name","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","occlusion_query_set","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","origin","origin","origin","panic_on_timeout","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","planes","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","pop_error_scope","power_preference","power_preference","premultiplied_alpha","premultiplied_alpha","present","present_mode","present_modes","primitive","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","push_error_scope","query_set","query_set","r","range","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","request_adapter","request_device","required_features","required_features","required_limits","resolve_query_set","resolve_target","resource","rows_per_image","sample_count","sample_count","sample_count","sample_count_supported","sample_type","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_blend_constant","set_device_lost_callback","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","size","size","size","size","size","size","size_multiple_requirement","slice","slope_scale","source","source","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","supported_sample_counts","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","texture","texture","texture","texture","texture","timestamp_writes","timestamp_writes","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_str","to_string","to_string","to_string","to_string","to_string","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unclipped_depth","union","union","union","union","union","union","union","union","union","union","unmap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","usage","usage","usage","usage","usages","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","view","view","view_formats","view_formats","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait_for","width","width","width","with_env","write_buffer","write_buffer_with","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","x","y","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","dxc_path","dxil_path","description","source","source","raw_display_handle","raw_window_handle","block","channel","filterable","Label","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_VERTEX_BUFFERS","None","RawString","Some","any_surface","api","binding_model","command","device","error","gfx_if_dx12","gfx_if_dx12_hidden","gfx_if_empty","gfx_if_empty_hidden","gfx_if_gles","gfx_if_gles_hidden","gfx_if_metal","gfx_if_metal_hidden","gfx_if_vulkan","gfx_if_vulkan_hidden","gfx_select","global","hal_api","hal_label","hub","id","identity","instance","pipeline","present","registry","resource","storage","validation","AnySurface","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","backend","borrow","borrow_mut","components_from","deref","deref_mut","downcast","downcast_ref","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","new","take","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Empty","Gles","Vulkan","ArrayUnsupported","BindError","BindGroup","BindGroupDescriptor","BindGroupDynamicBindingData","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntryError","BindGroupLayouts","BindingArrayLengthMismatch","BindingArrayPartialLengthMismatch","BindingArrayZeroLength","BindingRangeTooLarge","BindingResource","BindingSizeTooSmall","BindingTypeMaxCountError","BindingTypeMaxCountErrorKind","BindingZeroSize","BindingZone","BindingsNumMismatch","Buffer","BufferArray","BufferBinding","BufferRangeTooLarge","ConflictBinding","CreateBindGroupError","CreateBindGroupLayoutError","CreatePipelineLayoutError","DepthStencilAspect","Device","Device","Device","DuplicateBinding","DynamicBindingOutOfBounds","DynamicStorageBuffers","DynamicUniformBuffers","Entry","GetBindGroupLayoutError","InvalidBindGroupLayout","InvalidBindingIndex","InvalidBuffer","InvalidGroupIndex","InvalidLayout","InvalidPipeline","InvalidSampler","InvalidStorageTextureFormat","InvalidStorageTextureMipLevelCount","InvalidTexture","InvalidTextureDimension","InvalidTextureMultisample","InvalidTextureSampleType","InvalidTextureView","InvalidVisibility","LateMinBufferBindingSizeMismatch","MisalignedPushConstantRange","MismatchedDynamicOffsetCount","MissingBindingDeclaration","MissingBufferUsage","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingStages","MissingTextureUsage","MoreThanOnePushConstantRangePerStage","PartialRangeMatch","Pipeline","PipelineLayout","PipelineLayoutDescriptor","PushConstantRangeTooLarge","PushConstantUploadError","ResourceUsageConflict","SampleTypeFloatFilterableBindingMultisampled","SampledTextures","Sampler","SamplerArray","Samplers","SingleBindingExpected","Stage","StorageBuffers","StorageReadNotSupported","StorageTextureCube","StorageTextureReadWrite","StorageTextures","TextureView","TextureViewArray","TooLarge","TooManyBindings","TooManyBindings","TooManyGroups","Unaligned","UnalignedBufferOffset","UnalignedDynamicBinding","UniformBuffers","UnmatchedStages","WrongBindingType","WrongSamplerComparison","WrongSamplerFiltering","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","bind_group_layouts","binding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_size","buffer_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compact_index","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","components_into","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entries","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","group_index","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","kind","label","label","label","label","layout","limit","offset","push_constant_ranges","resource","shader_size","size","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zone","actual","alignment","binding","binding","binding_range","buffer_size","expected","group","group","group","idx","idx","limit_name","maximum_dynamic_offset","offset","offset","actual","actual","actual","actual","actual","binding","binding","binding","binding","binding","binding","binding","binding","binding","buffer","buffer","expected","expected","expected","expected","given","layout_cmp","layout_dimension","layout_flt","layout_format","layout_multisampled","layout_sample_type","limit","min","mip_level_count","range","sampler_cmp","sampler_flt","size","view_dimension","view_format","view_format","view_samples","binding","binding","error","maximum","actual","bound","index","index","index","intersected","max","max","provided","range","actual","actual","actual","end_offset","idx","idx","idx","matched","missing","offset","range","unmatched","AlreadyStarted","AlreadyStopped","AttachmentErrorLocation","AttachmentSampleCountMismatch","AttachmentsDimensionMismatch","BakedCommands","BasePassRef","BeginOcclusionQuery","BeginPipelineStatisticsQuery","Beginning","Bind","Bind","BindGroupIndexOutOfRange","BindGroupIndexOutOfRange","BindingSizeTooSmall","BindingSizeTooSmall","BufferOffsetAlignment","BufferOverrun","BufferOverrun","BufferOverrun","Bundle","Clear","ClearError","Color","ColorAttachment","ColorAttachment","ColorAttachmentError","CommandBuffer","CommandBufferMutable","CommandEncoderError","ComputePass","ComputePassDescriptor","ComputePassError","ComputePassErrorInner","ComputePassTimestampWrites","CopyAspectNotOne","CopyDstMissingAspects","CopyError","CopyFromForbiddenTextureFormat","CopySide","CopySrcMissingAspects","CopyToForbiddenTextureFormat","CreateRenderBundleError","Depth","Destination","DestroyedBuffer","DestroyedBuffer","Device","Device","Device","Device","Device","Discard","Dispatch","Dispatch","DispatchError","Draw","Draw","DrawError","Encoder","Encoder","Encoder","Encoder","End","EndOcclusionQuery","EndPipelineStatisticsQuery","ExecuteBundle","ExecutionError","ExternalCopyToForbiddenTextureFormat","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","IncompatibleBindGroup","IncompatibleBindGroup","IncompatibleBundleReadOnlyDepthStencil","IncompatibleBundleTargets","IncompatiblePipelineRods","IncompatiblePipelineTargets","IncompatibleType","IndexBeyondLimit","IndirectBufferOverrun","IndirectBufferOverrun","IndirectCountBufferOverrun","InstanceBeyondLimit","Invalid","InvalidAttachment","InvalidBindGroup","InvalidBindGroup","InvalidBindGroup","InvalidBindGroup","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBytesPerRow","InvalidCommandEncoder","InvalidCopySize","InvalidDepthOps","InvalidDepthStencilAttachmentFormat","InvalidDepthTextureExtent","InvalidDevice","InvalidDevice","InvalidDevice","InvalidDimensionExternal","InvalidDynamicOffsetCount","InvalidFormat","InvalidGroupSize","InvalidIndirectBuffer","InvalidMipLevel","InvalidPipeline","InvalidPipeline","InvalidPopDebugGroup","InvalidPopDebugGroup","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidRenderBundle","InvalidResolveSampleCounts","InvalidRowsPerImage","InvalidSampleCount","InvalidSampleCount","InvalidScissorRect","InvalidStencilOps","InvalidTexture","InvalidTexture","InvalidTextureAspect","InvalidTextureLayerRange","InvalidTextureLevelRange","InvalidTextureMipLevel","InvalidValuesOffset","InvalidViewportDepth","InvalidViewportRect","Load","LoadOp","MemoryInitFailure","MismatchedResolveTextureFormat","MissingAttachments","MissingBlendConstant","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingClearTextureFeature","MissingCopyDstUsageFlag","MissingCopyDstUsageFlag","MissingCopySrcUsageFlag","MissingDownlevelFlags","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIndexBuffer","MissingOcclusionQuerySet","MissingPipeline","MissingPipeline","MissingRenderAttachmentUsageFlag","MissingTextureAspect","MissingTextureUsage","MissingVertexBuffer","MultiViewDimensionMismatch","MultiViewMismatch","NoValidTextureClearMode","NotRecording","Occlusion","OffsetPlusSizeExceeds64BitBounds","OutOfBounds","OutOfMemory","Pass","PassChannel","PassErrorScope","PipelineStatistics","PopDebugGroup","PushConstants","PushConstants","QueryError","QueryOverrun","QueryReset","QueryUse","QueryUse","QueryUseError","Rect","RenderBundle","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderBundleError","RenderCommand","RenderCommandError","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassError","RenderPassErrorInner","RenderPassTimestampLocation","RenderPassTimestampWrites","Resolve","ResolveError","ResourceUsageConflict","ResourceUsageConflict","SameSourceDestinationBuffer","SetBindGroup","SetIndexBuffer","SetPipelineCompute","SetPipelineRender","SetPushConstant","SetScissorRect","SetVertexBuffer","SetViewport","SimplifiedQueryType","Source","Store","StoreOp","SurfaceTextureDropped","TextureFormatsNotCopyCompatible","TextureOverrun","TextureViewIsNotRenderable","Timestamp","TooMany","Transfer","TransferError","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBytesPerRow","UnalignedCopyHeight","UnalignedCopyOriginX","UnalignedCopyOriginY","UnalignedCopySize","UnalignedCopyWidth","UnalignedFillSize","Unimplemented","Unimplemented","UnmatchedIndexFormats","UnspecifiedBytesPerRow","UnspecifiedRowsPerImage","UnsupportedResolveTargetFormat","UsageConflict","Use","UsedTwiceInsideRenderpass","VertexBeyondLimit","VertexBufferIndexOutOfRange","WriteTimestamp","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info_mut","as_info_mut","aspect","aspect","beginning_of_pass_write_index","beginning_of_pass_write_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bundle_ffi","channel","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_formats","color_space","commands","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","components_into","components_into","compute_ffi","default","default","default","default","depth","depth_stencil","depth_stencil_attachment","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy","dynamic_offsets","end_of_pass_write_index","end_of_pass_write_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","h","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_finished","label","label","label","label","label","label","layout","load_op","mip_level","mip_level","multiview","new","new","new","null_value","null_value","null_value","null_value","occlusion_query_set","origin","origin","parent","parent_id","parent_id","premultiplied_alpha","push_constant_data","query_set","query_set","read_only","render_ffi","resolve_target","sample_count","scope","scope","scope","set_index_buffer","set_index_buffer","source","source","source","source","source","source","source","source","source","source","source","source","source","source","stencil","store_op","string_data","texture","texture","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","x","y","index","resolve","buffer_size","end_offset","requested_size","start_offset","start_offset","subresource_array_layer_count","subresource_base_array_layer","subresource_base_mip_level","subresource_mip_level_count","subresource_range_aspects","texture_format","texture_layer_range","texture_level_range","given","limit","buffer_size","end_offset","index","max","offset","current","diff","index","limit","buffer","diff","index","index","index_limit","instance_limit","last_index","last_instance","last_vertex","pipeline","slot","slot","vertex_limit","indexed","indirect","indirect","pipeline","pipeline","active_query_index","new_query_index","query_index","query_index","query_set_size","query_type","set_type","actual","expected","index","index","max","max","actual_extent","actual_location","actual_location","actual_samples","begin_count_offset","buffer_size","bundle_depth","bundle_stencil","count","count_buffer_size","dst","dst","end_count_offset","end_offset","expected_extent","expected_location","expected_location","expected_samples","format","location","location","location","location","offset","pass_depth","pass_stencil","reason","src","src","buffer_end_offset","buffer_size","buffer_start_offset","end_query","end_query","query_set_size","start_query","start_query","stride","aspect","aspect","aspect","buffer_size","count","dimension","dst_format","end_offset","end_offset","format","format","format","level","requested","sample_count","side","side","src_format","start_offset","start_offset","texture_size","total","wgpu_render_bundle_draw","wgpu_render_bundle_draw_indexed","wgpu_render_bundle_draw_indexed_indirect","wgpu_render_bundle_draw_indirect","wgpu_render_bundle_insert_debug_marker","wgpu_render_bundle_pop_debug_group","wgpu_render_bundle_push_debug_group","wgpu_render_bundle_set_bind_group","wgpu_render_bundle_set_index_buffer","wgpu_render_bundle_set_pipeline","wgpu_render_bundle_set_push_constants","wgpu_render_bundle_set_vertex_buffer","wgpu_compute_pass_begin_pipeline_statistics_query","wgpu_compute_pass_dispatch_workgroups","wgpu_compute_pass_dispatch_workgroups_indirect","wgpu_compute_pass_end_pipeline_statistics_query","wgpu_compute_pass_insert_debug_marker","wgpu_compute_pass_pop_debug_group","wgpu_compute_pass_push_debug_group","wgpu_compute_pass_set_bind_group","wgpu_compute_pass_set_pipeline","wgpu_compute_pass_set_push_constant","wgpu_compute_pass_write_timestamp","wgpu_render_pass_begin_occlusion_query","wgpu_render_pass_begin_pipeline_statistics_query","wgpu_render_pass_draw","wgpu_render_pass_draw_indexed","wgpu_render_pass_draw_indexed_indirect","wgpu_render_pass_draw_indirect","wgpu_render_pass_end_occlusion_query","wgpu_render_pass_end_pipeline_statistics_query","wgpu_render_pass_execute_bundles","wgpu_render_pass_insert_debug_marker","wgpu_render_pass_multi_draw_indexed_indirect","wgpu_render_pass_multi_draw_indexed_indirect_count","wgpu_render_pass_multi_draw_indirect","wgpu_render_pass_multi_draw_indirect_count","wgpu_render_pass_pop_debug_group","wgpu_render_pass_push_debug_group","wgpu_render_pass_set_bind_group","wgpu_render_pass_set_blend_constant","wgpu_render_pass_set_index_buffer","wgpu_render_pass_set_pipeline","wgpu_render_pass_set_push_constants","wgpu_render_pass_set_scissor_rect","wgpu_render_pass_set_stencil_reference","wgpu_render_pass_set_vertex_buffer","wgpu_render_pass_set_viewport","wgpu_render_pass_write_timestamp","BufferMapPendingClosure","Device","Device","DeviceDescriptor","DeviceError","DeviceLostCallback","DeviceLostClosure","DeviceLostClosureC","DeviceLostClosureRust","DeviceLostInvocation","HostMap","ImplicitPipelineContext","ImplicitPipelineIds","IncompatibleColorAttachment","IncompatibleDepthStencilAttachment","IncompatibleMultiview","IncompatibleSampleCount","Invalid","InvalidDevice","InvalidQueueId","Lost","MissingDownlevelFlags","MissingFeatures","OutOfMemory","Read","RenderBundle","RenderPassCompatibilityCheckType","RenderPassCompatibilityError","RenderPipeline","ResourceCreationFailed","SHADER_STAGE_COUNT","StuckGpu","UserClosures","WaitIdleError","Write","WrongDevice","WrongSubmissionIndex","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","any_device","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","create_buffer_from_hal","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device_lost_invocations","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_c","from_rust","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","global","group_ids","group_ids","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_valid","label","mappings","null_value","queue","required_features","required_limits","resource","root_id","root_id","source","submissions","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","actual","actual","expected","expected","expected","expected","indices","ty","ty","ty","ty","AnyDevice","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","deref","deref_mut","downcast","downcast_clone","downcast_ref","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","new","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Buffer","BufferStillMapped","DestroyedBuffer","DestroyedBuffer","DestroyedTexture","DestroyedTexture","InvalidQueue","MemoryInitFailure","Queue","Queue","Queue","QueueSubmitError","QueueWriteError","StagingBuffer","StuckGpu","SubmittedWorkDoneClosure","SubmittedWorkDoneClosureC","SurfaceOutputDropped","SurfaceUnconfigured","TempResource","Texture","Transfer","Unmap","WrappedSubmissionIndex","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_c","from_rust","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","index","info","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","queue_id","raw","source","source","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CreateDeviceError","Device","FailedToCreateZeroBuffer","OutOfMemory","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","fmt","fmt","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","source","to_owned","to_smolstr","to_string","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ContextError","ErrorFormatter","PrettyError","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","bind_group_label","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_label","buffer_label_with_key","cause","command_buffer_label","components_from","components_from","compute_pipeline_label","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","error","fmt","fmt","fmt_pretty","fmt_pretty","format_pretty_any","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","label","label","label_key","note","query_set_label","render_pipeline_label","sampler_label","source","string","texture_label","texture_label_with_key","texture_view_label","texture_view_label_with_key","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Global","GlobalReport","adapt_into_using","adapt_into_using","adapter_as_hal","adapter_downlevel_capabilities","adapter_drop","adapter_features","adapter_get_info","adapter_get_presentation_timestamp","adapter_get_texture_format_features","adapter_is_surface_supported","adapter_limits","adapter_request_device","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","bind_group_drop","bind_group_label","bind_group_layout_drop","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_destroy","buffer_drop","buffer_get_mapped_range","buffer_label","buffer_map_async","buffer_unmap","clear_backend","command_buffer_drop","command_buffer_label","command_encoder_clear_buffer","command_encoder_clear_texture","command_encoder_copy_buffer_to_buffer","command_encoder_copy_buffer_to_texture","command_encoder_copy_texture_to_buffer","command_encoder_copy_texture_to_texture","command_encoder_drop","command_encoder_finish","command_encoder_insert_debug_marker","command_encoder_pop_debug_group","command_encoder_push_debug_group","command_encoder_resolve_query_set","command_encoder_run_compute_pass","command_encoder_run_render_pass","command_encoder_write_timestamp","components_from","components_from","compute_pipeline_drop","compute_pipeline_get_bind_group_layout","compute_pipeline_label","create_adapter_from_hal","create_buffer_error","create_buffer_from_hal","create_device_from_hal","create_render_bundle_error","create_texture_error","create_texture_from_hal","deref","deref","deref_mut","deref_mut","device_as_hal","device_create_bind_group","device_create_bind_group_layout","device_create_buffer","device_create_command_encoder","device_create_compute_pipeline","device_create_pipeline_layout","device_create_query_set","device_create_render_bundle_encoder","device_create_render_pipeline","device_create_sampler","device_create_shader_module","device_create_shader_module_spirv","device_create_texture","device_destroy","device_downlevel_properties","device_drop","device_features","device_fence_as_hal","device_label","device_limits","device_mark_lost","device_poll","device_set_device_lost_closure","device_start_capture","device_stop_capture","downcast","downcast","drop","drop","drop","enumerate_adapters","eq","equivalent","equivalent","equivalent","fmt","from","from","from_angle","from_angle","from_hal_instance","from_instance","from_stimulus","from_stimulus","generate_report","gl","hub_report","init","init","instance","instance_as_hal","instance_create_surface","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","pipeline_layout_drop","pipeline_layout_label","poll_all_devices","query_set_drop","query_set_label","queue_create_staging_buffer","queue_drop","queue_get_timestamp_period","queue_on_submitted_work_done","queue_submit","queue_validate_write_buffer","queue_write_buffer","queue_write_staging_buffer","queue_write_texture","render_bundle_drop","render_bundle_encoder_finish","render_bundle_label","render_pipeline_drop","render_pipeline_get_bind_group_layout","render_pipeline_label","request_adapter","sampler_drop","sampler_label","shader_module_drop","shader_module_label","surface_as_hal","surface_configure","surface_drop","surface_get_capabilities","surface_get_current_texture","surface_present","surface_texture_discard","surfaces","surfaces","surfaces","texture_as_hal","texture_create_view","texture_destroy","texture_drop","texture_label","texture_view_drop","texture_view_label","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vulkan","vzip","vzip","HalApi","VARIANT","create_instance_from_hal","get_surface","hub","instance_as_hal","Hub","HubReport","Hubs","adapt_into_using","adapt_into_using","adapt_into_using","adapters","adapters","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bind_group_layouts","bind_group_layouts","bind_groups","bind_groups","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","command_buffers","command_buffers","components_from","components_from","components_from","components_into","compute_pipelines","compute_pipelines","deref","deref","deref","deref_mut","deref_mut","deref_mut","devices","devices","downcast","downcast","downcast","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","generate_report","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","is_empty","pipeline_layouts","pipeline_layouts","query_sets","query_sets","queues","queues","render_bundles","render_bundles","render_pipelines","render_pipelines","samplers","samplers","shader_modules","shader_modules","staging_buffers","texture_views","texture_views","textures","textures","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","AdapterId","BindGroupId","BindGroupLayoutId","BufferId","CommandBufferId","CommandEncoderId","ComputePassEncoderId","ComputePipelineId","DeviceId","EPOCH_MASK","Id","PipelineLayoutId","QuerySetId","QueueId","RenderBundleEncoderId","RenderBundleId","RenderPassEncoderId","RenderPipelineId","SamplerId","ShaderModuleId","StagingBufferId","SurfaceId","TextureId","TextureViewId","TypedId","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","backend","borrow","borrow_mut","clone","clone_into","cmp","compare","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from_angle","from_raw","from_stimulus","get_hash","hash","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_raw","into_raw","into_stimulus","partial_cmp","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unzip","unzip","upcast","vzip","zip","zip","GlobalIdentityHandlerFactory","IdentityHandlerFactory","IdentityManager","IdentityManagerFactory","Input","Input","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","autogenerate_ids","autogenerate_ids","borrow","borrow","borrow_mut","borrow_mut","components_from","components_from","components_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","free","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","input_to_id","input_to_id","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","mark_as_used","new","process","spawn","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Adapter","AdapterInputs","DeviceLost","FailedLimit","GetSurfaceSupportError","HalSurface","IdSet","Instance","Internal","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidSurface","InvalidSurface","InvalidSurface","IsSurfaceSupportedError","LimitsExceeded","Mask","NoGraphicsQueue","NotFound","OutOfMemory","RequestAdapterError","RequestAdapterOptions","RequestDeviceError","Surface","Unsupported","UnsupportedFeature","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info_mut","as_info_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compatible_surface","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_capabilities","gl","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_surface_supported","label","name","new","null_value","parse_backends_from_comma_list","power_preference","raw","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vulkan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ABSTRACT_FLOAT","ABSTRACT_INT","ABSTRACT_WIDTH","Abs","AbstractFloat","AbstractFloat","AbstractInt","AbstractInt","AccelerationStructure","Access","AccessIndex","Acos","Acosh","Add","Add","AddressSpace","All","And","And","Any","Arena","Array","ArrayLength","ArraySize","As","Asin","Asinh","Atan","Atan2","Atanh","Atomic","Atomic","AtomicCompareExchangeWeakResult","AtomicFunction","AtomicResult","Auto","BOOL","BOOL_WIDTH","Barrier","Barrier","BaseInstance","BaseVertex","Bgra8Unorm","Bi","Bias","Binary","BinaryOperator","Binding","BindingArray","BitwiseNot","Block","Block","Bool","Bool","Break","BuiltIn","BuiltIn","ByName","ByNameOrId","Bytes","Call","CallResult","Ceil","Center","Centroid","Clamp","ClipDistance","Coarse","Compose","Compute","ConservativeDepth","Constant","Constant","Constant","Continue","Cos","Cosh","CountLeadingZeros","CountOneBits","CountTrailingZeros","Cross","Cube","CullDistance","D1","D2","D3","Default","Degrees","Depth","Derivative","DerivativeAxis","DerivativeControl","Determinant","Distance","Divide","Dot","Dynamic","EarlyDepthTest","Emit","EntryPoint","Equal","Exact","Exchange","ExclusiveOr","ExclusiveOr","Exp","Exp2","Expression","ExtractBits","F32","F32","F64","F64","FaceForward","FastHashMap","FastHashSet","FastIndexMap","FastIndexSet","FindLsb","FindMsb","Fine","Flat","Float","Floor","Fma","Fract","FragDepth","Fragment","Frexp","FrexpResult","FrontFacing","Function","Function","FunctionArgument","FunctionArgument","FunctionResult","GlobalInvocationId","GlobalVariable","GlobalVariable","Gradient","Greater","GreaterEqual","GreaterEqual","Handle","Handle","I32","I32","I32","I64","I64","If","Image","ImageClass","ImageDimension","ImageLoad","ImageQuery","ImageQuery","ImageSample","ImageStore","InclusiveOr","InclusiveOr","Initialize","InsertBits","InstanceIndex","Interpolation","Inverse","InverseSqrt","IsInf","IsNan","Kill","LOAD","Ldexp","Length","Less","LessEqual","LessEqual","Linear","Literal","Literal","Load","LocalInvocationId","LocalInvocationIndex","LocalVariable","LocalVariable","Location","Log","Log2","LogicalAnd","LogicalNot","LogicalOr","Loop","Math","MathFunction","Matrix","Max","Max","Min","Min","Mix","Modf","ModfResult","Module","Modulo","Multiply","Negate","None","None","Normalize","NotEqual","NumLayers","NumLevels","NumSamples","NumWorkGroups","Outer","Override","Pack2x16float","Pack2x16snorm","Pack2x16unorm","Pack4x8snorm","Pack4x8unorm","Perspective","PointCoord","PointSize","Pointer","Position","Pow","PredeclaredType","PrimitiveIndex","Private","Proceed","PushConstant","Quad","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","Radians","Range","RayQuery","RayQuery","RayQueryFunction","RayQueryGetIntersection","RayQueryProceedResult","Reflect","Refract","Relational","RelationalFunction","ResourceBinding","Return","ReverseBits","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Round","STORAGE","STORE","Sample","SampleIndex","SampleLevel","SampleMask","Sampled","Sampler","Sampling","Saturate","Scalar","Scalar","ScalarKind","Select","ShaderStage","ShiftLeft","ShiftRight","Sign","Sin","Sinh","Sint","Size","SmoothStep","SourceLocation","Span","SpanContext","SpecialTypes","Splat","Sqrt","Statement","Step","Storage","Storage","StorageAccess","StorageFormat","Store","Struct","StructMember","Subtract","Subtract","Switch","SwitchCase","SwitchValue","Swizzle","SwizzleComponent","Tan","Tanh","Terminate","Transpose","Tri","Trunc","Type","TypeInner","U32","U32","U32","UNDEFINED","Uint","Unary","UnaryOperator","Unchanged","Uniform","UniqueArena","Unpack2x16float","Unpack2x16snorm","Unpack2x16unorm","Unpack4x8snorm","Unpack4x8unorm","ValuePointer","Vector","VectorSize","Vertex","VertexIndex","ViewIndex","W","WORK_GROUP","Width","WithSpan","WorkGroup","WorkGroupId","WorkGroupSize","WorkGroupUniformLoad","WorkGroupUniformLoadResult","X","X","XYZW","Y","Y","Z","Zero","ZeroValue","access","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","all","and_then","append","append","apply_default_interpolation","argument_count","arguments","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_inner","automatic_conversion_combine","automatically_converts_to","back","binding","binding","binding","binding","binding","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_form","check_contains_handle","check_contains_handle","check_contains_range","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compact","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","complement","complement","component_type","components","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","conservative","const_expressions","constants","contains","contains","cull","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","early_depth_test","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","empty","empty","entry_points","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expressions","extend","extend","extend","extend_block","fall_through","fetch_if","fetch_if_or_append","fetch_or_append","first_and_last","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_index","from_iter","from_iter","from_name","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_vec","from_zero_based_index_range","front","function","functions","generate_predeclared_type","generate_ray_desc_type","generate_ray_intersection_type","get","get_handle","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut","get_span","get_span","global_variables","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","implicit_derivatives","index","index","index","index","index","index_mut","indexable_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_other","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_abstract","is_all","is_all","is_atomic_pointer","is_defined","is_dynamic_index","is_dynamically_sized","is_empty","is_empty","is_empty","is_empty","is_empty","is_mipmapped","is_multisampled","is_numeric","is_terminator","iter","iter","iter","iter","iter_mut","iter_names","iter_names","keywords","kind","len","len","len","length","line_number","line_position","local_variables","location","location","name","name","name","name","name","name","name","name","named_expressions","needs_pre_emit","new","new","new","new","new","new","new_from_bounds","next","not","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","offset","one","originating_global","override","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer_space","predeclared_types","proc","push","range_from","ray_desc","ray_intersection","remove","remove","replace","result","scalar","scalar","scalar_kind","scalar_kind","scalar_width","set","set","size","source","space","span_iter","span_iter_mut","spans","special_types","splice","stage","sub","sub","sub_assign","sub_assign","subsume","symmetric_difference","symmetric_difference","to_built_in","to_ctx","to_hlsl_str","to_indexable_length","to_inner_atomic","to_inner_scalar","to_inner_vector","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_smolstr","to_string","to_wgsl","to_wgsl","to_wgsl","to_wgsl","toggle","toggle","total_span","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","ty","ty","ty","ty","ty","ty_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","union","until","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","valid","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_capacity","with_context","with_span","workgroup_size","zero","zero_based_index_range","access","compare","interpolation","location","sampling","second_blend_source","invariant","accept","arg","arg1","arg2","arg3","argument","array_index","array_index","axis","base","base","committed","comparison","components","condition","convert","coordinate","coordinate","ctrl","depth_ref","expr","expr","expr","fun","fun","gather","image","image","image","index","index","kind","left","level","level","offset","op","op","pattern","pointer","query","query","reject","right","sample","sampler","size","size","ty","ty","ty","value","vector","access","format","kind","multi","multi","level","size","size","width","width","acceleration_structure","descriptor","result","x","y","accept","arguments","array_index","body","break_if","cases","condition","continuing","coordinate","fun","fun","function","image","pointer","pointer","pointer","query","reject","result","result","result","selector","value","value","value","value","arrayed","base","base","base","class","columns","comparison","dim","members","rows","scalar","scalar","scalar","size","size","size","size","space","space","span","stride","CULL_BACK_FACING","CULL_FRONT_FACING","CULL_NO_OPAQUE","CULL_OPAQUE","NO_OPAQUE","OPAQUE","RayFlag","SKIP_AABBS","SKIP_CLOSEST_HIT_SHADER","SKIP_TRIANGLES","TERMINATE_ON_FIRST_HIT","adapt_into_using","all","arrays_from","arrays_into","as_any","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","complement","components_from","contains","default","deref","deref_mut","difference","downcast","drop","empty","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_stimulus","glsl","hlsl","init","insert","intersection","intersects","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","is_all","is_empty","iter","iter_names","msl","not","null_value","remove","set","spv","sub","sub_assign","symmetric_difference","to_owned","toggle","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","union","upcast","vzip","ADJUST_COORDINATE_SPACE","ARRAY_OF_ARRAYS","BUFFER_STORAGE","BindingMap","CLIP_DISTANCE","COMPUTE_SHADER","CONSERVATIVE_DEPTH","CUBE_TEXTURES_ARRAY","CULL_DISTANCE","Custom","DOUBLE_TYPE","DRAW_PARAMETERS","DUAL_SOURCE_BLENDING","DYNAMIC_ARRAY_SIZE","Desktop","Embedded","EntryPointNotFound","Error","FIRST_INSTANCE_BINDING","FORCE_POINT_SIZE","FULL_IMAGE_FORMATS","Features","FmtError","IMAGE_LOAD_STORE","IMAGE_SIZE","INCLUDE_UNUSED_ITEMS","INSTANCE_INDEX","ImageMultipleSamplers","MULTISAMPLED_TEXTURES","MULTISAMPLED_TEXTURE_ARRAYS","MULTI_VIEW","MissingFeatures","MultiplePushConstants","NOPERSPECTIVE_QUALIFIER","Options","PipelineOptions","PushConstantItem","ReflectionInfo","SAMPLE_QUALIFIER","SAMPLE_VARIABLES","SUPPORTED_CORE_VERSIONS","SUPPORTED_ES_VERSIONS","TEXTURE_LEVELS","TEXTURE_SAMPLES","TEXTURE_SHADOW_LOD","TEXTURE_SHADOW_LOD","TextureMapping","UnsupportedExternal","UnsupportedScalar","VaryingLocation","Version","VersionNotSupported","Writer","WriterFlags","access_path","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","all","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","entry_point","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","index","init","init","init","init","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","location","multiview","new","new_gles","not","not","null_value","offset","partial_cmp","push_constant_items","remove","remove","sampler","set","set","shader_stage","source","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture","texture_mapping","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","toggle","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uniforms","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","varying","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","writer_flags","zero_initialize_workgroup_memory","is_webgl","version","BindTarget","BindingMap","Custom","EntryPointError","Error","IoError","MissingBinding","Options","ReflectionInfo","ShaderModel","Unimplemented","UnsupportedScalar","V5_0","V5_1","V6_0","Writer","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binding_array_size","binding_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","entry_point_names","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","null_value","null_value","null_value","partial_cmp","push_constants_target","register","shader_model","source","space","special_constants_binding","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_str","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","zero_initialize_workgroup_memory","BindSamplerTarget","BindTarget","BindingMap","CapabilityNotSupported","EntryPointError","EntryPointResourceMap","EntryPointResources","Error","FeatureNotImplemented","Format","Inline","InlineSamplerIndex","MissingBindTarget","MissingBinding","MissingPushConstants","MissingSizesBuffer","Options","PipelineOptions","Resource","Slot","TranslationInfo","UnimplementedBindTarget","UnsupportedArrayOf","UnsupportedArrayOfType","UnsupportedAttribute","UnsupportedBinaryOp","UnsupportedBuiltIn","UnsupportedCall","UnsupportedCompose","UnsupportedFunction","UnsupportedRWStorageTexture","UnsupportedRayTracing","UnsupportedWriteableStorageBuffer","UnsupportedWriteableStorageTexture","Validation","Writer","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","allow_and_force_point_size","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binding_array_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","buffer","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","entry_point_names","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","inline_samplers","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","lang_version","mutable","new","null_value","null_value","null_value","null_value","per_entry_point_map","push_constant_buffer","resources","sampler","sampler","sizes_buffer","source","spirv_cross_compatibility","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_string","zero_initialize_workgroup_memory","Address","Always","BorderColor","ClampToBorder","ClampToEdge","ClampToZero","CompareFunc","Coord","Equal","Filter","Greater","GreaterEqual","InlineSampler","Less","LessEqual","Linear","MirroredRepeat","Nearest","Never","Normalized","NotEqual","OpaqueBlack","OpaqueWhite","Pixel","Repeat","TransparentBlack","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_str","as_str","as_str","as_str","as_str","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_func","components_from","components_from","components_from","components_from","components_from","components_from","coord","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","lod_clamp","mag_filter","max_anisotropy","min_filter","mip_filter","null_value","null_value","null_value","null_value","null_value","null_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","ADJUST_COORDINATE_SPACE","ARRAYED","Addresses","ArbitraryPrecisionFixedPointINTEL","ArbitraryPrecisionFloatingPointINTEL","ArbitraryPrecisionIntegersINTEL","AsmINTEL","AtomicFloat16AddEXT","AtomicFloat16MinMaxEXT","AtomicFloat32AddEXT","AtomicFloat32MinMaxEXT","AtomicFloat64AddEXT","AtomicFloat64MinMaxEXT","AtomicStorage","AtomicStorageOps","BFloat16ConversionINTEL","BindingInfo","BindingMap","BindlessTextureNV","BitInstructions","BlockingPipesINTEL","CLAMP_FRAG_DEPTH","CacheControlsINTEL","Capability","ClipDistance","ComputeDerivativeGroupLinearNV","ComputeDerivativeGroupQuadsNV","CooperativeMatrixKHR","CooperativeMatrixNV","CoreBuiltinsARM","CullDistance","DEBUG","DEPTH","DebugInfo","DebugInfoModuleINTEL","DemoteToHelperInvocation","DemoteToHelperInvocationEXT","DenormFlushToZero","DenormPreserve","DerivativeControl","DeviceEnqueue","DeviceGroup","DisplacementMicromapNV","DotProduct","DotProductInput4x8Bit","DotProductInput4x8BitKHR","DotProductInput4x8BitPacked","DotProductInput4x8BitPackedKHR","DotProductInputAll","DotProductInputAllKHR","DotProductKHR","DrawParameters","EntryPointNotFound","Error","ExpectAssumeKHR","FORCE_POINT_SIZE","FPFastMathModeINTEL","FPGAArgumentInterfacesINTEL","FPGABufferLocationINTEL","FPGAClusterAttributesINTEL","FPGADSPControlINTEL","FPGAInvocationPipeliningAttributesINTEL","FPGAKernelAttributesINTEL","FPGAKernelAttributesv2INTEL","FPGALatencyControlINTEL","FPGALoopControlsINTEL","FPGAMemoryAccessesINTEL","FPGAMemoryAttributesINTEL","FPGARegINTEL","FPMaxErrorINTEL","FeatureNotImplemented","Float16","Float16Buffer","Float16ImageAMD","Float64","FloatingPointModeINTEL","FragmentBarycentricKHR","FragmentBarycentricNV","FragmentDensityEXT","FragmentFullyCoveredEXT","FragmentMaskAMD","FragmentShaderPixelInterlockEXT","FragmentShaderSampleInterlockEXT","FragmentShaderShadingRateInterlockEXT","FragmentShadingRateKHR","FunctionFloatControlINTEL","FunctionPointersINTEL","GenericPointer","Geometry","GeometryPointSize","GeometryShaderPassthroughNV","GeometryStreams","GlobalVariableFPGADecorationsINTEL","GlobalVariableHostAccessINTEL","GroupNonUniform","GroupNonUniformArithmetic","GroupNonUniformBallot","GroupNonUniformClustered","GroupNonUniformPartitionedNV","GroupNonUniformQuad","GroupNonUniformRotateKHR","GroupNonUniformShuffle","GroupNonUniformShuffleRelative","GroupNonUniformVote","GroupUniformArithmeticKHR","Groups","IOPipesINTEL","Image1D","ImageBasic","ImageBuffer","ImageCubeArray","ImageFootprintNV","ImageGatherBiasLodAMD","ImageGatherExtended","ImageMSArray","ImageMipmap","ImageQuery","ImageReadWrite","ImageReadWriteLodAMD","ImageRect","ImageTypeFlags","IndirectReferencesINTEL","InputAttachment","InputAttachmentArrayDynamicIndexing","InputAttachmentArrayDynamicIndexingEXT","InputAttachmentArrayNonUniformIndexing","InputAttachmentArrayNonUniformIndexingEXT","Int16","Int64","Int64Atomics","Int64ImageEXT","Int8","IntegerFunctions2INTEL","InterpolationFunction","Kernel","KernelAttributesINTEL","LABEL_VARYINGS","Linkage","LiteralSampler","LongConstantCompositeINTEL","LoopFuseINTEL","MULTISAMPLED","Matrix","MemoryAccessAliasingINTEL","MeshShadingEXT","MeshShadingNV","MinLod","MissingCapabilities","MultiView","MultiViewport","NamedBarrier","Native","None","OptNoneINTEL","Options","PerViewAttributesNV","PhysicalStorageBufferAddresses","PhysicalStorageBufferAddressesEXT","PipeStorage","PipelineOptions","Pipes","Polyfill","RayCullMaskKHR","RayQueryKHR","RayQueryPositionFetchKHR","RayQueryProvisionalKHR","RayTracingDisplacementMicromapNV","RayTracingKHR","RayTracingMotionBlurNV","RayTracingNV","RayTracingOpacityMicromapEXT","RayTracingPositionFetchKHR","RayTracingProvisionalKHR","RayTraversalPrimitiveCullingKHR","RoundToInfinityINTEL","RoundingModeRTE","RoundingModeRTZ","RuntimeAlignedAttributeINTEL","RuntimeDescriptorArray","RuntimeDescriptorArrayEXT","SAMPLED","SampleMaskOverrideCoverageNV","SampleMaskPostDepthCoverage","SampleRateShading","Sampled1D","SampledBuffer","SampledCubeArray","SampledImageArrayDynamicIndexing","SampledImageArrayNonUniformIndexing","SampledImageArrayNonUniformIndexingEXT","SampledRect","Shader","ShaderClockKHR","ShaderEnqueueAMDX","ShaderInvocationReorderNV","ShaderLayer","ShaderNonUniform","ShaderNonUniformEXT","ShaderSMBuiltinsNV","ShaderStereoViewNV","ShaderViewportIndex","ShaderViewportIndexLayerEXT","ShaderViewportIndexLayerNV","ShaderViewportMaskNV","ShadingRateNV","SignedZeroInfNanPreserve","SparseResidency","SplitBarrierINTEL","StencilExportEXT","StorageBuffer16BitAccess","StorageBuffer8BitAccess","StorageBufferArrayDynamicIndexing","StorageBufferArrayNonUniformIndexing","StorageBufferArrayNonUniformIndexingEXT","StorageImageArrayDynamicIndexing","StorageImageArrayNonUniformIndexing","StorageImageArrayNonUniformIndexingEXT","StorageImageExtendedFormats","StorageImageMultisample","StorageImageReadWithoutFormat","StorageImageWriteWithoutFormat","StorageInputOutput16","StoragePushConstant16","StoragePushConstant8","StorageTexelBufferArrayDynamicIndexing","StorageTexelBufferArrayDynamicIndexingEXT","StorageTexelBufferArrayNonUniformIndexing","StorageTexelBufferArrayNonUniformIndexingEXT","StorageUniform16","StorageUniformBufferBlock16","SubgroupAvcMotionEstimationChromaINTEL","SubgroupAvcMotionEstimationINTEL","SubgroupAvcMotionEstimationIntraINTEL","SubgroupBallotKHR","SubgroupBufferBlockIOINTEL","SubgroupDispatch","SubgroupImageBlockIOINTEL","SubgroupImageMediaBlockIOINTEL","SubgroupShuffleINTEL","SubgroupVoteKHR","Tessellation","TessellationPointSize","TextureBlockMatchQCOM","TextureBoxFilterQCOM","TextureSampleWeightedQCOM","TileImageColorReadAccessEXT","TileImageDepthReadAccessEXT","TileImageStencilReadAccessEXT","TransformFeedback","USMStorageClassesINTEL","UniformAndStorageBuffer16BitAccess","UniformAndStorageBuffer8BitAccess","UniformBufferArrayDynamicIndexing","UniformBufferArrayNonUniformIndexing","UniformBufferArrayNonUniformIndexingEXT","UniformDecoration","UniformTexelBufferArrayDynamicIndexing","UniformTexelBufferArrayDynamicIndexingEXT","UniformTexelBufferArrayNonUniformIndexing","UniformTexelBufferArrayNonUniformIndexingEXT","UnstructuredLoopControlsINTEL","UnsupportedVersion","Validation","VariableLengthArrayINTEL","VariablePointers","VariablePointersStorageBuffer","Vector16","VectorAnyINTEL","VectorComputeINTEL","VulkanMemoryModel","VulkanMemoryModelDeviceScope","VulkanMemoryModelDeviceScopeKHR","VulkanMemoryModelKHR","WorkgroupMemoryExplicitLayout16BitAccessKHR","WorkgroupMemoryExplicitLayout8BitAccessKHR","WorkgroupMemoryExplicitLayoutKHR","Writer","WriterFlags","ZeroInitializeWorkgroupMemoryMode","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","all","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binding_array_size","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","complement","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","debug_info","decorate_non_uniform_binding_array_access","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","entry_point","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","file_name","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_str","from_u32","get_capabilities_used","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","lang_version","new","not","not","null_value","null_value","partial_cmp","remove","remove","set","set","shader_stage","source_code","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","toggle","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_vec","zero_initialize_workgroup_memory","compact","SymbolTable","Typifier","adapt_into_using","adapt_into_using","add","add_root","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get","grow","index","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","invalidate","lookup","new","null_value","null_value","pop_scope","push_scope","register_type","reset","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","wgsl","Frontend","ParseError","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","labels","location","message","new","parse","parse_str","source","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","wgsl","RESERVED","Alignment","ArrayLength","ArrayLengthDynamic","Atomic","AutomaticConversionFloatToInt","AutomaticConversionLossy","BoundsCheckPolicies","BoundsCheckPolicy","Call","Constant","ConstantEvaluator","ConstantEvaluatorError","Derivative","DivisionByZero","Dynamic","EIGHT","Emitter","EntryPoint","EntryPointArgument","EntryPointIndex","EntryPointLocal","ExpressionConstnessTracker","FOUR","Function","FunctionArg","FunctionArgument","FunctionArgumentNotFound","FunctionLocal","FunctionNotDefined","FunctionReturnsVoid","GlobalCtx","GlobalVariable","GlobalVariable","Handle","ImageExpression","IncompatibleOperands","IndexableLength","IndexableLengthError","InvalidAccess","InvalidAccessBase","InvalidAccessIndex","InvalidAccessIndexTy","InvalidArrayElementType","InvalidArrayLength","InvalidArrayLengthArg","InvalidBinaryOpArgs","InvalidCastArg","InvalidClamp","InvalidImage","InvalidMathArg","InvalidMathArgCount","InvalidPointer","InvalidScalar","InvalidStructMemberType","InvalidSubAccess","InvalidUnaryOpArg","InvalidVector","Known","LayoutError","LayoutErrorInner","Layouter","Literal","Load","LocalVariable","MIN_UNIFORM","MissingSpecialType","NameKey","Namer","NonPowerOfTwoWidth","NotImplemented","ONE","OutOfBoundsIndex","Overflow","POINTER_SPAN","RayQueryExpression","ReadZeroSkipWrite","RemainderByZero","ResolveContext","ResolveError","Restrict","SIXTEEN","ShiftedMoreThan32Bits","SplatScalarOnly","StructMember","SubexpressionsAreNotConstant","SwizzleOutOfBounds","SwizzleVectorOnly","TWO","Type","TypeLayout","TypeNotConstructible","TypeNotIndexable","TypeResolution","Unchecked","Value","WorkGroupUniformLoadResult","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","alignment","arguments","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","binding_array","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","call","call_or","cast","cast_array","choose_policy","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","const_expressions","constants","constants","contains","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ensure_block_returns","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flatten_compose","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_glsl_function","for_glsl_module","for_wgsl_function","for_wgsl_module","force_non_const","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_arena","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_width","functions","get_hash","get_hash","get_hash","get_hash","get_hash","global_vars","handle","hash","hash","hash","hash","hash","image_load","image_store","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_with","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_aligned","is_const","is_running","local_vars","mul","mul","new","new","null_value","null_value","null_value","null_value","null_value","partial_cmp","reset","resolve","round_up","size","source","special_types","start","to_ctx","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_stride","to_string","to_string","to_string","to_string","to_string","to_string","to_wgsl","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_eval_and_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_locals","from","to","to_type","to_type","value","expr","expr","index","indexed","indexed","name","ty","BoundsCheckPolicies","BoundsCheckPolicy","Dynamic","Expression","GuardedIndex","IndexableLength","IndexableLengthError","InvalidArrayLength","Known","Known","ReadZeroSkipWrite","Restrict","TypeNotIndexable","Unchecked","access_needs_check","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","binding_array","borrow","borrow_mut","buffer","clone","clone_into","components_from","deref","deref_mut","downcast","drop","find_checked_indexes","fmt","from","from_angle","from_stimulus","image_load","image_store","index","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ARGUMENT","Alignment","Argument","Argument","ArgumentCount","ArgumentType","ArrayStride","BINDINGS","BLOCKS","BindingArrayBaseTypeNotStruct","BindingCollision","BindingCollision","BreakOutsideOfLoopOrSwitch","CLIP_DISTANCE","COMPUTE","CONSTANTS","CONSTRUCTIBLE","CONTROL_FLOW_UNIFORMITY","COPY","CUBE_ARRAY_TEXTURES","CULL_DISTANCE","CallError","Capabilities","ComparisonSamplingMismatch","ComponentCount","ComponentType","Compose","Compose","ComposeError","Conflict","ConflictingCaseType","ConflictingSwitchCase","ConstExpression","ConstExpressionError","Constant","ConstantError","ContinueOutsideOfLoop","Corrupted","DATA","DERIVATIVE","DUAL_SOURCE_BLENDING","Disalignment","DoesntExist","DuplicateBuiltIn","EARLY_DEPTH_TEST","EXPRESSIONS","EmptyStruct","EntryPoint","EntryPointError","ExpectedBindingArrayType","ExpectedGlobalOrArgument","ExpectedGlobalVariable","ExpectedImageType","ExpectedSamplerType","Expression","ExpressionAlreadyInScope","ExpressionError","ExpressionInfo","ExpressionMismatch","FLOAT64","FRAGMENT","ForbiddenStageOperations","Function","Function","FunctionArgumentDoesntExist","FunctionError","FunctionInfo","GlobalUse","GlobalVariable","GlobalVariableError","HOST_SHAREABLE","IMPLICIT_LEVEL","IO_SHAREABLE","IndexMustBeConstant","IndexOutOfBounds","IndexableLength","Infinity","InitializerNotAllowed","InitializerType","InitializerType","InstructionsAfterReturn","InvalidAccelerationStructure","InvalidArgumentPointerSpace","InvalidArgumentType","InvalidArgumentType","InvalidArrayBaseType","InvalidArrayStride","InvalidArrayType","InvalidAtomic","InvalidAtomicResultType","InvalidAtomicWidth","InvalidAttributeInStage","InvalidBaseType","InvalidBinaryOperandTypes","InvalidBinding","InvalidBooleanVector","InvalidBuiltInStage","InvalidBuiltInType","InvalidCall","InvalidCastArgument","InvalidData","InvalidDepthReference","InvalidDepthSampleLevel","InvalidDerivative","InvalidDynamicArray","InvalidFloatArgument","InvalidGatherComponent","InvalidGatherDimension","InvalidGatherLevel","InvalidGlobalUsage","InvalidHandle","InvalidIfType","InvalidImageArrayIndex","InvalidImageArrayIndexType","InvalidImageClass","InvalidImageCoordinateType","InvalidImageOtherIndex","InvalidImageOtherIndexType","InvalidImageStore","InvalidIndexType","InvalidInputAttributeInStage","InvalidIntegerInterpolation","InvalidInterpolation","InvalidLocationAttributeCombination","InvalidLocationsWhileDualSourceBlending","InvalidPointerBase","InvalidPointerToUnsized","InvalidPointerType","InvalidRayDescriptor","InvalidRayQueryExpression","InvalidRayQueryType","InvalidRayQueryType","InvalidReturnSpot","InvalidReturnType","InvalidSampleLevelBiasType","InvalidSampleLevelExactType","InvalidSampleLevelGradientType","InvalidSampleOffset","InvalidSelectTypes","InvalidSplatType","InvalidSplatType","InvalidStorePointer","InvalidStoreTypes","InvalidStoreValue","InvalidSwitchType","InvalidSwizzleComponent","InvalidType","InvalidType","InvalidType","InvalidType","InvalidUnaryOperandType","InvalidUsage","InvalidVectorType","InvalidWorkGroupUniformLoadResultType","LastCaseFallTrough","Layouter","Literal","Literal","LiteralError","LocalVariable","LocalVariableError","MULTISAMPLED_SHADING","MULTIVIEW","MatrixElementNotFloat","MemberMissingBinding","MemberOffset","MemberOffsetAfterStruct","MemberOutOfBounds","MemberOverlap","MissingBinding","MissingCapabilities","MissingCapability","MissingDefaultCase","MissingInterpolation","MissingTypeFlags","MissingVertexOutputPosition","ModuleInfo","MoreThanOnePushConstantUsed","MultipleDefaultCases","NaN","NegativeIndex","NonConst","NonConstInitializer","NonConstructibleReturnType","NonConstructibleType","NonHostShareable","NonUniformControlFlow","NonUniformWorkgroupUniformLoad","NotIOShareableType","NotInScope","OutOfRangeWorkgroupSize","PRIMITIVE_INDEX","PUSH_CONSTANT","PipelineInputRegularFunction","PipelineOutputRegularFunction","QUERY","RAY_QUERY","READ","Result","ResultAlreadyInScope","ResultValue","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SAMPLER_NON_UNIFORM_INDEXING","SIZED","STORAGE_TEXTURE_16BIT_NORM_FORMATS","STRUCT_LAYOUTS","ShaderStages","StorageAddressSpaceWriteOnlyNotSupported","StructSpan","Type","Type","Type","Type","TypeError","TypeFlags","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UnexpectedEarlyDepthTest","UnexpectedWorkgroupSize","Uniformity","UniformityRequirements","UnsizedMember","UnsupportedCapability","UnsupportedCapability","UnsupportedImageType","UnsupportedSpecializedArrayLength","VERTEX","ValidationError","ValidationFlags","Validator","VaryingError","WORK_GROUP_BARRIER","WRITE","Width","Width","WidthError","WorkgroupUniformLoadExpressionMismatch","WorkgroupUniformLoadInvalidPointer","WrongArgumentCount","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","all","all","all","all","all","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available_stages","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_literal_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","contains","contains","contains","contains","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","difference","difference","difference","difference","dominates_global_use","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dual_source_blending","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expression_count","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_entry_point","global_variable_count","index","index","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","may_kill","new","non_uniform_result","not","not","not","not","not","not","null_value","null_value","ref_count","remove","remove","remove","remove","remove","remove","requirements","reset","sampling_set","set","set","set","set","set","set","source","source","source","source","source","source","source","source","source","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uniformity","uniformity","union","union","union","union","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validate","validate_literal","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","index","index","required","required","seen","seen_expression","source","expected","given","index","alignment","alignment","alignment","expected","index","index","index","offset","offset","span","stride","location","location_mask","has_ref","image","sampler","error","function","handle","handle","index","index","name","name","name","name","pointer","source","source","space","value","required","seen","arrayed","base","class","dim","expected","index","index","offset","offset","size","space","span","stride","handle","handle","handle","handle","handle","name","name","name","name","name","source","source","source","source","source","source","stage","attribute","location","location","BLEND_CONSTANT","BindGroup","BlendFactorOnUnsupportedTarget","ColorAttachment","ColorState","ColorStateError","ComputePipeline","ComputePipelineDescriptor","ConservativeRasterizationNonFillPolygonMode","CreateComputePipelineError","CreateRenderPipelineError","CreateShaderModuleError","DepthStencilState","DepthStencilStateError","Device","Device","Device","FormatNotBlendable","FormatNotColor","FormatNotDepth","FormatNotRenderable","FormatNotRenderable","FormatNotStencil","FragmentState","Generation","Implicit","Implicit","ImplicitBindGroupCount","ImplicitLayoutError","IncompatibleFormat","Internal","Internal","InvalidGroupIndex","InvalidLayout","InvalidLayout","InvalidMinMaxBlendFactors","InvalidSampleCount","InvalidSampleCount","InvalidSampleCount","InvalidVertexAttributeOffset","InvalidWriteMask","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIds","Naga","Parsing","Pipeline","PipelineExpectsShaderToUseDualSourceBlending","PipelineFlags","ProgrammableStageDescriptor","ReflectionError","RenderPipeline","RenderPipelineDescriptor","STENCIL_REFERENCE","ShaderError","ShaderExpectsPipelineToUseDualSourceBlending","ShaderLocationClash","ShaderModule","ShaderModuleDescriptor","ShaderModuleSource","Stage","Stage","StripIndexFormatForNonStripTopology","TooManyVertexAttributes","TooManyVertexBuffers","UnalignedShader","UnalignedVertexStride","Validation","VertexBufferLayout","VertexState","VertexStep","VertexStrideTooLarge","WRITES_DEPTH","WRITES_STENCIL","Wgsl","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","array_stride","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","attributes","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","components_into","contains","default","depth_stencil","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","entry_point","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_empty","iter","iter_names","label","label","label","label","label","layout","layout","location","mode","module","multisample","multiview","not","null_value","primitive","remove","set","shader_bound_checks","source","source","source","source","source","source","stage","stage","stage","step_mode","stride","sub","sub_assign","symmetric_difference","targets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","pipeline","shader","binding","error","error","factor","given","given","given","group","index","index","limit","limit","limit","location","offset","size","stage","stage","stride","strip_index_format","target","topology","bind","group","limit","AlreadyAcquired","ConfigureSurfaceError","Device","Device","Invalid","InvalidSurface","InvalidViewFormat","MissingDownlevelFlags","NotConfigured","PreviousOutputExists","StillReferenced","StuckGpu","SurfaceError","SurfaceOutput","TooLarge","UnsupportedAlphaMode","UnsupportedFormat","UnsupportedPresentMode","UnsupportedQueueFamily","UnsupportedUsage","ZeroArea","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","source","source","status","texture_id","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","available","available","available","height","max_texture_dimension_2d","requested","requested","requested","width","Registry","RegistryReport","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","components_into","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","element_size","eq","equivalent","equivalent","equivalent","fmt","fmt","force_replace","force_replace_with_error","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_empty","label_for_resource","null_value","num_allocated","num_error","num_kept_from_user","num_released_from_user","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","unregister_locked","upcast","upcast","vzip","vzip","Aborted","AccessError","AlreadyDestroyed","AlreadyMapped","AlreadyMapped","ArrayLayerCount","Aspects","Buffer","BufferAccessError","BufferAccessResult","BufferCopy","BufferDescriptor","BufferMapAsyncStatus","BufferMapCallback","BufferMapCallbackC","BufferMapOperation","ContextLost","CreateBufferError","CreateQuerySetError","CreateSamplerError","CreateTextureError","CreateTextureView","CreateTextureViewError","DestroyError","Destroyed","DestroyedBuffer","DestroyedTexture","Device","Device","Device","Device","Device","Dimension","Err","Error","Failed","FormatReinterpretation","HeightNotMultipleOf","Invalid","Invalid","Invalid","InvalidAlignment","InvalidAnisotropy","InvalidArrayLayerCount","InvalidAspect","InvalidCompressedDimension","InvalidCubeTextureViewSize","InvalidCubemapArrayTextureDepth","InvalidCubemapTextureDepth","InvalidDepthDimension","InvalidDimension","InvalidDimensionUsages","InvalidFilterModeWithAnisotropy","InvalidFormatUsages","InvalidLodMaxClamp","InvalidLodMinClamp","InvalidMipLevelCount","InvalidMultisampledFormat","InvalidMultisampledStorageBinding","InvalidMultisampledTextureViewDimension","InvalidRange","InvalidSampleCount","InvalidSampleCount","InvalidTexture","InvalidTextureViewDimension","InvalidUsage","InvalidUsage","InvalidUsageFlags","InvalidViewFormat","LimitExceeded","MagFilter","MapAborted","MapAlreadyPending","MapAlreadyPending","MaxBufferSize","MinFilter","MipLevelCount","MipmapFilter","MissingBufferUsage","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingFeatures","MultisampledDepthOrArrayLayer","MultisampledNotRenderAttachment","NegativeRange","None","NotMapped","NotMultipleOfBlockHeight","NotMultipleOfBlockWidth","Ok","OutOfBoundsOverrun","OutOfBoundsUnderrun","OutOfMemory","QuerySet","QuerySetDescriptor","RenderPass","Resource","ResourceInfo","Sampler","SamplerDescriptor","SamplerFilterErrorType","StagingBuffer","Success","Surface","TYPE","Texture","TextureClearMode","TextureDescriptor","TextureDimensionError","TextureErrorDimension","TextureView","TextureViewDescriptor","TextureViewDestroyError","TextureViewNotRenderableReason","TooManyArrayLayers","TooManyMipLevels","TooManyObjects","TooManyQueries","UnalignedOffset","UnalignedRange","UnalignedRangeSize","UnalignedSize","Usage","UsageMismatch","WidthNotMultipleOf","X","Y","Z","Zero","ZeroArrayLayerCount","ZeroCount","ZeroMipLevelCount","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address_modes","anisotropy_clamp","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_info","as_info","as_info","as_info","as_info","as_info","as_info","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","as_info_mut","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","count","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimension","dimension","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_c","from_rust","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","host","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_equal","is_unique","label","label","label","label","label","label","label","label","label","lod_max_clamp","lod_min_clamp","mag_filter","mapped_at_creation","min_filter","mip_level_count","mipmap_filter","null_value","range","ref_count","sample_count","size","size","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","usage","user_data","view_formats","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","end","index","index","max","min","offset","range_size","start","maximum","requested","count","maximum","anisotropic_clamp","filter_mode","filter_type","lod_max_clamp","lod_min_clamp","maximum","requested","depth","depth","dim","requested","requested","requested","requested_aspect","texture","texture","texture_format","total","total","view","view","clear_view","clear_views","is_color","block_height","block_width","dim","format","format","format","format","given","height","height","limit","multiple","multiple","width","width","Storage","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","components_into","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","index","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","BadStorageFormat","Binding","BindingError","BindingLayoutSource","Derived","Filtering","FilteringError","Float","InconsistentlyDerivedType","Input","InputError","InputNotConsumed","Integer","Interface","InterfaceVar","InterpolationMismatch","InvalidModule","InvalidWorkgroupSize","Invisible","Missing","Missing","MissingBufferUsageError","MissingEntryPoint","MissingTextureUsageError","NumericType","Provided","SamplingMismatch","StageError","StageIo","TooManyVaryings","UnsupportedTextureStorageAccess","WrongAddressSpace","WrongBufferSize","WrongSamplerComparison","WrongTextureClass","WrongTextureViewDimension","WrongType","WrongType","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_buffer_usage","check_stage","check_texture_format","check_texture_usage","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_uses_dual_source_blending","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","new_derived","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_attribute","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","binding","binding","binding","dim","is_array","shader","shader","current","current_total","error","error","limit","limit","location","location","sampler","texture","total","used","var","AABBs","ACCELERATION_STRUCTURE_SCRATCH","ALLOW_COMPACTION","ALLOW_UPDATE","AccelerationStructure","AccelerationStructureAABBs","AccelerationStructureBarrier","AccelerationStructureBuildFlags","AccelerationStructureBuildMode","AccelerationStructureBuildSizes","AccelerationStructureDescriptor","AccelerationStructureEntries","AccelerationStructureFormat","AccelerationStructureGeometryFlags","AccelerationStructureInstances","AccelerationStructureTriangleIndices","AccelerationStructureTriangleTransform","AccelerationStructureTriangles","AccelerationStructureUses","AcquiredSurfaceTexture","Adapter","Adapter","Alignments","Api","Attachment","AttachmentOps","BOTTOM_LEVEL_ACCELERATION_STRUCTURE_INPUT","BUILD_INPUT","BUILD_OUTPUT","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutFlags","BottomLevel","Buffer","BufferBarrier","BufferBinding","BufferCopy","BufferDescriptor","BufferMapping","BufferTextureCopy","BufferUses","Build","BuildAccelerationStructureDescriptor","COLOR","COLOR_ATTACHMENT","COLOR_ATTACHMENT_BLEND","COLOR_TARGET","COMPLEX","COPY_DST","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","COPY_SRC","Capabilities","ColorAttachment","CommandBuffer","CommandEncoder","CommandEncoder","CommandEncoderDescriptor","Compilation","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","CopyExtent","DEPTH","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_READ","DEPTH_STENCIL_WRITE","DebugSource","DepthStencilAttachment","Device","Device","Device","Device","Device","DeviceError","DropGuard","EXCLUSIVE","EXCLUSIVE","EntryPoint","ExposedAdapter","FIRST_VERTEX_INSTANCE","Fence","FenceValue","FormatAspects","GetAccelerationStructureBuildSizesDescriptor","INCLUSIVE","INCLUSIVE","INDEX","INDIRECT","Instance","Instance","InstanceDescriptor","InstanceError","Instances","LOAD","LOW_MEMORY","Label","Linkage","Lost","Lost","MAP_READ","MAP_WRITE","MAX_ANISOTROPY","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_CONCURRENT_SHADER_STAGES","MAX_MIP_LEVELS","MAX_VERTEX_BUFFERS","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MemoryFlags","MemoryRange","NO_DUPLICATE_ANY_HIT_INVOCATION","NUM_WORK_GROUPS","Naga","NagaShader","None","OPAQUE","ORDERED","ORDERED","OpenDevice","Other","OutOfMemory","Outdated","PARTIALLY_BOUND","PLANE_0","PLANE_1","PLANE_2","PREFER_COHERENT","PREFER_FAST_BUILD","PREFER_FAST_TRACE","PRESENT","PipelineError","PipelineLayout","PipelineLayoutDescriptor","PipelineLayoutFlags","ProgrammableStage","QUERY_RESOLVE","QUERY_SIZE","QuerySet","Queue","Queue","RESOURCE","Rect","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","ResourceCreationFailed","SAMPLED","SAMPLED_LINEAR","SAMPLED_MINMAX","SHADER_INPUT","STENCIL","STORAGE","STORAGE_ATOMIC","STORAGE_READ","STORAGE_READ","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORE","Sampler","SamplerDescriptor","ShaderError","ShaderInput","ShaderModule","ShaderModuleDescriptor","Some","SpirV","Surface","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceTexture","TOP_LEVEL_ACCELERATION_STRUCTURE_INPUT","TRANSIENT","Texture","TextureBarrier","TextureBinding","TextureCopy","TextureCopyBase","TextureDescriptor","TextureFormatCapabilities","TextureUses","TextureView","TextureViewDescriptor","TopLevel","Triangles","UNIFORM","UNINITIALIZED","UNKNOWN","Update","VALIDATION_CANARY","VERTEX","ValidationCanary","VertexBufferLayout","acceleration_structure_size","acceleration_structures","acquire_texture","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapter","address_modes","alignments","all","all","all","all","all","all","all","all","all","all","all","anisotropy_clamp","array_layer","array_layer_count","array_stride","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","aspect","at_mip_level","attributes","auxil","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bind_group_layouts","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer_copy_offset","buffer_copy_pitch","buffer_layout","buffers","build_acceleration_structures","build_scratch_size","capabilities","clamp_size_to_virtual","clamp_size_to_virtual","clear_buffer","clear_value","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_targets","compare","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","components_into","composite_alpha_mode","composite_alpha_modes","configure","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_extent","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","count","count","count","count","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","current_extent","debug_source","default","depth","depth_ops","depth_stencil","depth_stencil_attachment","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","destination_acceleration_structure","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_base","dst_offset","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","end","end_compute_pass","end_debug_marker","end_encoding","end_of_pass_write_index","end_of_pass_write_index","end_query","end_render_pass","entries","entries","entries","entries","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extent","extent","features","file_name","first_vertex","flags","flags","flags","flags","flags","flags","flags","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","format","formats","fragment_stage","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_and_reset","get_fence_value","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_presentation_timestamp","get_timestamp_period","gles","gles_minor_version","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","indices","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invalidate_mapped_ranges","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_coherent","is_cube_compatible","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_one","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","layout","layout","layout","limits","lod_clamp","mag_filter","map","map_buffer","map_extent_to_copy_size","max_copy_size","maximum_frame_latency","maximum_frame_latency","memory_flags","memory_flags","min","min_filter","mip_level","mip_level_count","mipmap_filter","mode","module","module","multisample","multiview","multiview","name","new","not","not","not","not","not","not","not","not","not","not","not","null_value","occlusion_query_set","offset","offset","offset","offset","offset","open","ops","origin","place_acceleration_structure_barrier","present","present_mode","present_modes","primitive","ptr","push_constant_ranges","query_set","query_set","queue","queue","range","range","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","reset_all","reset_queries","resolve_target","resource_index","runtime_checks","sample_count","sample_count","samplers","scratch_buffer","scratch_buffer_offset","set","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","size","size","size","size","size","size","size","source","source","source","source","source_acceleration_structure","source_code","src_base","src_offset","stage","start","start_capture","stencil_ops","step_mode","stop_capture","stride","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","surface_capabilities","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","target","texture","texture","texture_base","texture_format_capabilities","textures","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_smolstr","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","transform","transition_buffers","transition_textures","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unconfigure","union","union","union","union","union","union","union","union","union","union","union","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_scratch_size","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","vertex_buffer","vertex_buffers","vertex_count","vertex_format","vertex_stage","vertex_stride","view","view","view_formats","view_formats","vulkan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","wait","width","write_timestamp","x","y","MAX_I32_BINDING_SIZE","db","map_naga_stage","amd","apple","arm","broadcom","imgtec","intel","mesa","nvidia","qualcomm","VENDOR","VENDOR","VENDOR","VENDOR","VENDOR","DEVICE_KABY_LAKE_MASK","DEVICE_SKY_LAKE_MASK","VENDOR","VENDOR","VENDOR","VENDOR","Api","Context","Encoder","Resource","acquire_texture","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","clear_buffer","clone","clone_into","components_from","components_from","components_from","components_from","configure","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","enumerate_adapters","exit","flush_mapped_ranges","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_presentation_timestamp","get_surface","get_timestamp_period","hub","init","init","init","init","init","insert_debug_marker","instance_as_hal","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invalidate_mapped_ranges","map_buffer","open","place_acceleration_structure_barrier","present","reset_all","reset_queries","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","submit","surface_capabilities","texture_format_capabilities","to_owned","transition_buffers","transition_textures","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","unconfigure","unmap_buffer","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wait","write_timestamp","Adapter","AdapterContext","AdapterContextLock","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DefaultRenderbuffer","Device","Fence","PipelineLayout","QuerySet","Queue","RenderPipeline","Renderbuffer","Sampler","ShaderModule","Texture","Texture","TextureFormatDesc","TextureInner","TextureView","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapter_context","array_layer_count","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_acceleration_structures","clear_buffer","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","context","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_size","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_texture","create_texture_view","data_type","default","default_framebuffer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_texture","destroy_texture_view","discard_encoding","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_guard","egl_instance","egl_version","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","exit","external","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_desc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_presentation_timestamp","get_surface","get_timestamp_period","get_without_egl_lock","hub","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert_debug_marker","instance_as_hal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invalidate_mapped_ranges","is_owned","lock","map_buffer","mip_level_count","new_external","null_value","open","place_acceleration_structure_barrier","present","raw_context","raw_display","reset_all","reset_queries","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","submit","surface_capabilities","texture_format_capabilities","texture_from_raw","texture_from_raw_renderbuffer","to_owned","to_owned","to_owned","to_owned","to_owned","transition_buffers","transition_textures","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","write_timestamp","raw","raw","target","AccelerationStructure","Adapter","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","DebugUtilsCreateInfo","DebugUtilsMessengerUserData","Device","EMPTY_RESOLVE_ATTACHMENT_LISTS","FORCE_FILL_BUFFER_WITH_SIZE_GREATER_4096_ALIGNED_OFFSET_16","Fence","FencePool","Instance","InstanceShared","Intermediate","PipelineLayout","QuerySet","Queue","Raw","RenderPipeline","SEPARATE_ENTRY_POINTS","Sampler","ShaderModule","Surface","SurfaceTexture","Texture","TextureView","TimelineSemaphore","Workarounds","acquire_texture","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_from_raw","build_acceleration_structures","clear_buffer","clone","clone","clone_into","clone_into","complement","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","configure","contains","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_acceleration_structure","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_instance_from_hal","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desired_extensions","destroy_acceleration_structure","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device_from_raw","difference","discard_encoding","discard_texture","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","enabled_device_extensions","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","entry","enumerate_adapters","eq","equivalent","equivalent","equivalent","exit","expose_adapter","extend","extensions","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_raw","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_acceleration_structure_build_sizes","get_acceleration_structure_device_address","get_fence_value","get_hash","get_presentation_timestamp","get_surface","get_timestamp_period","hash","hub","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert_debug_marker","instance_api_version","instance_as_hal","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invalidate_mapped_ranges","is_all","is_empty","iter","iter_names","map_buffer","not","open","physical_device_capabilities","physical_device_features","place_acceleration_structure_barrier","present","queue_family_index","queue_index","raw_device","raw_handle","raw_instance","raw_physical_device","raw_physical_device","raw_queue","remove","required_device_extensions","reset_all","reset_queries","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","shared_instance","shared_instance","shared_instance","start_capture","stop_capture","sub","sub_assign","submit","surface_capabilities","symmetric_difference","texture_format_capabilities","texture_from_raw","to_owned","to_owned","toggle","transition_buffers","transition_textures","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unconfigure","union","unmap_buffer","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","write_timestamp","active","free","last_completed","naga_shader","runtime_checks","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","NotSupported","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Unavailable","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebCanvas","WebCanvasWindowHandle","WebDisplayHandle","WebOffscreenCanvas","WebOffscreenCanvasWindowHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","android","appkit","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw","as_raw","as_ref","as_ref","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","connection","core_window","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","display","display","display_handle","display_handle","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gbm_device","gbm_surface","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","haiku","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","ns_view","obj","obj","orbital","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","surface","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","uikit","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visual_id","visual_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","web","window","window","window","window_handle","window_handle","windows","BufferInitDescriptor","DeviceExt","DispatchIndirectArgs","DownloadBuffer","DrawIndexedIndirectArgs","DrawIndirectArgs","LayerMajor","MipMajor","RenderEncoder","StagingBelt","TextureDataOrder","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","align_to","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","as_bytes","backend_bits_from_env","base_vertex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contents","create_buffer_init","create_texture_with_data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","drop","drop","drop","drop","drop","drop","drop","dx12_shader_compiler_from_env","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","first_index","first_instance","first_instance","first_vertex","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","gles_minor_version_from_env","hash","hash","index_count","init","init","init","init","init","init","init","initialize_adapter_from_env","initialize_adapter_from_env_or_default","instance_count","instance_count","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","label","make_spirv_raw","new","null_value","null_value","null_value","null_value","parse_backends_from_comma_list","power_preference_from_env","read_buffer","recall","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","vertex_count","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_buffer","x","y","z","Active","Catalog","Circle","Class","Dragged","Handle","HandleShape","Hovered","Rail","Rectangle","Slider","Status","Style","StyleFn","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","border_color","border_radius","border_width","borrow","borrow_mut","clone","clone_into","color","colors","components_from","default","default","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","handle","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","rail","shape","style","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","width","border_radius","radius","width","Catalog","Class","Handle","Hovered","Idle","Status","Style","StyleFn","Svg","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","data","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_memory","from_path","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","id","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","null_value","style","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","Absolute","Advanced","Basic","Borrowed","Catalog","Class","Fragment","IntoFragment","LineHeight","Owned","Relative","Shaping","State","Style","StyleFn","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_fragment","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","null_value","null_value","null_value","null_value","style","to_absolute","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Action","Active","Backspace","Catalog","Class","Click","Content","Delete","Disabled","DocumentEnd","DocumentStart","Down","Drag","Edit","Edit","End","Enter","Focused","Home","Hovered","Insert","Left","Motion","Move","PageDown","PageUp","Paste","Right","Scroll","Select","SelectLine","SelectWord","State","Status","Style","StyleFn","TextEditor","Up","WordLeft","WordRight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","cursor_position","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direction","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","icon","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edit","is_focused","line","line_count","lines","new","null_value","perform","placeholder","selection","selection","style","text","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widen","with_text","lines","Active","Catalog","Class","Cursor","DEFAULT_PADDING","Disabled","Focused","Hovered","Icon","Id","Left","Right","Side","State","Status","Style","StyleFn","TextInput","Value","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","cursor","cursor","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus","focused","font","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","icon","init","init","init","init","init","init","init","init","insert","insert_many","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_focused","is_focused","len","move_cursor_to","move_cursor_to","move_cursor_to","move_cursor_to_end","move_cursor_to_end","move_cursor_to_end","move_cursor_to_front","move_cursor_to_front","move_cursor_to_front","new","new","new","next_end_of_word","null_value","null_value","placeholder","previous_start_of_word","remove","remove_many","secure","select","select_all","select_all","select_all","selection","selection","side","size","spacing","state","style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unfocus","unfocus","unique","until","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Cursor","Index","Selection","State","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","end","start","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Custom","Custom","Dark","Dracula","Ferra","GruvboxDark","GruvboxLight","KanagawaDragon","KanagawaLotus","KanagawaWave","Light","Moonfly","Nightfly","Nord","Oxocarbon","Palette","SolarizedDark","SolarizedLight","Theme","TokyoNight","TokyoNightLight","TokyoNightStorm","background","danger","palette","primary","success","text","Background","Danger","EXTENDED_CATPPUCCIN_FRAPPE","EXTENDED_CATPPUCCIN_LATTE","EXTENDED_CATPPUCCIN_MACCHIATO","EXTENDED_CATPPUCCIN_MOCHA","EXTENDED_DARK","EXTENDED_DRACULA","EXTENDED_FERRA","EXTENDED_GRUVBOX_DARK","EXTENDED_GRUVBOX_LIGHT","EXTENDED_KANAGAWA_DRAGON","EXTENDED_KANAGAWA_LOTUS","EXTENDED_KANAGAWA_WAVE","EXTENDED_LIGHT","EXTENDED_MOONFLY","EXTENDED_NIGHTFLY","EXTENDED_NORD","EXTENDED_OXOCARBON","EXTENDED_SOLARIZED_DARK","EXTENDED_SOLARIZED_LIGHT","EXTENDED_TOKYO_NIGHT","EXTENDED_TOKYO_NIGHT_LIGHT","EXTENDED_TOKYO_NIGHT_STORM","Extended","Pair","Palette","Primary","Secondary","Success","background","background","base","base","base","base","base","color","danger","danger","is_dark","primary","primary","secondary","strong","strong","strong","strong","strong","success","success","text","text","weak","weak","weak","weak","weak","Active","Catalog","Class","Hovered","Status","Style","StyleFn","Toggler","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","background_border_color","background_border_width","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","foreground","foreground_border_color","foreground_border_width","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","style","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","is_toggled","is_toggled","Bottom","FollowCursor","Left","Position","Right","Tooltip","Top","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","null_value","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Active","Catalog","Circle","Class","Dragged","Handle","HandleShape","Hovered","Rectangle","Status","Style","StyleFn","VerticalSlider","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","border_color","border_width","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","handle","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","rail","shape","style","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_circular_handle","border_radius","radius","width","Action","AlwaysOnBottom","AlwaysOnTop","At","Centered","ChangeIcon","ChangeLevel","ChangeMode","Close","CloseRequested","Closed","Critical","Default","Drag","Event","FetchId","FetchMaximized","FetchMinimized","FetchMode","FetchPosition","FetchSize","FileDropped","FileHovered","FilesHoveredLeft","Focused","Fullscreen","GainFocus","Hidden","Icon","Icon","Id","Informational","Level","MAIN","Maximize","Minimize","Mode","Move","Moved","NextFrame","Normal","Opened","Position","RedrawRequest","RedrawRequested","RequestUserAttention","Resize","Resized","RunWithHandle","Screenshot","Screenshot","Settings","ShowSystemMenu","Spawn","Specific","ToggleDecorations","ToggleMaximize","Unfocused","UserAttention","Windowed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","change_icon","change_level","change_mode","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","compare","compare","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","crop","decorations","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit_on_close_request","fetch_id","fetch_maximized","fetch_minimized","fetch_mode","fetch_position","fetch_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gain_focus","get_hash","hash","icon","icon","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_raw","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","level","map","max_size","maximize","min_size","minimize","move_to","new","null_value","null_value","null_value","partial_cmp","partial_cmp","platform_specific","position","request_user_attention","resizable","resize","run_with_handle","screenshot","screenshot","settings","show_system_menu","size","size","spawn","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle_decorations","toggle_maximize","transparent","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unique","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visible","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","height","position","size","width","x","y","Error","Icon","ImageError","InvalidError","OsError","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","deref","deref_mut","downcast","drop","fmt","fmt","from","from","from","from","from_angle","from_file","from_file_data","from_rgba","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","source","to_smolstr","to_string","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","NotSupported","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Unavailable","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebCanvas","WebCanvasWindowHandle","WebDisplayHandle","WebOffscreenCanvas","WebOffscreenCanvasWindowHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","b_direct_window","b_window","connection","core_window","display","display","display_handle","fd","gbm_device","gbm_surface","hinstance","hwnd","id","ns_view","obj","obj","plane","raw_display_handle","raw_window_handle","screen","screen","surface","ui_view","ui_view_controller","visual_id","visual_id","window","window","window","window_handle","CropError","OutOfBounds","Screenshot","Zero","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","bytes","components_from","deref","deref_mut","downcast","drop","fmt","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","size","to_smolstr","to_string","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","PlatformSpecific","Settings","adapt_into_using","application_id","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","decorations","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","exit_on_close_request","fmt","from","from_angle","from_stimulus","icon","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","level","max_size","min_size","null_value","platform_specific","position","resizable","size","to_owned","transparent","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","visible","vzip"],"q":[[0,"iced"],[1249,"iced::advanced"],[1449,"iced::advanced::clipboard"],[1536,"iced::advanced::image"],[1640,"iced::advanced::image::Data"],[1643,"iced::advanced::layout"],[1754,"iced::advanced::layout::flex"],[1792,"iced::advanced::mouse"],[1867,"iced::advanced::mouse::Event"],[1869,"iced::advanced::mouse::ScrollDelta"],[1873,"iced::advanced::mouse::click"],[1915,"iced::advanced::overlay"],[2013,"iced::advanced::renderer"],[2109,"iced::advanced::subscription"],[2115,"iced::advanced::svg"],[2165,"iced::advanced::text"],[2315,"iced::advanced::text::editor"],[2440,"iced::advanced::text::editor::Action"],[2441,"iced::advanced::text::highlighter"],[2536,"iced::advanced::widget"],[2703,"iced::advanced::widget::operation"],[2764,"iced::advanced::widget::operation::focusable"],[2819,"iced::advanced::widget::operation::scrollable"],[2830,"iced::advanced::widget::operation::text_input"],[2839,"iced::advanced::widget::text"],[2861,"iced::advanced::widget::tree"],[2954,"iced::alignment"],[3052,"iced::border"],[3102,"iced::clipboard"],[3106,"iced::command"],[3108,"iced::event"],[3206,"iced::executor"],[3211,"iced::font"],[3470,"iced::gradient"],[3560,"iced::keyboard"],[3804,"iced::keyboard::Event"],[3811,"iced::keyboard::key"],[4168,"iced::mouse"],[4411,"iced::mouse::Event"],[4413,"iced::mouse::ScrollDelta"],[4417,"iced::multi_window"],[4474,"iced::overlay"],[4476,"iced::overlay::menu"],[4491,"iced::program"],[4566,"iced::settings"],[4614,"iced::subscription"],[4619,"iced::system"],[4668,"iced::theme"],[4803,"iced::theme::palette"],[5134,"iced::time"],[5320,"iced::touch"],[5407,"iced::touch::Event"],[5415,"iced::widget"],[6963,"iced::widget::button"],[7066,"iced::widget::canvas"],[7525,"iced::widget::canvas::event"],[7574,"iced::widget::canvas::fill"],[7624,"iced::widget::canvas::gradient"],[7713,"iced::widget::canvas::path"],[7805,"iced::widget::canvas::path::arc"],[7854,"iced::widget::canvas::path::lyon_path"],[8769,"iced::widget::canvas::path::lyon_path::Event"],[8782,"iced::widget::canvas::path::lyon_path::IdEvent"],[8795,"iced::widget::canvas::path::lyon_path::PathEvent"],[8808,"iced::widget::canvas::path::lyon_path::builder"],[9138,"iced::widget::canvas::path::lyon_path::commands"],[9347,"iced::widget::canvas::path::lyon_path::geom"],[10139,"iced::widget::canvas::path::lyon_path::geom::arc"],[10190,"iced::widget::canvas::path::lyon_path::geom::arrayvec"],[10583,"iced::widget::canvas::path::lyon_path::geom::cubic_bezier"],[10626,"iced::widget::canvas::path::lyon_path::geom::euclid"],[12636,"iced::widget::canvas::path::lyon_path::geom::euclid::approxeq"],[12640,"iced::widget::canvas::path::lyon_path::geom::euclid::approxord"],[12642,"iced::widget::canvas::path::lyon_path::geom::euclid::default"],[12725,"iced::widget::canvas::path::lyon_path::geom::euclid::num"],[12735,"iced::widget::canvas::path::lyon_path::geom::quadratic_bezier"],[12848,"iced::widget::canvas::path::lyon_path::geom::traits"],[12868,"iced::widget::canvas::path::lyon_path::geom::utils"],[12874,"iced::widget::canvas::path::lyon_path::iterator"],[13028,"iced::widget::canvas::path::lyon_path::math"],[13058,"iced::widget::canvas::path::lyon_path::path"],[13322,"iced::widget::canvas::path::lyon_path::path_buffer"],[13465,"iced::widget::canvas::path::lyon_path::polygon"],[13629,"iced::widget::canvas::path::lyon_path::traits"],[13678,"iced::widget::canvas::stroke"],[13698,"iced::widget::checkbox"],[13839,"iced::widget::checkbox::Status"],[13842,"iced::widget::combo_box"],[13885,"iced::widget::container"],[13992,"iced::widget::image"],[14144,"iced::widget::image::viewer"],[14188,"iced::widget::keyed"],[14248,"iced::widget::keyed::column"],[14249,"iced::widget::overlay"],[14250,"iced::widget::overlay::menu"],[14378,"iced::widget::pane_grid"],[15170,"iced::widget::pane_grid::Configuration"],[15174,"iced::widget::pane_grid::DragEvent"],[15178,"iced::widget::pane_grid::Node"],[15183,"iced::widget::pane_grid::state"],[15270,"iced::widget::pane_grid::state::Action"],[15274,"iced::widget::pick_list"],[15459,"iced::widget::pick_list::Handle"],[15462,"iced::widget::progress_bar"],[15513,"iced::widget::qr_code"],[15739,"iced::widget::radio"],[15833,"iced::widget::radio::Status"],[15835,"iced::widget::rule"],[15927,"iced::widget::scrollable"],[16419,"iced::widget::scrollable::Direction"],[16421,"iced::widget::scrollable::Status"],[16425,"iced::widget::shader"],[16563,"iced::widget::shader::wgpu"],[23945,"iced::widget::shader::wgpu::BindingType"],[23954,"iced::widget::shader::wgpu::BufferBindingType"],[23955,"iced::widget::shader::wgpu::Dx12Compiler"],[23957,"iced::widget::shader::wgpu::Error"],[23960,"iced::widget::shader::wgpu::SurfaceTargetUnsafe"],[23962,"iced::widget::shader::wgpu::TextureFormat"],[23964,"iced::widget::shader::wgpu::TextureSampleType"],[23965,"iced::widget::shader::wgpu::core"],[24002,"iced::widget::shader::wgpu::core::any_surface"],[24041,"iced::widget::shader::wgpu::core::api"],[24044,"iced::widget::shader::wgpu::core::binding_model"],[25002,"iced::widget::shader::wgpu::core::binding_model::BindError"],[25018,"iced::widget::shader::wgpu::core::binding_model::CreateBindGroupError"],[25056,"iced::widget::shader::wgpu::core::binding_model::CreateBindGroupLayoutError"],[25060,"iced::widget::shader::wgpu::core::binding_model::CreatePipelineLayoutError"],[25070,"iced::widget::shader::wgpu::core::binding_model::PushConstantUploadError"],[25082,"iced::widget::shader::wgpu::core::command"],[27118,"iced::widget::shader::wgpu::core::command::AttachmentErrorLocation"],[27120,"iced::widget::shader::wgpu::core::command::ClearError"],[27133,"iced::widget::shader::wgpu::core::command::ColorAttachmentError"],[27135,"iced::widget::shader::wgpu::core::command::ComputePassErrorInner"],[27140,"iced::widget::shader::wgpu::core::command::DispatchError"],[27144,"iced::widget::shader::wgpu::core::command::DrawError"],[27157,"iced::widget::shader::wgpu::core::command::PassErrorScope"],[27162,"iced::widget::shader::wgpu::core::command::QueryUseError"],[27169,"iced::widget::shader::wgpu::core::command::RenderCommandError"],[27175,"iced::widget::shader::wgpu::core::command::RenderPassErrorInner"],[27204,"iced::widget::shader::wgpu::core::command::ResolveError"],[27213,"iced::widget::shader::wgpu::core::command::TransferError"],[27235,"iced::widget::shader::wgpu::core::command::bundle_ffi"],[27247,"iced::widget::shader::wgpu::core::command::compute_ffi"],[27258,"iced::widget::shader::wgpu::core::command::render_ffi"],[27284,"iced::widget::shader::wgpu::core::device"],[27935,"iced::widget::shader::wgpu::core::device::RenderPassCompatibilityError"],[27948,"iced::widget::shader::wgpu::core::device::any_device"],[27986,"iced::widget::shader::wgpu::core::device::queue"],[28319,"iced::widget::shader::wgpu::core::device::resource"],[28365,"iced::widget::shader::wgpu::core::error"],[28461,"iced::widget::shader::wgpu::core::global"],[28662,"iced::widget::shader::wgpu::core::hal_api"],[28668,"iced::widget::shader::wgpu::core::hub"],[28811,"iced::widget::shader::wgpu::core::id"],[28891,"iced::widget::shader::wgpu::core::identity"],[28975,"iced::widget::shader::wgpu::core::instance"],[29434,"iced::widget::shader::wgpu::core::naga"],[32449,"iced::widget::shader::wgpu::core::naga::AddressSpace"],[32450,"iced::widget::shader::wgpu::core::naga::AtomicFunction"],[32451,"iced::widget::shader::wgpu::core::naga::Binding"],[32455,"iced::widget::shader::wgpu::core::naga::BuiltIn"],[32456,"iced::widget::shader::wgpu::core::naga::Expression"],[32509,"iced::widget::shader::wgpu::core::naga::ImageClass"],[32514,"iced::widget::shader::wgpu::core::naga::ImageQuery"],[32515,"iced::widget::shader::wgpu::core::naga::PredeclaredType"],[32519,"iced::widget::shader::wgpu::core::naga::RayQueryFunction"],[32522,"iced::widget::shader::wgpu::core::naga::SampleLevel"],[32524,"iced::widget::shader::wgpu::core::naga::Statement"],[32550,"iced::widget::shader::wgpu::core::naga::TypeInner"],[32571,"iced::widget::shader::wgpu::core::naga::back"],[32669,"iced::widget::shader::wgpu::core::naga::back::glsl"],[33244,"iced::widget::shader::wgpu::core::naga::back::glsl::Version"],[33246,"iced::widget::shader::wgpu::core::naga::back::hlsl"],[33557,"iced::widget::shader::wgpu::core::naga::back::msl"],[33984,"iced::widget::shader::wgpu::core::naga::back::msl::sampler"],[34294,"iced::widget::shader::wgpu::core::naga::back::spv"],[35080,"iced::widget::shader::wgpu::core::naga::compact"],[35081,"iced::widget::shader::wgpu::core::naga::front"],[35168,"iced::widget::shader::wgpu::core::naga::front::wgsl"],[35254,"iced::widget::shader::wgpu::core::naga::keywords"],[35255,"iced::widget::shader::wgpu::core::naga::keywords::wgsl"],[35256,"iced::widget::shader::wgpu::core::naga::proc"],[36151,"iced::widget::shader::wgpu::core::naga::proc::ConstantEvaluatorError"],[36156,"iced::widget::shader::wgpu::core::naga::proc::ResolveError"],[36163,"iced::widget::shader::wgpu::core::naga::proc::index"],[36221,"iced::widget::shader::wgpu::core::naga::valid"],[37736,"iced::widget::shader::wgpu::core::naga::valid::CallError"],[37743,"iced::widget::shader::wgpu::core::naga::valid::ComposeError"],[37746,"iced::widget::shader::wgpu::core::naga::valid::Disalignment"],[37757,"iced::widget::shader::wgpu::core::naga::valid::EntryPointError"],[37759,"iced::widget::shader::wgpu::core::naga::valid::ExpressionError"],[37762,"iced::widget::shader::wgpu::core::naga::valid::FunctionError"],[37777,"iced::widget::shader::wgpu::core::naga::valid::GlobalVariableError"],[37779,"iced::widget::shader::wgpu::core::naga::valid::TypeError"],[37792,"iced::widget::shader::wgpu::core::naga::valid::ValidationError"],[37809,"iced::widget::shader::wgpu::core::naga::valid::VaryingError"],[37812,"iced::widget::shader::wgpu::core::pipeline"],[38745,"iced::widget::shader::wgpu::core::pipeline::ColorStateError"],[38747,"iced::widget::shader::wgpu::core::pipeline::CreateRenderPipelineError"],[38769,"iced::widget::shader::wgpu::core::pipeline::CreateShaderModuleError"],[38772,"iced::widget::shader::wgpu::core::present"],[38915,"iced::widget::shader::wgpu::core::present::ConfigureSurfaceError"],[38924,"iced::widget::shader::wgpu::core::registry"],[39014,"iced::widget::shader::wgpu::core::resource"],[40269,"iced::widget::shader::wgpu::core::resource::BufferAccessError"],[40277,"iced::widget::shader::wgpu::core::resource::CreateBufferError"],[40279,"iced::widget::shader::wgpu::core::resource::CreateQuerySetError"],[40281,"iced::widget::shader::wgpu::core::resource::CreateSamplerError"],[40286,"iced::widget::shader::wgpu::core::resource::CreateTextureError"],[40288,"iced::widget::shader::wgpu::core::resource::CreateTextureViewError"],[40302,"iced::widget::shader::wgpu::core::resource::TextureClearMode"],[40305,"iced::widget::shader::wgpu::core::resource::TextureDimensionError"],[40320,"iced::widget::shader::wgpu::core::storage"],[40357,"iced::widget::shader::wgpu::core::validation"],[40792,"iced::widget::shader::wgpu::core::validation::BindingError"],[40799,"iced::widget::shader::wgpu::core::validation::StageError"],[40812,"iced::widget::shader::wgpu::hal"],[44599,"iced::widget::shader::wgpu::hal::auxil"],[44602,"iced::widget::shader::wgpu::hal::auxil::db"],[44611,"iced::widget::shader::wgpu::hal::auxil::db::amd"],[44612,"iced::widget::shader::wgpu::hal::auxil::db::apple"],[44613,"iced::widget::shader::wgpu::hal::auxil::db::arm"],[44614,"iced::widget::shader::wgpu::hal::auxil::db::broadcom"],[44615,"iced::widget::shader::wgpu::hal::auxil::db::imgtec"],[44616,"iced::widget::shader::wgpu::hal::auxil::db::intel"],[44619,"iced::widget::shader::wgpu::hal::auxil::db::mesa"],[44620,"iced::widget::shader::wgpu::hal::auxil::db::nvidia"],[44621,"iced::widget::shader::wgpu::hal::auxil::db::qualcomm"],[44622,"iced::widget::shader::wgpu::hal::empty"],[44865,"iced::widget::shader::wgpu::hal::gles"],[45768,"iced::widget::shader::wgpu::hal::gles::TextureInner"],[45771,"iced::widget::shader::wgpu::hal::vulkan"],[46860,"iced::widget::shader::wgpu::hal::vulkan::Fence"],[46863,"iced::widget::shader::wgpu::hal::vulkan::ShaderModule"],[46865,"iced::widget::shader::wgpu::rwh"],[48391,"iced::widget::shader::wgpu::util"],[48718,"iced::widget::slider"],[48781,"iced::widget::slider::HandleShape"],[48784,"iced::widget::svg"],[48925,"iced::widget::text"],[49112,"iced::widget::text_editor"],[49434,"iced::widget::text_editor::Action"],[49435,"iced::widget::text_input"],[49820,"iced::widget::text_input::cursor"],[49861,"iced::widget::text_input::cursor::State"],[49863,"iced::widget::theme"],[49895,"iced::widget::theme::palette"],[49953,"iced::widget::toggler"],[50048,"iced::widget::toggler::Status"],[50050,"iced::widget::tooltip"],[50100,"iced::widget::vertical_slider"],[50275,"iced::widget::vertical_slider::HandleShape"],[50278,"iced::window"],[50822,"iced::window::Event"],[50828,"iced::window::icon"],[50877,"iced::window::raw_window_handle"],[50973,"iced::window::screenshot"],[51016,"iced::window::settings"],[51074,"iced_runtime::command::action"],[51075,"alloc::vec"],[51076,"palette::chromatic_adaptation"],[51077,"core::ops::arith"],[51078,"core::any"],[51079,"core::iter::traits::collect"],[51080,"core::clone"],[51081,"alloc::string"],[51082,"core::ops::function"],[51083,"core::ops::function"],[51084,"core::default"],[51085,"num_traits::float"],[51086,"num_traits"],[51087,"core::cmp"],[51088,"core::convert"],[51089,"core::fmt"],[51090,"core::fmt"],[51091,"core::fmt"],[51092,"palette::rgb::rgb"],[51093,"palette::alpha::alpha"],[51094,"core::option"],[51095,"core::hash"],[51096,"core::marker"],[51097,"core::hash"],[51098,"alloc::rc"],[51099,"iced_futures::maybe::platform"],[51100,"core::marker"],[51101,"core::cmp"],[51102,"core::marker"],[51103,"core::ops::arith"],[51104,"palette::convert::try_from_into_color"],[51105,"core::any"],[51106,"iced_graphics::compositor"],[51107,"core::iter::traits::collect"],[51108,"rustc_hash"],[51109,"core::pin"],[51110,"core::ops::range"],[51111,"core::iter::traits::iterator"],[51112,"core::ops::function"],[51113,"alloc::borrow"],[51114,"futures_channel::mpsc"],[51115,"core::cmp"],[51116,"bitflags::iter"],[51117,"serde::de"],[51118,"zvariant::error"],[51119,"zvariant::signature"],[51120,"core::convert"],[51121,"tokio::time::instant"],[51122,"nix::sys::time"],[51123,"image::animation"],[51124,"serde::ser"],[51125,"time::error::conversion_range"],[51126,"core::time"],[51127,"iced_graphics::geometry"],[51128,"alloc::string"],[51129,"iced_wgpu::primitive"],[51130,"iced_wgpu"],[51131,"iced_tiny_skia"],[51132,"iced_renderer::fallback"],[51133,"std::path"],[51134,"core::ops::range"],[51135,"num_traits::float"],[51136,"core::ops::arith"],[51137,"core::fmt"],[51138,"num_traits::sign"],[51139,"num_traits::ops::euclid"],[51140,"num_traits::ops::saturating"],[51141,"rayon::iter::par_bridge"],[51142,"alloc::collections::btree::map"],[51143,"core::hash"],[51144,"qrcode::types"],[51145,"wgpu_types"],[51146,"wgpu_types"],[51147,"core::num::nonzero"],[51148,"wgpu_core::track"],[51149,"wgpu_core::command::draw"],[51150,"wgpu_core::command"],[51151,"core::fmt"],[51152,"naga::arena"],[51153,"naga::arena"],[51154,"core::iter::traits::exact_size"],[51155,"indexmap::set"],[51156,"bit_set"],[51157,"naga::valid::type"],[51158,"naga::valid::function"],[51159,"naga::valid::handles"],[51160,"naga::valid::handles"],[51161,"gpu_alloc::error"],[51162,"gpu_descriptor::allocator"],[51163,"ash::vk::enums"],[51164,"gpu_alloc::error"],[51165,"khronos_egl"],[51166,"khronos_egl"],[51167,"glow::native"],[51168,"lock_api::mutex"],[51169,"core::ffi"],[51170,"wgpu_hal::gles::egl"],[51171,"khronos_egl::egl1_0"],[51172,"core::num::nonzero"],[51173,"ash::entry"],[51174,"core::ffi::c_str"],[51175,"ash::device"],[51176,"ash::vk::definitions"],[51177,"wgpu_hal::vulkan::adapter"],[51178,"wgpu_hal::vulkan::adapter"],[51179,"core::num::nonzero"],[51180,"image::error"],[51181,"iced_core::window::icon"],[51182,"image::image"]],"d":["A list with all the defined themes.","Alignment on the axis of a container.","The black color.","The background of some element.","A border.","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","Align at the center of the axis.","A color in the <code>sRGB</code> color space.","A solid color.","A set of asynchronous actions to be performed by some …","Scale as big as it can be without needing to crop or hide …","The strategy used to fit the contents of a widget to its …","Scale the image to cover all of the bounding box, cropping …","A <code>Theme</code> that uses a <code>Custom</code> palette.","A non-monospaced sans-serif font with normal <code>Weight</code>.","The built-in dark variant.","Degrees","The built-in Dracula variant.","A generic widget.","Align at the end of the axis.","Contains the error value","An error that occurred while running an application.","A user interface event.","A type that can run futures.","The futures executor could not be created.","The built-in Ferra variant:","Distort the image so the widget is 100% covered without …","Fill all the remaining space","Fill a portion of the remaining space relative to other …","Fill a fixed amount of space","A font.","A fill which transitions colors progressively along a …","Linearly interpolate between several colors.","The application graphics context could not be created.","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","A <code>Transformation</code> that preserves whatever is transformed.","A rectangle starting at <code>Point::ORIGIN</code> with infinite width …","A <code>Size</code> with infinite width and height.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","A keyboard event","The strategy used to fill space in a specific dimension.","The built-in light variant.","A linear gradient interpolates colors along a direction at …","A monospaced font with normal <code>Weight</code>.","The built-in Moonfly variant.","A mouse event","The built-in Nightfly variant.","Don’t resize or scale the image at all.","The built-in Nord variant.","The origin (i.e. a <code>Point</code> at (0, 0)).","Contains the success value","The built-in Oxocarbon variant.","The amount of radians in half a circle.","An amount of space to pad for each side of a box","An amount of logical pixels.","A platform specific event","A 2D point.","The primary rendering option.","","The range of radians of a circle.","Radians","A rectangle.","The default graphics renderer for <code>iced</code>.","The result of running a <code>Program</code>.","Scale the image down if it’s too big for the space, but …","The secondary (or fallback) rendering option.","","A shadow.","Fill the least amount of space","An amount of space in 2 dimensions.","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","Align at the start of the axis.","A request to listen to external events.","A color with no opacity.","A built-in theme.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","A touch event","A 2D transformation matrix.","A <code>Size</code> with a width and height of 1 unit.","A 2D vector.","The white color.","A window event","The application window could not be created.","Padding of zero","A <code>Size</code> with zero width and height.","The zero <code>Vector</code>.","Transparency, 0.0 - 1.0","Returns all of the actions of the <code>Command</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Leverage advanced concepts like custom widgets.","Align and position widgets.","Returns the area of the <code>Rectangle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blue component, 0.0 - 1.0","Creates a <code>Command</code> that performs the actions of all the …","Batches all the provided subscriptions and returns the …","The blur radius of the shadow.","Draw lines around containers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bottom padding","Returns the <code>Point</code> at the center of the <code>Rectangle</code>.","Returns the X coordinate of the <code>Point</code> at the center of the …","Returns the Y coordinate of the <code>Point</code> at the center of the …","Access the clipboard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color of the border.","The color of the shadow.","Creates a <code>Color</code> with shorter and cleaner syntax.","Run asynchronous actions.","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the given <code>Point</code> is contained in the …","Creates a new custom <code>Theme</code> from the given <code>Palette</code>.","Creates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the distance to another <code>Point</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapts the <code>Length</code> so it can contain the other <code>Length</code> and …","Runs the given closure inside the <code>Executor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle events of a user interface.","Choose your preferred executor to power your application.","Expands the <code>Rectangle</code> a given amount.","Expands this <code>Size</code> by the given amount.","Returns the <code>palette::Extended</code> of the <code>Theme</code>.","The <code>Family</code> of the <code>Font</code>.","Returns the <em>fill factor</em> of the <code>Length</code>.","Attempt to apply the given fit for a content size within …","Fits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.","Returns the “fluid” variant of the <code>Length</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Load and use fonts.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Color</code> from its linear RGBA components.","Creates a <code>Subscription</code> from a <code>Recipe</code> describing it.","Creates a <code>Color</code> from its RGB components.","Creates a <code>Color</code> from its RGB8 components.","Creates a <code>Color</code> from its RGBA components.","Creates a <code>Color</code> from its RGB8 components and an alpha …","","","","","","","","","","","","","","","","","","","","","","","","","","Green component, 0.0 - 1.0","","","","","Colors that transition progressively.","","","","","Height of the rectangle.","The height.","","Returns the total amount of horizontal <code>Padding</code>.","","","","","","","","","","","","","","","","","","","","","","","","Computes the intersection with the given <code>Rectangle</code>.","Returns whether the <code>Rectangle</code> intersects with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the <code>Color</code> into its linear values.","Returns the different recipes of the <code>Subscription</code>.","Converts the <code>Color</code> into its RGBA8 equivalent.","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverted <code>Color</code>.","Inverts the <code>Color</code> in-place.","Returns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or","Returns true if the current <code>Rectangle</code> is completely within …","Listen and react to keyboard events.","Left padding","Applies a transformation to the result of a <code>Command</code>.","Transforms the <code>Subscription</code> output with the given function.","Returns the maximum of each component of this size and …","Returns the minimum of each component of this size and …","Listen and react to mouse events.","","","","","","","","","","","","Leverage multi-window support in your application.","Creates a new <code>Executor</code>.","Creates a new <code>Color</code>.","Create a Padding that is equal on all sides","Creates a new <code>Point</code> with the given coordinates.","Creates a new <code>Rectangle</code> with its top-left corner in the …","Creates a new  <code>Size</code> with the given width and height.","Creates a new <code>Vector</code> with the given components.","Creates an empty <code>Command</code>.","Returns an empty <code>Subscription</code> that will not produce any …","","","","","","","","","","","The offset of the shadow.","Creates an orthographic projection.","Display interactive elements on top of other widgets.","Returns the <code>Palette</code> of the <code>Theme</code>.","","","","","","Creates a <code>Command</code> that performs the action of the given …","Returns the position of the top left corner of the …","Create and run iced applications step by step.","Creates an iced <code>Program</code> given its title, update, and view …","Red component, 0.0 - 1.0","The radius of the border.","Right padding","Creates a new default rounded <code>Border</code> with the given <code>Radius</code>.","Runs a basic iced application with default <code>Settings</code> given …","Creates a <code>Command</code> that runs the given stream to completion.","Creates a uniform scaling transformation.","Scales the alpha channel of the <code>Gradient</code> by the given …","Scales the alpha channel of the <code>Background</code> by the given …","Scales the alpha channel of the <code>Color</code> by the given factor.","Returns the scale factor of the <code>Transformation</code>.","Configure your application.","Creates a <code>Command</code> that performs a single <code>Action</code>.","Returns the <code>Size</code> of the <code>Rectangle</code>.","Snaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.","Spawns a future in the <code>Executor</code>.","The <code>Stretch</code> of the <code>Font</code>.","","","","","","","","","","","","","","","","","","The <code>Style</code> of the <code>Font</code>.","","","","","","","","Listen to external events in your application.","Retrieve system information.","Use the built-in theme and styles.","Listen and react to time.","Calculates the line in which the angle intercepts the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Top padding","Listen and react to touch events.","Creates a translate transformation.","Returns the translation of the <code>Transformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union with the given <code>Rectangle</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the total amount of vertical <code>Padding</code>.","","","","","","","","","","","","","","","","","","","","","","","","The <code>Weight</code> of the <code>Font</code>.","Use the built-in widgets or create your own.","Creates a <code>Command</code> that performs a <code>widget::Operation</code>.","The width of the border.","Width of the rectangle.","The width.","Configure the window of your application in native …","Adds a value to the <code>Subscription</code> context.","Updates the <code>Color</code> of the <code>Border</code>.","Creates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …","Updates the <code>Radius</code> of the <code>Border</code>.","Creates a new <code>Rectangle</code> with its top-left corner at the …","Updates the width of the <code>Border</code>.","The X coordinate.","X coordinate of the top-left corner.","The X component of the <code>Vector</code>","The Y coordinate.","Y coordinate of the top-left corner.","The Y component of the <code>Vector</code>","An interactive cross-platform application.","A buffer for short-term storage and transfer within and …","The <code>Executor</code> that will run commands and subscriptions.","The data needed to initialize your <code>Application</code>.","The bounds of a <code>Node</code> and its children, using absolute …","The type of <strong>messages</strong> your <code>Application</code> will produce.","An interactive component that can be displayed on top of …","A component that can be used by widgets to draw themselves …","The renderer of your <code>Application</code>.","A connection to the state of a shell.","A paragraph.","The theme of your <code>Application</code>.","A component that displays information and allows …","","","","Returns whether the widgets of the current application …","","","","","","","","","","","","","","","","","","","Returns the bounds of the <code>Layout</code>.","The bounds of the paragraph.","Returns the state <code>Tree</code> of the children of the <code>Widget</code>.","Returns an iterator over the <code>Layout</code> of the children of a …","Clears all of the recorded primitives in the <code>Renderer</code>.","Access the clipboard.","","","","","","","","The content of the paragraph.","","","","","","","Reconciliates the <code>Widget</code> with the provided <code>Tree</code>.","","","","Draws the <code>Overlay</code> using the associated <code>Renderer</code>.","Draws the <code>Widget</code> using the associated <code>Renderer</code>.","","","","Ends recording a new layer.","Ends recording a new layer.","Fills a <code>Quad</code> with the provided <code>Background</code>.","","","","The font of the <code>Text</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The horizontal alignment of the <code>Text</code>.","Load and draw raster graphics.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Invalidates the current application layout.","Invalidates the current application widgets.","Returns true if the <code>Shell</code> contains no published messages","Returns whether the current layout is invalid or not.","Returns true if the cursor is over the <code>Overlay</code>.","Position your widgets properly.","Returns the layout <code>Node</code> of the <code>Overlay</code>.","Returns the <code>layout::Node</code> of the <code>Widget</code>.","The line height of the <code>Text</code>.","Merges the current <code>Shell</code> with another one by applying the …","Handle mouse events.","Returns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.","Returns the current <code>mouse::Interaction</code> of the <code>Widget</code>.","Initializes the <code>Application</code> with the flags provided to <code>run</code> …","Creates a new <code>Layout</code> for the given <code>Node</code> at the origin.","Creates a new <code>Shell</code> with the provided buffer of messages.","Processes a runtime <code>Event</code>.","Processes a runtime <code>Event</code>.","Applies a <code>widget::Operation</code> to the <code>Overlay</code>.","Applies an <code>Operation</code> to the <code>Widget</code>.","Display interactive elements on top of other widgets.","Returns the nested overlay of the <code>Overlay</code>, if there is any.","Returns the overlay of the <code>Widget</code>, if there is any.","Returns the position of the <code>Layout</code>.","Publish the given <code>Message</code> for an application to process it.","Reads the current content of the <code>Clipboard</code> as text.","Returns the request a redraw should happen, if any.","Write your own renderer.","Requests a new frame to be drawn.","Triggers the given function if the layout is invalid, …","Runs the <code>Application</code>.","Runs the <code>Application</code>.","Returns the scale factor of the <code>Application</code>.","Returns the scale factor of the <code>Application</code>.","The <code>Shaping</code> strategy of the <code>Text</code>.","Returns the <code>Size</code> of the <code>Widget</code> in lengths.","The size of the <code>Text</code> in logical pixels.","Returns a <code>Size</code> hint for laying out the <code>Widget</code>.","Starts recording a new layer.","Starts recording with a new <code>Transformation</code>.","Returns the <code>State</code> of the <code>Widget</code>.","Returns the current <code>Appearance</code> of the <code>Application</code>.","Returns the current <code>Appearance</code> of the <code>Application</code>.","Write your own subscriptions.","Returns the event <code>Subscription</code> for the current state of the","Returns the event <code>Subscription</code> for the current state of the","Load and draw vector graphics.","Returns the <code>Tag</code> of the <code>Widget</code>.","Draw and interact with text.","Returns the current <code>Theme</code> of the <code>Application</code>.","Returns the current <code>Theme</code> of the <code>Application</code>.","Returns the current title of the <code>Application</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles a <strong>message</strong> and updates the state of the <code>Application</code>.","The vertical alignment of the <code>Text</code>.","Returns the widgets to display in the <code>Application</code>.","","","","Create custom widgets and operate on them.","Draws the primitives recorded in the given closure in a …","Creates a new <code>Layout</code> for the given <code>Node</code> with the provided …","Applies a <code>Transformation</code> to the primitives recorded in the …","Applies a translation to the primitives recorded in the …","Writes the given text contents to the <code>Clipboard</code>.","A buffer for short-term storage and transfer within and …","The kind of <code>Clipboard</code>.","A null implementation of the <code>Clipboard</code> trait.","The primary clipboard.","The standard clipboard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Reads the current content of the <code>Clipboard</code> as text.","","","","","","","","","","","","","","","","","","","","","","Writes the given text contents to the <code>Clipboard</code>.","","A wrapper around raw image data.","In-memory data","The data of a raster image.","Image filtering strategy.","A handle of some image data.","The image Handle to be displayed. Iced exposes its own …","Bilinear interpolation.","Nearest neighbor.","File data","A <code>Renderer</code> that can render raster graphics.","Decoded image pixels in RGBA format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws an image with the given <code>Handle</code> and inside the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the dimensions of an image for the given <code>Handle</code>.","Creates new <code>Bytes</code> around <code>data</code>.","","","","","","","","","","","","","","","","","","","","","The height of the image.","The pixels.","The width of the image.","The bounds of a <code>Node</code> and its children, using absolute …","A set of size constraints for layouting.","No limits","The bounds of an element and its children.","","","Aligns the <code>Node</code> in the given space.","Mutable reference version of <code>Self::align</code>.","","","","","","","","","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","","","","","Returns the bounds of the <code>Node</code>.","Returns the children of the <code>Node</code>.","","","","","","","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","Creates a new <code>Node</code> that wraps a single child with some …","","","","","","","","","","","Distribute elements using a flex-based layout.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Applies a height constraint to the current <code>Limits</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Removes the minimum width constraint for the current <code>Limits</code>…","Returns the maximum <code>Size</code> of the <code>Limits</code>.","Applies a maximum height constraint to the current <code>Limits</code>.","Applies a maximum width constraint to the current <code>Limits</code>.","Returns the minimum <code>Size</code> of the <code>Limits</code>.","Applies a minimum height constraint to the current <code>Limits</code>.","Applies a minimum width constraint to the current <code>Limits</code>.","Moves the <code>Node</code> to the given position.","Mutable reference version of <code>Self::move_to</code>.","Creates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.","Creates a new <code>Node</code> with the given <code>Size</code>.","Produces a <code>Node</code> with two children nodes one right next to …","","Computes the <code>Node</code> that fits the <code>Limits</code> given some width, …","Computes a <code>padded</code> <code>Node</code> with a positioning step.","Computes the resulting <code>Size</code> that fits the <code>Limits</code> given …","Shrinks the current <code>Limits</code> by the given <code>Size</code>.","Returns the <code>Size</code> of the <code>Node</code>.","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","","","Translates the <code>Node</code> by the given translation.","","","","","","","","","","","","","","","","","","","Applies a width constraint to the current <code>Limits</code>.","Creates a new <code>Node</code> with the given <code>Size</code> and children.","The main axis of a flex layout.","The horizontal axis","The vertical axis","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Computes the flex layout with the given axis and limits, …","","","","","","","","","","The cursor has a defined position.","The back mouse button.","The button of a mouse.","A mouse button was pressed.","A mouse button was released.","A mouse click.","","The mouse cursor state.","The mouse cursor entered the window.","The mouse cursor left the window.","The mouse cursor was moved","A mouse event.","The forward mouse button.","","","","The interaction of a mouse cursor.","The left mouse button.","A line-based scroll movement","The middle (wheel) button.","","","Some other button.","A pixel-based scroll movement","","","","The right mouse button.","A scroll movement.","","The cursor is currently unavailable (i.e. out of bounds or …","The mouse wheel was scrolled.","","","","","","","","","","Track mouse clicks.","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns the <code>Kind</code> of <code>Click</code>.","Creates a new <code>Click</code> with the given position and previous …","Returns the position of the <code>Click</code>.","","","","","","","","","","","The scroll movement.","The new position of the mouse cursor","The number of horizontal lines scrolled","The number of horizontal pixels scrolled","The number of vertical lines scrolled","The number of vertical pixels scrolled","A mouse click.","A double click","The kind of mouse click.","A single click","A triple click","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","A generic <code>Overlay</code>.","An <code>Overlay</code> container that displays multiple overlay …","An interactive component that can be displayed on top of …","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>Overlay</code> using the associated <code>Renderer</code>.","Draws the <code>Element</code> and its children using the given <code>Layout</code>.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns a <code>Group</code> of overlay <code>Element</code> children.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns true if the cursor is over the <code>Element</code>.","","Returns true if the cursor is over the <code>Overlay</code>.","Returns the layout <code>Node</code> of the <code>Overlay</code>.","Computes the layout of the <code>Element</code> in the given bounds.","","Applies a transformation to the produced message of the …","Returns the current <code>mouse::Interaction</code> of the <code>Element</code>.","","Returns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.","Creates a new <code>Element</code> containing the given <code>Overlay</code>.","Creates an empty <code>Group</code>.","","Processes a runtime <code>Event</code>.","","Processes a runtime <code>Event</code>.","Applies a <code>widget::Operation</code> to the <code>Element</code>.","","Applies a <code>widget::Operation</code> to the <code>Overlay</code>.","Returns the nested overlay of the <code>Element</code>, if there is any.","Turns the <code>Group</code> into an overlay <code>overlay::Element</code>.","","Returns the nested overlay of the <code>Overlay</code>, if there is any.","Adds an <code>overlay::Element</code> to the <code>Group</code>.","","","","","","","","","","","","","","","","","","","Creates a <code>Group</code> with the given elements.","A polygon with four sides.","A component that can be used by widgets to draw themselves …","The styling attributes of a <code>Renderer</code>.","","","","","","","","","","","The <code>Border</code> of the <code>Quad</code>.","","","","","The bounds of the <code>Quad</code>.","Clears all of the recorded primitives in the <code>Renderer</code>.","","","","","","","","","","","","","","","","","Ends recording a new layer.","Ends recording a new layer.","","","Fills a <code>Quad</code> with the provided <code>Background</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The <code>Shadow</code> of the <code>Quad</code>.","Starts recording a new layer.","Starts recording with a new <code>Transformation</code>.","The text color","","","","","","","","","","","","","","","","","","","","","Draws the primitives recorded in the given closure in a …","Applies a <code>Transformation</code> to the primitives recorded in the …","Applies a translation to the primitives recorded in the …","A stream of runtime events.","The hasher used for identifying subscriptions.","The events that will be produced by a <code>Subscription</code> with …","The description of a <code>Subscription</code>.","Hashes the <code>Recipe</code>.","Executes the <code>Recipe</code> and produces the stream of events of …","In-memory data","The data of a vectorial image.","A handle of Svg data.","File data","A <code>Renderer</code> that can render vector graphics.","","","","","","","","","","","","","","Draws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns the default dimensions of an SVG for the given …","","","","","","","","","","","The <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.","An absolute height in logical pixels.","Advanced text shaping and font fallback.","No shaping and no font fallback.","A bounds difference.","The <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.","The point was within the bounds of the returned character …","The difference detected in some text.","A component that can be used by widgets to edit multi-line …","The <code>Editor</code> of this <code>Renderer</code>.","The font of this <code>Paragraph</code>.","The font of the <code>Editor</code>.","The font type used.","The output of the <code>Highlighter</code>.","A type capable of highlighting text.","The result of hit testing on text.","The icon font of the backend.","The highlight iterator type.","The height of a line of text in a paragraph.","No difference.","A text paragraph.","The <code>Paragraph</code> of this <code>Renderer</code>.","A factor of the size of the text.","A renderer capable of measuring and drawing <code>Text</code>.","The settings to configure the <code>Highlighter</code>.","A shape difference.","The shaping strategy of some text.","A paragraph.","","","","","","","","","","","","","","","Returns the current boundaries of the <code>Editor</code>.","The bounds of the paragraph.","Notifies the <code>Highlighter</code> that the line at the given index …","","","","","Compares the <code>Paragraph</code> with some desired <code>Text</code> and returns …","","","The content of the paragraph.","Returns the current line of the <code>Highlighter</code>.","Returns the current <code>Cursor</code> of the <code>Editor</code>.","Computes the cursor position of the <code>Hit</code> .","Returns the current cursor position of the <code>Editor</code>.","Returns the default <code>Self::Font</code>.","Returns the default size of <code>Text</code>.","","","","","","","","","Edit text.","","","","","","Draws the given <code>Editor</code> at the given position and with the …","Draws the given <code>Paragraph</code> at the given position and with …","Draws the given <code>Text</code> at the given position and with the …","","","The font of the <code>Text</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the distance to the given grapheme index in the …","Runs a text <code>Highlighter</code> in the <code>Editor</code>.","Highlights the given line.","Highlight text.","Tests whether the provided point is within the boundaries …","Returns the horizontal alignment of the <code>Paragraph</code>.","The horizontal alignment of the <code>Text</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the text of the given line in the <code>Editor</code>, if it …","Returns the amount of lines in the <code>Editor</code>.","The line height of the <code>Text</code>.","Returns the minimum boundaries that can fit the contents …","Returns the minimum boundaries to fit the current contents …","Returns the minimum height that can fit the contents of …","Returns the minimum width that can fit the contents of the …","Creates a new <code>Highlighter</code> from its <code>Self::Settings</code>.","Performs an <code>Action</code> on the <code>Editor</code>.","Lays out the <code>Paragraph</code> with some new boundaries.","Returns the current selected text of the <code>Editor</code>.","The <code>Shaping</code> strategy of the <code>Text</code>.","The size of the <code>Text</code> in logical pixels.","","","","","","","","","","","","","","","","","","","Updates the <code>Editor</code> with some new attributes.","Updates the <code>Highlighter</code> with some new <code>Self::Settings</code>.","Updates the <code>Paragraph</code> to match the given <code>Text</code>, if needed.","Returns the vertical alignment of the <code>Paragraph</code>.","The vertical alignment of the <code>Text</code>.","","","Creates a new <code>Paragraph</code> laid out with the given <code>Text</code>.","Creates a new <code>Editor</code> laid out with the given text.","An interaction with an <code>Editor</code>.","Delete the previous character.","Cursor without a selection","Click the <code>Editor</code> at the given <code>Point</code>.","The cursor of an <code>Editor</code>.","Delete the next character.","A direction in some text.","Move to the end of the text.","Move to the start of the text.","Move down.","Drag the mouse on the <code>Editor</code> to the given <code>Point</code>.","An action that edits text.","Perform an <code>Edit</code>.","A component that can be used by widgets to edit multi-line …","Move to the end of the line.","Break the current line.","The font of the <code>Editor</code>.","Move to the start of the line.","Insert the given character.","Move left.","&lt;-","A cursor movement.","Apply a <code>Motion</code>.","Move to the start of the next window.","Move to the start of the previous window.","Paste the given text.","Move right.","-&gt;","Scroll the <code>Editor</code> a certain amount of lines.","Select text with a given <code>Motion</code>.","Select the line at the current cursor.","Select the word at the current cursor.","Cursor selecting a range of text","Move up.","Move to the left boundary of a word.","Move to the right boundary of a word.","","","","","","","","","","","","","","","Returns the current boundaries of the <code>Editor</code>.","","","","","","","Returns the current <code>Cursor</code> of the <code>Editor</code>.","Returns the current cursor position of the <code>Editor</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Runs a text <code>Highlighter</code> in the <code>Editor</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the text of the given line in the <code>Editor</code>, if it …","Returns the amount of lines in the <code>Editor</code>.","Returns the minimum boundaries to fit the current contents …","Performs an <code>Action</code> on the <code>Editor</code>.","Returns the current selected text of the <code>Editor</code>.","","","","","","","","","","","","","","","","","","","Updates the <code>Editor</code> with some new attributes.","","","Creates a new <code>Editor</code> laid out with the given text.","The amount of lines to scroll.","The format of some text.","The output of the <code>Highlighter</code>.","A type capable of highlighting text.","The highlight iterator type.","A highlighter that highlights nothing.","The settings to configure the <code>Highlighter</code>.","","","","","","","","","","","","","","","Notifies the <code>Highlighter</code> that the line at the given index …","","","","","","The <code>Color</code> of the text.","","","Returns the current line of the <code>Highlighter</code>.","","","","","","","","","","","","","","The <code>Font</code> of the text.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Highlights the given line.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a new <code>Highlighter</code> from its <code>Self::Settings</code>.","","","","","","","","","","","","","","","","","","","","","Updates the <code>Highlighter</code> with some new <code>Self::Settings</code>.","","","","The identifier of a generic widget.","A piece of logic that can traverse the widget tree of an …","A paragraph of text.","A persistent state widget tree.","A component that displays information and allows …","","","","","","","","","","","","","","","","","","","","","","Returns the state <code>Tree</code> of the children of the <code>Widget</code>.","The children of the root widget of the <code>Tree</code>.","Sets the style class of the <code>Text</code>.","","","Sets the <code>Color</code> of the <code>Text</code>.","Sets the <code>Color</code> of the <code>Text</code>, if <code>Some</code>.","","","","Operates on a widget that contains other widgets.","Operates on a custom widget with some state.","","","","","","","Reconciliates the <code>Widget</code> with the provided <code>Tree</code>.","Reconciliates the current tree with the provided <code>Widget</code>.","Reconciles the children of the tree with the provided list …","Reconciliates the children of the tree with the provided …","","","","Draws the <code>Widget</code> using the associated <code>Renderer</code>.","","","","","Creates an empty, stateless <code>Tree</code> with no children.","","","","","Finishes the <code>Operation</code> and returns its <code>Outcome</code>.","","","Operates on a widget that can be focused.","Sets the <code>Font</code> of the <code>Text</code>.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Sets the height of the <code>Text</code> boundaries.","Sets the <code>alignment::Horizontal</code> of the <code>Text</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the <code>layout::Node</code> of the <code>Widget</code>.","","Sets the <code>LineHeight</code> of the <code>Text</code>.","Returns the current <code>mouse::Interaction</code> of the <code>Widget</code>.","Create a new fragment of <code>Text</code> with the given contents.","Creates a new <code>Tree</code> for the provided <code>Widget</code>.","Creates a custom <code>Id</code>.","Processes a runtime <code>Event</code>.","Applies an <code>Operation</code> to the <code>Widget</code>.","Query or update internal widget state.","Returns the overlay of the <code>Widget</code>, if there is any.","Operates on a widget that can be scrolled.","Sets the <code>Shaping</code> strategy of the <code>Text</code>.","Returns the <code>Size</code> of the <code>Widget</code> in lengths.","","Sets the size of the <code>Text</code>.","Returns a <code>Size</code> hint for laying out the <code>Widget</code>.","","Returns the <code>State</code> of the <code>Widget</code>.","The <code>State</code> of the <code>Tree</code>.","Sets the style of the <code>Text</code>.","","Returns the <code>Tag</code> of the <code>Widget</code>.","The tag of the <code>Tree</code>.","Write some text for your users to read.","Operates on a widget that has text input.","","Store internal widget state in a state tree to ensure …","","","","","","","","","","","","","","","","","","","","","","Creates a unique <code>Id</code>.","","","","Sets the <code>alignment::Vertical</code> of the <code>Text</code>.","","","","Sets the width of the <code>Text</code> boundaries.","The <code>Operation</code> needs to be followed by another <code>Operation</code>.","The internal state of a widget that can be focused.","The <code>Operation</code> produced no result.","A piece of logic that can traverse the widget tree of an …","The result of an <code>Operation</code>.","The internal state of a widget that can be scrolled.","The <code>Operation</code> produced some result.","The internal state of a widget that has text input.","","","","","","","","","Operates on a widget that contains other widgets.","Operates on a custom widget with some state.","","","","","Finishes the <code>Operation</code> and returns its <code>Outcome</code>.","","Focuses the widget.","Operate on widgets that can be focused.","Operates on a widget that can be focused.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Returns whether the widget is focused or not.","Maps the output of an <code>Operation</code> using the given function.","Moves the cursor of the text input to an arbitrary …","Moves the cursor of the text input to the end of the input …","Moves the cursor of the text input to the front of the …","Produces an <code>Operation</code> that applies the given <code>Operation</code> to …","Scroll the widget to the given <code>AbsoluteOffset</code> along the …","Operate on widgets that can be scrolled.","Operates on a widget that can be scrolled.","Selects all the content of the text input.","Snaps the scroll of the widget to the given <code>percentage</code> …","Operate on widgets that have text input.","Operates on a widget that has text input.","","","","","","","","Unfocuses the widget.","","","A summary of the focusable widgets present on a widget …","The internal state of a widget that can be focused.","","","","","","","","","","","Produces an <code>Operation</code> that generates a <code>Count</code> and chains it …","","","","","","","","","","Produces an <code>Operation</code> that searches for the current …","","Produces an <code>Operation</code> that focuses the widget with the …","Focuses the widget.","Produces an <code>Operation</code> that searches for the current …","Produces an <code>Operation</code> that searches for the current …","The index of the current focused widget, if any.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns whether the widget is focused or not.","","","The total amount of focusable widgets.","","","","","","","","Unfocuses the widget.","","","The amount of absolute offset in each direction of a …","The amount of relative offset in each direction of a …","The internal state of a widget that can be scrolled.","Produces an <code>Operation</code> that scrolls the widget with the …","Scroll the widget to the given <code>AbsoluteOffset</code> along the …","Produces an <code>Operation</code> that snaps the widget with the given …","Snaps the scroll of the widget to the given <code>percentage</code> …","The amount of horizontal offset","The amount of horizontal offset","The amount of vertical offset","The amount of vertical offset","The internal state of a widget that has text input.","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to an arbitrary …","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to the end of the input …","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to the front of the …","Produces an <code>Operation</code> that selects all the content of the …","Selects all the content of the text input.","An absolute height in logical pixels.","Advanced text shaping and font fallback.","No shaping and no font fallback.","Borrowed data.","The theme catalog of a <code>Text</code>.","The item class of this <code>Catalog</code>.","A fragment of <code>Text</code>.","A trait for converting a value to some text <code>Fragment</code>.","The height of a line of text in a paragraph.","Owned data.","A factor of the size of the text.","The shaping strategy of some text.","The internal state of a <code>Text</code> widget.","The appearance of some text.","A styling function for a <code>Text</code>.","A paragraph of text.","The <code>Color</code> of the text.","The default class produced by this <code>Catalog</code>.","Draws text using the same logic as the <code>Text</code> widget.","Converts the value to some text <code>Fragment</code>.","Produces the <code>layout::Node</code> of a <code>Text</code> widget.","The <code>Style</code> of a class with the given status.","No meaningful internal state.","Some meaningful internal state.","The internal <code>State</code> of a widget.","The identifier of some widget state.","A persistent state widget tree.","","","","","","","","","","","","","","","The children of the root widget of the <code>Tree</code>.","","","","","","","","","","","Reconciliates the <code>current_children</code> with the provided list …","","","Downcasts the <code>State</code> to <code>T</code> and returns a mutable reference …","Downcasts the <code>State</code> to <code>T</code> and returns a reference to it.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a new <code>State</code>.","Creates a <code>Tag</code> for a state of type <code>T</code>.","","The <code>State</code> of the <code>Tree</code>.","Creates a <code>Tag</code> for a stateless widget.","The tag of the <code>Tree</code>.","","","","","","","","","","","","","","","","","","","","Alignment on the axis of a container.","Align bottom","Align at the center of the axis.","Horizontally centered","Vertically centered","Align at the end of the axis.","The horizontal <code>Alignment</code> of some resource.","Align left","Align right","Align at the start of the axis.","Align top","The vertical <code>Alignment</code> of some resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A border.","The border radii for the corners of a graphics primitive …","","","","","","","","","","The color of the border.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","The radius of the border.","","","","","","","","","","","The width of the border.","Read the current contents of the clipboard.","Read the current contents of the primary clipboard.","Write the given contents to the clipboard.","Write the given contents to the primary clipboard.","A set of asynchronous actions to be performed by some …","Creates a <code>Command</code> that produces the <code>Message</code>s published …","The <code>Event</code> was handled and processed by a widget.","A user interface event.","The <code>Event</code> was <strong>NOT</strong> handled by any widget.","A keyboard event","Describes an event specific to MacOS","A MacOS specific event","A mouse event","A platform specific event","A platform specific event","Triggered when the app receives an URL from the system","The status of an <code>Event</code> after being processed.","A touch event","A window event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns a <code>Subscription</code> to all the ignored runtime events.","Creates a <code>Subscription</code> that produces a message for every …","Creates a <code>Subscription</code> that listens and filters all the …","","","","","","","","","","","","","","","","","","","","","A default cross-platform executor.","A type that can run futures.","Runs the given closure inside the <code>Executor</code>.","Creates a new <code>Executor</code>.","Spawns a future in the <code>Executor</code>.","","","","Glyphs in cursive fonts generally use a more informal …","An error while loading a font.","","","","","","A font family.","Fantasy fonts are primarily decorative or expressive fonts …","A font.","","","","The sole criterion of a monospace font is that all glyphs …","The name of a font family of choice.","","","","","Glyphs in sans-serif fonts, as the term is used in CSS, …","","","","Serif fonts represent the formal text style for a script.","The width of some text.","The style of some text.","","","","The weight of some text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Family</code> of the <code>Font</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load a font from its bytes.","","","","","The <code>Stretch</code> of the <code>Font</code>.","The <code>Style</code> of the <code>Font</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Weight</code> of the <code>Font</code>.","A point along the gradient vector where the specified <code>color</code>…","A fill which transitions colors progressively along a …","A linear gradient.","A linear gradient interpolates colors along a direction at …","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","How the <code>Gradient</code> is angled within its bounds.","","","","","","","","","","","","","","","","","The color of the gradient at the specified <code>offset</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a new <code>Linear</code> gradient with the given angle in …","","Offset along the gradient vector.","Scales the alpha channel of the <code>Linear</code> gradient by the …","<code>ColorStop</code>s along the linear gradient path.","","","","","","","","","","","","","","","","","","","","","The “alt” key.","The “command” key.","The “control” key.","A key string that corresponds to the character typed by …","A keyboard event.","A key on the keyboard.","A keyboard key was pressed.","A keyboard key was released.","The “windows” key on Windows, “command” key on …","The left side of the keyboard.","The location of a key on the keyboard.","The current state of the keyboard modifiers.","The keyboard modifiers have changed.","A key with an established name.","The numpad of the keyboard.","The right side of the keyboard.","The “shift” key.","The standard group of keys on the keyboard.","An unidentified key.","","","","","Get a flags value with all known bits set.","Returns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.","","","","","","","","","","","","","","","","","Convert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","Returns true if a “command key” is pressed in the …","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","Whether all set bits in a source flags value are also set …","Returns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Identify keyboard keys.","Returns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Listens to keyboard key presses and calls the given …","Listens to keyboard key releases and calls the given …","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","The key pressed.","The key released.","The location of the key.","The location of the key.","The state of the modifier keys.","The state of the modifier keys.","The text produced by the key press, if any.","Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","The Accept (Commit, OK) key. Accept current option or …","Redo or repeat an action.","Initate the multi-candidate mode.","","The <code>Alt</code> (Alternative) key.","The Alternate Graphics (AltGr or AltGraph) key.","The Application switch key, which provides a list of …","Navigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)","Navigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)","Navigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)","Navigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)","The Attention (Attn) key.","Adjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)","Adjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (<code>VK_FADER_FRONT</code>)","Adjust audio fader towards rear. (<code>VK_FADER_REAR</code>)","Advance surround audio mode to next available mode. (…","Decrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)","Increase treble. (<code>APPCOMMAND_TREBLE_UP</code>)","Decrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …","Toggle between muted state and prior volume level. (…","Increase audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …","Used to remove the character to the left of the cursor. …","The Brightness Down key. Typically controls the display …","The Brightness Up key. Typically controls the display …","Navigate to previous content or page in current history. (…","Open the list of browser favorites. (…","Navigate to next content or page in current history. (…","Go to the user’s preferred home page. (…","Refresh the current page or content. (…","Call up the user’s preferred search page. (…","Stop loading the current page or content. (…","The Call key. (<code>KEYCODE_CALL</code>)","The Camera key. (<code>KEYCODE_CAMERA</code>)","The Camera focus key. (<code>KEYCODE_FOCUS</code>)","","The <code>Caps Lock</code> (Capital) key.","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","A key string that corresponds to the character typed by …","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (<code>VK_CC</code>, …","Initiate the Code Input mode to allow characters to be …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …","The Compose key, also known as “Multi_key” on the X …","Show the application’s context menu. This key is …","The <code>Control</code> or <code>Ctrl</code> key.","Convert the current input method sequence.","Copy the current selection. (<code>APPCOMMAND_COPY</code>)","The Cursor Select key.","Cut the current selection. (<code>APPCOMMAND_CUT</code>)","Select Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)","Used to delete the character to the right of the cursor. …","Adjust brightness of device, by toggling between or …","Swap video sources. (<code>VK_DISPLAY_SWAP</code>)","The Eisu key. This key may close the IME, but its purpose …","Toggle removable media to eject (open) and insert (close) …","The End key, used with keyboard entry to go to the end of …","The End Call key. (<code>KEYCODE_ENDCALL</code>)","The <code>Enter</code> or <code>↵</code> key. Used to activate current selection …","The Erase to End of Field key. This key deletes all …","The <code>Esc</code> key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","","Exit the current application. (<code>VK_EXIT</code>)","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode <code>Final</code> key used on some Asian keyboards, to …","Open the Find dialog. (<code>APPCOMMAND_FIND</code>)","The Function switch <code>Fn</code> key. Activating this key …","The Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …","The Back key. (<code>KEYCODE_BACK</code>)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (<code>VK_GUIDE</code>, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","Toggle between Hangul and English modes.","","The (Half-Width) Characters key.","The Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","The Home key, used with keyboard entry, to go to start of …","","Toggle display of information about currently selected …","Toggle between text modes for insertion or overtyping. (…","Toggle instant replay. (<code>VK_INSTANT_REPLAY</code>)","","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","The Katakana (Japanese Kana characters) key.","A key on the keyboard.","The <code>11</code> key found on media numpads that have buttons from <code>1</code> …","The <code>12</code> key found on media numpads that have buttons from <code>1</code> …","","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","The “Calendar” key. (<code>KEYCODE_CALENDAR</code>)","The “Contacts” key. (<code>KEYCODE_CONTACTS</code>)","The “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)","The “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…","","","","","","","","Launch linked content, if available and appropriate. (…","List the current program. (<code>VK_LIST</code>)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (<code>VK_LOCK</code>)","","Open an editor to forward the current message. (…","Open an editor to reply to the current message. (…","Send the current message. (<code>APPCOMMAND_SEND_MAIL</code>)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)","Close the current media, for example to close a CD or DVD …","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (<code>VK_LAST</code>, …","Pause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…","Initiate or continue media playback at normal speed, if …","Toggle media between play and pause states. (…","Initiate or resume recording of currently selected media. (…","Initiate or continue reverse playback at faster than …","Skip backward to next content or program. (…","Skip forward to next content or program. (<code>VK_SKIP</code>, …","Step backward to next content or program. (…","Step forward to next content or program. (…","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)","Seek to next media or program track. (…","Seek to previous media or program track. (…","","Toggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…","Decrease microphone volume. (…","Mute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …","Increase microphone volume. (…","Toggle between or cycle through input modes of IMEs.","A named key.","A key with an established name.","Navigate in. (<code>KEYCODE_NAVIGATE_IN</code>)","Navigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)","Navigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)","Navigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)","Open a new document or message. (<code>APPCOMMAND_NEW</code>)","","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Accept current input method sequence without conversion in …","The Notification key. (<code>KEYCODE_NOTIFICATION</code>)","The <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …","Access on-demand content or programs. (<code>VK_ON_DEMAND</code>)","Open an existing document or message. (<code>APPCOMMAND_OPEN</code>)","Scroll down or display next page of content.","Scroll up or display previous page of content.","Pairing key to pair devices. (<code>KEYCODE_PAIRING</code>)","The Paste key. (<code>APPCOMMAND_PASTE</code>)","Pause the current state or application (as appropriate).","Move picture-in-picture window down. (<code>VK_PINP_DOWN</code>)","Move picture-in-picture window. (<code>VK_PINP_MOVE</code>)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (<code>VK_PINP_UP</code>)","Play or resume the current state or application (as …","Decrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)","Reset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)","Increase media playback speed. (<code>VK_PLAY_SPEED_UP</code>)","Toggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …","The <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.","","Print the current document or message. (<code>APPCOMMAND_PRINT</code>)","Initiate print-screen function.","","The properties (Props) key.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (<code>APPCOMMAND_REDO</code>)","Toggle RF (radio frequency) input bypass mode (pass RF …","The Roman characters function key.","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (<code>APPCOMMAND_SAVE</code>)","Toggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)","Advance display screen mode to next available mode. (…","Toggle between scrolling and cursor movement modes.","","Toggle display of device settings screen. (<code>VK_SETTINGS</code>, …","Used to enable shift modifier function for interpreting …","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","Used in text to insert a space between words. Usually …","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)","Used to enable “super” modifier function for …","The Symbol modifier key (used on some virtual keyboards).","","Switch to viewing TV. (<code>KEYCODE_TV</code>)","TV 3D Mode. (<code>KEYCODE_3D_MODE</code>)","Toggle between antenna and cable input. (…","Audio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)","Contents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)","Switch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)","Switch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…","Switch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…","Switch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…","Switch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…","Switch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)","Switch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)","Switch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)","Switch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)","Switch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)","Media context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)","Toggle network. (<code>KEYCODE_TV_NETWORK</code>)","Number entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)","Toggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)","Radio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)","Satellite. (<code>KEYCODE_TV_SATELLITE</code>)","Broadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)","Communication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)","Toggle between available satellites. (…","Analog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)","Digital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)","Timer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)","The Horizontal Tabulation <code>Tab</code> key.","Toggle display of teletext, if available (<code>VK_TELETEXT</code>, …","Undo the last action. (<code>APPCOMMAND_UNDO</code>)","An unidentified key.","Advance video mode to next available mode. (…","","The WakeUp key. (<code>KEYCODE_WAKEUP</code>)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)","The ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)","Toggle between full-screen and scaled content, or alter …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The cursor has a defined position.","The back mouse button.","The button of a mouse.","A mouse button was pressed.","A mouse button was released.","","The mouse cursor state.","The mouse cursor entered the window.","The mouse cursor left the window.","The mouse cursor was moved","A mouse event.","The forward mouse button.","","","","The interaction of a mouse cursor.","The left mouse button.","A line-based scroll movement","The middle (wheel) button.","","","Some other button.","A pixel-based scroll movement","","","","The right mouse button.","A scroll movement.","","The cursor is currently unavailable (i.e. out of bounds or …","The mouse wheel was scrolled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the <code>Cursor</code> is over the given <code>bounds</code>.","","","","Returns the absolute position of the <code>Cursor</code>, if available.","Returns the relative position of the <code>Cursor</code> from the given …","Returns the relative position of the <code>Cursor</code> inside the …","Returns the absolute position of the <code>Cursor</code>, if available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The scroll movement.","The new position of the mouse cursor","The number of horizontal lines scrolled","The number of horizontal pixels scrolled","The number of vertical lines scrolled","The number of vertical pixels scrolled","The appearance of an application.","An interactive cross-platform multi-window application.","The default style of an <code>Application</code>.","The <code>Executor</code> that will run commands and subscriptions.","The data needed to initialize your <code>Application</code>.","The type of <strong>messages</strong> your <code>Application</code> will produce.","The theme of your <code>Application</code>.","","","","","","The background <code>Color</code> of the application.","","","","","","Returns the default style of an <code>Application</code>.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Initializes the <code>Application</code> with the flags provided to <code>run</code> …","Runs the multi-window <code>Application</code>.","Returns the scale factor of the <code>window</code> of the <code>Application</code>.","Returns the current <code>Style</code> of the <code>Theme</code>.","Returns the event <code>Subscription</code> for the current state of the","The default text <code>Color</code> of the application.","Returns the current <code>Theme</code> of the <code>window</code> of the <code>Application</code>.","Returns the current title of the <code>window</code> of the <code>Application</code>.","","","","","","","","","","Handles a <strong>message</strong> and updates the state of the <code>Application</code>.","Returns the widgets to display in the <code>window</code> of the …","","A generic overlay.","Build and show dropdown menus.","The theme catalog of a <code>Menu</code>.","The item class of the <code>Catalog</code>.","A list of selectable options.","The local state of a <code>Menu</code>.","The appearance of a <code>Menu</code>.","A styling function for a <code>Menu</code>.","The <code>Background</code> of the menu.","The <code>Border</code> of the menu.","The default style of the list of a <code>Menu</code>.","The default class produced by the <code>Catalog</code>.","The default class for the scrollable of the <code>Menu</code>.","The background <code>Color</code> of a selected option in the menu.","The text <code>Color</code> of a selected option in the menu.","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the menu.","The appearance of an application.","The default style of an <code>Application</code>.","The internal definition of a <code>Program</code>.","The executor of the program.","The message of the program.","The underlying definition and configuration of an iced …","The renderer of some <code>Program</code>.","The renderer of the program.","The state of the program.","The theme of the program.","The title logic of some <code>Program</code>.","The update logic of some <code>Program</code>.","The view logic of some <code>Program</code>.","","Sets the <code>Settings::antialiasing</code> of the <code>Program</code>.","","","","","The background <code>Color</code> of the application.","","","Sets the <code>window::Settings::position</code> to …","","Sets the default <code>Font</code> of the <code>Program</code>.","Returns the default style of an <code>Application</code>.","","","","","Sets the <code>window::Settings::exit_on_close_request</code> of the …","","Adds a font to the list of fonts that will be loaded at …","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Runs the <code>Command</code> produced by the closure at startup.","Creates an iced <code>Program</code> given its title, update, and view …","Runs the underlying <code>Application</code> of the <code>Program</code>.","Runs the underlying <code>Application</code> of the <code>Program</code> with a …","Sets the <code>Settings</code> that will be used to run the <code>Program</code>.","","Sets the style logic of the <code>Program</code>.","","Sets the subscription logic of the <code>Program</code>.","The default text <code>Color</code> of the application.","","Sets the theme logic of the <code>Program</code>.","Produces the title of the <code>Program</code>.","","Sets the <code>window::Settings::transparent</code> of the <code>Program</code>.","","","","","","","","","","Processes the message and updates the state of the <code>Program</code>.","","Produces the widget of the <code>Program</code>.","","Sets the <code>window::Settings::size</code> of the <code>Program</code>.","The settings of an iced <code>Program</code>.","","If set to true, the renderer will try to perform …","","","","","","","","","","","The default <code>Font</code> to be used.","The text size that will be used by default.","","","","","The data needed to initialize the <code>Program</code>.","","The fonts to load on boot.","Returns the argument unchanged.","","","The identifier of the application.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The window settings.","Initialize <code>Program</code> settings using the given data.","A request to listen to external events.","Creates a <code>Subscription</code> that publishes the events sent from …","Returns a <code>Subscription</code> that will call the given function …","Returns a <code>Subscription</code> that will create and asynchronously …","Returns a <code>Subscription</code> that will create and asynchronously …","Contains informations about the system (e.g. system name, …","","","","","","","","","","","Detailed processor model information","The number of physical cores on the processor","","","","","Query for available system information.","","Returns the argument unchanged.","","","Model information for the active graphics adapter","Underlying graphics backend for rendering","","Calls <code>U::from(self)</code>.","","","","","","","","Total RAM size, in bytes","Memory used by this process, in bytes","Operating system kernel version","The operating system name","Short operating system version number","Long operating system version","","","","","","","","","","","The built-in Catppuccin Frappé variant of a <code>Palette</code>.","The built-in Catppuccin Latte variant of a <code>Palette</code>.","The built-in Catppuccin Macchiato variant of a <code>Palette</code>.","The built-in Catppuccin Mocha variant of a <code>Palette</code>.","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","A <code>Theme</code> with a customized <code>Palette</code>.","A <code>Theme</code> that uses a <code>Custom</code> palette.","The built-in dark variant of a <code>Palette</code>.","The built-in Dracula variant of a <code>Palette</code>.","The built-in dark variant.","The built-in Dracula variant.","The built-in Ferra variant of a <code>Palette</code>.","The built-in Ferra variant:","The built-in Gruvbox Dark variant of a <code>Palette</code>.","The built-in Gruvbox Light variant of a <code>Palette</code>.","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","The built-in Kanagawa Dragon variant of a <code>Palette</code>.","The built-in Kanagawa Lotus variant of a <code>Palette</code>.","The built-in Kanagawa Wave variant of a <code>Palette</code>.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","The built-in light variant of a <code>Palette</code>.","The built-in light variant.","The built-in Moonfly variant of a <code>Palette</code>.","The built-in Moonfly variant.","The built-in Nightfly variant of a <code>Palette</code>.","The built-in Nord variant of a <code>Palette</code>.","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant of a <code>Palette</code>.","The built-in Oxocarbon variant.","A color palette.","The built-in Solarized Dark variant of a <code>Palette</code>.","The built-in Solarized Light variant of a <code>Palette</code>.","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","The built-in Tokyo Night variant of a <code>Palette</code>.","The built-in Tokyo Night Light variant of a <code>Palette</code>.","The built-in Tokyo Night Storm variant of a <code>Palette</code>.","A built-in theme.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","","","","","","","","","","","The background <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","The danger <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code>.","Define the colors of a theme.","The primary <code>Color</code> of the <code>Palette</code>.","The success <code>Color</code> of the <code>Palette</code>.","The text <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code> with a …","A set of background colors.","A set of danger colors.","The built-in Catppuccin Frappé variant of an <code>Extended</code> …","The built-in Catppuccin Latte variant of an <code>Extended</code> …","The built-in Catppuccin Macchiato variant of an <code>Extended</code> …","The built-in Catppuccin Mocha variant of an <code>Extended</code> …","The built-in dark variant of an <code>Extended</code> palette.","The built-in Dracula variant of an <code>Extended</code> palette.","The built-in Ferra variant of an <code>Extended</code> palette.","The built-in Gruvbox Dark variant of an <code>Extended</code> palette.","The built-in Gruvbox Light variant of an <code>Extended</code> palette.","The built-in Kanagawa Dragon variant of an <code>Extended</code> …","The built-in Kanagawa Lotus variant of an <code>Extended</code> palette.","The built-in Kanagawa Wave variant of an <code>Extended</code> palette.","The built-in light variant of an <code>Extended</code> palette.","The built-in Moonfly variant of an <code>Extended</code> palette.","The built-in Nightfly variant of an <code>Extended</code> palette.","The built-in Nord variant of an <code>Extended</code> palette.","The built-in Oxocarbon variant of an <code>Extended</code> palette.","The built-in Solarized Dark variant of an <code>Extended</code> palette.","The built-in Solarized Light variant of an <code>Extended</code> …","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night Storm variant of an <code>Extended</code> …","An extended set of colors generated from a <code>Palette</code>.","A pair of background and text colors.","A color palette.","A set of primary colors.","A set of secondary colors.","A set of success colors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background <code>Color</code> of the <code>Palette</code>.","The set of background colors.","The base background color.","The base primary color.","The base secondary color.","The base success color.","The base danger color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background color.","","","","","","","","The danger <code>Color</code> of the <code>Palette</code>.","The set of danger colors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Generates an <code>Extended</code> palette from a simple <code>Palette</code>.","Generates a set of <code>Primary</code> colors from the base, …","Generates a set of <code>Secondary</code> colors from the base and text …","Generates a set of <code>Success</code> colors from the base, …","Generates a set of <code>Danger</code> colors from the base, …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the palette is dark or not.","Creates a new <code>Pair</code> from a background <code>Color</code> and some text …","Generates a set of <code>Background</code> colors from the base and …","The primary <code>Color</code> of the <code>Palette</code>.","The set of primary colors.","The set of secondary colors.","A stronger version of the base background color.","A stronger version of the base primary color.","A stronger version of the base secondary color.","A stronger version of the base success color.","A stronger version of the base danger color.","The success <code>Color</code> of the <code>Palette</code>.","The set of success colors.","The text <code>Color</code> of the <code>Palette</code>.","The text color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A weaker version of the base background color.","A weaker version of the base primary color.","A weaker version of the base secondary color.","A weaker version of the base success color.","A weaker version of the base danger color.","A <code>Duration</code> type to represent a span of time, typically …","A measurement of a monotonically nondecreasing clock. …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A duration of zero time.","Computes the absolute difference between <code>self</code> and <code>other</code>.","","","","Panics","","","","","","Panics","","","","","","","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Returns the amount of time elapsed from another instant to …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","","","","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","","Returns the amount of time elapsed from another instant to …","","Returns the amount of time elapsed since this instant.","","","","","","","","","","","Returns a <code>Subscription</code> that produces messages at a set …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","Returns an instant corresponding to “now”.","","","","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Returns the amount of time elapsed from another instant to …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","Returns the amount of time elapsed from another instant to …","","","Panics","","","","Panics","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","","","","","","A touch interaction.","A unique identifier representing a finger on a touch …","A touch interaction was ended.","A touch interaction was canceled.","An on-going touch interaction was moved.","A touch interaction was started.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic widget that produces a message when pressed.","A widget capable of drawing 2D graphics.","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","A box that can be checked.","A container that distributes its contents vertically.","A widget for searching and selecting a single value from a …","A reusable, custom widget that uses The Elm Architecture.","An element decorating some content.","A <code>Theme</code> that uses a <code>Custom</code> palette.","The default height of a <code>ProgressBar</code>.","The default height of a <code>Slider</code>.","The default size of a <code>Radio</code> button.","The default size of a <code>Toggler</code>.","The default spacing of a <code>Radio</code> button.","The default width of a <code>VerticalSlider</code>.","The built-in dark variant.","The built-in Dracula variant.","The type of event this <code>Component</code> handles internally.","The built-in Ferra variant:","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","A frame that displays an image while keeping aspect ratio.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","A widget that only rebuilds its contents when necessary.","The built-in light variant.","The built-in Moonfly variant.","Emit messages on mouse events.","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant.","A collection of panes distributed using either vertical or …","A widget for selecting a single value from a list of …","The primary rendering option.","A bar that displays progress.","A type of matrix barcode consisting of squares arranged in …","A circular button representing a choice.","The default graphics renderer for <code>iced</code>.","A widget that is aware of its dimensions.","A container that distributes its contents horizontally.","Display a horizontal or vertical rule for dividing content.","A widget that can vertically display an infinite amount of …","The secondary (or fallback) rendering option.","A widget which can render custom shaders with Iced’s <code>wgpu</code>…","An horizontal bar and a handle that selects a single value …","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","An amount of empty space.","A container that displays children on top of each other.","The internal state of this <code>Component</code>.","A vector graphics image.","A paragraph.","A multi-line text input.","A field that can be filled with text.","A built-in theme.","A widget that applies any <code>Theme</code> to its contents.","A toggler widget.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","An element to display a widget over another.","An vertical bar and a handle that selects a single value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the horizontal alignment of the contents of the <code>Column</code>…","Sets the vertical alignment of the contents of the <code>Row</code> .","Sets the content alignment for the horizontal axis of the …","Sets the content alignment for the vertical axis of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>Background</code> of the <code>Themer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow your users to perform actions by pressing a button.","Creates a new <code>Button</code> with the provided content.","Draw 2D graphics for your users.","Creates a new <code>Canvas</code>.","Sets the size of the squares of the grid cell of the <code>QRCode</code>…","Centers the contents in the horizontal axis of the …","Centers the contents in the vertical axis of the <code>Container</code>.","Show toggle controls using checkboxes.","Creates a new <code>Checkbox</code>.","","","","","","","","","","","","","Sets the style class of the <code>Button</code>.","Sets the style class of the <code>Checkbox</code>.","Sets the style class of the <code>Container</code>.","Sets the style class of the <code>PaneGrid</code>.","Sets the style class of the <code>PickList</code>.","Sets the style class of the <code>ProgressBar</code>.","Sets the style class of the <code>Radio</code> button.","Sets the style class of the <code>Rule</code>.","Sets the style class of the <code>Scrollable</code>.","Sets the style class of the <code>Slider</code>.","Sets the style class of the <code>TextEditor</code>.","Sets the style class of the <code>TextInput</code>.","Sets the style class of the <code>Toggler</code>.","Sets the style class of the <code>Tooltip</code>.","Sets the style class of the <code>VerticalSlider</code>.","Sets the style class of the <code>Svg</code>.","Sets the style class of the <code>QRCode</code>.","Sets whether the contents of the <code>Column</code> should be clipped …","Sets whether the contents of the <code>Row</code> should be clipped on …","Sets whether the contents of the <code>Button</code> should be clipped …","Sets whether the contents of the <code>Container</code> should be …","Creates a new <code>Column</code> with the given children.","Creates a <code>Column</code> with the given children.","Display a dropdown list of searchable and selectable …","Creates a new <code>ComboBox</code>.","Turns an implementor of <code>Component</code> into an <code>Element</code> that can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decorate content and apply alignment.","Creates a new <code>Container</code> with the provided content.","Sets the <code>ContentFit</code> of the <code>Svg</code>.","Sets the <code>ContentFit</code> of the <code>Image</code>.","","","","Sets the optional default value for the <code>Slider</code>.","Sets the optional default value for the <code>VerticalSlider</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extends the <code>Column</code> with the given children.","Extends the <code>Row</code> with the given children.","Extends the <code>Stack</code> with the given children.","Sets the <code>FilterMethod</code> of the <code>Image</code>.","","","","Focuses the next focusable widget.","Focuses the previous focusable widget.","Sets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.","Sets the <code>Renderer::Font</code> of the <code>ComboBox</code>.","Sets the font of the <code>PickList</code>.","Sets the text font of the <code>Radio</code> button.","Sets the <code>Font</code> of the <code>TextEditor</code>.","Sets the <code>Font</code> of the <code>TextInput</code>.","Sets the <code>Renderer::Font</code> of the text of the <code>Toggler</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Svg</code> that will display the contents of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Column</code> from an already allocated <code>Vec</code>.","Creates a <code>Row</code> from an already allocated <code>Vec</code>.","Creates a <code>Stack</code> from an already allocated <code>Vec</code>.","Sets the gap between the content and its <code>Tooltip</code>.","Sets the <code>Handle</code> of the <code>PickList</code>.","Sets the height of the <code>Column</code>.","Sets the height of the <code>Row</code>.","Sets the height of the <code>Stack</code>.","Sets the height of the <code>Button</code>.","Sets the height of the <code>Container</code>.","Sets the height of the <code>PaneGrid</code>.","Sets the height of the <code>ProgressBar</code>.","Sets the height of the <code>Scrollable</code>.","Sets the height of the <code>Slider</code>.","Sets the height of the <code>TextEditor</code>.","Sets the height of the <code>VerticalSlider</code>.","Set the <code>height</code> of the custom <code>Shader</code>.","Sets the height of the <code>Svg</code>.","Sets the height of the <code>Space</code>.","Sets the height of the <code>Image</code> boundaries.","Sets the height of the <code>Canvas</code>.","Highlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …","Creates a horizontal <code>Rule</code> with the given height.","Creates a horizontal <code>Rule</code> with the given height.","Creates a new <code>Space</code> widget that fills the available …","Displays a widget on top of another one, only when the …","Sets the <code>Icon</code> of the <code>Checkbox</code>.","Sets the <code>text_input::Icon</code> of the <code>ComboBox</code>.","Sets the <code>Icon</code> of the <code>TextInput</code>.","Sets the <code>Id</code> of the <code>Container</code>.","Sets the <code>Id</code> of the <code>Scrollable</code>.","Sets the <code>Id</code> of the <code>TextInput</code>.","Display images in your user interface.","Creates a new <code>Image</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the style class of the input of the <code>ComboBox</code>.","Sets the style of the input of the <code>ComboBox</code>.","The <code>mouse::Interaction</code> to use when hovering the area.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codese widgets that can provide hints to ensure continuity.","Creates a new <code>keyed::Column</code> with the given children.","Creates a <code>Column</code> with the given children.","","","","","","","","","","","","","","","","","","Lays out the <code>TextInput</code>, overriding its <code>Value</code> if provided.","","","","","","","","","","","","","Creates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …","Sets the <code>LineHeight</code> of the <code>ComboBox</code>.","Sets the <code>text::LineHeight</code> of the <code>TextEditor</code>.","Sets the <code>text::LineHeight</code> of the <code>TextInput</code>.","Sets the maximum height of the <code>Container</code>.","Sets the maximum width of the <code>Column</code>.","Sets the maximum width of the <code>Container</code>.","Sets the style class of the menu of the <code>ComboBox</code>.","Sets the style of the menu of the <code>ComboBox</code>.","A container intercepting mouse events.","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>Column</code>.","Creates a <code>MouseArea</code> with the given content.","Creates an empty <code>Row</code>.","Creates an empty <code>Stack</code>.","Creates an empty <code>Themer</code> that applies the given <code>Theme</code> to …","Creates a new <code>Button</code> with the given content.","Creates a new <code>Checkbox</code>.","Creates a new <code>ComboBox</code> with the given list of options, a …","Creates a <code>Container</code> with the given content.","Creates a <code>PaneGrid</code> with the given <code>State</code> and view function.","Creates a new <code>PickList</code> with the given list of options, the …","Creates a new <code>ProgressBar</code>.","Creates a new <code>Radio</code> button.","Creates a new vertical <code>Scrollable</code>.","Creates a new <code>Slider</code>.","Creates new <code>TextEditor</code> with the given <code>Content</code>.","Creates a new <code>TextInput</code> with the given placeholder and its …","Creates a new <code>Toggler</code>.","Creates a new <code>Tooltip</code>.","Creates a new <code>VerticalSlider</code>.","Creates a new <code>Responsive</code> widget with a closure that …","Creates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …","Create a new custom <code>Shader</code>.","Creates a new <code>Svg</code> from the given <code>Handle</code>.","Creates a new <code>QRCode</code> with the provided <code>Data</code>.","Creates an amount of empty <code>Space</code> with the given width and …","Creates a new <code>Image</code> with the given path.","Creates a new <code>Canvas</code>.","","","","Sets the message that should be produced when some action …","Sets the message that will be produced when a <code>Pane</code> of the …","Sets the message that will be produced when the outside …","Sets the message that will be produced when the <code>PickList</code> …","Enables the drag and drop interactions of the <code>PaneGrid</code>, …","The message to emit when the mouse enters the area.","","","","","","","","","","","","","","","","","","","","","","","","The message to emit when the mouse exits the area.","Sets the message that should be produced when some text is …","Sets the message that should be produced when some text is …","The message to emit on a middle button press.","The message to emit on a middle button release.","The message to emit when the mouse moves in the area.","Sets the message that will be produced when the <code>PickList</code> …","Sets the message that will be produced when an option of …","Sets the message that should be produced when some text is …","The message to emit on a left button press.","Sets the message that will be produced when the <code>Button</code> is …","Sets the message that will be produced when the <code>Button</code> is …","The message to emit on a left button release.","Sets the release message of the <code>Slider</code>. This is called …","Sets the release message of the <code>VerticalSlider</code>. This is …","Enables the resize interactions of the <code>PaneGrid</code>, which will","The message to emit on a right button press.","The message to emit on a right button release.","Sets a function to call when the <code>Scrollable</code> is scrolled.","Sets the message that should be produced when the <code>TextInput</code>…","Sets the function that will be called when the <code>Checkbox</code> is …","Sets the function that will be called when the <code>Checkbox</code> is …","Wraps the given widget and captures any mouse button …","","","","","","","","","","","Update the <code>Component</code> state based on the provided <code>Operation</code>","","","Display interactive elements on top of other widgets.","","","","","","","","","","","","","","","Sets the <code>Padding</code> of the <code>Column</code>.","Sets the <code>Padding</code> of the <code>Row</code>.","Sets the <code>Padding</code> of the <code>Button</code>.","Sets the <code>Padding</code> of the <code>ComboBox</code>.","Sets the <code>Padding</code> of the <code>Container</code>.","Sets the <code>Padding</code> of the <code>PickList</code>.","Sets the <code>Padding</code> of the <code>TextEditor</code>.","Sets the <code>Padding</code> of the <code>TextInput</code>.","Sets the padding of the <code>Tooltip</code>.","Let your users split regions of your application and …","Display a dropdown list of selectable values.","Creates a new <code>PickList</code>.","Sets the placeholder of the <code>PickList</code>.","Provide progress feedback to your users.","Creates a new <code>ProgressBar</code>.","Adds an element to the <code>Column</code>.","Adds an <code>Element</code> to the <code>Row</code>.","Adds an element to the <code>Stack</code>.","Adds an element to the <code>Column</code>, if <code>Some</code>.","Adds an element to the <code>Row</code>, if <code>Some</code>.","Adds an element to the <code>Stack</code>, if <code>Some</code>.","Encode and display information in a QR code.","Creates a new <code>QRCode</code> widget from the given <code>Data</code>.","Create choices using radio buttons.","Creates a new <code>Radio</code>.","Creates a new <code>Responsive</code> widget with a closure that …","Creates a new <code>Row</code> with the given children.","Creates a <code>Row</code> with the given children.","Display a horizontal or vertical rule for dividing content.","Navigate an endless amount of content with a scrollbar.","Creates a new <code>Scrollable</code> with the provided content.","Converts the <code>TextInput</code> into a secure password input.","A custom shader widget for wgpu applications.","Creates a new <code>Shader</code>.","Sets the optional “shift” step for the <code>Slider</code>.","Sets the optional “shift” step for the <code>VerticalSlider</code>.","","","","","","","Sets the size of the <code>Checkbox</code>.","","","Sets the text sixe of the <code>ComboBox</code>.","","","","","Sets the size of the <code>Radio</code> button.","","","","","","Sets the text size of the <code>TextEditor</code>.","","Sets the text size of the <code>TextInput</code>.","","Sets the size of the <code>Toggler</code>.","","","","","","","","","","","","Returns a <code>Size</code> hint for laying out the <code>Component</code>.","","Display an interactive selector of a single value from a …","Creates a new <code>Slider</code>.","Sets whether the <code>Tooltip</code> is snapped within the viewport.","Sets the vertical spacing <em>between</em> elements.","Sets the horizontal spacing <em>between</em> elements.","Sets the spacing between the <code>Checkbox</code> and the text.","Sets the spacing <em>between</em> the panes of the <code>PaneGrid</code>.","Sets the spacing between the <code>Radio</code> button and the text.","Sets the spacing between the <code>Toggler</code> and the text.","Creates a new <code>Stack</code> with the given children.","Creates a <code>Stack</code> with the given children.","","","","","","","","","","","","","","","","","","","","","","Sets the step size of the <code>Slider</code>.","Sets the step size of the <code>VerticalSlider</code>.","Sets the style of the <code>Button</code>.","Sets the style of the <code>Checkbox</code>.","Sets the style of the <code>Container</code>.","Sets the style of the <code>PaneGrid</code>.","Sets the style of the <code>PickList</code>.","Sets the style of the <code>ProgressBar</code>.","Sets the style of the <code>Radio</code> button.","Sets the style of the <code>Rule</code>.","Sets the style of this <code>Scrollable</code>.","Sets the style of the <code>Slider</code>.","Sets the style of the <code>TextEditor</code>.","Sets the style of the <code>TextInput</code>.","Sets the style of the <code>Toggler</code>.","Sets the style of the <code>Tooltip</code>.","Sets the style of the <code>VerticalSlider</code>.","Sets the style of the <code>Svg</code>.","Sets the style of the <code>QRCode</code>.","Display vector graphics in your application.","Creates a new <code>Svg</code> widget from the given <code>Handle</code>.","","","","","","","","","","","","","","","","","","","","","","Draw and interact with text.","Creates a new <code>Text</code> widget with the provided content.","Sets the horizontal alignment of the text of the <code>Toggler</code>","Sets the default text <code>Color</code> of the <code>Themer</code>.","Display a multi-line text input for text editing.","Creates a new <code>TextEditor</code>.","Display fields that can be filled with text.","Creates a new <code>TextInput</code>.","Sets the text <code>text::LineHeight</code> of the <code>Checkbox</code>.","Sets the text <code>text::LineHeight</code> of the <code>PickList</code>.","Sets the text <code>text::LineHeight</code> of the <code>Radio</code> button.","Sets the text <code>text::LineHeight</code> of the <code>Toggler</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Checkbox</code>.","Sets the <code>text::Shaping</code> strategy of the <code>PickList</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Radio</code> button.","Sets the <code>text::Shaping</code> strategy of the <code>Toggler</code>.","Sets the text size of the <code>Checkbox</code>.","Sets the text size of the <code>PickList</code>.","Sets the text size of the <code>Radio</code> button.","Sets the text size o the <code>Toggler</code>.","Use the built-in theme and styles.","A widget that applies any <code>Theme</code> to its contents.","Show toggle controls using togglers.","Creates a new <code>Toggler</code>.","Display a widget over another.","Creates a new <code>Tooltip</code> for the provided content with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Processes an <code>Event</code> and updates the <code>Component</code> state …","Creates a new <code>Text</code> widget that displays the provided value.","Creates a vertical <code>Rule</code> with the given width.","Creates a vertical <code>Rule</code> with the given width.","Display an interactive selector of a single value from a …","Creates a new <code>VerticalSlider</code>.","Creates a new <code>Space</code> widget that fills the available …","Produces the widgets of the <code>Component</code>, which may trigger …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Column</code>.","Sets the width of the <code>Row</code>.","Sets the width of the <code>Stack</code>.","Sets the width of the <code>Button</code>.","Sets the width of the <code>Checkbox</code>.","Sets the width of the <code>ComboBox</code>.","Sets the width of the <code>Container</code>.","Sets the width of the <code>PaneGrid</code>.","Sets the width of the <code>PickList</code>.","Sets the width of the <code>ProgressBar</code>.","Sets the width of the <code>Radio</code> button.","Sets the width of the <code>Scrollable</code>.","Sets the width of the <code>Slider</code>.","Sets the width of the <code>TextInput</code>.","Sets the width of the <code>Toggler</code>.","Sets the width of the <code>VerticalSlider</code>.","Set the <code>width</code> of the custom <code>Shader</code>.","Sets the width of the <code>Svg</code>.","Sets the width of the <code>Space</code>.","Sets the width of the <code>Image</code> boundaries.","Sets the width of the <code>Canvas</code>.","Creates a <code>Column</code> with the given capacity.","Creates a <code>Row</code> with the given capacity.","Creates a <code>Stack</code> with the given capacity.","Creates a <code>Column</code> with the given elements.","Creates a <code>Row</code> with the given elements.","Creates a <code>Stack</code> with the given elements.","Creates a new <code>Scrollable</code> with the given <code>Direction</code>.","Creates an amount of vertical <code>Space</code>.","Creates an amount of horizontal <code>Space</code>.","The <code>Button</code> can be pressed.","A generic widget that produces a message when pressed.","The theme catalog of a <code>Button</code>.","The item class of the <code>Catalog</code>.","The <code>Button</code> cannot be pressed.","The <code>Button</code> can be pressed and it is being hovered.","The <code>Button</code> is being pressed.","The possible status of a <code>Button</code>.","The style of a button.","A styling function for a <code>Button</code>.","","","","","","","","","","","The <code>Background</code> of the button.","The <code>Border</code> of the buton.","","","","","","","","","","","A danger button; denoting a destructive action.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A primary button; denoting a main action.","A secondary button; denoting a complementary action.","The <code>Shadow</code> of the butoon.","The <code>Style</code> of a class with the given status.","A success button; denoting a good outcome.","A text button; useful for links.","The text <code>Color</code> of the button.","","","","","","","","","","","","","","","","","","","","","Updates the <code>Style</code> with the given <code>Background</code>.","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A simple cache that stores generated <code>Geometry</code> to avoid …","A widget capable of drawing 2D graphics.","A <code>Canvas</code> event.","The style used to fill geometry.","The frame supported by a renderer.","The geometry supported by a renderer.","A fill which linearly interpolates colors along a …","A <code>Gradient</code> color.","A keyboard event.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A linear gradient interpolates colors along a direction …","A sharp corner.","A mouse event.","An immutable set of points that may or may not be …","The state and logic of a <code>Canvas</code>.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The internal state mutated by the <code>Program</code>.","The style of a stroke.","The coloring style of some drawing.","A bunch of text that can be drawn to a canvas","A touch event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Path</code> representing a circle given its center …","","","","","","","","","","","","","","","","","","","","","The color of the text","","","","","","","","","","","The contents of the text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the state of the <code>Program</code>, producing a bunch of …","Computes the <code>Path</code>s of the <code>Text</code> and draws them using the …","","","","","","","","","","","","","","Handle events of a canvas.","Fill <code>Geometry</code> with a certain style.","","","","","","","","","","","The font of the text","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","A gradient that can be used as a fill for some geometry.","The horizontal alignment of the text","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Path</code> representing a line segment given its …","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The line height of the text.","The shape to be used at the corners of paths or basic …","Returns the current mouse interaction of the <code>Program</code>.","Creates a new <code>Path</code> with the provided closure.","","","","","","","The offset of <code>LineDash::segments</code> to start the pattern.","Packs the <code>Gradient</code> for use in shader code.","Build different kinds of 2D shapes.","The position of the text relative to the alignment …","Returns the internal <code>lyon_path::Path</code>.","Creates a new <code>Path</code> representing a rectangle given its …","The fill rule defines how to determine what is inside and …","The alternating lengths of lines and gaps which describe …","The shaping strategy of the text.","The size of the text","Create lines from a <code>Path</code> and assigns them various …","The color or gradient of the fill.","The color or gradient of the stroke.","","","","","","","","","","","Returns the current <code>Path</code> with the given transform applied …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>State</code> of the <code>Program</code>.","The vertical alignment of the text","","","","","","","","","","","The distance between the two edges of the stroke.","Sets the color of the <code>Stroke</code>.","Sets the <code>LineCap</code> of the <code>Stroke</code>.","Sets the <code>LineJoin</code> of the <code>Stroke</code>.","Sets the width of the <code>Stroke</code>.","The <code>Event</code> was handled and processed by a widget.","A <code>Canvas</code> event.","The <code>Event</code> was <strong>NOT</strong> handled by any widget.","A keyboard event.","A mouse event.","The status of an <code>Event</code> after being processed.","A touch event.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Merges two <code>Status</code> into one.","","","","","","","","","","","","The style used to fill geometry.","A <code>Gradient</code> color.","","The fill rule defines how to determine what is inside and …","A solid <code>Color</code>.","The coloring style of some drawing.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The fill rule defines how to determine what is inside and …","The color or gradient of the fill.","","","","","","","","","","","A fill which linearly interpolates colors along a …","A linear gradient.","A linear gradient interpolates colors along a direction …","Packed <code>Gradient</code> data for use in shader code.","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","","","","","","","","","","","","","","","","","","","","","","","","","","","The absolute ending position of the gradient.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>Linear</code> builder.","Creates a new <code>Packed</code> gradient for use in shader code.","Packs the <code>Gradient</code> for use in shader code.","The absolute starting position of the gradient.","<code>ColorStop</code>s along the linear gradient direction.","","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","A <code>Path</code> builder.","An immutable set of points that may or may not be …","","","Build and draw curves.","Adds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …","Adds a circular arc to the <code>Path</code> with the given control …","","","","","","","","","Adds a cubic Bézier curve to the <code>Path</code> given its two …","","","","","Builds the <code>Path</code> of this <code>Builder</code>.","The center of the arc.","Adds a circle to the <code>Path</code> given its center coordinate and …","","","Closes the current sub-path in the <code>Path</code> with a straight …","","","","","","","","","","","","Adds an ellipse to the <code>Path</code> using a clockwise direction.","The end of the segment’s angle, clockwise rotation from …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Connects the last point in the <code>Path</code> to the given <code>Point</code> …","Moves the starting point of a new sub-path to the given …","Creates a new <code>Builder</code>.","","Adds a quadratic Bézier curve to the <code>Path</code> given its …","The radius of the arc.","Adds a rectangle to the <code>Path</code> given its top-left corner …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","An elliptical <code>Arc</code>.","","","","","","","","The center of the arc.","The center of the arc.","","","","","","","","The end of the segment’s angle, clockwise rotation from …","The end of the segment’s angle, clockwise rotation from …","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","The radii of the arc’s ellipse. The horizontal and …","The radius of the arc.","The clockwise rotation of the arc’s ellipse.","The start of the segment’s angle, clockwise rotation …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","Flag parameters for arcs as described by the SVG …","An alias for <code>usize</code>.","A view over a contiguous storage of custom attributes.","Interface for objects storing custom attributes associated …","An alias for a slice of <code>f32</code> values.","","","","A beveled corner is to be used to join path segments. The …","The stroke for each sub-path does not extend beyond its …","ID of a control point in a path.","","","","","","","ID of an endpoint point in a path.","","Represents an event or edge of path.","Refers to an event in a path.","The fill rule defines how to determine what is inside and …","","","","A path event representing endpoints and control points as …","A view over a sequence of endpoint IDs forming a polygon.","","","","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","An empty attribute slice.","","","","A simple path data structure.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","The commands of a path encoded in a single array using IDs …","A view over <code>PathCommands</code>.","A path event representing endpoints and control points as …","A view on a <code>Path</code>.","A view over a sequence of endpoints forming a polygon.","Interface for types types (typically endpoints and control …","Interface for objects storing endpoints and control points …","","","","","","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","The positive or negative side of a vector or segment.","At the end of each sub-path, the shape representing the …","The two possible orientations for the edges of a shape to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a view on the path commands.","Returns a view on this <code>Path</code>.","","Returns a slice over an endpoint’s custom attributes.","Returns a slice over an endpoint’s custom attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path building utilities.","Creates a PathCommandsBuilder to create path commands.","Creates a Builder to build a path.","","Creates a BuilderWithAttributes to build a path with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic representation for paths that allow more control …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns an iterator over the path, with endpoints and …","Returns the first endpoint and its custom attributes if …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the endpoint’s custom attributes as a slice of …","","","","","","","","","","","","","","","","","","","","","","","","Iterates over the endpoint and control point ids of the …","Iterates over the endpoint and control point ids of the …","Returns an iterator of <code>IdEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the path buffer is empty.","Returns whether the path buffer is empty.","","","","","Returns an iterator over the path commands.","Returns an iterator over the path commands.","Iterates over the entire <code>Path</code>, ignoring custom attributes.","Iterates over the path.","","","Returns an iterator of <code>Event&lt;&amp;T&gt;</code>.","","Iterates over the entire <code>Path</code> with custom attributes.","Iterates over the entire <code>Path</code> with custom attributes.","Tools to iterate over paths.","Of the four candidate arc sweeps, two will represent an …","Returns the last endpoint and its custom attributes if any.","","Returns the number of paths in the path buffer.","Returns the number of paths in the path buffer.","f32 version of the lyon_geom types used everywhere. Most …","","Creates an Empty <code>Path</code>.","","Returns the next event id within the path.","Returns the next event id within the path.","Returns the next event id within the sub-path.","Returns the next event id within the path.","","","","Returns the number of float attributes per endpoint.","","","","","","","The default path data structure.","A container to store multiple paths contiguously.","Returns an iterator of <code>PathEvent</code>.","Returns a view on a path made of these commands with …","","","Specific path types for polygons.","","","Returns a reversed version of this path in the form of an …","Returns a reversed version of this path in the form of an …","Creates an WithSvg to build a path with a rich set of …","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","","","","","","","","","","","<code>lyon_path</code> traits reexported here for convenience.","","Applies a transform to all endpoints and control points of …he radius of each corner of a rounded rectangle.","Builds a path.","A Builder that approximates curves with successions of …","A convenience wrapper for <code>PathBuilder</code> without custom …","The base path building interface.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Builds a path with a transformation applied.","Implements an SVG-like building interface on top of a …","","","","","","Adds a sub-path containing a circle.","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","","Adds an elliptical arc.","","","","","","","","","","","","","","","","","","","","","","Starts a new sub-path at a given position.","","","","Starts a new sub-path at a given position.","","","","","","","","","","","","","Builds a path object, consuming the builder.","","","","","","","Builds a path object, consuming the builder.","","","","","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","","","Closes the current sub path.","","","","","","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","","","","","Adds a cubic bézier curve to the current sub-path.","","","","","","","","","","","","","","","","","","","","","","","","","Ends the current sub path.","","","Ends the current sub path.","","","","","","Returns a builder that approximates all curves with …","","Returns a builder that approximates all curves with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Adds an horizontal line segment.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","","","","","Adds a line segment to the current sub-path.","","Start a new sub-path at the given position.","","","","","","","","","","","","","","","Applies the provided path event.","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","","","","","Adds a quadratic bézier curve to the current sub-path.","","Equivalent to <code>arc_to</code> in relative coordinates.","","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","","Adds an horizontal line segment in relative coordinates.","","Equivalent to <code>line_to</code> in relative coordinates.","","Equivalent to <code>move_to</code> in relative coordinates.","","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","","Adds a vertical line segment in relative coordinates.","","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","","","","","","Hints at the builder that a certain number of endpoints …","","","","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","","","","","","","","Returns a builder that applies the given transformation to …","","Returns a builder that applies the given transformation to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a vertical line segment.","","","","","","","","Returns a builder that support SVG commands.","Returns a builder that support SVG commands.","","A view on a <code>PathCommands</code> buffer and two slices for …","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","The commands of a path encoded in a single array using IDs …","Builds path commands.","A view over <code>PathCommands</code>.","An iterator of <code>PathEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns path commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using IDs.","","Creates a builder without allocating memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a pre-allocated builder.","An angle in radians","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","","A 2d curve segment defined by four points: the beginning …","","","","","","","An infinite line defined by a point and a vector.","A line defined by the equation …","A linear segment.","","","","","","A 2d curve segment defined by three points: the beginning …","Alias for <code>euclid::default::Rotation2D</code>","","","","","","Common APIs to segment types.","","An elliptic arc curve segment using the SVG’s end-point …","","","","Alias for <code>euclid::default::Transform2D</code>","Alias for <code>euclid::default::Translation2D</code>","A 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.","","","","","","","","","","","","","","","","","","","Return the curve after the split point.","Return the curve after the split point.","","Return the curve after the split point.","","Return the segment after the split point.","","Return the curve after the split point.","","Angle in radians","Returns the shortest signed angle between two angles.","","","Compute the length of the segment using a flattened …","","","Compute the length of the segment using a flattened …","","","","Elliptic arc related maths and tools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the curve before the split point.","","Return the curve before the split point.","","Return the curve before the split point.","Return the segment before the split point.","","Return the curve before the split point.","","","","","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle that contains the curve.","Return the smallest rectangle containing this segment.","Returns the smallest rectangle the curve is contained in","Returns the smallest rectangle that contains this triangle.","","Returns the smallest range of x that contains this curve.","Returns the smallest range of x that contains this curve.","Returns a conservative range of x that contains this …","","Returns the smallest range of y that contains this curve.","Returns the smallest range of y that contains this curve.","Returns a conservative range of y that contains this …","Returns a triangle containing this curve segment.","","","","Cast from one numeric representation to another.","","","Create simple circle.","Clip this segment against a rectangle.","Horizontally clip this segment against a range of the x …","Vertically clip this segment against a range of the y axis.","","","","","","","","","","","","","","","","","","","Computes the closest point on this segment to <code>p</code>.","Analytic solution to finding the closest point on the …","","","","","","","","","","","","","","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","","","","","","","","","","","","","","","","","","","","","Sample the derivative at t (expecting t between 0 and 1).","","","Sample the curve’s derivative at t (expecting t between …","","","Sample the curve’s derivative at t (expecting t between …","Computes the distance between this segment and a point.","","","Returns the shortest distance between this segment and a …","","","","","","","","","","","","","","","","","","","","","","","","","Sample x derivative at t (expecting t between 0 and 1).","Sample the x coordinate of the curve’s derivative at t …","","","Sample the x coordinate of the curve’s derivative at t …","","Sample y derivative at t (expecting t between 0 and 1).","","Sample the y coordinate of the curve’s derivative at t …","","","Sample the y coordinate of the curve’s derivative at t …","","Epsilon constants are usually not a good way to deal with …","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle the curve is contained in.","Returns a conservative rectangle that contains the curve.","","Returns a conservative range of x that contains this curve.","Returns a conservative range of x that contains this curve.","","Returns a conservative range of y that contains this curve.","Returns a conservative range of y that contains this curve.","Computes a “fat line” of this segment.","Computes a “fat line” of this segment.","","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Find the interval of the beginning of the curve that can …","Swap the direction of the segment.","Swap the direction of the segment.","","","Swap the beginning and the end of the segment.","","Returns an inverted version of this segment where the …","Swap the beginning and the end of the segment.","","","","","","","","","","","Approximate the arc with a sequence of cubic bézier …","Approximates the arc with a sequence of cubic bézier …","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","","Compute a flattened approximation of the curve, invoking a …","","Invokes a callback at each inflection point if any.","","Return local x extrema or None if this curve is monotonic.","","Return local y extrema or None if this curve is monotonic.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","","","","Start of the curve.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Convert from the SVG arc notation.","","Sample the curve’s angle at t (expecting t between 0 and …","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","","","","","","Computes the intersection (if any) between this segment …","","Test for triangle-triangle intersection.","","","Test for triangle-segment intersection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the curve can be approximated with a …","Returns true if the angle is a finite number.","","Returns true if the curve can be approximated with a …","Returns true if the curve can be approximated with a …","Returns whether this segment is fully monotonic.","Returns whether this segment is fully monotonic.","Returns true if the curve can be safely approximated with …","Per SVG spec, this arc should be rendered as a line_to …","","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the y axis.","Returns whether this segment is monotonic on the y axis.","Of the four candidate arc sweeps, two will represent an …","Computes the length of this segment.","Computes the length of this segment.","Linear interpolation between two angles, using the …","","","Computes the intersection points (if any) between this …","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment a …","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment …","Return the x inflection point or None if this curve is …","Return the y inflection point or None if this curve is …","","","","","","","","Computes third mid-point of this segment.","","","","","","","","Computes the number of quadratic bézier segments required …","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Returns this angle in the [0..2*PI[ range.","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","","","","","Sample the curve at t (expecting t between 0 and 1).","Sample the curve at t (expecting t between 0 and 1).","","","Sample the curve at t (expecting t between 0 and 1).","Sample the segment at t (expecting t between 0 and 1).","","","Sample the curve at t (expecting t between 0 and 1).","Sample the curve’s tangent at t (expecting t between 0 …","Changes the segment’s length, moving destination point.","Returns this angle in the ]-PI..PI] range.","","","Returns (sin(self), cos(self)).","Shorthand for <code>Size::new(x, y)</code>.","Return the parameter values corresponding to a given x …","","Return the parameter values corresponding to a given y …","","","","","","Split this curve into two sub-curves.","","Split this curve into two sub-curves.","","Split this curve into two sub-curves.","","Split this curve into two sub-segments.","","Split this curve into two sub-curves.","","Return the curve inside a given range of t.","","Return the sub-curve inside a given range of t.","","Return the sub-curve inside a given range of t.","Return the sub-segment inside a given range of t.","","Return the sub-curve inside a given range of t.","","Computes the squared distance between this segment and a …","Returned the squared distance to a point.","Returns the shortest squared distance between this segment …","Computes the squared length of this segment.","","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","End of the curve.","","","","","","","","","","","","","Converts this arc from endpoints to center notation.","Elevate this curve to a third order bézier.","","","","","","Cast angle to <code>f32</code>.","","","","","Cast angle <code>f64</code>.","Returns the line containing this segment.","","","","","","","","","","Approximate the curve with a single quadratic bézier …","Evaluates an upper bound on the maximum distance between …","Convert to the SVG arc notation.","Returns the vector between this segment’s <code>from</code> and <code>to</code> …","","[Not implemented] Applies the transform to this triangle …","Applies the transform to this curve and returns the …","Applies the transform to this segment and returns the …","Applies the transform to this curve and returns the …","","Fallible cast from one numeric representation to another.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for <code>Vector::new(x, y)</code>.","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","Sample x at t (expecting t between 0 and 1).","","","","Sample the x coordinate of the curve at t (expecting t …","","Sample the x coordinate of the segment at t (expecting t …","Sample the x coordinate of the curve at t (expecting t …","","","","The <code>x</code> (traditionally, horizontal) coordinate.","Find the advancement of the x-most position in the curve.","Find the advancement of the x-most position in the curve.","Find the x-least position in the curve.","Find the advancement of the x-least position in the curve.","","","Sample y at t (expecting t between 0 and 1).","","","","Sample the y coordinate of the curve at t (expecting t …","","Sample the y coordinate of the segment at t (expecting t …","","Sample the y coordinate of the curve at t (expecting t …","","","The <code>y</code> (traditionally, vertical) coordinate.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-least position in the curve.","Find the advancement of the y-least position in the curve.","","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","Flattening iterator for arcs.","An elliptic arc curve segment using the SVG’s end-point …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Of the four candidate arc sweeps, two will represent an …","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","","","","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","","","","","","","","","","","","","","","","Create a draining iterator that removes the specified …","","","","","","","","","Extract the overflowing element","","","","","","","","","","","","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","","","","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","","","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","","","","","","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …","A 2d curve segment defined by four points: the beginning …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","An angle in radians","A 2d vector of booleans, useful for component-wise logic …","A 3d vector of booleans, useful for component-wise logic …","A 2d axis aligned rectangle represented by its minimum and …","An axis aligned 3D box represented by its minimum and …","Homogeneous vector in 3D space.","A one-dimensional distance, with value represented by <code>T</code> …","A 2d Point tagged with a unit.","A 3d Point tagged with a unit.","A 2d Rectangle optionally tagged with a unit.","A rigid transformation. All lengths are preserved under …","A transform that can represent rotations in 2d, …","A transform that can represent rotations in 3d, …","A scaling factor between two different units of …","A group of 2D side offsets, which correspond to …","A 2d size tagged with a unit.","A 3d size tagged with a unit.","A 2d transform represented by a column-major 3 by 3 …","A 3d transform stored as a column-major 4 by 4 matrix.","A 2d transformation from a space to another that can only …","A 3d transformation from a space to another that can only …","Trait for basic trigonometry functions, so they can be …","The default unit.","A 2d Vector tagged with a unit.","A 3d Vector tagged with a unit.","Computes the absolute value of each component.","Computes the absolute value of each component.","Computes the vector with absolute values of each component.","Computes the vector with absolute values of each component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns new vector with by-component AND operation applied.","Returns new vector with by-component AND operation applied.","Angle in radians","Returns the signed angle between this vector and the x …","Returns the signed angle between this vector and another …","Returns the positive angle between this vector and another …","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","","","","","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","Returns true is this transform is approximately equal to …","","","","Utilities for testing approximate ordering - especially …","","","Returns result of multiplication of both components","Creates a rotation around a given axis.","Creates a rotation around the x axis.","Creates a rotation around the y axis.","Creates a rotation around the z axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for …","Shorthand for <code>BoolVector2D { x, y }</code>.","Shorthand for <code>BoolVector3D { x, y, z }</code>.","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast the unit","Cast the unit","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit","Cast the unit.","Cast the unit.","","See Point2D::ceil()","Rounds each component to the smallest integer equal or …","See Point3D::ceil()","Rounds each component to the smallest integer equal or …","Rounds each component to the smallest integer equal or …","See <code>Size2D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Size3D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Vector2D::ceil()</code>","See <code>Vector3D::ceil()</code>","Rounds each component to the smallest integer equal or …","","","","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the size each component of which clamped by …","Returns the size each component of which clamped by …","Returns the vector each component of which is clamped by …","Returns the vector each component of which is clamped by …","Return this vector with minimum and maximum lengths …","Return this vector with minimum and maximum lengths …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the component-wise division of the two vectors.","Returns the component-wise division of the two vectors.","Returns the component-wise multiplication of the two …","Returns the component-wise multiplication of the two …","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this box contains the point. Points are …","Returns <code>true</code> if this box3d contains the point. Points are …","Returns true if this rectangle contains the point. Points …","","","Returns <code>true</code> if this box contains the interior of the …","Returns <code>true</code> if this box3d contains the interior of the …","Returns true if this rectangle contains the interior of …","","Returns the norm of the cross product [self.x, self.y, 0] …","Cross product.","Decompose this into a translation and an rotation to be …","A set of aliases for all types, tagged with the default …","","","","","","","","","","","Returns the identity transform.","Returns the identity transform.","","","","","","","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes and returns the determinant of this transform.","Compute the determinant of the transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates Euclidean division, the matching method for …","Calculates Euclidean division, the matching method for …","Dot product.","Dot product.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a rotation from Euler angles.","Create a 3d point from this one, using the specified z …","Create a 3d vector from this one, using the specified z …","","Rounds each component to the biggest integer equal or …","See Point2D::floor()","See Point3D::floor()","Rounds each component to the biggest integer equal or …","See <code>Size2D::floor()</code>.","Rounds each component to the biggest integer equal or …","See <code>Size3D::floor()</code>.","Rounds each component to the biggest integer equal or …","Rounds each component to the biggest integer equal or …","See <code>Vector2D::floor()</code>","See <code>Vector3D::floor()</code>","Rounds each component to the biggest integer equal or …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Constructor taking angle and length","Create a transform providing its components via an array …","Create a transform providing its components via an array …","Equivalent to <code>from_array</code> with elements packed two at a time","Equivalent to <code>from_array</code> with elements packed four at a …","Constructor setting the same value to all sides, taking a …","Constructor taking properly Lengths instead of scalar …","Constructor taking properly Lengths instead of scalar …","Constructor taking a typed Length for each side.","Constructor taking scalar strongly typed lengths.","Constructor taking scalar strongly typed lengths.","Constructor taking properly  Lengths instead of scalar …","Constructor taking properly  Lengths instead of scalar …","Constructor.","Returns the smallest box containing all of the provided …","Returns the smallest box containing all of the provided …","Returns the smallest rectangle defined by the …","","Convenience function to create a scale transform from a …","Creates a Box2D of the given size, at offset zero.","Creates a Box3D of the given size, at offset zero.","Creates a rect of the given size, at offset zero.","","","","","","","","","","","","","","","","","","","","","","","","","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unit-less value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Construct side offsets from min and a max vector offsets.","Construct side offsets from min and a max vector offsets.","Unpack the underlying value from the wrapper.","Returns the underlying scalar scale factor.","Returns self.angle as a strongly typed <code>Angle&lt;T&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “greater then” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","","Component multiplied by the imaginary number <code>i</code>.","Creates the identity rotation.","Creates the identity rotation.","Creates an identity scale (1.0).","Create an identity matrix:","Creates an identity matrix:","Creates no-op translation (both <code>x</code> and <code>y</code> is <code>zero()</code>).","Creates no-op translation (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Construct an identity transform","Inflates the box by the specified sizes on each side …","Inflates the box by the specified sizes on each side …","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the size and position of an inner box.","Calculate the size and position of an inner rectangle.","Computes the intersection of two boxes, returning <code>None</code> if …","","","Computes the intersection of two boxes without check …","","Returns <code>true</code> if the two boxes intersect.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of this rotation.","Returns the inverse of this rotation.","The inverse Scale (1.0 / self).","Returns the inverse transform if possible.","Returns the inverse transform if possible.","Return the inverse transformation.","Return the inverse transformation.","Inverts the transformation","Returns <code>true</code> if this transform can be represented with a …","Check whether shapes on the XY plane with Z pointing …","Returns true if the size is zero, negative or NaN.","Returns true if the size is zero, negative or NaN.","","Returns <code>true</code> if any component of size is zero, negative, …","Returns <code>true</code> if any component of size is zero, negative or …","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns <code>true</code> if this scale has no effect.","Check if translation does nothing (both x and y is <code>zero()</code>).","Check if translation does nothing (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Returns whether it is possible to compute the inverse …","Returns whether it is possible to compute the inverse …","Returns true if the box has a negative area.","Returns true if the box has a negative volume.","Returns <code>true</code> if norm of this quaternion is (approximately) …","Returns <code>true</code> if both components is positive and <code>false</code> any …","Returns <code>true</code> if all components is positive and <code>false</code> any …","Returns <code>true</code> if all side offsets are zero.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","Returns the vector length.","Returns the vector length.","Linearly interpolate between this box and another box.","Linearly interpolate between this box3d and another box3d.","Linearly interpolate between this length and another …","Linearly interpolate between this point and another point.","Linearly interpolate between this point and another point.","Linearly interpolate between this rectangle and another …","Basic Linear interpolation between this rotation and …","Linearly interpolate each component between this size and …","Linearly interpolate between this size and another size.","Linearly interpolate each component between this vector …","Linearly interpolate each component between this vector …","Returns vector with results of “lower then” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","","","","","","","","","","","","","","","","","","","","","","","Returns maximum between this length and another length.","","","","","Returns the size each component of which are maximum of …","Returns the size each component of which are maximum of …","Returns the vector each component of which are maximum of …","Returns the vector each component of which are maximum of …","","","","","Returns minimum between this length and another length.","","","","","Returns the size each component of which are minimum of …","Returns the size each component of which are minimum of …","Returns the vector each component of which are minimum of …","Returns the vector each component of which are minimum of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies all of the transform’s component by a scalar …","","","","","","","","","Constructor.","Constructor.","Constructor taking scalar values directly.","Associate a value with a unit of measure.","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Constructor.","Creates a rotation from an angle in radians.","","Constructor taking a scalar for each side.","Constructor taking scalar values.","Constructor taking scalar values.","Create a transform specifying its components in using the …","Create a transform specifying all of it’s component as a …","","","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Construct a new rigid transformation, where the <code>rotation</code> …","Create a transform representing a 2d transformation from …","Constructor setting the same value to all sides, taking a …","Construct a new rigid transformation, where the <code>translation</code>…","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Computes the norm of this quaternion.","Returns a unit quaternion from this one.","Returns the vector with length of one unit.","Returns the vector with length of one unit","Returns new vector with results of negation operation on …","Returns new vector with results of negation operation on …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","","","","","","","","","","","","","","","","","","A one-dimensional length, tagged with its units.","","Constructor, setting all components to one.","Constructor, setting all components to one.","Returns new vector with by-component OR operation applied.","Returns new vector with by-component OR operation applied.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","","Create an orthogonal projection transform.","Calculate the b and position of an outer box.","Calculate the size and position of an outer rectangle.","Returns a box that encompasses the result of transforming …","Returns a 2d box that encompasses the result of …","Returns a 3d box that encompasses the result of …","Returns a rectangle that encompasses the result of …","Returns a rectangle that encompasses the result of …","","","","Create a simple perspective transform, projecting to the …","Shorthand for <code>Point2D::new(x, y)</code>.","Shorthand for <code>Point3D::new(x, y)</code>.","","Applies a rotation before self’s transformation and …","Returns a transform with a rotation applied before self’…","Applies a scale before self’s transformation and returns …","Returns a transform with a scale applied before self’s …","Applies a translation before self’s transformation and …","Returns a transform with a translation applied before self…","Returns this vector projected onto another one.","Returns this vector projected onto another one.","Returns a projection of this transform in 2d space.","Creates a rotation around from a quaternion representation.","The real part.","Creates a rotation from an angle in radians.","","","Shorthand for …","Returns a reflection vector using an incident ray and a …","Returns a reflection vector using an incident ray and a …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","","Return the normalized vector even if the length is larger …","Return the normalized vector even if the length is larger …","Returns a rotation transform.","Create a 3d rotation transform from an angle / axis. The …","","Return a box with edges rounded to integer coordinates, …","Return a box3d with edges rounded to integer coordinates, …","See Point2D::round()","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See Point3D::round()","Return a rectangle with edges rounded to integer …","See <code>Size2D::round()</code>.","Rounds each component to the nearest integer value.","See <code>Size3D::round()</code>.","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See <code>Vector2D::round()</code>","See <code>Vector3D::round()</code>","Rounds each component to the nearest integer value.","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","","","","","","Create a 2d scale transform:","Create a 3d scale transform:","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns vector, each component of which or from <code>a</code>, or from …","Returns vector, each component of which or from <code>a</code>, or from …","Change the size of the box by adjusting the max endpoint …","","","","","Shorthand for <code>Size2D::new(w, h)</code>.","Shorthand for <code>Size3D::new(w, h, d)</code>.","Create a 2d skew transform.","Spherical linear interpolation between this rotation and …","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","","","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Returns the vector’s length squared.","Returns the vector’s length squared.","Computes the squared norm of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a rotation representing the other rotation …","Returns a rotation representing this rotation followed by …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two transforms such that …","Applies a rotation after self’s transformation and …","Returns a transform with a rotation applied after self’s …","Applies a scale after self’s transformation and returns …","Returns a transform with a scale applied after self’s …","Applies a translation after self’s transformation and …","Returns a transform with a translation applied after self…","Convert into a 2d point.","Create a 2D transform picking the relevant terms from this …","Convert into a 2d vector.","Convert into a 3d point with z-coordinate equals to zero.","Creates a 3d rotation (around the z axis) from this 2d …","Create a 3D transform from the current transform","Convert into a 3d vector with <code>z</code> coordinate equals to …","Cast into an array with x and y.","Cast into an array with x, y and z.","Return this size as an array of two elements (width, then …","Return this size as an array of three elements (width, …","Returns an array containing this transform’s terms.","Returns an array containing this transform’s terms.","Cast into an array with x and y.","Cast into an array with x, y and z.","Cast into an array with x and y.","Cast into an array with x, y and z.","","Cast into an array with x, y, z and 0.","Returns an array containing this transform’s terms …","Returns an array containing this transform’s terms …","Equivalent to <code>to_array</code> with elements packed two at a time …","Equivalent to <code>to_array</code> with elements packed four at a time …","Equivalent to <code>to_array_transposed</code> with elements packed …","","Cast into an <code>f32</code> box.","Cast into an <code>f32</code> box3d.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> rectangle.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> vector.","Cast into an <code>f32</code> vector.","Cast into an <code>f64</code> box.","Cast into an <code>f64</code> box3d.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> rectangle.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> vector.","Cast into an <code>f64</code> vector.","Cast into an <code>i32</code> box, truncating decimals if any.","Cast into an <code>i32</code> box3d, truncating decimals if any.","Cast into an i32 point, truncating decimals if any.","Cast into an <code>i32</code> point, truncating decimals if any.","Cast into an <code>i32</code> rectangle, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an i32 vector, truncating decimals if any.","Cast into an <code>i32</code> vector, truncating decimals if any.","Cast into an <code>i64</code> box, truncating decimals if any.","Cast into an <code>i64</code> box3d, truncating decimals if any.","Cast into an i64 point, truncating decimals if any.","Cast into an <code>i64</code> point, truncating decimals if any.","Cast into an <code>i64</code> rectangle, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an i64 vector, truncating decimals if any.","Cast into an <code>i64</code> vector, truncating decimals if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast this vector into a point.","Cast this vector into a point.","Convert into Cartesian 2D point.","Convert into Cartesian 3D point.","","Cast this vector into a size.","Returns the matrix representation of this rotation.","Returns the matrix representation of this rotation.","Returns the matrix representation of this translation.","Returns the matrix representation of this translation.","Creates translation by this vector in vector units.","Creates translation by this vector in vector units","","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Return this size as a tuple of two elements (width, then …","Return this size as an array of three elements (width, …","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","","Cast into a tuple with x, y, z and 0.","Cast into an <code>u32</code> box, truncating decimals if any.","Cast into an <code>u32</code> box3d, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> rectangle, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u64</code> rectangle, truncating decimals if any.","Cast into an <code>u64</code> size, truncating decimals if any.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Cast into an <code>usize</code> box, truncating decimals if any.","Cast into an <code>usize</code> box3d, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> rectangle, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast this point into a vector.","Cast this point into a vector.","Return this size as a vector with width and height.","Return this size as a vector with width, height and depth.","Cast into a 2D vector.","Cast into a 3D vector.","","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 3D box and cast its unit.","Returns the given 2d point transformed by this rotation.","","Returns the given point transformed by this scale.","","Returns the given point transformed by this transform.","","","Translate a point and cast its unit.","Returns the given 2d point transformed by this rotation …","Returns the given 2d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given 3d point transformed by this rotation.","Returns the given point transformed by this scale.","Returns the given 3d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given rect transformed by this scale.","Translate a rectangle and cast its unit.","Translate a rectangle and cast its unit.","Returns the given size transformed by this scale.","No-op, just cast the unit.","No-op, just cast the unit.","Returns the given 2d vector transformed by this rotation.","","Returns the given vector transformed by this scale.","","Returns the given vector transformed by this matrix.","","","Returns the given 2d vector transformed by this rotation …","Returns the given 2d vector transformed by this matrix.","Returns the given 3d vector transformed by this rotation.","Returns the given 3d vector transformed by this matrix.","Returns the same box, translated by a vector.","Returns the same box3d, translated by a vector.","Returns the same rectangle, translated by a vector.","Create a 2d translation transform:","Create a 3d translation transform:","","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector with length of one unit.","Returns the vector with length of one unit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union of two boxes.","Computes the union of two boxes.","","Creates a rotation around from a quaternion representation …","","","","","","","","","","","","","","","","","","","","","","","","Convenience constructor.","Convenience constructor.","Returns the vector part (i, j, k) of this quaternion.","","","Returns result of multiplication of all components","","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","Returns the same transform with a different destination …","Returns the same transform with a different destination …","Return this vector scaled to fit the provided length.","Return this vector capped to a maximum length.","Return this vector capped to a maximum length.","Return this vector with a minimum length applied.","Return this vector with a minimum length applied.","Returns the same transform with a different source unit.","Returns the same transform with a different source unit.","","","","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","Returns a 2d point using this point’s x and y coordinates","Returns a 2d vector using this vector’s x and y …","Returns a 2d vector using this vector’s x and y …","","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s x and z …","","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","","Swap x and y.","Swap x and y.","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s y and z …","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>origin()</code>.","","","The same as <code>origin()</code>.","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>Zero::zero()</code> but available without importing …","The same as <code>Zero::zero()</code> but available without importing …","","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Trait for testing approximate equality","Default epsilon value","Returns <code>true</code> is this object is approximately equal to the …","Returns <code>true</code> is this object is approximately equal to the …","","","","","","","","","","","","","","","","","","","","","","","Angle in radians","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","Component multiplied by the imaginary number <code>i</code>.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The real part.","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Defines the smallest integer equal or greater than the …","Defines the biggest integer equal or lower than the …","","Defines the nearest integer value to the original value.","","Rounds to the smallest integer equal or greater than the …","Rounds to the biggest integer equal or lower than the …","","Rounds to the nearest integer value.","","A flattening iterator for quadratic bézier segments.","A flattening iterator for quadratic bézier segments.","","A 2d curve segment defined by three points: the beginning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common APIs to segment types.","","Return the curve after the split point.","Compute the length of the segment using a flattened …","Return the curve before the split point.","Sample the derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Swap the direction of the segment.","Approximates the curve with sequence of line segments.","Start of the curve.","Sample the curve at t (expecting t between 0 and 1).","Split this curve into two sub-curves.","Return the curve inside a given range of t.","End of the curve.","","","Sample x at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","","Angle between vectors v1 and v2 (oriented clockwise …","","","","","An iterator that consumes <code>Event</code> iterator and yields …","An iterator that consumes an iterator of <code>Point</code>s and …","","An extension trait for <code>PathEvent</code> iterators.","Applies a 2D transform to a path iterator and yields the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that turns curves into line segments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create the iterator.","Creates a new transformed path iterator from a path …","","","","","","","","Returns an iterator applying a 2D transform to all of its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Angle in radians","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>.","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","","The <code>x</code> (traditionally, horizontal) coordinate.","","","The <code>y</code> (traditionally, vertical) coordinate.","","","The default builder for <code>Path</code>.","A builder for <code>Path</code> with custom attributes.","An iterator of endpoint and control point ids for <code>Path</code> and …","An iterator for <code>Path</code> and <code>PathSlice</code>.","An iterator for <code>Path</code> and <code>PathSlice</code>.","A simple path data structure.","A view on a <code>Path</code>.","An iterator of over a <code>Path</code> traversing the path in reverse.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate on a flattened approximation of the path with …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>Path</code> from This iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Builder that appends a path to an existing PathBuffer.","A Builder that appends a path to an existing PathBuffer, …","Iterator over the paths in a <code>PathBufferSlice</code>.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A view over a sequence of endpoint IDs forming a polygon.","An iterator of <code>Event&lt;EndpointId, ()&gt;</code>.","An iterator of <code>PathEvent</code>.","A view over a sequence of endpoints forming a polygon.","An iterator of <code>IdEvent</code> for <code>Polygon</code>.","An iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a path.","The base path building interface.","An extension trait for <code>PathEvent</code> iterators.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds an elliptical arc.","Starts a new sub-path at a given position.","Builds a path object, consuming the builder.","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","Ends the current sub path.","","Returns a builder that approximates all curves with …","Returns an iterator that turns curves into line segments.","Adds an horizontal line segment.","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","Start a new sub-path at the given position.","","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","Adds an horizontal line segment in relative coordinates.","Equivalent to <code>line_to</code> in relative coordinates.","Equivalent to <code>move_to</code> in relative coordinates.","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","Adds a vertical line segment in relative coordinates.","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","Returns a builder that applies the given transformation to …","Returns an iterator applying a 2D transform to all of its …","Adds a vertical line segment.","Returns a builder that support SVG commands.","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A <code>Gradient</code> color.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A sharp corner.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The style of a stroke.","The coloring style of some drawing.","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The shape to be used at the corners of paths or basic …","The offset of <code>LineDash::segments</code> to start the pattern.","The alternating lengths of lines and gaps which describe …","The color or gradient of the stroke.","The distance between the two edges of the stroke.","The <code>Checkbox</code> can be interacted with.","The theme catalog of a <code>Checkbox</code>.","A box that can be checked.","The item class of the <code>Catalog</code>.","The <code>Checkbox</code> cannot be interacted with.","The <code>Checkbox</code> can be interacted with and it is being …","The icon in a <code>Checkbox</code>.","The possible status of a <code>Checkbox</code>.","The style of a checkbox.","A styling function for a <code>Checkbox</code>.","","","","","","","","","","","","","","","","The <code>Background</code> of the checkbox.","The <code>Border</code> of hte checkbox.","","","","","","","","","","","","","The unicode code point that will be used as the icon.","","","","A danger checkbox; denoting a negaive toggle.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","Font that will be used to display the <code>code_point</code>,","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The icon <code>Color</code> of the checkbox.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The line height of the icon.","A primary checkbox; denoting a main toggle.","A secondary checkbox; denoting a complementary toggle.","The shaping strategy of the icon.","Font size of the content.","The <code>Style</code> of a class with the given status.","A success checkbox; denoting a positive toggle.","The text <code>Color</code> of the checkbox.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates if the <code>Checkbox</code> is currently checked.","Indicates if the <code>Checkbox</code> is currently checked.","Indicates if the <code>Checkbox</code> is currently checked.","The theme catalog of a <code>ComboBox</code>.","A widget for searching and selecting a single value from a …","The local state of a <code>ComboBox</code>.","","","","","","","","","","","The default class for the text input of the <code>ComboBox</code>.","The default class for the menu of the <code>ComboBox</code>.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Creates a new <code>State</code> for a <code>ComboBox</code> with the given list of …","","","","","","","","","","","Creates a new <code>State</code> for a <code>ComboBox</code> with the given list of …","The theme catalog of a <code>Container</code>.","The item class of the <code>Catalog</code>.","An element decorating some content.","The identifier of a <code>Container</code>.","The appearance of a container.","A styling function for a <code>Container</code>.","","","","","","","","","","","The <code>Background</code> of the container.","The <code>Border</code> of the container.","A bordered <code>Container</code> with a background.","","","","","","","","","","","The default class produced by the <code>Catalog</code>.","","","","","","","","Draws the background of a <code>Container</code> given its <code>Style</code> and …","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Computes the layout of a <code>Container</code>.","Creates a custom <code>Id</code>.","","A rounded <code>Container</code> with a background.","The <code>Shadow</code> of the container.","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the container.","","","A transparent <code>Container</code>.","","","","","","","","","","","","","","","Creates a unique <code>Id</code>.","","","Produces a <code>Command</code> that queries the visible screen bounds …","","","Updates the background of the <code>Style</code>.","Updates the border of the <code>Style</code> with the given <code>Color</code> and …","Image filtering strategy.","A handle of some image data.","A frame that displays an image while keeping aspect ratio.","Bilinear interpolation.","Nearest neighbor.","A frame that displays an image with the ability to zoom …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the image <code>Data</code>.","","","","","","","","","","","Draws an <code>Image</code>","","","","","","","","","","","","","Sets the <code>image::FilterMethod</code> of the <code>Viewer</code>.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates an image <code>Handle</code> containing the image data directly.","Creates an image <code>Handle</code> pointing to the image of the given …","Creates an image <code>Handle</code> containing the image pixels …","","","","","","","","Sets the height of the <code>Viewer</code>.","Returns the unique identifier of the <code>Handle</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Computes the layout of an <code>Image</code>.","","Sets the max scale applied to the image of the <code>Viewer</code>.","Sets the min scale applied to the image of the <code>Viewer</code>.","","Creates a new <code>Viewer</code> with the given <code>State</code>.","","","Sets the padding of the <code>Viewer</code>.","Sets the percentage the image of the <code>Viewer</code> will be scaled …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zoom and pan on an image.","Creates a new <code>Viewer</code> with the given image <code>Handle</code>.","","","","Sets the width of the <code>Viewer</code>.","The local state of a <code>Viewer</code>.","A frame that displays an image with the ability to zoom …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the bounds of the underlying image, given the …","","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the cursor is currently grabbed by the <code>Viewer</code>.","Creates a new <code>State</code>.","","","","","","","","","","","","A container that distributes its contents vertically.","","Sets the horizontal alignment of the contents of the <code>Column</code>…","","","","","","","","Distribute content vertically.","","","","","","","","","Extends the <code>Column</code> with the given children.","Returns the argument unchanged.","","","Creates a <code>Column</code> from already allocated <code>Vec</code>s.","Sets the height of the <code>Column</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","Sets the maximum width of the <code>Column</code>.","","Creates an empty <code>Column</code>.","","","","","Sets the <code>Padding</code> of the <code>Column</code>.","Adds an element to the <code>Column</code>.","Adds an element to the <code>Column</code>, if <code>Some</code>.","","Sets the vertical spacing <em>between</em> elements.","","","","","","","","","","","","Sets the width of the <code>Column</code>.","Creates a <code>Column</code> with the given capacity.","Creates a <code>Column</code> with the given elements.","A container that distributes its contents vertically.","Build and show dropdown menus.","The theme catalog of a <code>Menu</code>.","The item class of the <code>Catalog</code>.","A list of selectable options.","The local state of a <code>Menu</code>.","The appearance of a <code>Menu</code>.","A styling function for a <code>Menu</code>.","","","","","","","","","","","","","","","","The <code>Background</code> of the menu.","The <code>Border</code> of the menu.","","","","","","","","","","","","The default style of the list of a <code>Menu</code>.","The default class produced by the <code>Catalog</code>.","","The default class for the scrollable of the <code>Menu</code>.","","","","","","","","","","","","","","","Sets the font of the <code>Menu</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a new <code>Menu</code> with the given <code>State</code>, a list of options,","Creates a new <code>State</code> for a <code>Menu</code>.","","Turns the <code>Menu</code> into an overlay <code>Element</code> at the given target …","Sets the <code>Padding</code> of the <code>Menu</code>.","The background <code>Color</code> of a selected option in the menu.","The text <code>Color</code> of a selected option in the menu.","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the menu.","Sets the text <code>text::LineHeight</code> of the <code>Menu</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Menu</code>.","Sets the text size of the <code>Menu</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Menu</code>.","All panes are visible","A fixed reference line for the measurement of coordinates.","Bottom edge.","A <code>Pane</code> was picked and then dropped outside of other <code>Pane</code> …","The theme catalog of a <code>PaneGrid</code>.","Center region.","The item class of this <code>Catalog</code>.","The arrangement of a <code>PaneGrid</code>.","The content of a <code>Pane</code>.","The visible contents of the <code>PaneGrid</code>","A four cardinal direction.","↓","An event produced during a drag and drop interaction of a …","A pane that can be dragged.","A <code>Pane</code> was dropped on top of another <code>Pane</code>.","The edges of an area.","An <code>Edge</code> of the full <code>PaneGrid</code>.","Edge region.","The appearance of a highlight of the <code>PaneGrid</code>.","The horizontal axis: —","←","Left edge.","A line.","A maximized pane is visible","A layout node of a <code>PaneGrid</code>.","A rectangular region in a <code>PaneGrid</code> used to display widgets.","A <code>Pane</code>.","The region of this <code>Node</code> is taken by a <code>Pane</code>.","A single <code>Pane</code> of the <code>PaneGrid</code>.","A collection of panes distributed using either vertical or …","A <code>Pane</code> was picked for dragging.","The region of a <code>Pane</code>.","An event produced during a resize interaction of a <code>PaneGrid</code>…","→","Right edge.","A divider that splits a region in a <code>PaneGrid</code> into two …","A split of the available space.","The region of this <code>Node</code> is split into two.","The state of a <code>PaneGrid</code>.","The appearance of a <code>PaneGrid</code>.","A styling function for a <code>PaneGrid</code>.","The <code>Target</code> area a pane can be dropped on.","The title bar of a <code>Pane</code>.","Top edge.","↑","The vertical axis: |","","","","","","","","","","","","","","","","","","","Returns the adjacent <code>Pane</code> of another <code>Pane</code> in the given …","Sets whether or not the <code>controls</code> attached to this <code>TitleBar</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the pane region.","The <code>Border</code> of the pane region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Draggable</code> with the given <code>Layout</code> can be …","","Sets the style class of the <code>Content</code>.","Sets the style class of the <code>TitleBar</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the given <code>Pane</code> and returns its internal state and …","","","The <code>Color</code> of the <code>Line</code>.","","","","","","","","","","","","","","","","","","","","","Sets the controls of the <code>TitleBar</code>.","The default style of a <code>PaneGrid</code>.","The default class produced by this <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>Content</code> with the provided <code>Renderer</code> and <code>Layout</code>.","Draws the <code>TitleBar</code> with the provided <code>Renderer</code> and <code>Layout</code>.","","","","","","","","","","Drops the given <code>Pane</code> into the provided <code>Target</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the internal state of the given <code>Pane</code>, if it exists.","","","","","Returns the internal state of the given <code>Pane</code> with …","","","","","The appearance of a hovered region highlight.","The appearance of a hovered split.","","","","","","","","","","","","","","","","","","","The internal state of the <code>PaneGrid</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the amount of panes in the <code>State</code> is 0.","Returns whether the mouse cursor is over the pick area of …","Returns an iterator over all the panes of the <code>State</code>, …","Returns an iterator over the values of the <code>Contents</code>","Returns a mutable iterator over all the panes of the <code>State</code>,","Returns the layout of the <code>State</code>.","Returns the layout <code>Node</code> of the <code>Contents</code>","Returns the total amount of panes in the <code>State</code>.","Maximize the given <code>Pane</code>. Only this pane will be rendered …","Returns the maximized <code>Pane</code> of the <code>PaneGrid</code>.","Move <code>Pane</code> to an <code>Edge</code> of the <code>PaneGrid</code>.","Creates a new <code>Content</code> with the provided body.","Creates a new <code>TitleBar</code> with the given content.","Creates a new <code>State</code>, initializing the first pane with the …","","Sets the <code>Padding</code> of the <code>TitleBar</code>.","Returns the rectangular region for each <code>Pane</code> in the <code>Node</code> …","The panes of the <code>PaneGrid</code>.","","","The appearance of a picked split.","The new ratio of the <code>Split</code>.","Resizes two panes by setting the position of the provided …","Restore the currently maximized <code>Pane</code> to it’s normal …","Splits the provided <code>Rectangle</code> on the current <code>Axis</code> with the …","Splits the given <code>Pane</code> into two in the given <code>Axis</code> and …","The <code>Split</code> that is being dragged for resizing.","Calculates the bounds of the split line in a <code>Rectangle</code> …","Returns the axis, rectangular region, and ratio for each …","Split a target <code>Pane</code> with a given <code>Pane</code> on a given <code>Region</code>.","Returns an iterator over each <code>Split</code> in this <code>Node</code>.","The state of a <code>PaneGrid</code>.","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Content</code>.","Sets the style of the <code>TitleBar</code>.","Swaps the position of the provided panes in the <code>State</code>.","Sets the <code>TitleBar</code> of the <code>Content</codehe width of the <code>Line</code>.","Creates a new <code>State</code> with the given <code>Configuration</code>.","The left/top <code>Configuration</code> of the split.","The direction of the split.","The right/bottom <code>Configuration</code> of the split.","The ratio of the split in [0.0, 1.0].","The picked <code>Pane</code>.","The picked <code>Pane</code>.","The picked <code>Pane</code>.","The <code>Target</code> where the picked <code>Pane</code> was dropped on.","The left/top <code>Node</code> of the split.","The direction of the split.","The right/bottom <code>Node</code> of the split.","The <code>Split</code> of this <code>Node</code>.","The ratio of the split in [0.0, 1.0].","The current action of a <code>PaneGrid</code>.","A <code>Pane</code> in the <code>PaneGrid</code> is being dragged.","The <code>PaneGrid</code> is idle.","The internal state of a <code>PaneGrid</code>.","A <code>Split</code> in the <code>PaneGrid</code> is being dragged.","The state of a <code>PaneGrid</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Initializes the <code>Internal</code> state of a <code>PaneGrid</code> from a …","","","","","The internal state of the <code>PaneGrid</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The layout <code>Node</code> of the <code>Internal</code> state","The panes of the <code>PaneGrid</code>.","Returns the current <code>Pane</code> that is being dragged, if any.","Returns the current <code>Split</code> that is being dragged, if any.","","","","","","","","","","","","","","","","","","","","","The <code>Axis</code> of the <code>Split</code>.","The starting <code>Point</code> of the drag interaction.","The <code>Pane</code> being dragged.","The <code>Split</code> being dragged.","The <code>PickList</code> can be interacted with.","Displays an arrow icon (▼).","The theme catalog of a <code>PickList</code>.","The item class of the <code>Catalog</code>.","A custom dynamic handle.","The handle to the right side of the <code>PickList</code>.","The <code>PickList</code> is being hovered.","The icon of a <code>Handle</code>.","No handle will be shown.","The <code>PickList</code> is open.","A widget for selecting a single value from a list of …","A custom static handle.","The possible status of a <code>PickList</code>.","The appearance of a pick list.","A styling function for a <code>PickList</code>.","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the pick list.","The <code>Border</code> of the pick list.","","","","","","","","","","","","","","","","","The unicode code point that will be used as the icon.","","","","","The default style of the field of a <code>PickList</code>.","The default class produced by the <code>Catalog</code>.","","The default class for the menu of the <code>PickList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Font that will be used to display the <code>code_point</code>,","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","The handle <code>Color</code> of the pick list.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Line height of the content.","","The placeholder <code>Color</code> of the pick list.","The shaping strategy of the icon.","Font size of the content.","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the pick list.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Icon</code> used when <code>PickList</code> is closed.","The <code>Icon</code> used when <code>PickList</code> is open.","Font size of the content.","The theme catalog of a <code>ProgressBar</code>.","The item class of the <code>Catalog</code>.","A bar that displays progress.","The appearance of a progress bar.","A styling function for a <code>ProgressBar</code>.","","","","","","The <code>Background</code> of the progress bar.","The <code>Background</code> of the bar of the progress bar.","The <code>Border</code> of the progress bar.","","","","","","The danger style of a <code>ProgressBar</code>.","The default class produced by the <code>Catalog</code>.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The primary style of a <code>ProgressBar</code>.","The secondary style of a <code>ProgressBar</code>.","The <code>Style</code> of a class with the given status.","The success style of a <code>ProgressBar</code>.","","","","","","","","","","","The theme catalog of a <code>QRCode</code>.","The item class of the <code>Catalog</code>.","The data of a <code>QRCode</code>.","The data is too long to encode in a QR code for the chosen …","An error that occurred when building a <code>Data</code> for a <code>QRCode</code>.","The error correction level.","High error correction. 30% of the data can be restored.","A character that does not belong to the character set was …","The chosen ECI designator is invalid. A valid designator …","The chosen <code>Version</code> and <code>ErrorCorrection</code> combination is …","Low error correction. 7% of the data can be restored.","Medium error correction. 15% of the data can be restored.","A micro QR code version. It should be between 1 and 4.","A normal QR code version. It should be between 1 and 40.","A type of matrix barcode consisting of squares arranged in …","Quartile error correction. 25% of the data can be restored.","The appearance of a QR code.","A styling function for a <code>QRCode</code>.","One or more characters in the provided data are not …","The size of a <code>QRCode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The color of the QR code background","","","","","","","","","","","The color of the QR code data cells","","","","","","","","","","","","","","The default style of a <code>QRCode</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Data</code> with the provided data.","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Data</code> with the provided <code>ErrorCorrection</code>.","Creates a new <code>Data</code> with the provided <code>Version</code> and …","The <code>Radio</code> button can be interacted with.","The theme catalog of a <code>Radio</code>.","The item class of the <code>Catalog</code>.","The <code>Radio</code> button is being hovered.","A circular button representing a choice.","The possible status of a <code>Radio</code> button.","The appearance of a radio button.","A styling function for a <code>Radio</code>.","","","","","","","","","","","The <code>Background</code> of the radio button.","The border <code>Color</code> of the radio button.","The border width of the radio button.","","","","","","","","","","","The default style of a <code>Radio</code> button.","The default class produced by the <code>Catalog</code>.","","","","","The <code>Color</code> of the dot of the radio button.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the radio button.","","","","","","","","","","","","","","","","","","","","","Indicates whether the <code>Radio</code> button is currently selected.","Indicates whether the <code>Radio</code> button is currently selected.","Different offset on each end of the rule, length units. …","The theme catalog of a <code>Rule</code>.","The item class of the <code>Catalog</code>.","The fill mode of a rule.","Fill the whole length of the container.","Uniform offset from each end, length units.","Fill a percent of the length of the container. The rule …","Display a horizontal or vertical rule for dividing content.","The appearance of a rule.","A styling function for a <code>Rule</code>.","","","","","","","","","","","","","","","","","","","The color of the rule.","","","The default styling of a <code>Rule</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","Return the starting offset and length of the rule.","The <code>FillMode</code> of the rule.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The radius of the line corners.","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","The width (thickness) of the rule line.","The amount of absolute offset in each direction of a …","The <code>Scrollable</code> can be interacted with.","Alignment of the scrollable’s content relative to it’s …","Both vertical and horizontal scrolling","The theme catalog of a <code>Scrollable</code>.","The item class of the <code>Catalog</code>.","The direction of <code>Scrollable</code>.","The <code>Scrollable</code> is being dragged.","A relative offset that points to the bottom-right of a …","Content is aligned to the end of the <code>Viewport</code>","Horizontal scrolling","The <code>Scrollable</code> is being hovered.","The identifier of a <code>Scrollable</code>.","Properties of a scrollbar within a <code>Scrollable</code>.","The amount of relative offset in each direction of a …","A relative offset that points to the top-left of a …","A widget that can vertically display an infinite amount of …","The appearance of the scrollbar of a scrollable.","The appearance of the scroller of a scrollable.","Content is aligned to the start of the <code>Viewport</code>.","The possible status of a <code>Scrollable</code>.","The appearance of a scrolable.","A styling function for a <code>Scrollable</code>.","Vertical scrolling","The current <code>Viewport</code> of the <code>Scrollable</code>.","Returns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>.","Returns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>, but …","","","","","","","","","","","","Sets the alignment of the <code>Scrollable</code> .","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of a scrollbar.","The <code>Border</code> of a scrollbar.","The <code>Border</code> of the scroller.","","","","","","","","","","","","","","","","","","","","","","","Returns the bounds of the current <code>Viewport</code>.","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the scroller.","","","","","","","","","","","","The <code>container::Style</code> of a scrollable.","Returns the content bounds of the current <code>Viewport</code>.","The default style of a <code>Scrollable</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the gap between a horizontal and …","","","Returns the <code>Properties</code> of the horizontal scrollbar, if any.","The horizontal <code>Scrollbar</code> appearance.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the scrollbar margin of the <code>Scrollable</code> .","Creates new <code>Properties</code> for use in a <code>Scrollable</code>.","Creates a custom <code>Id</code>.","","","","","","Returns the <code>RelativeOffset</code> of the current <code>Viewport</code>.","Produces a <code>Command</code> that scrolls the <code>Scrollable</code> with the …","The appearance of the <code>Scroller</code> of a scrollbar.","Sets the scroller width of the <code>Scrollable</code> .","Produces a <code>Command</code> that snaps the <code>Scrollable</code> with the …","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a unique <code>Id</code>.","","","","","","","","","","","","Returns the <code>Properties</code> of the vertical scrollbar, if any.","The vertical <code>Scrollbar</code> appearance.","","","","","","","","","","","","Sets the scrollbar width of the <code>Scrollable</code> .","The amount of horizontal offset","The amount of horizontal offset","The amount of vertical offset","The amount of vertical offset","The properties of the horizontal scrollbar.","The properties of the vertical scrollbar.","Indicates if the horizontal scrollbar is being dragged.","Indicates if the horizontal scrollbar is being hovered.","Indicates if the vertical scrollbar is being dragged.","Indicates if the vertical scrollbar is being hovered.","A <code>Shader</code> event.","A keyboard event.","A mouse event.","A set of methods which allows a <code>Primitive</code> to be rendered.","The type of primitive this <code>Program</code> can draw.","The state and logic of a <code>Shader</code> widget.","A window requested a redraw.","A widget which can render custom shaders with Iced’s <code>wgpu</code>…","The internal state of the <code>Program</code>.","Stores custom, user-provided types.","A touch event.","A viewing region for displaying computer graphics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>Primitive</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a reference to the data with type <code>T</code> if it exists …","Returns a mutable reference to the data with type <code>T</code> if it …","Returns <code>true</code> if <code>Storage</code> contains a type <code>T</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the logical size of the <code>Viewport</code>.","Returns the current mouse interaction of the <code>Program</code>.","","Returns the physical height of the <code>Viewport</code>.","Returns the physical size of the <code>Viewport</code>.","Returns the physical width of the <code>Viewport</code>.","Processes the <code>Primitive</code>, allowing for GPU buffer …","Returns the projection transformation of the <code>Viewport</code>.","Renders the <code>Primitive</code>.","Returns the scale factor of the <code>Viewport</code>.","Inserts the data <code>T</code> in to <code>Storage</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the internal <code>State</code> of the <code>Program</code>. This can be used …","","","","Creates a new <code>Viewport</code> with the given physical dimensions …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Whether wgpu should expose adapters that run on top of …","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","A ray-tracing acceleration structure binding.","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to direct indexed …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly with …","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Slice into a <code>Buffer</code>.","Different ways that you can use a buffer.","Read only view into a mapped buffer.","Write only view into mapped buffer.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Loads the specified value for this attachment into the …","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a <code>CommandBuffer</code>.","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Describes the timestamp writes of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Cpu / Software Rendering.","<code>Instance::create_surface()</code> or a related function failed.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","After Device::destroy","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Reason for “lose the device”.","Supported physical device types.","Discards the resulting value of the render pass for this …","Discrete GPU with separate CPU/GPU memory.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","After Device::drop","D.component","D.alpha","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","Error type","Filter for error scopes.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Allows textures with formats “r32float”, “rg32float…","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Describes the fragment processing in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","Selects which OpenGL ES 3 minor version to request.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the <code>first_instance</code> member in …","A timestamp that is invalid due to the platform not having …","Opaque globally-unique identifier","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object debugging label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Loads the existing value for this attachment into the …","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Passed to <code>Device::poll</code> to control how and if it should …","Result of a maintain operation.","Type of buffer mapping.","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","YUV 4:2:0 chroma subsampled format.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","No value.","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","More information coming soon …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","Catch only out-of-memory errors.","There is no more memory left to allocate a new frame.","Out of memory error","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Plane 0.","Plane 1.","Plane 2.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","A write-only view into a staging buffer.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Allows for the creation of ray-tracing queries within …","Allows for the creation of ray-tracing acceleration …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","Raw window &amp; display handle.","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass: a list of render …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Describes the timestamp writes of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","After replacing the device_lost_callback","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device from an <code>Adapter</code> failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Allows vertex shaders to have outputs which are not …","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Supports specifying which view formats are allowed when …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","Descriptor for a shader module given by SPIR-V binary, for …","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","Some value of type <code>T</code>.","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","Stores the resulting value of the render pass for this …","Operation to perform to the output attachment at the end …","Identifier for a particular call to <code>Queue::submit</code>. Can be …","There are no active submissions in flight as of the …","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Defines the capabilities of a given surface and adapter.","Describes a <code>Surface</code>.","Result of an unsuccessful call to …","Status of the received surface image.","The window/canvas/surface/swap-chain/etc. a surface is …","The window/canvas/surface/swap-chain/etc. a surface is …","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Allows for creation of textures of format …","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","Triggered by driver","8 bit integer RGBA, [0, 255] converted to/from …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","If this is true, use of <code>@builtin(vertex_index)</code> and …","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Catch only validation errors.","Validation error, signifying a bug in code or data","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","Describes the vertex processing in a render pipeline.","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","Same as WaitForSubmissionIndex but waits for the most …","On wgpu-core based backends, block until the given …","On wgpu-core based backends, block until the given …","","","","WGSL module as a string slice.","Window handle producer.","Super trait for window handles as used in <code>SurfaceTarget</code>.","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds an <code>Srgb</code> suffix to the given texture format, if the …","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","Specifies how the alpha channel of the textures should be …","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Must be at least 1. If this is not 1, all filter modes …","Returns <code>true</code> if any backend feature is enabled for the …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffereturn the binding view of the entire buffer.","Return the binding view of the entire buffer.","Returns the inner hal Surface using a callback. The hal …","Return a reference to a specific backend instance, if …","Apply a callback to this <code>Adapter</code>’s underlying backend …","Apply a callback to this <code>Device</code>’s underlying backend …","Returns the inner hal Texture using a callback. The hal …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","The list of attributes which comprise a single vertex.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a occlusion query on this render pass. It can be …","Start a pipeline statistics query on this render pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","Depth bias state.","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","The number of bytes one texel block occupies during an …","Returns the dimension of a block of texels.","The number of bytes one texel block occupies during an …","Border color to use when address_mode is …he buffer to be copied to/from.","The buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absolute).","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","The color space of this texture.","","","","","","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of components this format has taking …","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","Total count of queries the set contains. Must not be zero. …","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> from a wgpu-hal Buffer.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a new surface targeting a given …","Creates a new surface targeting a given …","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Creates a view of this texture.","The face culling mode.","Enable debugging and validation flags.","","","","","","","","","","","","","","","Creates a new instance of wgpu with default options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","Returns the depth or layer count of this <code>Texture</code>.","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","The effect of draw calls on the depth and stencil aspects …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written toesired maximum number of frames that the presentation …","Destroy this device.","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","<code>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the dimension of this <code>Texture</code>.","Dimensions of the texture.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","Draws primitives from the active vertex buffer(s).","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","","","Draws primitives from the active vertex buffer(s) based on …","","Draws primitives from the active vertex buffer(s) based on …","Driver name","Driver infoultiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","End the occlusion query on this render pass. It can be …","The index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","End the pipeline statistics query on this render pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","Retrieves all available <code>Adapter</code>s that match the given …xecute a render bundle, which is a set of pre-recorded …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is preformed when stencil test fails.","The features which can be used to create devices on this …","The features which can be used on this device.","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instancendicates that only a fallback adapter can be returned. …","Indicates that only a fallback adapter can be returned. …","Returns the format of this <code>Texture</code>.","The texture format of the swap chain. The only formats …","Format of the texture.","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. Either must be the same as the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","Format of the attachment.","List of supported formats to use with the given adapter. …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","Create an new instance of wgpu from a wgpu-core instance.","Create an new instance of wgpu from a wgpu-hal instance.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the texture aspect for a given plane.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>SurfaceTargetUnsafe::RawHandle</code> from a window.","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Generates memory report.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the capabilities of the surface when used with the …","Returns the next texture to be presented by the swapchain …","Return a default <code>SurfaceConfiguration</code> from width and …","Get info about the adapter itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get info about the adapter itself.","Synchronously and immediately map a buffer for reading. If …","Synchronously and immediately map a buffer for writing. If …","Generates a timestamp using the clock used by the …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Which OpenGL ES 3 minor version to request.","Returns a globally-unique identifier for this <code>Surface</code>.","Returns a globally-unique identifier for this <code>Adapter</code>.","Returns a globally-unique identifier for this <code>Device</code>.","Returns a globally-unique identifier for this <code>Buffer</code>.","Returns a globally-unique identifier for this <code>Texture</code>.","Returns a globally-unique identifier for this <code>TextureView</code>.","Returns a globally-unique identifier for this <code>Sampler</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>BindGroup</code>.","Returns a globally-unique identifier for this <code>ShaderModule</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>RenderBundle</code>.","Returns a globally-unique identifier for this <code>QuerySet</code>.","Returns a globally-unique identifier for this <code>Queue</code>.","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of this <code>Texture</code>.","Height of the swap chain. Must be the same size as the …","Height of the extent","Macro to load raw SPIR-V data statically, for use with …","Load WGSL source code from a file at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns <code>true</code> if the format is a multi-planar format","Returns true if the result is <code>Self::SubmissionQueueEmpty</code>`.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label for the device.","Debug label of a buffer. This will show up in graphics …","Debug label for the command encoder. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of the texture. This will show up in graphics …","Debug label for the query set.","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of this command buffer.","Returns the layer range of a subresource range describes …","The layout of the texture data in this buffer.","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","The best limits which can be used to create devices on …","The limits which can be used on this device.","Additional limits","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the callback …","Map on the wait index type.","Takes a closure and maps the label of the command buffer …","Allows a buffer to be mapped immediately after they are …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","The target mip level of the texture.","Returns the mip_level_count of this <code>Texture</code>.","Mip count of texture. For a texture with no extra mips, …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","If this render bundle will rendering to multiple array …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Create an new instance of wgpu.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines where the occlusion query results will be stored …","Base offset of the buffer, in bytes.","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Registers a callback when the previous call to submit …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","Panics if the MaintainResult is not Ok.","","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","Returns the number of planes a multi-planar format has.","Check for resource cleanups and mapping callbacks. Will …","Polls all devices.","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Pop an error scope.","Power preference for the adapter.","Power preference for the adapter.","The premultiplication of this texture","The premultiplication of this texture","Schedule this texture to be presented on the owning …","Presentation mode of the swap chain. Fifo is the only mode …","List of supported presentation modes to use with the given …","The properties of the pipeline at the primitive assembly …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Push an error scope.","The query set to write to.","The query set to write to.","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Returns the required features (if any) in order to use the …","Specifies the features that are required by the device …","Specifies the limits that are required by the device …","Resolves a query set, writing the results into the …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Returns the sample_count of this <code>Texture</code>.","Sample count of texture. If this is not 1, texture must …","Sample count this render bundle is capable of rendering …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","Set a DeviceLostCallback on this device.","","Sets the active index buffer.","","Sets the active index buffer.","Sets the active render pipeline.","","Sets the active compute pipeline.","","Sets the active render pipeline.","","Set push constant data for subsequent draw calls.","Set push constant data for subsequent dispatch calls.","Set push constant data.","","Sets the scissor rectangle used during the rasterization …","Sets the stencil reference.","","Assign a vertex buffer to a slot.","Assign a vertex buffer to a slot.","","Sets the viewport used during the rasterization stage to …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the length of the buffer allocation in bytes.","Returns the size of this <code>Texture</code>.","Returns the byte size of the format.","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","Size of the binding in bytes, or <code>None</code> for using the rest …","Returns the size multiple requirement for a texture using …","Use only a portion of this Buffer for a given operation. …","Slope depth biasing factor.","","","","Source code for the shader.","Binary SPIR-V data, in 4-byte words.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","If the stencil aspect of the depth stencil attachment is …","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","A <code>Vec</code> of supported sample counts.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The color state of the render targets.","The texture to be copied to/from.","The texture to be copied to/from.","Accessible view of the frame.","The texture to be copied to/from.","The texture to be copied to/from.","Defines which timestamp values will be written for this …","Defines which timestamp values will be written for this …","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backend.","","","","","","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret verticesind of query that this query set should contain.","The type of the bindingf set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Flushes any pending write operations and unmaps the buffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the allowed usages for this <code>Buffer</code>.","Returns the allowed usages of this <code>Texture</code>.","The usage of the swap chain. The only supported usage is …","Usages of a buffer. If the buffer is used in any way that …","Allowed usages of the texture. If used in other ways, the …","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions that are built on top of …","<code>Backend</code>-specific vendor ID of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","The view to use as an attachment.","The view to use as an attachment.","Specifies what view formats will be allowed when calling …","Specifies what view formats will be allowed when calling …","Which shader stages can see this binding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a wait variant","Construct a WaitForSubmissionIndex variant","Returns the width of this <code>Texture</code>.","Width of the swap chain. Must be the same size as the …","Width of the extent","Returns this set of flags, affected by environment …","Schedule a data write into <code>buffer</code> starting at <code>offset</code>.","Schedule a data write into <code>buffer</code> starting at <code>offset</code> via …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a write of some data into a texture.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","X position of the origin","","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","Description of the validation error.","Lower level source of the error.","Lower level source of the error.","Raw display handle, underlying display must outlive the …","Raw display handle, underlying window must outlive the …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","","","","","No value.","","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","Dispatch on an <code>Id</code>’s backend to a backend-generic method.","","","","Allocating resource ids, and tracking the resources they …","","","","","Presentation.","","","","","A <code>Arc</code> of a <code>HalSurface&lt;A&gt;</code>, for any backend <code>A</code>.","","","","","","","","","","","","","If <code>self</code> is an <code>Arc&lt;HalSurface&lt;A&gt;&gt;</code>, return a reference to the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Return an <code>AnySurface</code> that holds an owning <code>Arc</code> to <code>HalSurface</code>…","If <code>self</code> is an <code>Arc&lt;HalSurface&lt;A&gt;&gt;</code>, returns that.","","","","","","","","","","","","","","","","Describes a group of bindings and the resources to be …","","Bindable resource and the slot to bind it to.","Bind group layout.","Describes a <code>BindGroupLayout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a pipeline layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …he resources to bind to this bind group.","Array of entries in this BindGroupLayout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label of the bind group.","Debug label of the bind group layout.","Debug label of the pipeine layout.","The <code>BindGroupLayout</code> that corresponds to this bind group.","","","Set of push constant ranges this pipeline uses. Each …","Resource to attach to the bindingescribes an attachment location in words.","","","","","","","","","","","","","","","","","","","Clear the output attachment with the clear color. Clearing …","Error encountered while attempting a clear.","","","","","","","","","","Error encountered when performing a compute pass.","Error encountered when performing a compute pass.","Describes the writing of timestamp values in a compute …","","","Error encountered while attempting to do a copy on a …","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","Discards the content of the render target.","","","","","","Error validating a draw call.","","","","","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not clear output attachment.","Operation to perform to the output attachment at the start …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes an individual channel within a render pass, such …","","","","","","Error encountered when dealing with queries","","","","","Error encountered while trying to use queries","","","","","Describes a <code>RenderBundleEncoder</code>.","Error encountered when finishing recording a render bundle.","","Error encountered when encoding a render command. This is …","","Describes a color attachment to a render pass.","Describes a depth/stencil attachment to a render pass.","Describes the attachments of a render pass.","Error encountered when performing a render pass.","Error encountered when performing a render pass.","Location to write a timestamp to (beginning or end of the …","Describes the writing of timestamp values in a render pass.","","Error encountered while trying to resolve a query.","","","","","","","","","","","","","","Store the result of the renderpass.","Operation to perform to the output attachment at the end …","","","","","","","","Error encountered while attempting a data transferhe copy aspect.","The copy aspect.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer to be copied to/from.","","What operations will be performed on this color attachment.","If load_op is <code>LoadOp::Clear</code>, the attachment will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What operations will be performed on the depth part of the …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …he index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeebug label of the render bundle encoder. This will show …","Debug label of the render bundle encoder.","","","","The layout of the texture data in this buffer.","Operation to perform to the output attachment at the start …","The target mip level of the texture.","The target mip level of the texture.","If this render bundle will rendering to multiple array …","","","","","","","","Defines where the occlusion query results will be stored …","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","","","","The premultiplication of this texture","","The query set to write the timestamps to.","The query set to write the timestamp to.","If true, the relevant channel is not changed by a …","","The view that will receive the resolved output if …","Sample count this render bundle is capable of rendering to.","","","","","","","","","","","","","","","","","","","","What operations will be performed on the stencil part of …","Operation to perform to the output attachment at the end …","","The texture to be copied to/from.","The texture to be copied to/from.","Defines where and when timestamp values will be written …","Defines where and when timestamp values will be written …he view to use as an attachment.","The view to use as an attachmentafety","","Safety","Safety","","","Safety","","","","","","Safety","","Safety","Safety","","Safety","","","","","","","","","","Safety","Safety","","","","","","Safety","Safety","","","","Safety","","","","","","","Structure describing a logical device. Some members are …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label for the device.","","","","Specifies the features that are required by the device …","Specifies the limits that are required by the device …pointer to a <code>Device&lt;A&gt;</code>, for any backend <code>A</code>.","","","","","","","","","","","","If <code>self</code> is an <code>Arc&lt;Device&lt;A&gt;&gt;</code>, return a clone of that.","If <code>self</code> is an <code>Arc&lt;Device&lt;A&gt;&gt;</code>, return a reference to the …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Return an <code>AnyDevice</code> that holds an owning <code>Arc</code> pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A texture or buffer to be freed soon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure describing a logical device. Some members are …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","Safety","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","","","","","Safety","","","","","","","","","","","","Safety","","","","","","Safety","","","","Check <code>device_id</code> for freeable resources and completed …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Safety","Safety","","","","","","","","","Safety","Safety","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Poll all devices on all backends.","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","","","","","","Safety","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the resources for a particular backend in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a wgpu object.","","","","","","","","","","","","","","Trait carrying methods for direct <code>Id</code> access.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Safety","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A factory that can build <code>IdentityManager</code>s for all resource …","A type that can produce <code>IdentityManager</code> filters for ids of …","","A global identity handler factory based on <code>IdentityManager</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Create an <code>IdentityManager&lt;I&gt;</code> implementation that can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error when requesting a device from the adaptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Surface that is required to be presentable with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a set of backends from a comma separated list of …","Power preference for the adapter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Width of abstract types, in bytes.","","Abstract floating-point type.","","WGSL abstract integer type.","","Opaque object representing an acceleration structure of …","Array access with a computed index.","Access the same types as <code>Access</code>, plus <code>Struct</code> with a known …","","","","","Addressing space of variables.","","","","","An arena holding some kind of component (e.g., type, …","Homogenous list of elements.","Get the length of an array. The expression must resolve to …","Size of an array.","Cast a simple type to another kind.","","","","","","Atomic scalar.","Atomic function.","","Function on an atomic value.","Result of an atomic operation.","","","Width of a boolean type, in bytes.","Memory barrier flags.","Synchronize invocations within the work group. The <code>Barrier</code> …","","","","2D vector","","Apply a binary operator.","Operation that can be applied on two values.","Describes how an input/output variable is to be bound.","Array of bindings.","","A code block is a vector of statements, with maybe a …","A block containing more statements, to be executed …","Boolean type.","","Exits the innermost enclosing <code>Loop</code> or <code>Switch</code>.","Built-in inputs and outputs.","Built-in shader variable.","","","Number of bytes per scalar.","Calls a function.","Result of calling another function.","","Interpolate the value at the center of the pixel.","Interpolate the value at a point that lies within all …","","","","Composite expression.","","Enables adjusting depth without disabling early Z.","Constant value.","The array size is constant.","Constant value.","Skips to the <code>continuing</code> block of the innermost enclosing …","","","","","","","Cube map","","1D image","2D image","3D image","","","Depth comparison image.","Compute the derivative on an axis.","Axis on which to compute a derivative.","Hint at which precision to compute a derivative.","","","","","The array size can change at runtime.","Early fragment tests.","Emit a range of expressions, visible to all statements …","The main function for a pipeline stage.","","","","","","","","An expression that can be evaluated to obtain a value.","","May not be NaN or infinity.","","May not be NaN or infinity.","","","Hash map that is faster but not resilient to DoS attacks.","Hash set that is faster but not resilient to DoS attacks.","Insertion-order-preserving hash map (<code>IndexMap&lt;K, V&gt;</code>), but …","Insertion-order-preserving hash set (<code>IndexSet&lt;K&gt;</code>), but …","","","","Indicates that no interpolation will be performed.","Floating point type.","","","","","","","","","A function defined in the module.","Function locals.","A function argument.","Reference a function parameter, by its index.","A function result.","","Variable defined at module level.","Reference a global variable.","","","Shader may rewrite depth only with a value greater than …","","A strongly typed reference to an arena item.","Opaque handles, such as samplers and images.","","","","","","Conditionally executes one of two blocks, based on the …","Possibly multidimensional array of texels.","Sub-class of the image type.","The number of dimensions an image has.","Load a texel from an image.","Type of an image query.","Query information from an image.","Sample a point from a sampled or a depth image.","Stores a texel value to an image.","","","Initialize the <code>RayQuery</code> object.","","","The interpolation qualifier of a binding or struct field.","","","","","Aborts the current shader execution.","Storage can be used as a source for load ops.","","","","Shader may rewrite depth smaller than one that would have …","","Indicates that linear, non-perspective, correct …","","Literal.","Load a value indirectly.","","","Variable defined at function level.","Reference a local variable.","Indexed location.","","","","","","Executes a block repeatedly.","Call a math function","Built-in shader function for math.","Matrix of numbers.","","","","","","","","Shader module.","Equivalent of the WGSL’s <code>%</code> operator or SPIR-V’s <code>OpFRem</code>","","","","","","","Get the number of array layers.","Get the number of mipmap levels.","Get the number of samples.","","","","","","","","","The value will be interpolated in a perspective-correct …","","","Pointer to another type.","","","Return types predeclared for the frexp, modf, and …","","Private data, per invocation, mutable.","Start or continue the query given by the statement’s …","Push constants.","4D vector","","","","","","","","","","","","","","A strongly typed range of handles.","Locally used handle for ray queries.","","An operation that a <code>RayQuery</code> statement applies to its <code>query</code>…","Return an intersection found by <code>query</code>.","Result of a <code>Proceed</code> <code>RayQuery</code> statement.","","","Call a relational function.","Built-in shader function for testing relation between …","Pipeline binding information for global resources.","Returns from the function (possibly with a value).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Barrier affects all <code>AddressSpace::Storage</code> accesses.","Storage can be used as a target for store ops.","Interpolate the value at each sample location. In …","","Sampling modifier to control the level of detail.","","Regular sampled image.","Can be used to sample values from images.","The sampling qualifiers of a binding or struct field.","","Characteristics of a scalar type.","Number of integral or floating-point kind.","Primitive type for a scalar.","Select between two values based on a condition.","Stage of the programmable pipeline.","","Right shift carries the sign of signed integers only.","","","","Signed integer type.","Get the size at the specified level.","","A human-readable representation for a span, tailored for …","A source code span, used for error reporting.","A source code span together with “context”, a …","Set of special types that can be optionally generated by …","Splat scalar into a vector.","","Instructions which make up an executable block.","","Storage buffer data, potentially mutable.","Storage image.","Flags describing an image.","Image storage format.","Stores a value at an address.","User-defined structure.","Member of a user-defined structure.","","","Conditionally executes one of multiple blocks, based on …","A case for a switch statement.","The value of the switch case.","Vector swizzle.","Component selection for a vector swizzle.","","","","","3D vector","","A data type declared in the module.","Enum with additional information, depending on the kind of …","","","","","Unsigned integer type.","Apply an unary operator.","Operation that can be applied on a single value.","Shader may not rewrite depth value.","Uniform buffer data.","An arena whose elements are guaranteed to be unique.","","","","","","Pointer to a scalar or vector.","Vector of numbers.","Number of components in a vector.","","","","","Barrier affects all <code>AddressSpace::WorkGroup</code> accesses.","","Wrapper class for <code>Error</code>, augmenting it with a list of …","Workgroup shared data, mutable.","","","Load uniformly from a uniform pointer in the workgroup …","Result of a <code>WorkGroupUniformLoad</code> statement.","","","","","","","","Zero value of a type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Convert inner error into another type. Joins span …","Adds a new value to the arena, returning a typed handle.","","Apply the usual default interpolation for <code>ty</code> to <code>binding</code>.","","Information about function argumentind the common type of <code>self</code> and <code>other</code> under WGSL’s …","Return <code>true</code> if automatic conversions will covert <code>self</code> to …","Backend functions that export shader <code>Module</code>s into binary …","For I/O structs, defines the binding.","Binding number within the group.","For resources, defines the binding point.","For entry points, an argument has to have a binding unless …","For entry points, the result has to have a binding unless …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Body of the case.","Block of instructions comprising the body of the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the canonical form of <code>self</code>, or <code>None</code> if it’s …","Assert that <code>handle</code> is valid for this arena.","Assert that <code>handle</code> is valid for this arena.","Assert that <code>range</code> is valid for this arena.","Clears the arena keeping all allocations","Clears the arena, keeping all allocations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant expressions and override expressions used by this …","Arena for the constants defined in this module.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Early depth test for fragment stages.","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Entry points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare <code>self</code> and <code>rhs</code> as types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expressions used inside this function.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","If true, the control flow continues to the next case in …","Fetch a handle to an existing type.","Adds a value with a custom check for uniqueness: returns a …","Adds a value with a check for uniqueness, where the check …","return the first and last handles included in <code>self</code>.","Construct a float <code>Scalar</code> with the given width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>Range</code> that covers the zero-based indices in …","Frontend parsers that consume binary and text shaders and …","The entrance function.","Arena for the functions defined in this module.","Populate this module’s <code>SpecialTypes::predeclared_types</code> …","Populate this module’s <code>SpecialTypes::ray_desc</code> type.","Populate this module’s <code>SpecialTypes::ray_intersection</code> …","Return this arena’s handle for <code>value</code>, if present.","Return this arena’s value at <code>handle</code>, if that is a valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to an element in the arena.","","Return the span associated with <code>handle</code>.","Arena for the global variables defined in this module.","The bind group index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the zero-based index of this handle.","","","","","","Return the length of a subscriptable type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value of the constant.","Initial value for this variable.","Initial value for this variable.","Inner structure that depends on the kind of the type.","Insert a new value into the arena.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codextracts the inner vector.","Reverse of <code>Self::new</code>, discards span information and …","","","","","Convert inner error using <code>From</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Check whether <code>self</code> was defined or is a default/unknown span","Return true if this expression is a dynamic array index, …","","Returns <code>true</code> if the arena contains no elements.","Return <code>true</code> if the arena contains no elements.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","Returns true if the statement directly terminates the …","Returns an iterator over the items stored in this arena, …","Returns an iterator over the items stored in this arena, …","Yield a set of contained flags values.","Yield a set of contained flags values.","Returns a iterator over the items stored in this arena, …","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Lists of reserved keywords for each shading language with …","How the value’s bits are to be interpreted.","Returns the current number of items stored in this arena.","Return the current number of items stored in this arena.","","Length in code units (in bytes) of the span.","1-based line number.","1-based column of the start of this span","Local variables defined and used in the function.","Return a <code>SourceLocation</code> for this span in the provided …","Return a <code>SourceLocation</code> for our first span, if we have one.","","The name of the type, if any.","","Name of the variable, if any.","Name of the variable, if any.","Name of the argument, if any.","Name of the function, if any.","Name of this entry point, visible externally.","Map of expressions that have associated variable names","Returns true if the expression is considered emitted at …","Create a new arena with no initial capacity allocated.","Create a new arena with no initial capacity allocated.","","Creates a new <code>Span</code> from a range of byte indices","Create a new <code>WithSpan</code> from an <code>Error</code>, containing no spans.","","Return a range enclosing handles <code>first</code> through <code>last</code>, …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","0-based Offset in code units (in bytes) of the start of …","Offset from the beginning from the struct.","","Return the global variable being accessed by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types for predeclared wgsl types instantiated on demand.","<code>Module</code> processing functionality.","","Get the range of handles from a particular number of …","Type for <code>RayDesc</code>.","Type for <code>RayIntersection</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Replace an old value with a new value.","The result of this function, if any.","Return the scalar type of <code>self</code>.","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Get the size of this type.","","How this variable is to be stored.","","","Iterator over stored <code>SpanContext</code>s.","Dictionary of special type handles.","","Shader stage.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Modifies <code>self</code> to contain the smallest <code>Span</code> possible that …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a range if the span is not unknown","","","Formats the type as it is written in wgsl.","Format a scalar kind+width as a type is written in wgsl.","","Formats the type as it is written in wgsl.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the smallest <code>Span</code> possible that contains all the …ype of the field.","","The type of this variable.","The type of this variable.","Type of the argument.","Type of the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arena for the types defined in this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns a new <code>Span</code> starting at <code>self</code> and ending at <code>other</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shader validator.","Value, upon which the case is considered true.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This size of the value in bytes.","","Add a <code>SpanContext</code>.","Add a new span with description.","Workgroup size for compute stages","","Return the zero-based index range covered by <code>self</code>.","","","","","","Indicates the 2nd input to the blender when dual-source …","","","","","","","","","The index into an arrayed image. If the <code>arrayed</code> flag in …","","","","","","","Boolean expression","If provided, converts to the specified byte width. …","","The coordinate of the texel we wish to load. This must be …","","","","","Source expression, which can only be a scalar or a vector.","","","If Some(), this operation is a gather operation on the …","","The image to load a texel from. This must have type <code>Image</code>. …","","","","Target scalar kind.","","","A level of detail, for mipmapped images.","Expression handle lives in const_expressions","","","","","","","","","A sample index, for multisampled <code>Sampled</code> and <code>Depth</code> images.","","","","","","The type of the result","","","","","Kind of values to sample.","Multi-sampled image.","Multi-sampled depth image.","If <code>None</code>, the base level is considered.","","","","","The acceleration structure within which this query should …","A struct of detailed parameters for the ray query.","","","","","","","","","","","","","Function to run on the atomic.","The specific operation we’re performing on <code>query</code>.","","","","Pointer to an atomic value.","This must be of type <code>Pointer</code> in the <code>WorkGroup</code> address space","The <code>RayQuery</code> object this statement operates on.","","<code>AtomicResult</code> expression representing this function’s …","The <code>WorkGroupUniformLoadResult</code> expression representing …","","","","","","Value to use in the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ray flags, for a <code>RayDesc</code>’s <code>flags</code> field.","","","","","","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","","","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","Backend for GLSL (OpenGL Shading Language).","Backend for HLSL (High-Level Shading Language).","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Backend for MSL (Metal Shading Language).","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Backend for SPIR-V (Standard Portable Intermediate …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Flip output Y and extend Z from (0, 1) to (-1, 1).","","Buffer address space support.","Mapping between resources and bindings.","","","","","","","8 byte floats.","Supports ARB_shader_draw_parameters on the host, which …","Dual source blending","Arrays with a dynamic length.","<code>core</code> GLSL.","<code>es</code> GLSL.","The entry point couldn’t be found.","A GLSL compilation error.","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","More image formats.","Structure used to encode additions to GLSL that aren’t …","A error occurred while writing to the output.","Image load and early depth tests.","Image size query","Include unused global variables, constants and functions. …","Instance index","A image was used with multiple samplers, which isn’t …","","","","The specified <code>Version</code> doesn’t have all required <code>Features</code>.","<code>AddressSpace::PushConstant</code> was used more than once in the …","Interpolation and auxiliary qualifiers.","Configuration used in the <code>Writer</code>.","A subset of options meant to be changed per pipeline.","All information to bind a single uniform value to the …","Reflection info for texture mappings and uniforms.","","Sample ID.","List of supported <code>core</code> GLSL versions.","List of supported <code>es</code> GLSL versions.","Texture levels query","Texture samples query","Sample specific LODs of cube / array shadow textures","Supports GL_EXT_texture_shadow_lod on the host, which …","Mapping between a texture and its sampler, if it exists.","A call was made to an unsupported external.","A scalar with an unsupported width was requested.","","A GLSL version.","The specified <code>Version</code> isn’t supported.","Writer responsible for all code generation.","Configuration flags for the <code>Writer</code>.","GL uniform name for the item. This name is the same as if …","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of resources association to binding locations.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","The index which can be used for dual source blending. This …","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The location of the global. This corresponds to …","How many views to render to, if doing multiview rendering.","Creates a new <code>Writer</code> instance.","Create a new gles version","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The offset in the push constant memory block this uniform …","","List of push constant items in the shader.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Handle to the associated sampler global variable, if it …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Handle to the image global variable.","Mapping between texture names and variables/samplers.","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the uniform. This will only ever be a scalar, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping between uniform variables and names.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","Mapping between names and attribute locations.","The GLSL version to be used.","","","","","","","","","","","","Writes the <code>Module</code> as glsl to the output","Configuration flags for the <code>Writer</code>.","Should workgroup variables be zero initialized (by …","","","","","","","","","","Configuration used in the <code>Writer</code>.","Reflection info for entry point names.","A HLSL shader model version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","Map of resources association to binding locations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of the entry point names.","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate any …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind target of the push constant buffer","","The hlsl shader model to be used","","","Add special constants to <code>SV_VertexIndex</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","A subset of options that are meant to be changed per …","","","Information about a translated module that is required for …","","","","","","","","","","","","","","","","","","","","","","","","","Allow <code>BuiltIn::PointSize</code> and inject it if doesn’t exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","","","","","","","","","","","","","","","","","","","Bounds checking policies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping of the entry point names. Each item in the array …","","","","","","","","","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate …","Finishes writing and returns the output.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Samplers to be inlined into the code.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(Major, Minor) target version of the Metal Shading …","","Creates a new <code>Writer</code> instance.","","","","","Map of entry-point resources, indexed by entry point …","","","","","The slot of a buffer that contains an array of <code>u32</code>, one …","","Make it possible to link different stages via SPIRV-Cross.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flip Y coordinate of <code>BuiltIn::Position</code> output.","","","","","","","","","","","","","","","","","","","","","Clamp <code>BuiltIn::FragDepth</code> output between 0 and 1.","","SPIR-V operand kind: Capability","","","","","","","","Include debug labels for everything.","","","","","","","","","","","","","","","","","","","","","","","","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags corresponding to the boolean(-ish) parameters to …","","","","","","","","","","","","","","","","Emit <code>OpName</code> for input/output locations. Contrary to spec, …","","","","","","","","","","","","","","","Via <code>VK_KHR_zero_initialize_workgroup_memory</code> or Vulkan 1.3","","","","","","","","","","Via assignments + barrier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the binding is an unsized binding array, this overrides …","Map of resources to information about the binding.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","How should generate code handle array, vector, matrix, or …","If given, the set of capabilities modules are allowed to …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","Configuration flags for the writer.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","Return the set of capabilities the last module written …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","(Major, Minor) target version of the SPIR-V.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","Dictates the way workgroup variables should be zero …","Remove unused types, expressions, and constants from <code>module</code>…","Structure responsible for managing variable lookups and …","A table of types for an <code>Arena&lt;Expression&gt;</code>.","","","Adds a new variable to the current scope.","Adds a new variable to the root scope.","","","","","","","","","","","","","","","Constructs a new symbol table with a root scope","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Grow this typifier until it contains a type for <code>expr_handle</code>…","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Recompute the type resolution for <code>expr_handle</code>.","Perform a lookup for a variable named <code>name</code>.","","","","Removes the current lexical scope and all its variables","Adds a new lexical scope.","Add an expression’s type to an <code>Arena&lt;Type&gt;</code>.","","","","","","","","","","","","","","","","","","","","Frontend for WGSL (WebGPU Shading Language).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns a <code>SourceLocation</code> for the first label in the error …","","","","","","","","","","","","","","","","","","","","","","","","","","","Keywords for WGSL (WebGPU Shading Language).","","A newtype struct where its only valid values are powers of …","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","","","A context for evaluating constant expressions.","","","","The number of elements is determined at runtime.","","Helper class to emit expressions","","","","","","","","","","","","","","","","","A type stored in the associated arena.","","","The number of elements in an indexable type.","","","","","","","","","","","","","","","","","","","","","Values of this type always have the given number of …","","","Helper processor that derives the sizes of all types.","","","","","","","This processor assigns names to all the things in a module …","","","","","","","","Out-of-bounds reads return zero, and writes have no effect.","","","","Replace out-of-bounds indexes with some arbitrary …","","","","","","","","","","Size and alignment information for a type.","","","The result of computing an expression’s type.","Naga adds no checks to indexing operations. Generate the …","A free-floating <code>TypeInner</code>, representing a type that may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How should the generated code handle binding array indexes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How should the generated code handle array, vector, or …","Return a new identifier based on <code>label_raw</code>.","","Convert the scalar components of <code>expr</code> to <code>target</code>.","Convert the scalar leaves of  <code>expr</code> to <code>target</code>, handling …","Determine which policy applies to <code>base</code>.","Remove all entries from this <code>Layouter</code>, retaining storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if any of <code>self</code>’s policies are <code>policy</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that the given block has return statements at the …","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the individual components …","","","","","","","","","","","","","","","","","","","","","","","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Forces the the expression to not be const","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics","","","","","","","","","","","","","","How should the generated code handle image texel loads …","How should the generated code handle image texel stores …","Definitions for index bounds checking.","","How should the generated code handle array, vector, or …","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not <code>n</code> is a multiple of this alignment.","","","","","","","","","","","","","","","Determine the type of <code>expr</code>.","Round <code>n</code> up to the nearest alignment boundary.","","","","","","","","","","","","","","","","","","","","","","","Produce the stride as if this type is a base of an array.","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to evaluate <code>expr</code> at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend this <code>Layouter</code> with layouts for any new entries in …","","","","","","","","","","","","","","","","","","","","Initialize a resolve context from the module.","","","","","","","","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","The number of elements is determined at runtime.","","An index that may be statically known, or may need to be …","The number of elements in an indexable type.","","","","Values of this type always have the given number of …","Out-of-bounds reads return zero, and writes have no effect.","Replace out-of-bounds indexes with some arbitrary …","","Naga adds no checks to indexing operations. Generate the …","Determine whether <code>index</code> is statically known to be in …","","","","","","How should the generated code handle binding array indexes …","","","How should the generated code handle array, vector, or …","","","","","","","","Build a set of expressions used as indices, to cache in …","","Returns the argument unchanged.","","","How should the generated code handle image texel loads …","How should the generated code handle image texel stores …","How should the generated code handle array, vector, or …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","This type can be passed as a function argument.","","","","","","","Group, binding, and location attributes.","Statements and blocks of them.","","","","","Support for [<code>Builtin::ClipDistance</code>].","","Constants.","A WGSL constructible type.","Uniformity of control flow for operations that require it.","The data can be copied around.","Support for arrayed cube textures.","Support for [<code>Builtin::CullDistance</code>].","","Allowed IR capabilities.","","","","","","","","","","","","","","","","Can be used for data variables.","","Support for generating two sources for blending from …","","","","Support for <code>early_depth_test</code>.","Expressions.","","","","","","","","","","","","","","Float values with width = 8.","","","","","","","","Indicates how a global variable is used.","","","Can be used for host-shareable structures.","","Can be be used for user-defined IO between pipeline stages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin::SampleIndex</code>] and [<code>Sampling::Sample</code>].","Support for [<code>BuiltIn::ViewIndex</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin:PrimitiveIndex</code>].","Support for [<code>AddressSpace:PushConstant</code>].","","","The information about the data is queried.","Support for ray queries and acceleration structures.","Data will be read from the variable.","","","","Support for non-uniform indexing of sampled textures and …","Support for non-uniform indexing of samplers.","The data type has a size known by pipeline creation time.","Support for 16-bit normalized storage texture formats.","Host-shareable structure layouts.","Validation flags.","","","","","","","","Flags associated with <code>Type</code>s by <code>Validator</code>.","Support for non-uniform indexing of uniform buffers and …","","","Uniform control flow characteristics.","Kinds of expressions that require uniform control flow.","","","","","","","","Validation flags.","","","","Data will be written to the variable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of shader stages where calling this function is valid.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that the function is using dual source blending.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Function may kill the invocation.","Construct a new validator instance.","A child expression with non-uniform result.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","If this expression requires uniform control flow, store …","Reset the validator internals","All pairs of (texture, sampler) globals that may be used …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …niformity characteristics.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","Check the given module to be valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a compute pipeline.","","","","","","","","","","","","","","","","Describes fragment processing in a render pipeline.","","","","Number of implicit bind groups derived at pipeline …","","","","","","","","","","","","","","","","","","","","","","","","Describes a programmable pipeline stage.","","","Describes a render (graphics) pipeline.","","","","","","","","","","","","","","","","Describes how the vertex buffer is interpreted.","Describes the vertex process in a render pipeline.","How a render pipeline will retrieve attributes from a …","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","The stride, in bytes, between elements of this buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The list of attributes which comprise a single vertex.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","The name of the entry point in the compiled shader. There …","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fragment processing state for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","Whether the buffer is indexed by vertex number or instance …","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The properties of the pipeline at the primitive assembly …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","The compiled compute stage and its entry point.","The compiled vertex stage and its entry point.","The compiled fragment stage and its entry point.","How often this vertex buffer is “stepped” forward.","The byte stride in the buffer between one attribute value …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The effect of draw calls on the color aspect of the output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","The vertex processing state for this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registry is the primary holder of each resource type Every …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping was aborted (by unmapping or destroying the buffer …","","","The buffer is already mapped.","","","","","","","","","The status code provided to the buffer mapping callback.","","","","The context is Lost.","","","","","","","","","A buffer that has been marked as destroyed and is staged …","A texture that has been marked as destroyed and is staged …","","","","","","","Contains the error value","An unknown error.","","","","The buffer is in an invalid state.","","","The range isn’t properly aligned.","","","","","","","","","","","","","","","","","","","The range isn’t fully contained in the buffer.","","","","","","","Incompatible usage flags.","","","","","Mapping was already requested.","","","","","","","","","","AddressMode::ClampToBorder requires feature …","","","","","","","","","Contains the success value","","","","","","","","Information about the wgpu-core resource.","","Describes a <code>Sampler</code>","","A temporary buffer, consumed by the command that uses it.","The Buffer is sucessfully mapped, <code>get_mapped_range</code> can be …","","","","","","","","","Describes a <code>TextureView</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","Must be at least 1. If this is not 1, all filter modes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Border color to use when address_mode is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is enabled, this is a comparison sampler using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Total count of queries the set contains. Must not be zero. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensions of the texture.","The dimension of the texture view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the texture.","Format of the texture view, or <code>None</code> for the same format as …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeebug label of a buffer. This will show up in graphics …","Debug label of the texture. This will show up in graphics …","Debug label for the query set.","Debug label of the texture view.","Debug label of the sampler.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Allows a buffer to be mapped immediately after they are …","How to filter the texture when it needs to be minified …","Mip count of texture. For a texture with no extra mips, …","How to filter between mip map levels","","Range within the texture that is accessible via this view.","","Sample count of texture. If this is not 1, texture must …","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of query that this query set should contain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Allowed usages of the texture. If used in other ways, the …","","Specifies what view formats will be allowed when calling …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A table of <code>T</code> values indexed by the id type <code>I</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The binding layout is derived from the pipeline layout.","","","","","","","","","","","","","","","","","","","","","The binding layout is provided by the user in BGLs.","","Errors produced when validating a programmable stage of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the given buffer usage contains the required …","","Return true if the fragment <code>format</code> is covered by the …","Checks that the given texture usage contains the required …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codellow the acceleration structure to be compacted in a copy …","Allow for incremental updates (no change in size)","","<code>offset</code> - offset in bytes","","Flags for acceleration structures","","Information of the required size for a corresponding …","","Entries for a single descriptor","","Flags for acceleration structure geometries","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>offset</code> - offset in bytes","<code>first_vertex</code> - offset in the vertex buffer (as number of …","","","","","","","","","","","","","BindGroup descriptor.","","","BindGroupLayout descriptor.","Pipeline layout creation flags.","","","","","","","","","Similar to <code>wgt::BufferUsages</code> but for internal use.","","Updates use source_acceleration_structure if present, else …","","Format can be used as color and input attachment.","Format can be used as color (with blending) and input …","The color target of a renderpass.","Flag used by the wgpu-core texture tracker to say a …","Format can be copied to.","The destination of a hardware copy.","The destination of a hardware copy.","Format can be copied from.","The source of a hardware copy.","The source of a hardware copy.","","","","Encoder for commands in command buffers. Serves as a …","","","","","","","Describes a compute pipeline.","","","","Format can be used as depth-stencil and input attachment.","Read-only depth stencil usage.","Read-write depth stencil usage","","","","","","","","","Drop guard to signal wgpu-hal is no longer using an …","The combination of states that a buffer must exclusively …","The combination of states that a texture must exclusively …","","","Include support for <code>first_vertex</code> / <code>first_instance</code> drawing.","","","Texture format capability flags.","All buffers, buffer addresses and offsets will be ignored.…","The combination of states that a buffer may be in <em>at the </em>…","The combination of states that a texture may be in <em>at the </em>…","The index buffer used for drawing.","The indirect or count buffer in a indirect draw or …","","","","Error occurring while trying to create an instance, or …","","","Optimize for low memory footprint (scratch and output)","","","","","The argument to a read-only mapping.","The argument to a write-only mapping.","","","","","","","Format can be used for render pass resolve targets.","Format can be multisampled by x16.","Format can be multisampled by x2.","Format can be multisampled by x4.","Format can be multisampled by x8.","","","NO_DUPLICATE_ANY_HIT_INVOCATION","Include support for num work groups builtin.","","Naga shader module.","No value.","Is OPAQUE","The combination of all usages that the are guaranteed to …","The combination of all usages that the are guaranteed to …","","","","","Allows for bind group binding arrays to be shorter than …","","","","","Optimize for fast build time","Optimize for fast ray tracing performance","Ready to present image to the surface.","","","","Pipeline layout creation flags.","Describes a programmable pipeline stage.","A buffer used to store query results.","Size of a single occlusion/timestamp query, when copied …","","","","Read-only sampled or fetched resource.","","","","","Describes a render (graphics) pipeline.","","Format can be sampled.","Format can be sampled with a linear sampler.","Format can be sampled with a min/max reduction sampler.","","","Format can be used as storage with write-only access.","Format can be used as storage with atomics.","A read-only storage buffer used in a bind group.","Read-only storage buffer usage. Corresponds to a UAV in …","Format can be used as storage with read and read/write …","A read-write or write-only buffer used in a bind group.","Read-write or write-only storage buffer usage.","","","","","Shader input.","","","Some value of type <code>T</code>.","","","","Describes information about what a <code>Surface</code>’s …","","","","","","","","","","","","Texture format capability flags.","Similar to <code>wgt::TextureUsages</code> but for internal use.","","TextureView descriptor.","","","A uniform buffer bound in a bind group.","The texture is in unknown state.","Flag used by the wgpu-core texture tracker to say that the …","","Stores the text of any validation errors that have …","A vertex buffer used for drawing.","Flag for internal testing.","Describes how the vertex buffer is interpreted.","","","Returns the next texture to be presented by the swapchain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","The stride, in bytes, between elements of this bufferhe list of attributes which comprise a single vertex.","","","","Begin encoding a new command buffer.","Safety:","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer being bound.","","","","","","The alignment of the start of the buffer used as a GPU …","The alignment of the row pitch of the texture data stored …","","","To get the required sizes for the buffer allocations use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The effect of draw calls on the color aspect of the output …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alpha composition mode.","List of supported alpha composition modes.","Configures the surface to use the given device.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","Copy from buffer to texture. Works with a single array …","","","Copy from texture to buffer. Works with a single array …","Copy from one texture to another. Works with a single …","","","","","","","Creates a bind group layout.","Creates a new buffer.","","","","","","","","","","Creates a new texture.","","Current extent of the surface, if known.","Source codes for debug","","","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Discard currently recorded list, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A dummy API implementation.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The upper bound of the range (exclusive).","","","","","","Safety:","","","","","","The name of the entry point in the compiled shader. There …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit connection to this logical device.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Requested texture extent. Must be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the surface textures.","","","List of supported texture formats.","The fragment stage for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any API validation errors that hav occurred in …","","","","","","","","","","","","","Creates a <code>PresentationTimestamp</code> using the adapter’s WSI.","","GLES API internals.","","","","","","","","","","","","","","","","Analysis information of the module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if only one flag is set","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","","","","","","","Range for the number of queued frames.","Maximum number of queued frames. Must be in …","","","","","","","","","Shader module IR.","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The offset at which the bound region starts.","","","","","","","Origin within a texture. Note: for 1D and 2D textures, Z …","","","Vertical synchronization mode.","List of supported V-sync modes.","The properties of the pipeline at the primitive assembly …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Reclaims all resources that are allocated for this encoder.","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the bind group at <code>index</code> to <code>group</code>, assuming the layout …","","","","Sets a range in push constant data.","","","","","","","","The size of the region bound, in bytes.","","","","","","","","","","","","","The compiled compute stage and its entry point.","The lower bound of the range (inclusive).","","","How often this vertex buffer is “stepped” forward.","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits the command buffers for execution on GPU.","The presentation configuration no longer matches the …","Returns the capabilities of working with a specified …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","Return the set of supported capabilities for a texture …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …nconfigures the surface on the given device.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Supported texture usage flags.","","","","","Allowed usage of surface textures,","","","Contains either a single mutating usage as a target, or a …","","","The format of any vertex buffers used with this pipeline.","","","The vertex stage for this pipeline.","","","","Allows views of this texture to have a different format …","Allows views of swapchain texture to have a different …","Vulkan API internals.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calling wait with a lower value than the current fence …","","","","","Maximum binding size for the shaders that only support <code>i32</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around a <code>glow::Context</code> and the required EGL …","A guard containing a lock to an <code>AdapterContext</codeeturns the underlying EGL context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the EGL instance.","Returns the EGL version the adapter context was created …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get’s the <code>glow::Context</code> without waiting for a lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Obtain a lock to the EGL context and get handle to the …","","","Creates a new external adapter using the specified loader …","","","","","","Returns the EGLDisplay corresponding to the adapter …","","","","","","","","","","","","","","","","","","Safety","Safetyser data needed by …","","Qualcomm OOMs when there are zero color attachments but a …","If the following code returns false, then nvidia will end …","","","","","","","","","","","Only generate SPIR-V for one entry point at a time.","","","","","","","","Workaround flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the instance extension names wgpu would like to …","","","","","","","","","","","","","","","","Safety","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","<code>features</code> must be the same features used to create …","","","Returns the queue family index of the device’s internal …","","","Safety","","","","","The intersection of a source flags value with the …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","Safety","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …he bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pending fence values have to be ascending.","","","","","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","An error that can occur while fetching a display or window …","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The underlying handle cannot be represented using the …","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","The underlying handle is not available.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","A raw window handle for a Web canvas registered via …","Raw window handle for a Web canvas registered via …","Raw display handle for the Web.","A raw window handle for a Web offscreen canvas registered …","Raw window handle for a Web offscreen canvas registered via","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an Android-based display handle.","Create an AppKit-based display handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying raw display handle.","Get the underlying raw window handle.","","","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The gbm device.","The gbm surface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an Haiku-based display handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codereate a new empty display handle.","Create a new handle to an <code>ANativeWindow</code>.","Create a new empty display handle.","Create a new handle to a view.","Create a new empty display handle.","Create a new handle to a window.","Create a new empty display handle.","Create a new handle to a window.","Create a new empty display handle.","Create a new handle to a view.","Create a new handle to a display.","Create a new handle to a window.","Create a new handle to a connection and screen.","Create a new handle to a window.","Create a new display handle.","Create a new handle to a surface.","Create a new handle to a file descriptor.","Create a new handle to a plane.","Create a new handle to a device.","Create a new handle to a surface.","Create a new empty display handle.","Create a new handle to a canvas element.","Create a new handle from a pointer to <code>HtmlCanvasElement</code>.","Create a new handle from a pointer to an <code>OffscreenCanvas</code>.","Create a new empty display handle.","Create a new handle to a window.","Create a new handle to a window.","A pointer to an <code>NSView</code> object.","A pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.","A pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.","Create an Orbital-based display handle.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","A pointer to a <code>wl_surface</codepointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object, if the view has …","Create a UiKit-based display handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a Web-based display handle.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.","","Create a Windows-based display handle.","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","Argument buffer layout for dispatch_indirect commands.","CPU accessible buffer used to download data back from the …","Argument buffer layout for draw_indexed_indirect commands.","Argument buffer layout for draw_indirect commands.","The texture is laid out densely in memory as:","The texture is laid out densely in memory as:","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Efficiently performs many buffer writes by sharing and …","Order in which TextureData is laid out in memory.","","","","","","","","Aligns a <code>value</code> to an <code>alignment</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Get a set of backend bits from the environment variable …","The value added to the vertex index before indexing into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","","","","","","Choose which DX12 shader compiler to use from the …","","","","","","","","","Prepare currently mapped buffers for use in a submission.","The first index within the index buffer.","The instance ID of the first instance to draw.","The instance ID of the first instance to draw.","The Index of the first vertex to draw.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Choose which minor OpenGL ES version to use from the …","","","The number of indices to draw.","","","","","","","","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","The number of instances to draw.","The number of instances to draw.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debug label of a buffer. This will show up in graphics …","Version of make_spirv intended for use with …","Create a new staging belt.","","","","","Generates a set of backends from a comma separated list of …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","The number of vertices to draw.","","","","","","","","Allocate the staging belt slice of <code>size</code> to be uploaded …","The number of work groups in X dimension.","The number of work groups in Y dimension.","The number of work groups in Z dimension.","The <code>Slider</code> can be interacted with.","The theme catalog of a <code>Slider</code>.","A circular handle.","The item class of the <code>Catalog</code>.","The <code>Slider</code> is being dragged.","The appearance of the handle of a slider.","The shape of the handle of a slider.","The <code>Slider</code> is being hovered.","The appearance of a slider rail","A rectangular shape.","An horizontal bar and a handle that selects a single value …","The possible status of a <code>Slider</code>.","The appearance of a slider.","A styling function for a <code>Slider</code>.","","","","","","The border <code>Color</code> of the handle.","The border radius of the corners of the rail.","The border width of the handle.","","","","","The <code>Color</code> of the handle.","The colors of the rail of the slider.","","The default style of a <code>Slider</code>.","The default class produced by the <code>Catalog</code>.","","","","","","Returns the argument unchanged.","","","The appearance of the <code>Handle</code> of the slider.","","Calls <code>U::from(self)</code>.","","","","","","","","The colors of the rail of the slider.","The shape of the handle.","The <code>Style</code> of a class with the given status.","","","","","","","","","","","The width of the stroke of a slider rail.","The border radius of the corners of the rectangle.","The radius of the circle.","The width of the rectangle.","The theme catalog of an <code>Svg</code>.","The item class of the <code>Catalog</code>.","A handle of Svg data.","The <code>Svg</code> is being hovered.","The <code>Svg</code> is idle.","The possible status of an <code>Svg</code>.","The appearance of an <code>Svg</code>.","A styling function for an <code>Svg</code>.","A vector graphics image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> filter of an <code>Svg</code>.","","","","Returns a reference to the SVG <code>Data</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates an SVG <code>Handle</code> from raw bytes containing either an …","Creates an SVG <code>Handle</code> pointing to the vector image of the …","","","","","","Returns the unique identifier of the <code>Handle</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An absolute height in logical pixels.","Advanced text shaping and font fallback.","No shaping and no font fallback.","Borrowed data.","The theme catalog of a <code>Text</code>.","The item class of this <code>Catalog</code>.","A fragment of <code>Text</code>.","A trait for converting a value to some text <code>Fragment</code>.","The height of a line of text in a paragraph.","Owned data.","A factor of the size of the text.","The shaping strategy of some text.","The internal state of a <code>Text</code> widget.","The appearance of some text.","A styling function for a <code>Text</code>.","A paragraph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the text.","","","","","The default class produced by this <code>Catalog</code>.","","","","","","","","","","","","","","","","","Draws text using the same logic as the <code>Text</code> widget.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts the value to some text <code>Fragment</code>.","","","","","Produces the <code>layout::Node</code> of a <code>Text</code> widget.","","","","","The <code>Style</code> of a class with the given status.","Returns the <code>LineHeight</code> in absolute logical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An interaction with an <code>Editor</code>.","The <code>TextEditor</code> can be interacted with.","Delete the previous character.","The theme catalog of a <code>TextEditor</code>.","The item class of the <code>Catalog</code>.","Click the <code>Editor</code> at the given <code>Point</code>.","The content of a <code>TextEditor</code>.","Delete the next character.","The <code>TextEditor</code> cannot be interacted with.","Move to the end of the text.","Move to the start of the text.","Move down.","Drag the mouse on the <code>Editor</code> to the given <code>Point</code>.","An action that edits text.","Perform an <code>Edit</code>.","Move to the end of the line.","Break the current line.","The <code>TextEditor</code> is focused.","Move to the start of the line.","The <code>TextEditor</code> is being hovered.","Insert the given character.","Move left.","A cursor movement.","Apply a <code>Motion</code>.","Move to the start of the next window.","Move to the start of the previous window.","Paste the given text.","Move right.","Scroll the <code>Editor</code> a certain amount of lines.","Select text with a given <code>Motion</code>.","Select the line at the current cursor.","Select the word at the current cursor.","The state of a <code>TextEditor</code>.","The possible status of a <code>TextEditor</code>.","The appearance of a text input.","A styling function for a <code>TextEditor</code>.","A multi-line text input.","Move up.","Move to the left boundary of a word.","Move to the right boundary of a word.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the text input.","The <code>Border</code> of the text input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current cursor position of the <code>Content</code>.","The default style of a <code>TextEditor</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","Returns the <code>Direction</code> of the <code>Motion</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","The <code>Color</code> of the icon of the text input.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Action</code> is an editing action.","Returns whether the <code>TextEditor</code> is currently focused or not.","Returns the text of the line at the given index, if it …","Returns the amount of lines of the <code>Content</code>.","Returns an iterator of the text of the lines in the <code>Content</code>…","Creates an empty <code>Content</code>.","","Performs an <code>Action</code> on the <code>Content</code>.","The <code>Color</code> of the placeholder of the text input.","Returns the selected text of the <code>Content</code>.","The <code>Color</code> of the selection of the text input.","The <code>Style</code> of a class with the given status.","Returns the text of the <code>Content</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the value of the text input.","","","","","","","","Widens the <code>Motion</code>, if possible.","Creates a <code>Content</code> with the given text.","The amount of lines to scroll.","The <code>TextInput</code> can be interacted with.","The theme catalog of a <code>TextInput</code>.","The item class of the <code>Catalog</code>.","The cursor of a text input.","The default <code>Padding</code> of a <code>TextInput</code>.","The <code>TextInput</code> cannot be interacted with.","The <code>TextInput</code> is focused.","The <code>TextInput</code> is being hovered.","The content of the <code>Icon</code>.","The identifier of a <code>TextInput</code>.","The left side of a <code>TextInput</code>.","The right side of a <code>TextInput</code>.","The side of a <code>TextInput</code>.","The state of a <code>TextInput</code>.","The possible status of a <code>TextInput</code>.","The appearance of a text input.","A styling function for a <code>TextInput</code>.","A field that can be filled with text.","The value of a <code>TextInput</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the text input.","The <code>Border</code> of the text input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unicode code point that will be used as the icon.","","","","","","","","","Track the cursor of a text input.","Returns the <code>Cursor</code> of the <code>TextInput</code>.","The default style of a <code>TextInput</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Produces a <code>Command</code> that focuses the <code>TextInput</code> with the …","Focuses the <code>TextInput</code>.","","Creates a new <code>State</code>, representing a focused <code>TextInput</code>.","The font that will be used to display the <code>code_point</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the icon of the text input.","","","","","","","","","Inserts a new <code>char</code> at the given grapheme <code>index</code>.","Inserts a bunch of graphemes at the given grapheme <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Value</code> is empty or not.","","Returns whether the <code>TextInput</code> is currently focused or not.","Returns the total amount of graphemes in the <code>Value</code>.","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","Moves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.","","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","Moves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …","","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","","Moves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …","Creates a new <code>Value</code> from a string slice.","Creates a custom <code>Id</code>.","Creates a new <code>State</code>, representing an unfocused <code>TextInput</code>.","Returns the position of the next end of a word from the …","","","The <code>Color</code> of the placeholder of the text input.","Returns the position of the previous start of a word from …","Removes the grapheme at the given <code>index</code>.","Removes the graphemes from <code>start</code> to <code>end</code>.","Returns a new <code>Value</code> with all its graphemes replaced with …","Returns a new <code>Value</code> containing the graphemes from <code>start</code> …","Produces a <code>Command</code> that selects all the content of the …","","Selects all the content of the <code>TextInput</code>.","Returns the current selection of the <code>Cursor</code> for the given …","The <code>Color</code> of the selection of the text input.","The side of a <code>TextInput</code> where to display the <code>Icon</code>.","The font size of the content.","The spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.","Returns the <code>State</code> of the <code>Cursor</code>.","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unfocuses the <code>TextInput</code>.","","Creates a unique <code>Id</code>.","Returns a new <code>Value</code> containing the graphemes until the …","","","","","","","","","The <code>Color</code> of the value of the text input.","","","","","","","","","The cursor of a text input.","Cursor without a selection","Cursor selecting a range of text","The state of a <code>Cursor</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The end of the selection","The start of the selection","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","A <code>Theme</code> with a customized <code>Palette</code>.","A <code>Theme</code> that uses a <code>Custom</code> palette.","The built-in dark variant.","The built-in Dracula variant.","The built-in Ferra variant:","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","The built-in light variant.","The built-in Moonfly variant.","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant.","A color palette.","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","A built-in theme.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","The background <code>Color</code> of the <code>Palette</code>.","The danger <code>Color</code> of the <code>Palette</code>.","Define the colors of a theme.","The primary <code>Color</code> of the <code>Palette</code>.","The success <code>Color</code> of the <code>Palette</code>.","The text <code>Color</code> of the <code>Palette</code>.","A set of background colors.","A set of danger colors.","The built-in Catppuccin Frappé variant of an <code>Extended</code> …","The built-in Catppuccin Latte variant of an <code>Extended</code> …","The built-in Catppuccin Macchiato variant of an <code>Extended</code> …","The built-in Catppuccin Mocha variant of an <code>Extended</code> …","The built-in dark variant of an <code>Extended</code> palette.","The built-in Dracula variant of an <code>Extended</code> palette.","The built-in Ferra variant of an <code>Extended</code> palette.","The built-in Gruvbox Dark variant of an <code>Extended</code> palette.","The built-in Gruvbox Light variant of an <code>Extended</code> palette.","The built-in Kanagawa Dragon variant of an <code>Extended</code> …","The built-in Kanagawa Lotus variant of an <code>Extended</code> palette.","The built-in Kanagawa Wave variant of an <code>Extended</code> palette.","The built-in light variant of an <code>Extended</code> palette.","The built-in Moonfly variant of an <code>Extended</code> palette.","The built-in Nightfly variant of an <code>Extended</code> palette.","The built-in Nord variant of an <code>Extended</code> palette.","The built-in Oxocarbon variant of an <code>Extended</code> palette.","The built-in Solarized Dark variant of an <code>Extended</code> palette.","The built-in Solarized Light variant of an <code>Extended</code> …","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night Storm variant of an <code>Extended</code> …","An extended set of colors generated from a <code>Palette</code>.","A pair of background and text colors.","A color palette.","A set of primary colors.","A set of secondary colors.","A set of success colors.","The background <code>Color</code> of the <code>Palette</code>.","The set of background colors.","The base background color.","The base primary color.","The base secondary color.","The base success color.","The base danger color.","The background color.","The danger <code>Color</code> of the <code>Palette</code>.","The set of danger colors.","Whether the palette is dark or not.","The primary <code>Color</code> of the <code>Palette</code>.","The set of primary colors.","The set of secondary colors.","A stronger version of the base background color.","A stronger version of the base primary color.","A stronger version of the base secondary color.","A stronger version of the base success color.","A stronger version of the base danger color.","The success <code>Color</code> of the <code>Palette</code>.","The set of success colors.","The text <code>Color</code> of the <code>Palette</code>.","The text color.","A weaker version of the base background color.","A weaker version of the base primary color.","A weaker version of the base secondary color.","A weaker version of the base success color.","A weaker version of the base danger color.","The <code>Toggler</code> can be interacted with.","The theme catalog of a <code>Toggler</code>.","The item class of the <code>Catalog</code>.","The <code>Toggler</code> is being hovered.","The possible status of a <code>Toggler</code>.","The appearance of a toggler.","A styling function for a <code>Toggler</code>.","A toggler widget.","","","","","","","","","","","The background <code>Color</code> of the toggler.","The <code>Color</code> of the background border of the toggler.","The width of the background border of the toggler.","","","","","","","","","","","The default style of a <code>Toggler</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","The foreground <code>Color</code> of the toggler.","The <code>Color</code> of the foreground border of the toggler.","The width of the foreground border of the toggler.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","Indicates whether the <code>Toggler</code> is toggled.","Indicates whether the <code>Toggler</code> is toggled.","The tooltip will appear on the bottom of the widget.","The tooltip will follow the cursor.","The tooltip will appear on the left of the widget.","The position of the tooltip. Defaults to following the …","The tooltip will appear on the right of the widget.","An element to display a widget over another.","The tooltip will appear on the top of the widget.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The <code>Slider</code> can be interacted with.","The theme catalog of a <code>Slider</code>.","A circular handle.","The item class of the <code>Catalog</code>.","The <code>Slider</code> is being dragged.","The appearance of the handle of a slider.","The shape of the handle of a slider.","The <code>Slider</code> is being hovered.","A rectangular shape.","The possible status of a <code>Slider</code>.","The appearance of a slider.","A styling function for a <code>Slider</code>.","An vertical bar and a handle that selects a single value …","","","","","","","","","","","","","","","","","","","","","The border <code>Color</code> of the handle.","The border width of the handle.","","","","","","","","","","","","","","","","","The <code>Color</code> of the handle.","","","","","The default style of a <code>Slider</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","The appearance of the <code>Handle</code> of the slider.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The colors of the rail of the slider.","The shape of the handle.","The <code>Style</code> of a class with the given status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Changes the <code>HandleShape</code> of the <code>Style</code> to a circle with the …","The border radius of the corners of the rectangle.","The radius of the circle.","The width of the rectangle.","An operation to be performed on some window.","The window will always be below normal windows.","The window will always be on top of normal windows.","Redraw at the given time.","The window is completely centered on the screen.","Change the window <code>Icon</code>.","Change the window <code>Level</code>.","Change the <code>Mode</code> of the window.","Close the window and exits the application.","The user has requested for the window to close.","A window was closed.","Platform-specific","The platform-specific default position for a new window.","Move the window with the left mouse button until the …","A window-related event.","Fetch the raw identifier unique to the window.","Fetch if the current window is maximized or not.","Fetch if the current window is minimized or not.","Fetch the current <code>Mode</code> of the window.","Fetch the current logical coordinates of the window.","Fetch the current logical dimensions of the window.","A file has been dropped into the window.","A file is being hovered over the window.","A file was hovered, but has exited the window.","A window was focused.","The application takes the whole screen of its current …","Bring the window to the front and sets input focus. Has no …","The application is hidden","An window icon normally used for the titlebar or taskbar.","An window icon normally used for the titlebar or taskbar.","The id of the window.","Platform-specific","A window level groups windows with respect to their …","The reserved window <code>Id</code> for the first window in an Iced …","Set the window to maximized or back","Set the window to minimized or back","The mode of a window-based application.","Move the window to the given logical coordinates.","A window was moved.","Redraw the next frame.","The default behavior.","A window was opened.","The position of a window in a given screen.","A request to redraw a window.","A window redraw was requested.","Request user attention to the window, this has no effect …","Resize the window to the given logical dimensions.","A window was resized.","Runs the closure with the native window handle of the …","Data of a screenshot, captured with <code>window::screenshot()</code>.","Screenshot the viewport of the window.","The window settings of an application.","Show the system menu at cursor position.","Spawns a new window with some <code>Settings</code>.","The window is positioned with specific coordinates: <code>(X, Y)</code>.","Toggle whether window has decorations.","Toggle the window to maximized or back","A window was unfocused.","The type of user attention to request.","The application appears in its own window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bytes of the <code>Screenshot</code>.","Changes the <code>Icon</code> of the window.","Changes the window <code>Level</code>.","Changes the <code>Mode</code> of the window.","","","","","","","","","","","","","","","","","","","","","Closes the window with <code>id</code>.","","","","","","","","","","","","","","","","Crops a <code>Screenshot</code> to the provided <code>region</code>. This will …","Whether the window should have a border, a title bar, etc. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Begins dragging the window while the left mouse button is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window will close when the user requests it, …","Fetches an identifier unique to the window, provided by …","Fetches if the window is maximized.","Fetches if the window is minimized.","Fetches the current <code>Mode</code> of the window.","Fetches the current window position in logical coordinates.","Fetches the window’s size in logical dimensions.","","","","","","","","","","","","Subscribes to the frames of the window of the running …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","","","Attach an icon to the window of your application.","The icon of the window.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the raw data of the <code>Icon</code>.","","","","","","","","","","","","The window <code>Level</code>.","Maps the output of a window <code>Action</code> using the provided …","The maximum size of the window.","Maximizes the window.","The minimum size of the window.","Minimizes the window.","Moves the window to the given logical coordinates.","Creates a new <code>Screenshot</code>.","","","","","","Platform specific settings.","The initial position of the window.","Request user attention to the window. This has no effect …","Whether the window should be resizable or not.","Resizes the window to the given logical dimensions.","Runs the given callback with the native window handle for …","Take screenshots of a window.","Captures a <code>Screenshot</code> from the window.","Configure your windows.","Show the system menu at cursor position.","The size of the <code>Screenshot</code>.","The initial logical dimensions of the window.","Spawns a new window with the given <code>settings</code>.","","","","","","","","","","","Toggles the window decorations.","Toggles the window to maximized or back.","Whether the window should be transparent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new unique window <code>Id</code>.","","","","","","","","","","","","Whether the window should be visible or not.","","","","","","","","","","","","The new logical height of the window","The position of the opened window. This is relative to the …","The size of the created window. This is its “inner” …","The new logical width of the window","The new logical x location of the window","The new logical y location of the window","An error produced when creating an <code>Icon</code>.","An window icon normally used for the titlebar or taskbar.","The <code>image</code> crate reported an error.","The <code>Icon</code> is not valid.","The underlying OS failed to create the icon.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Creates an icon from an image file.","Creates an icon from the content of an image file.","Builds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","An error that can occur while fetching a display or window …","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The underlying handle cannot be represented using the …","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","The underlying handle is not available.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","A raw window handle for a Web canvas registered via …","Raw window handle for a Web canvas registered via …","Raw display handle for the Web.","A raw window handle for a Web offscreen canvas registered …","Raw window handle for a Web offscreen canvas registered via","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","The drm file descriptor.","The gbm device.","The gbm surface.","The <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","A pointer to an <code>NSView</code> object.","A pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.","A pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.","The primary drm plane handle.","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","A pointer to a <code>wl_surface</code>.","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object, if the view has …","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.","Errors that can occur when cropping a <code>Screenshot</code>.","The cropped region’s size is out of bounds.","Data of a screenshot, captured with <code>window::screenshot()</code>.","The cropped region’s size is zero.","","","","","","","","The bytes of the <code>Screenshot</code>.","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The size of the <code>Screenshot</code>.","","","","","","","","","","","","The platform specific window settings of an application.","The window settings of an application.","","Sets the application id of the window.","","","","","","","","","","Whether the window should have a border, a title bar, etc. …","","","","","","","","","","Whether the window will close when the user requests it, …","","Returns the argument unchanged.","","","The icon of the window.","","Calls <code>U::from(self)</code>.","","","","","","","","The window <code>Level</code>.","The maximum size of the window.","The minimum size of the window.","","Platform specific settings.","The initial position of the window.","Whether the window should be resizable or not.","The initial logical dimensions of the window.","","Whether the window should be transparent.","","","","","","","","","Whether the window should be visible or not.",""],"i":[24,0,27,0,0,24,24,24,24,19,0,26,0,28,0,28,24,22,24,0,24,0,19,96,0,0,0,54,24,28,29,29,29,0,0,26,54,24,24,14,10,34,24,24,24,21,0,24,23,22,24,21,24,28,24,6,96,24,5,0,0,21,0,243,0,5,0,0,0,0,28,243,0,0,29,0,24,24,19,0,27,0,24,24,24,21,0,34,0,27,21,54,30,34,7,27,1,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,5,6,10,7,5,0,0,10,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,14,27,1,18,33,0,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,30,10,10,10,0,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,20,33,0,0,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,10,24,24,20,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,27,6,10,33,34,14,7,24,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,6,5,5,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,29,47,19,20,21,22,23,24,25,25,5,5,26,27,28,29,31,6,10,33,34,14,7,19,19,19,22,22,22,28,28,28,6,6,6,10,10,10,34,34,34,7,7,7,0,0,10,34,24,22,29,28,30,29,1,18,54,54,19,20,21,22,23,24,24,25,5,26,27,28,29,30,31,6,6,10,33,34,14,7,0,1,1,18,54,54,19,19,19,20,21,22,23,23,24,25,5,5,5,5,26,26,26,26,27,27,27,27,27,28,29,29,29,29,30,30,30,30,30,30,30,31,31,31,6,6,6,10,10,33,34,34,34,34,34,14,7,7,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,5,5,27,18,27,27,27,27,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,5,0,27,19,22,28,34,0,19,22,28,34,10,34,0,30,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,10,10,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,27,18,27,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,27,27,29,10,0,30,1,18,34,34,0,5,5,31,6,10,10,34,34,14,7,7,0,47,27,30,6,10,34,7,1,18,20,22,24,27,6,10,33,34,14,7,33,14,0,24,25,25,5,5,31,1,10,0,0,27,20,30,20,0,1,14,23,26,27,14,0,1,10,10,47,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,22,5,6,6,10,34,7,5,0,0,0,0,5,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,54,24,6,54,24,6,30,0,14,14,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,10,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,30,1,18,54,19,20,21,22,23,24,25,5,26,27,28,29,30,31,6,10,33,34,14,7,22,0,1,20,10,34,0,18,20,22,20,10,20,6,10,7,6,10,7,0,0,148,148,0,148,0,0,148,0,0,148,0,132,137,131,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,133,132,136,0,132,137,132,137,132,137,131,137,132,137,131,132,137,131,133,132,137,131,138,133,132,137,131,136,136,136,132,137,131,137,132,137,131,132,137,131,132,137,131,0,137,0,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,131,131,131,131,138,0,138,133,137,131,0,138,133,148,132,131,138,133,138,133,0,138,133,132,131,151,131,0,131,131,148,148,148,148,137,133,137,133,136,136,133,148,148,0,148,148,0,133,0,148,148,148,132,137,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,132,137,131,148,137,148,132,137,131,0,136,132,136,136,151,0,0,0,154,154,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,154,154,154,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,151,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,154,160,151,160,0,163,0,0,0,165,166,166,163,0,163,161,163,161,163,161,163,161,163,161,163,161,161,163,161,163,161,163,161,163,161,163,161,161,163,161,163,161,163,165,161,163,161,161,161,163,161,161,161,163,163,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,165,161,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,161,163,1263,1263,1263,0,0,143,0,143,142,142,142,143,142,143,142,143,142,143,142,0,143,142,143,142,142,142,143,142,143,142,143,142,0,142,142,143,142,143,142,143,142,143,142,143,0,143,142,143,142,143,142,143,142,143,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,143,143,143,143,143,143,142,142,143,142,0,142,0,0,143,143,142,0,143,142,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,143,142,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,140,238,0,239,239,0,144,0,239,239,239,0,238,144,144,144,0,238,240,238,144,144,238,240,144,144,144,238,0,144,140,239,144,144,172,172,172,172,172,172,172,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,1264,1265,1266,1267,1266,1267,0,173,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,0,0,0,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,174,153,174,153,174,153,174,138,153,174,153,174,153,153,174,153,174,0,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,138,138,153,174,153,153,174,138,153,174,174,153,174,138,153,174,138,153,174,174,138,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,153,174,174,0,0,0,141,139,141,139,141,139,141,139,141,139,141,141,139,141,139,141,136,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,136,136,141,139,136,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,136,136,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,141,139,136,136,136,0,0,69,0,69,69,177,0,0,177,0,177,177,177,177,177,177,177,177,177,177,177,177,177,178,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,177,177,177,177,177,177,177,177,177,177,149,196,212,212,189,149,188,0,0,149,190,181,149,185,0,0,149,185,0,189,0,149,196,0,185,189,0,0,188,189,188,189,188,189,188,189,188,189,188,189,188,189,181,137,185,188,189,188,189,190,188,189,137,185,181,188,181,149,149,188,189,188,189,188,189,188,189,0,188,189,189,189,189,149,149,149,188,189,137,188,189,188,189,188,189,190,181,185,0,190,190,137,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,181,181,137,190,181,190,190,185,181,190,181,137,137,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,181,185,190,190,137,188,189,190,181,0,1237,191,195,0,1237,0,1238,1238,1238,195,0,195,0,1238,1237,181,1238,1237,1238,197,0,195,1238,1238,1237,1238,197,195,195,195,195,191,1238,1238,1238,197,191,197,191,197,191,197,191,197,191,197,191,197,191,181,197,191,197,191,197,191,181,181,197,191,197,191,197,191,197,191,197,197,197,197,197,191,197,191,197,191,197,191,181,197,191,197,191,197,191,197,191,197,191,197,191,197,191,197,191,197,191,181,181,181,181,181,197,191,197,191,197,191,197,191,197,191,197,191,197,191,197,191,197,191,181,197,191,181,1268,0,185,0,185,0,185,198,194,198,194,198,194,198,194,198,194,198,194,198,194,185,198,198,194,198,194,194,198,194,185,198,194,198,194,198,194,198,194,198,194,194,198,194,194,198,194,198,194,198,194,185,198,198,194,198,194,198,194,198,194,198,194,198,194,198,194,198,194,198,194,185,198,194,198,194,198,194,198,194,198,194,198,194,198,194,198,194,198,194,198,194,185,198,198,194,0,0,0,0,0,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,133,134,199,201,201,199,199,199,134,201,129,129,199,134,201,199,134,201,133,134,134,134,199,134,201,133,199,199,134,201,134,201,201,201,201,129,134,201,129,199,199,199,134,201,201,201,201,199,134,201,199,134,201,201,201,199,199,199,134,201,199,134,201,199,134,201,199,134,201,199,201,199,134,201,199,134,201,199,134,201,199,134,201,133,199,199,133,199,134,201,133,133,0,133,129,199,133,199,199,133,199,133,134,199,199,133,134,0,129,201,0,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,199,134,201,201,199,134,201,199,199,134,201,199,204,0,204,0,0,0,204,0,204,204,204,204,204,204,204,204,129,129,204,204,204,204,129,204,205,0,129,204,204,204,204,204,204,204,204,204,204,204,205,0,213,213,213,0,211,0,129,213,211,0,129,204,204,204,204,204,204,204,205,204,204,0,0,216,216,216,216,216,216,216,216,216,216,0,216,216,216,216,216,216,216,216,216,0,216,0,205,0,0,216,216,216,216,216,216,216,216,216,216,216,216,216,205,216,216,216,216,216,216,216,216,216,216,205,216,216,0,0,0,0,211,0,211,214,215,214,215,0,0,213,0,213,0,213,0,213,196,212,212,1269,0,200,0,0,0,1269,196,0,0,0,0,0,104,200,0,209,0,200,157,157,0,0,0,157,158,157,158,157,158,157,158,157,158,157,158,157,158,134,158,158,158,158,157,158,157,158,157,158,0,157,158,157,157,157,158,158,158,158,158,157,158,157,158,157,158,157,158,158,158,157,158,157,158,157,158,157,158,158,157,158,157,158,157,158,157,158,157,158,158,134,158,134,158,157,158,157,158,157,158,157,158,157,158,157,158,157,158,157,158,157,158,0,59,19,60,59,19,0,60,60,19,59,0,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,60,60,59,59,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,0,0,95,95,95,95,95,95,95,95,95,20,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,20,95,95,95,95,95,95,95,95,95,95,20,0,0,0,0,0,0,152,0,152,21,0,221,21,0,21,222,0,21,21,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,221,221,222,222,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,0,0,0,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,0,0,47,47,47,225,225,226,224,0,226,225,226,226,225,0,224,0,227,225,225,224,224,225,226,227,227,224,226,226,225,224,0,0,225,226,226,0,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,223,223,224,224,224,225,225,225,226,226,226,227,227,227,22,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,224,225,226,227,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,0,224,225,226,227,22,22,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,223,224,225,226,227,22,0,0,0,23,228,61,61,61,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,228,61,228,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,61,228,228,61,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,228,61,229,229,229,230,0,0,231,231,229,232,0,0,231,230,232,232,229,232,230,230,231,232,229,229,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,229,229,229,229,229,229,229,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,229,229,230,229,229,230,231,232,229,229,229,229,230,231,232,229,230,231,232,229,229,230,231,232,229,230,231,232,229,229,230,231,232,229,230,230,230,231,231,231,232,232,232,229,229,229,229,230,231,232,229,229,229,229,229,230,231,232,229,230,231,232,229,229,229,229,229,229,229,230,231,232,229,230,229,230,229,230,231,232,229,229,229,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,229,230,231,232,229,229,229,229,229,0,229,229,229,0,0,230,229,229,229,229,229,229,229,230,231,232,229,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,229,230,231,232,229,230,231,232,229,1270,1271,1270,1271,1270,1271,1270,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,230,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,230,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,230,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,140,238,0,239,239,144,0,239,239,239,0,238,144,144,144,0,238,240,238,144,144,238,240,144,144,144,238,0,144,140,239,144,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,144,144,238,140,239,240,144,140,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,238,238,144,144,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,238,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,140,140,144,144,140,140,140,140,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,238,140,239,240,144,1264,1265,1266,1267,1266,1267,0,0,0,241,241,241,241,43,43,43,43,43,43,43,43,43,43,43,92,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,241,241,241,241,241,43,241,241,43,43,43,43,43,43,43,43,43,241,241,43,0,0,0,244,0,0,0,0,121,121,0,244,244,121,121,244,121,0,0,0,87,87,0,0,87,87,87,0,0,0,88,88,88,88,88,88,43,88,88,88,88,88,92,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,87,88,0,88,88,88,87,88,87,88,43,87,88,89,87,88,88,88,88,88,88,88,88,88,87,91,87,94,88,88,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,0,0,0,0,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,0,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,37,37,37,37,24,24,24,24,0,24,37,37,24,24,37,24,37,37,24,24,37,37,37,24,24,24,37,24,37,24,37,37,24,24,37,24,0,37,37,24,24,37,37,37,0,24,24,24,37,247,37,247,37,247,37,247,37,247,37,37,247,37,247,37,247,37,247,37,247,37,37,247,37,247,37,247,37,247,37,247,37,247,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,247,0,37,37,37,37,247,247,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,37,247,247,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,37,38,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,248,38,248,249,250,251,252,253,37,38,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,37,38,38,249,250,251,252,253,37,38,37,248,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,38,248,249,250,251,252,253,249,250,251,252,253,0,0,254,254,254,254,254,254,254,255,254,255,255,254,254,255,255,254,254,255,254,255,254,255,254,255,254,254,254,254,254,254,254,255,254,254,255,254,255,254,255,254,255,254,255,254,255,255,254,255,254,255,254,255,254,255,254,254,255,254,255,254,254,254,254,254,254,254,254,254,254,255,254,255,254,255,254,255,255,255,254,254,255,255,255,254,254,254,0,255,254,255,255,255,254,254,254,255,254,254,254,254,254,254,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,254,254,254,254,254,254,255,254,255,255,254,254,254,255,254,254,254,254,255,255,255,255,255,254,254,255,255,254,254,254,254,254,254,254,255,254,255,254,255,254,254,254,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,0,0,269,269,269,269,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,270,270,270,269,270,269,270,269,270,269,270,270,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,269,270,1272,1273,1274,1275,1272,1273,1274,1275,0,0,24,24,24,24,0,0,0,0,0,24,298,304,300,311,300,313,24,24,317,24,24,24,0,24,24,24,0,24,24,0,24,24,24,0,0,243,0,0,0,0,0,0,0,0,243,0,0,24,24,0,0,317,0,0,0,0,0,0,0,24,24,24,0,0,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,272,273,273,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,275,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,0,0,0,0,281,273,273,0,0,271,285,272,286,275,276,287,273,289,291,293,294,276,283,273,289,295,298,300,302,291,304,307,309,311,293,313,314,281,271,272,276,273,0,0,0,0,0,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,0,0,314,318,271,272,286,304,313,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,273,289,291,309,293,294,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,272,286,318,328,318,278,0,0,283,287,295,300,307,309,311,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,314,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,272,286,293,295,271,272,286,276,273,289,298,291,304,307,313,322,314,328,318,278,307,302,0,0,0,283,287,309,273,291,309,0,0,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,287,287,285,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,298,300,302,322,314,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,0,0,0,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,309,311,293,313,321,294,322,314,281,328,318,278,0,287,307,309,273,271,273,287,287,0,271,285,272,286,275,276,283,287,273,289,295,300,291,304,307,309,311,293,313,321,294,322,278,271,285,272,286,275,276,283,287,273,289,295,298,300,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,272,286,307,289,287,295,289,285,271,285,272,286,275,276,283,287,273,289,295,300,291,304,307,309,311,293,313,321,294,322,278,285,287,309,285,285,285,295,287,309,285,276,276,285,304,313,289,285,285,291,309,283,283,0,271,285,272,286,275,276,273,289,291,309,317,321,294,0,271,285,272,286,275,276,287,273,289,295,291,293,321,294,271,272,276,287,273,295,307,309,293,0,0,0,295,0,0,271,272,286,271,272,286,0,0,0,0,0,0,0,0,0,0,309,0,0,304,313,271,285,272,286,275,276,283,283,287,287,273,289,295,298,300,300,302,291,304,307,307,309,309,311,311,293,313,321,294,322,314,281,328,318,278,293,317,294,0,0,293,271,272,283,289,300,311,0,0,285,275,276,283,287,273,289,295,300,291,304,307,309,311,293,313,321,294,322,281,278,304,313,276,283,273,289,295,298,300,302,291,304,307,309,311,293,313,314,281,0,0,285,275,276,283,287,273,289,295,300,291,304,307,309,311,293,313,321,294,322,281,278,0,0,311,275,0,0,0,0,283,295,300,311,283,295,300,311,283,295,300,311,0,0,0,0,0,0,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,317,0,302,0,0,0,0,317,271,285,272,286,275,276,283,287,273,289,295,298,300,302,291,304,307,309,311,293,313,321,294,322,314,281,328,318,278,271,272,286,276,283,287,273,289,295,298,300,291,304,309,311,313,322,314,328,318,278,271,272,286,271,272,286,291,328,328,107,0,0,277,107,107,107,0,0,0,107,108,107,108,107,108,107,108,107,108,108,108,107,108,107,108,107,108,107,108,107,108,0,277,108,107,108,107,108,107,108,107,108,107,108,107,107,107,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,108,0,0,108,277,0,0,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,108,352,351,0,0,0,0,0,0,0,354,356,0,0,0,348,352,356,0,0,351,352,354,351,280,0,0,0,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,347,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,355,348,349,347,350,351,352,353,354,355,356,355,349,350,351,352,353,355,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,280,355,348,349,347,350,351,352,353,354,355,356,348,354,356,0,0,348,349,347,350,351,352,353,354,355,356,355,348,348,349,349,349,349,347,350,351,352,353,354,354,354,355,355,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,0,355,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,347,350,350,355,350,280,347,349,350,351,352,353,355,353,348,0,355,347,347,349,353,355,355,0,349,350,348,349,347,350,351,352,353,354,355,356,347,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,348,349,347,350,351,352,353,354,355,356,280,355,348,349,347,350,351,352,353,354,355,356,350,350,350,350,350,152,0,152,356,356,0,356,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,363,0,354,363,0,354,0,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,349,349,363,363,363,363,363,363,363,363,363,363,0,0,348,0,357,359,357,357,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,359,357,0,357,357,357,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,357,359,0,0,0,358,364,0,358,358,358,364,358,364,358,364,358,364,358,358,364,358,364,358,364,358,364,364,358,358,364,358,358,364,358,364,358,364,358,364,358,364,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,358,358,358,358,364,358,364,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,358,364,0,0,365,365,365,365,365,365,365,364,365,365,365,365,365,365,365,365,364,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,364,365,364,365,365,365,365,365,365,365,365,365,365,365,0,0,0,0,0,1276,1277,378,382,381,0,1276,1277,378,1276,1277,378,0,384,0,0,0,386,371,387,0,0,1276,1277,378,0,0,382,382,0,383,385,384,0,0,0,0,0,0,0,0,0,0,383,385,1276,1277,378,381,382,0,381,0,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,366,360,369,360,368,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,0,366,360,369,360,369,377,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,379,380,0,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,360,369,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,378,381,382,383,384,385,386,371,387,378,378,378,385,385,385,386,386,386,371,371,371,387,387,387,366,367,379,380,366,360,368,377,366,367,378,360,368,369,370,381,382,383,384,385,386,371,387,377,391,366,367,367,378,378,360,368,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,360,369,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,386,371,390,391,360,368,369,370,392,360,368,379,392,360,368,379,378,385,386,371,387,378,385,386,371,387,360,368,379,360,360,368,368,379,369,370,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,366,360,368,368,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,378,368,369,370,384,383,384,383,366,367,360,368,369,370,379,380,360,368,0,377,360,368,369,370,0,391,360,369,366,367,366,367,377,360,369,390,391,360,368,386,371,383,0,0,379,366,379,380,0,393,369,360,368,360,377,378,383,377,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,386,371,387,0,378,360,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,377,391,366,367,378,360,368,369,370,379,380,381,382,383,384,385,386,371,387,360,369,378,1278,1279,1280,1281,1281,1279,1282,1280,1281,1279,1282,1280,1281,1278,1279,1280,1281,1281,1279,1282,1280,1281,1279,1282,1280,1281,1278,1279,1280,1281,1281,1279,1282,1280,1281,1279,1282,1280,1281,0,0,0,0,0,419,0,0,0,416,417,407,415,374,409,374,409,374,409,374,409,374,409,413,374,409,374,409,374,407,413,407,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,409,416,417,374,374,416,417,407,415,374,416,417,407,415,374,415,415,419,416,416,417,407,407,374,374,415,374,415,374,413,409,407,407,374,416,417,407,415,374,409,413,416,417,407,407,374,374,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,409,416,417,374,374,415,374,409,374,409,407,374,415,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,374,374,413,407,416,417,407,415,374,374,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,374,416,417,407,415,374,409,413,416,417,407,407,374,374,413,407,407,416,417,407,415,374,415,374,409,416,417,374,415,409,374,409,413,416,417,407,407,374,374,413,407,413,407,413,407,413,407,413,407,413,407,413,407,409,413,416,417,407,407,374,374,416,417,407,413,407,413,407,413,407,413,407,415,374,415,415,415,415,409,407,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,416,417,407,415,374,413,407,416,417,407,415,374,374,409,374,374,0,0,0,0,0,0,0,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,372,404,372,388,396,420,404,372,388,396,420,372,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,372,372,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,372,404,404,372,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,404,404,404,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,388,396,420,404,372,388,396,420,404,372,372,388,396,420,372,388,372,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,404,372,388,396,420,372,0,0,0,0,0,422,422,422,422,422,422,0,0,0,422,422,422,422,0,0,0,422,422,0,426,0,0,0,0,422,422,422,0,0,0,0,422,421,423,423,423,427,435,428,412,436,421,429,423,411,411,411,411,426,427,427,428,428,412,412,429,429,1283,411,411,411,426,427,427,428,428,412,429,0,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,421,423,423,428,429,423,426,427,427,428,428,412,412,429,429,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,428,412,429,423,427,428,429,423,427,428,429,423,429,421,423,423,411,423,427,427,412,412,412,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,412,429,427,435,428,412,436,421,429,423,411,423,412,429,428,428,0,428,428,411,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,426,427,428,428,412,429,429,412,436,421,429,411,411,411,427,435,428,412,436,421,429,423,411,428,429,428,427,435,428,412,436,421,429,423,411,426,428,428,412,429,429,426,428,428,412,429,429,427,422,427,435,428,412,421,429,423,411,436,421,421,421,411,411,411,427,428,429,427,428,429,427,428,429,428,429,435,427,428,429,429,429,426,427,427,428,428,412,412,429,429,427,435,428,412,436,421,429,423,411,427,435,427,435,428,429,426,427,427,435,428,428,412,429,429,428,427,428,427,428,428,429,428,429,427,435,428,427,435,428,428,429,428,429,428,429,428,429,411,411,411,426,427,427,427,427,435,428,428,428,412,412,412,436,421,429,429,429,423,411,435,428,412,429,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,411,427,411,411,1284,412,412,427,435,428,412,436,421,429,423,411,412,436,412,412,423,436,412,423,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,421,429,411,421,428,429,428,429,428,435,421,428,429,428,429,377,412,429,411,412,412,428,429,428,429,428,429,428,429,429,429,1285,1285,1285,1285,1285,1285,1286,412,1286,411,411,411,421,421,411,428,421,412,412,421,411,411,0,436,411,421,0,428,428,411,411,427,435,426,427,427,428,428,412,412,429,429,427,412,411,436,421,411,0,428,412,428,412,412,421,412,421,426,427,427,428,428,412,412,429,429,412,426,427,427,428,428,412,412,429,429,412,436,429,412,427,411,411,411,411,377,427,421,426,427,427,428,428,412,412,429,429,435,428,412,429,435,429,411,428,412,436,429,411,428,412,436,429,411,412,427,435,428,412,436,421,429,423,411,428,428,427,412,0,423,428,412,429,412,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,427,435,428,412,436,421,429,423,411,0,422,0,436,412,412,427,435,428,412,436,421,429,423,411,1284,426,427,427,428,428,412,412,429,429,1287,1288,1289,428,429,428,429,427,435,426,427,427,428,428,412,412,429,429,1287,1288,1289,428,429,428,429,411,0,0,0,0,441,441,441,441,441,441,441,427,441,441,441,441,441,435,441,435,441,441,441,441,441,441,441,441,441,441,441,441,377,441,427,435,427,377,427,435,441,441,441,441,441,441,441,441,441,427,435,0,0,0,0,0,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,437,437,451,437,437,451,437,451,437,437,452,454,451,451,453,437,437,452,454,451,451,453,437,451,437,451,437,452,451,453,437,451,437,452,451,453,437,451,453,437,451,453,437,452,454,451,453,437,451,437,437,452,454,451,451,453,437,437,452,454,451,451,453,437,452,454,451,453,437,437,437,452,452,454,454,451,453,453,437,437,437,437,451,451,453,437,437,437,451,451,451,453,453,453,437,437,437,452,451,451,453,453,437,437,452,454,451,451,453,437,452,454,451,453,451,437,437,452,454,451,453,451,437,451,451,437,451,437,451,451,437,451,437,452,454,451,453,437,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,437,437,437,437,452,454,437,452,454,451,453,437,451,437,451,437,451,451,437,451,451,451,437,451,451,437,451,453,437,451,452,454,452,454,437,451,437,451,451,453,437,451,437,437,451,451,437,437,451,437,451,437,437,451,453,452,454,451,437,437,437,437,452,451,453,451,453,451,453,437,451,437,452,454,451,453,437,437,437,452,454,451,451,451,453,437,437,452,454,451,453,437,452,454,451,453,437,451,451,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,452,454,451,453,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,451,437,437,437,437,437,437,437,451,437,437,437,437,437,451,0,0,442,442,442,442,442,442,442,442,442,428,428,442,442,442,442,442,428,442,442,442,442,442,442,442,442,442,442,442,442,442,442,428,442,442,442,442,442,442,442,442,442,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,449,462,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,464,464,389,389,465,465,466,467,449,449,462,462,468,469,410,410,463,463,464,389,389,465,465,467,449,462,468,469,410,463,389,465,470,471,470,471,476,410,410,463,470,471,464,389,465,473,362,472,410,463,362,472,464,389,465,473,362,362,472,472,410,463,0,0,414,474,449,473,473,473,473,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,467,0,0,0,414,475,464,389,465,474,466,449,462,362,472,410,463,414,475,464,389,465,474,476,473,449,462,410,463,477,389,389,465,465,449,449,462,462,410,410,463,463,414,475,474,389,465,466,449,462,410,463,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,464,466,361,464,466,361,410,463,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,474,449,462,414,475,474,438,410,463,477,0,414,475,464,389,465,474,466,467,449,462,362,472,468,469,410,463,361,438,475,462,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,362,472,389,465,414,414,475,475,464,464,464,389,389,465,465,474,474,467,467,449,449,462,462,410,410,463,463,414,414,475,475,464,389,389,465,465,474,474,467,467,449,449,462,462,410,410,463,463,389,465,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,449,462,410,463,414,414,414,475,475,475,480,480,480,464,464,464,389,389,389,465,465,465,474,474,474,476,476,476,473,473,473,466,466,466,467,467,467,449,449,449,462,462,462,362,362,362,472,472,472,468,468,468,469,469,469,410,410,410,463,463,463,477,477,477,470,470,470,471,471,471,361,361,361,473,389,410,438,389,389,465,465,449,449,462,462,410,410,463,463,414,475,480,464,389,465,474,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,414,475,475,480,480,480,480,480,464,389,389,389,465,465,465,474,474,476,473,466,467,449,449,449,449,462,462,462,462,362,472,468,468,469,469,410,410,410,410,463,463,463,477,477,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,410,362,472,362,472,467,389,465,467,449,462,410,463,414,414,475,474,477,472,414,475,474,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,477,414,475,389,465,474,476,473,449,462,362,472,468,469,410,463,477,467,467,464,466,476,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,449,462,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,474,449,462,467,473,476,473,466,362,472,468,469,477,414,475,474,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,474,414,475,474,414,475,414,475,474,414,475,480,464,389,389,389,465,465,465,474,476,473,466,467,449,449,449,462,462,462,362,472,468,468,468,469,469,469,410,410,410,463,463,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,476,473,466,362,472,468,469,477,472,472,414,475,474,449,462,414,475,389,465,474,449,462,410,463,466,468,469,362,472,414,475,473,449,462,467,473,473,467,410,463,414,475,464,389,465,474,473,449,462,410,463,449,462,410,463,362,472,362,472,472,472,362,472,362,472,472,472,362,472,362,472,472,472,472,472,472,472,464,389,465,474,466,449,462,410,463,414,475,474,474,464,389,465,474,466,449,462,410,463,414,475,474,474,414,414,475,475,464,464,389,389,465,465,474,474,466,467,467,449,449,462,462,410,410,463,463,414,414,475,475,464,389,389,465,465,474,474,467,467,449,449,462,462,410,410,463,463,472,464,389,465,467,449,462,410,463,414,475,480,464,389,465,474,476,466,467,449,462,362,472,468,469,410,463,477,472,467,477,470,471,473,473,410,463,470,471,449,462,410,463,414,475,464,389,465,474,466,467,449,462,362,472,468,469,410,463,361,0,466,410,463,470,471,389,465,474,472,414,474,362,472,472,362,472,464,466,361,472,0,0,389,362,472,362,472,362,472,410,463,472,473,473,476,411,438,0,410,463,389,465,467,410,463,362,472,477,414,475,389,389,465,465,474,449,449,462,462,410,410,463,463,414,475,474,414,475,474,464,464,414,475,474,362,472,470,471,470,471,470,471,414,438,414,475,474,0,0,472,473,389,465,449,462,468,469,410,463,410,463,473,464,389,389,389,465,465,465,466,467,449,462,468,469,410,463,464,389,389,465,465,467,449,462,468,469,410,463,464,464,449,449,462,462,410,410,463,463,438,476,473,362,472,477,362,472,362,472,362,472,465,472,463,389,476,362,410,389,465,449,462,362,472,468,469,410,463,465,463,362,472,362,472,472,474,414,475,389,465,474,449,462,410,463,414,475,389,465,474,449,462,410,463,414,475,389,465,474,449,462,410,463,414,475,389,465,474,449,462,410,463,414,475,474,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,410,463,480,480,414,410,476,473,468,469,410,463,477,389,465,449,462,468,469,410,463,465,463,414,475,389,465,474,449,462,410,463,474,449,414,475,389,465,474,476,473,449,462,362,472,468,469,410,463,477,414,475,389,465,474,449,462,410,463,389,465,449,462,468,469,467,468,466,469,466,469,476,476,466,466,362,362,468,468,473,472,469,472,473,466,472,469,472,466,468,469,466,468,469,476,476,466,466,362,362,468,473,472,473,472,414,475,474,362,472,477,414,475,464,389,465,474,466,449,462,362,472,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,410,463,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,414,475,474,473,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,0,0,473,467,475,462,414,475,480,464,389,465,474,476,473,466,467,449,462,362,472,468,469,410,463,477,470,471,361,480,414,475,474,449,462,362,472,410,410,463,410,463,362,472,480,389,465,468,469,410,463,470,471,414,475,474,465,463,471,475,465,463,471,475,480,389,465,468,469,410,463,470,471,414,475,474,389,410,465,463,471,475,480,465,469,463,471,475,414,475,464,389,389,465,465,474,467,449,449,462,462,410,410,463,463,0,433,433,433,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1290,1291,1292,1284,1292,1293,1293,1293,1291,1294,1295,1294,1295,1295,1295,1294,1295,1294,1295,1295,1295,1294,1295,1294,1295,1295,1295,1295,1295,1295,1295,1286,1296,1286,1296,1297,1293,1291,1298,1297,1291,1298,1299,1284,1292,1288,1300,1289,1301,1299,1302,1303,1288,1300,1289,1301,1299,1302,1303,1300,1301,1299,1303,0,0,0,0,0,478,483,479,484,481,0,0,0,0,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,429,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,429,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,443,444,486,443,444,486,443,444,443,444,429,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,486,443,444,426,0,0,426,426,426,426,426,426,426,426,426,426,426,426,426,408,408,426,426,0,0,0,0,0,0,0,0,0,0,0,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,488,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,489,490,487,406,489,490,487,487,489,488,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,489,490,487,406,0,0,0,0,0,0,0,0,0,1304,1305,1306,1306,1306,1306,1306,1306,1307,1307,0,1308,0,0,1305,1309,1310,1311,1309,1310,1311,0,0,0,0,0,0,0,0,0,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,373,376,376,405,373,376,397,402,394,405,373,376,397,402,394,373,376,376,373,376,397,402,394,373,376,397,402,394,405,373,376,397,402,394,373,376,376,373,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,373,376,376,373,376,394,402,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,397,402,394,405,405,373,376,397,402,394,373,376,376,373,376,405,397,402,394,373,373,376,376,402,373,376,376,373,376,376,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,405,373,376,397,402,394,373,373,0,0,0,0,0,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,375,491,491,375,491,399,375,491,399,375,375,491,491,399,399,375,491,399,375,375,491,491,375,491,399,375,491,399,375,491,399,375,491,399,375,375,491,491,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,399,375,491,399,375,375,491,491,491,399,399,375,491,375,375,491,491,375,375,491,491,399,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,491,399,375,0,0,0,0,0,0,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,379,380,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,395,401,400,403,395,395,379,380,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,401,400,403,395,0,0,0,419,0,409,409,409,409,409,413,409,409,413,409,419,413,409,409,413,409,409,409,488,413,409,413,413,409,409,409,413,413,413,413,413,413,413,413,409,413,413,413,413,413,409,488,413,409,352,351,354,0,0,0,352,351,352,354,351,0,0,350,350,350,353,353,350,350,123,0,0,284,123,123,0,0,0,0,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,124,124,331,123,124,331,123,124,331,123,124,331,123,124,331,331,123,124,0,284,331,123,124,331,123,124,331,123,124,331,123,124,331,123,123,123,123,331,123,124,331,331,123,124,331,123,124,331,123,124,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,0,0,331,331,284,0,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,331,123,124,1312,1313,1314,0,0,0,316,316,316,316,316,316,316,316,316,316,288,288,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,0,274,0,0,0,0,206,111,206,111,206,111,206,111,206,111,111,111,0,206,111,206,111,206,111,206,111,206,111,274,111,206,111,206,111,206,111,0,206,111,206,206,206,206,206,111,206,111,111,111,111,206,111,206,111,206,206,206,111,206,111,206,111,206,111,206,111,206,111,206,111,206,111,206,111,0,206,111,0,111,274,111,206,111,0,206,111,206,111,206,111,206,111,206,111,206,111,206,111,206,206,111,0,206,111,111,111,0,0,0,166,166,0,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,493,166,493,166,494,493,166,493,166,494,493,166,494,493,166,494,0,494,493,166,494,493,166,493,493,493,166,166,166,494,493,166,493,493,166,494,493,166,494,493,493,493,493,166,494,493,166,493,166,494,493,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,0,494,494,494,494,494,166,494,494,494,494,494,494,493,166,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,493,166,494,0,0,493,166,494,494,0,0,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,0,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,0,333,333,333,333,333,333,333,333,333,0,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,0,0,0,244,0,0,0,0,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,121,121,497,496,121,497,496,121,121,121,497,496,121,0,244,496,244,497,496,121,497,496,121,497,496,121,497,496,121,496,121,497,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,496,497,497,121,121,244,121,497,497,497,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,496,121,497,510,0,507,342,0,506,290,0,0,0,0,498,0,0,342,0,505,506,0,501,498,507,0,510,0,0,502,503,505,0,342,0,0,498,507,0,502,503,0,0,0,0,0,507,498,501,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,334,499,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,508,508,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,500,336,336,499,501,502,498,503,335,504,334,342,505,506,507,343,114,508,509,501,502,498,503,335,504,334,342,505,506,507,343,114,508,509,334,335,504,509,335,504,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,499,0,290,506,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,336,499,501,502,498,503,335,504,334,334,342,505,506,507,343,510,114,508,509,501,498,335,504,114,508,509,501,501,501,498,498,498,335,335,335,504,504,504,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,334,501,503,335,504,334,501,503,335,504,114,114,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,334,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,334,499,334,510,334,334,510,334,334,334,334,336,499,334,506,499,503,334,335,504,114,343,334,334,501,334,343,501,503,334,503,0,290,336,499,334,336,501,502,498,503,335,504,334,342,505,506,507,343,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,336,499,501,502,498,503,335,504,334,342,505,506,507,343,510,114,508,509,509,334,1315,1315,1315,1315,1316,1317,1318,1317,1319,1319,1319,1319,1319,0,513,513,0,513,0,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,513,512,513,512,513,512,513,512,512,513,512,513,334,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,334,513,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,512,513,1320,1321,1321,1320,119,330,0,297,330,0,119,0,330,119,0,330,0,0,0,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,120,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,516,330,516,119,120,0,297,330,297,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,119,119,119,330,516,119,120,516,330,516,119,120,330,516,119,120,330,516,119,120,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,516,330,120,516,516,297,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,330,516,119,120,1322,1322,1323,0,299,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,0,299,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,299,0,98,98,98,98,98,98,98,98,98,98,0,282,0,519,0,0,518,519,519,519,518,518,517,517,0,518,0,0,519,0,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,101,341,517,518,519,101,341,517,518,519,101,101,517,518,519,101,517,518,519,101,341,517,518,519,101,0,282,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,517,518,519,101,517,517,517,518,518,518,519,519,519,341,517,518,519,519,101,341,517,518,519,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,282,517,518,519,101,519,519,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,517,518,519,101,341,341,99,0,301,99,0,0,0,0,99,100,99,100,99,100,99,100,99,100,100,100,100,99,100,99,100,99,100,99,100,99,100,0,301,99,100,99,100,100,99,100,99,100,99,99,99,99,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,301,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,1324,1325,521,0,303,0,521,521,521,0,0,0,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,122,521,0,303,122,521,122,521,122,521,122,521,521,122,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,303,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,521,122,0,117,0,346,0,292,0,117,215,523,346,117,0,0,0,215,0,0,0,523,0,0,0,346,0,344,344,214,215,346,522,523,207,344,117,118,524,525,522,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,524,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,344,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,525,214,215,346,522,523,207,344,117,118,524,525,118,344,0,292,214,215,346,522,523,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,117,523,523,523,207,207,207,117,117,117,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,118,207,207,346,118,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,522,522,207,214,215,346,522,523,344,0,524,522,0,292,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,214,215,346,522,523,207,344,117,118,524,525,207,214,215,346,522,523,207,344,117,118,524,525,346,118,214,215,346,522,523,207,344,117,118,524,525,522,214,215,214,215,1326,1326,1327,1328,1327,1328,0,527,527,0,323,0,527,0,323,0,527,0,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,527,526,527,526,528,527,528,526,528,527,526,528,527,526,528,527,323,526,528,527,527,526,528,527,526,528,527,526,528,527,526,528,527,528,528,528,526,528,527,526,528,527,526,528,527,526,528,527,526,527,526,528,527,526,528,527,526,528,527,526,528,527,526,323,528,526,526,526,530,526,530,526,528,526,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,526,528,527,323,526,528,527,526,537,537,542,538,542,577,539,646,0,0,575,0,557,619,533,0,0,629,628,628,654,591,591,591,591,591,591,591,591,591,591,591,591,591,591,539,537,631,541,542,631,536,539,537,581,0,0,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,0,0,0,0,0,0,0,0,0,0,0,0,565,0,547,646,0,547,0,0,0,0,0,0,0,0,0,537,545,545,542,539,540,539,545,537,0,0,543,544,543,544,539,580,636,636,593,0,0,0,0,0,0,0,0,645,0,0,0,0,0,0,573,570,0,572,572,580,572,632,572,632,572,572,632,538,537,539,537,539,538,537,536,615,615,643,533,533,533,533,533,0,557,0,655,0,0,0,0,594,570,649,0,0,655,573,573,565,0,653,0,533,533,533,533,565,619,0,0,533,533,533,533,533,533,0,541,537,540,545,539,539,539,0,0,628,628,582,0,645,643,626,626,626,626,626,626,626,626,626,626,0,581,0,653,536,542,631,565,0,686,619,619,592,566,618,539,543,543,539,537,630,0,0,0,0,0,0,0,0,0,628,615,615,0,629,0,622,0,0,570,615,615,0,619,619,0,582,579,579,637,593,0,620,686,566,537,0,543,543,536,539,541,541,541,541,541,537,537,537,628,0,0,0,0,575,565,575,636,0,539,540,539,533,637,619,645,566,1329,619,576,652,695,573,573,573,573,573,573,573,573,629,651,651,0,0,0,570,583,620,685,620,686,537,537,537,537,577,536,537,0,0,0,652,0,557,557,557,582,579,1330,607,0,629,0,629,0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,533,533,533,533,533,533,533,533,533,533,533,533,537,537,539,542,631,544,576,577,537,676,627,644,644,0,0,0,0,0,0,0,0,0,0,0,0,636,615,655,0,0,0,575,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,537,536,537,537,537,537,537,537,537,543,544,541,537,539,0,547,646,547,0,0,0,0,0,0,0,0,0,0,643,626,626,626,626,626,626,626,626,569,569,569,626,626,626,626,1329,573,573,573,573,573,649,533,0,557,0,0,642,646,0,594,0,0,695,686,575,0,0,0,0,0,0,0,0,537,544,537,537,537,537,537,537,537,537,537,631,0,646,0,0,0,0,0,0,0,0,0,547,547,0,0,620,686,652,651,579,579,543,537,539,539,643,614,626,626,614,626,626,626,626,626,626,0,642,655,592,626,626,626,626,592,538,540,543,539,537,540,545,539,0,537,539,536,583,685,654,654,654,622,0,0,0,0,0,570,565,539,631,1330,607,1330,607,0,0,0,588,675,0,627,644,633,634,573,615,651,631,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,533,601,601,601,536,537,538,539,540,541,542,543,544,545,537,537,590,577,1331,679,585,601,550,599,564,604,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,546,546,549,550,551,531,552,552,554,555,556,1332,1333,599,553,650,564,533,604,631,609,571,680,599,564,599,564,534,560,560,559,534,596,610,612,600,602,647,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,536,536,537,537,538,538,539,539,540,540,541,541,542,542,543,543,544,544,545,545,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,578,533,533,533,601,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,1334,548,648,605,641,563,563,611,534,534,565,566,536,567,537,538,563,568,539,569,570,571,540,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,541,587,588,589,590,591,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,543,628,629,544,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,655,565,566,536,567,537,538,563,568,539,569,570,571,540,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,541,587,588,589,590,591,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,543,628,629,544,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,655,568,539,569,574,630,577,562,617,1333,650,568,539,569,574,630,601,618,567,1335,572,536,537,538,539,540,541,542,543,544,545,539,533,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,533,549,584,611,536,537,538,539,540,541,542,543,544,545,536,537,539,540,541,542,543,544,545,534,534,534,534,1336,585,647,550,531,531,531,531,531,531,531,551,531,531,531,531,531,531,531,531,550,550,531,531,531,552,584,538,566,536,567,537,538,563,568,572,575,576,579,580,582,584,550,585,593,594,595,542,599,600,601,562,609,611,558,614,615,617,618,622,628,629,679,631,634,635,557,636,637,639,641,642,643,564,653,654,680,612,618,598,552,635,640,608,617,562,612,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,556,555,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,1331,531,546,552,571,571,536,537,538,539,540,541,542,543,544,545,552,1337,599,559,559,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,563,563,560,560,670,670,560,560,670,670,560,560,670,670,560,560,670,670,571,571,695,565,566,536,567,537,538,563,568,539,549,549,675,676,569,570,571,540,572,554,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,551,531,531,585,586,541,546,546,587,552,552,535,535,672,672,660,660,659,659,673,673,588,589,674,668,668,671,671,664,664,681,681,534,534,560,560,590,559,559,670,591,682,682,561,561,532,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,683,619,620,621,622,623,624,625,626,627,556,556,555,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,576,680,536,537,538,539,540,541,542,543,544,545,556,556,560,596,610,560,559,603,616,605,606,613,550,565,566,536,567,537,538,563,568,539,569,570,571,540,572,573,574,575,576,577,578,579,580,581,582,583,584,585,541,590,591,592,533,593,594,595,542,599,601,604,609,611,612,614,615,617,618,619,620,622,624,625,626,627,543,628,629,544,630,631,632,633,634,635,557,636,637,638,639,640,642,643,644,645,646,647,649,564,651,545,654,565,565,565,566,566,566,536,536,536,567,567,567,537,537,537,538,538,538,563,563,563,568,568,568,539,539,539,569,569,569,570,570,570,571,571,571,540,540,540,572,572,572,573,573,573,574,574,574,575,575,575,576,576,576,577,577,577,578,578,578,579,579,579,580,580,580,581,581,581,582,582,582,583,583,583,584,584,584,585,585,585,541,541,541,590,590,590,591,591,591,592,592,592,533,533,533,593,593,593,594,594,594,595,595,595,542,542,542,599,599,599,604,604,604,609,609,609,611,611,611,612,612,612,614,614,614,615,615,615,617,617,617,618,618,618,619,619,619,620,620,620,622,622,622,624,624,624,625,625,625,626,626,626,627,627,627,543,543,543,628,628,628,629,629,629,544,544,544,630,630,630,632,632,632,633,633,633,634,634,634,635,635,635,557,557,557,636,636,636,637,637,637,638,638,638,639,639,639,640,640,640,642,642,642,643,643,643,644,644,644,645,645,645,646,646,646,647,647,647,649,649,649,564,564,564,651,651,651,545,545,545,654,654,654,560,536,537,538,539,540,541,542,543,544,545,618,551,531,534,670,568,590,680,565,566,536,536,536,536,536,567,537,537,537,537,537,538,538,538,538,538,563,568,539,539,539,539,539,549,569,570,571,540,540,540,540,540,572,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,541,541,541,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,542,542,542,542,599,600,601,602,603,562,604,605,606,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,620,621,621,622,623,623,624,625,625,626,627,556,555,685,685,543,543,543,543,543,628,629,544,544,544,544,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,545,545,545,545,653,654,680,655,567,1335,552,1331,1337,578,599,612,624,640,679,608,695,565,566,536,536,567,537,538,563,568,539,549,675,675,676,569,570,571,540,572,554,573,574,575,576,577,578,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,621,622,623,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,536,537,538,539,540,541,542,543,544,545,536,536,537,537,538,538,539,539,540,540,541,541,542,542,543,543,544,544,545,545,536,537,538,539,540,541,542,543,544,545,538,550,550,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,557,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,676,609,584,631,550,671,664,549,549,549,551,565,566,536,567,537,538,563,568,539,569,540,572,573,574,575,576,577,578,579,580,581,582,584,585,541,590,591,592,533,593,594,595,542,604,609,611,612,614,615,617,618,619,622,624,626,543,628,629,544,632,633,634,635,557,636,637,638,639,640,642,643,644,645,646,647,651,545,654,551,587,587,551,551,532,680,549,551,531,546,552,535,672,660,659,673,668,671,664,682,561,532,533,533,533,646,533,565,566,536,567,537,538,563,568,539,569,540,572,573,574,575,576,577,578,579,580,581,582,584,585,541,590,591,592,533,593,594,595,542,604,609,611,612,614,615,617,618,619,622,624,626,543,628,629,544,632,633,634,635,557,636,637,638,639,640,642,643,644,645,646,647,651,545,654,552,1331,635,0,0,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,536,537,538,539,540,541,542,543,544,545,534,560,559,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,536,537,538,539,540,541,542,543,544,545,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,536,537,538,539,540,541,542,543,544,545,533,533,612,612,533,533,536,537,538,539,540,541,542,543,544,545,609,611,564,630,533,695,609,612,618,533,612,579,551,607,568,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,1338,1339,1340,1341,1337,1336,589,674,599,600,601,603,562,608,558,613,616,617,639,564,1334,603,608,613,648,551,531,568,595,601,601,601,587,607,639,1339,585,563,563,563,563,563,563,563,563,563,563,563,563,635,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,601,563,563,1332,1333,553,650,552,1337,599,564,635,564,601,605,606,613,560,560,560,560,608,608,617,571,609,618,619,550,536,537,538,539,540,541,542,543,544,545,566,536,567,537,538,563,568,572,575,576,579,580,582,584,550,585,593,594,595,542,599,600,601,562,609,611,558,614,615,617,618,622,628,629,679,631,634,635,557,636,637,639,641,642,643,564,653,654,680,562,548,624,641,532,531,576,597,1332,1333,553,650,695,568,539,569,574,583,630,618,635,533,531,550,584,534,560,559,531,567,1335,1333,650,683,1331,679,608,600,534,560,559,531,596,610,631,638,609,573,536,537,538,539,540,541,542,543,544,545,533,550,551,533,1338,1338,534,597,602,641,552,1337,617,541,533,536,537,538,539,540,541,542,543,544,545,560,560,559,670,670,560,531,560,560,670,670,560,560,559,670,670,560,560,559,670,670,560,560,560,560,670,670,560,624,568,546,552,626,1339,1337,548,533,546,611,621,623,685,589,674,576,638,531,612,598,640,604,531,595,584,536,537,538,539,540,541,542,543,544,545,536,537,538,539,540,541,542,543,544,545,532,683,541,536,537,538,539,540,541,542,543,544,545,606,1332,1333,683,553,650,562,558,634,633,565,566,536,567,537,538,563,568,539,569,570,571,540,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,541,587,588,589,590,591,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,543,628,629,544,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,655,620,621,623,625,685,565,620,621,623,625,685,553,650,536,537,538,539,540,541,542,543,544,545,584,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,1336,647,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,584,536,537,538,539,540,541,542,543,544,545,546,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,546,552,1331,1339,1337,679,576,563,563,0,571,608,0,597,598,1331,1337,647,695,565,566,536,567,537,538,563,568,539,549,675,676,569,570,571,540,572,554,573,574,575,576,577,578,579,580,581,582,583,584,550,551,531,585,586,541,546,587,552,535,672,660,659,673,588,589,674,668,671,664,681,534,560,590,559,670,591,682,561,532,592,547,533,548,593,594,595,596,597,598,542,599,600,601,602,603,562,604,605,606,607,608,609,610,611,558,612,613,614,615,616,617,618,683,619,620,621,622,623,624,625,626,627,556,555,685,543,628,629,544,679,686,630,631,632,633,634,635,557,636,637,638,639,640,641,642,643,644,645,646,647,648,553,649,650,564,651,652,545,653,654,680,655,607,607,552,1331,635,538,532,532,578,609,532,534,560,559,633,634,633,634,634,1342,1342,1343,1343,1344,1344,1343,1344,1342,1345,1346,1346,1347,1348,1347,1349,1349,1350,1350,1351,0,0,0,0,1352,0,1352,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,0,0,0,708,0,0,0,0,0,0,0,0,0,710,710,710,710,0,710,0,0,710,0,710,721,721,0,710,709,0,0,0,710,709,710,717,710,722,713,713,709,0,717,709,710,723,710,723,710,710,710,710,710,710,710,710,709,0,717,722,710,710,708,708,717,718,710,717,718,711,0,0,717,0,710,708,713,721,721,713,710,711,713,710,708,708,713,721,721,718,709,717,717,718,710,722,713,718,710,710,710,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,702,706,707,702,706,707,719,714,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,724,720,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,702,706,707,712,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,702,717,718,719,706,706,720,721,722,725,707,707,723,724,715,716,719,720,724,719,719,719,720,720,720,724,724,724,708,708,709,709,710,710,711,711,712,712,713,714,715,716,702,717,717,718,718,719,706,720,721,722,722,725,707,723,723,724,724,710,717,708,708,708,709,709,710,710,710,710,710,711,712,713,714,715,716,702,717,717,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,719,720,724,719,720,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,712,702,715,716,719,715,712,720,719,714,724,720,708,709,710,717,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,708,709,710,711,712,717,718,722,723,724,708,709,710,711,712,717,718,722,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,708,709,710,711,712,713,714,715,716,702,717,718,719,706,720,721,722,725,707,723,724,712,1353,1354,1354,1355,1355,1355,1353,1353,1354,1355,1354,1355,1354,1355,1354,1355,1356,1357,1358,1359,1360,1361,1360,1362,1363,1364,1365,1366,1367,1368,1369,1358,1356,1357,1359,1360,1361,1367,1364,1368,1365,1362,1363,1361,1358,1366,1369,1367,1368,1369,1364,1363,1365,1362,1370,1371,1370,1371,1372,1373,1373,1374,1375,1374,1375,1372,1374,1375,1376,1377,1378,1379,1379,1376,1377,1376,1377,1379,1379,1378,750,750,0,762,762,0,0,769,769,757,743,762,743,746,742,745,751,739,751,765,769,752,0,760,736,762,0,0,0,0,0,0,0,0,0,765,765,0,765,0,765,765,0,760,764,737,746,739,743,749,762,768,753,743,769,0,762,769,0,743,749,762,766,757,769,769,769,0,765,0,0,0,742,745,762,762,746,746,750,745,743,762,762,745,768,762,737,743,746,762,739,743,749,765,765,739,765,762,762,765,739,743,765,765,746,761,742,743,765,743,746,743,762,743,746,749,762,746,762,765,736,765,746,762,739,765,765,739,739,765,762,746,746,752,0,765,762,762,745,743,746,751,739,739,765,765,743,762,765,743,762,745,762,742,745,765,739,746,745,762,762,739,768,748,739,750,762,769,0,0,748,769,743,746,0,751,769,743,762,0,0,0,0,0,0,0,762,0,0,0,0,0,0,0,0,0,749,0,743,762,765,769,769,769,769,769,769,769,769,0,764,753,0,762,765,765,762,748,761,766,0,739,746,765,765,765,765,765,765,765,739,737,746,745,765,765,762,746,749,750,745,746,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,733,734,733,734,1382,1383,740,758,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,1384,0,755,754,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,759,735,1383,767,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,1380,1381,733,734,0,735,741,747,759,756,735,759,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,733,735,771,736,737,734,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,771,767,740,758,735,740,742,745,748,752,753,754,755,756,757,758,759,735,735,735,740,740,740,742,742,742,745,745,745,748,748,748,752,752,752,753,753,753,754,754,754,757,757,757,758,758,758,772,773,735,771,736,736,737,737,734,738,738,739,739,740,741,742,742,743,743,744,744,745,745,746,746,747,748,749,749,750,750,751,751,752,753,754,755,756,757,758,759,760,760,761,761,762,762,763,763,764,765,765,766,766,767,768,768,769,769,737,738,743,744,746,749,762,763,765,769,772,773,1380,1381,733,735,771,736,736,737,734,738,739,739,740,741,742,742,743,743,743,743,743,743,743,743,743,743,743,744,745,745,746,746,746,746,746,746,747,748,748,749,749,749,749,749,750,751,752,753,754,755,756,757,758,759,760,761,762,762,762,762,762,762,762,762,762,762,762,762,762,762,763,764,765,765,765,766,766,766,766,767,768,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,735,752,753,757,747,735,752,753,757,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,733,733,1385,735,741,759,767,1384,754,1382,1383,735,772,773,771,735,741,747,759,759,1382,1383,771,772,773,1383,767,740,758,754,0,755,735,738,744,763,773,771,736,738,739,742,743,744,745,746,749,762,763,765,766,768,756,754,767,1382,1383,741,759,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,736,737,738,739,742,743,744,745,746,749,750,751,760,761,762,763,765,766,768,769,736,737,738,739,742,743,744,745,746,749,750,751,760,761,762,763,765,766,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,755,756,772,773,1380,1381,733,735,771,736,737,734,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,747,747,747,1386,1386,1387,1387,1388,1388,1387,1389,1389,1390,1390,1391,1391,1389,1390,1392,1392,1393,1393,1394,1394,1393,1395,1396,1396,1395,1397,1398,1399,1398,1400,1401,1400,1401,1402,1397,1402,1401,1402,1403,1403,1404,1403,1404,1405,1405,1406,1407,1406,1408,1408,1409,1409,1410,1411,1410,1411,1412,1412,1413,1413,1414,1415,1416,1416,1415,1414,1417,1418,1414,1415,1412,1412,1413,1413,1419,1419,1420,1417,1418,1415,1416,1416,1420,1417,1418,1421,1421,1421,1422,1421,1422,1422,1421,1421,1423,1424,1425,1426,1427,1428,1429,1426,1428,1423,1424,1425,1430,1427,1431,1426,1428,1429,1426,1428,1428,1430,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,781,0,0,0,0,0,0,0,0,0,0,774,774,774,774,729,0,729,729,0,0,729,782,783,0,0,783,729,0,781,0,0,782,729,781,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,0,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,770,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,787,788,781,782,783,774,784,729,727,728,785,781,782,783,774,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,770,786,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,786,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,770,787,787,788,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,782,782,782,782,770,781,781,782,783,774,774,784,784,729,729,727,727,728,728,785,770,787,788,790,1432,820,781,781,782,783,774,786,784,729,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,790,790,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,0,820,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,820,781,782,783,774,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,1433,786,786,0,1433,1433,0,820,785,781,786,781,782,783,774,784,729,727,728,785,781,774,784,729,727,728,781,774,784,729,727,728,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,788,770,787,788,790,1432,820,781,782,783,774,786,784,729,727,728,785,1434,1435,1436,1437,1434,1435,1436,1437,1434,1434,1435,1436,1437,0,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,797,796,797,796,797,796,0,795,0,795,796,0,0,797,796,0,0,796,796,0,797,795,796,0,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,792,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,799,793,794,795,796,793,794,795,796,792,799,800,793,797,794,795,796,792,797,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,792,799,800,793,797,794,795,796,792,792,799,800,793,797,794,795,796,793,797,794,794,795,795,796,796,792,799,800,793,797,794,795,795,795,795,796,796,796,792,799,800,793,797,794,795,796,800,800,792,799,800,793,797,794,795,796,793,792,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,793,792,795,796,793,794,795,796,794,795,796,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,792,799,800,793,797,794,795,796,799,792,799,800,793,797,794,795,796,0,0,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,0,0,0,726,802,726,802,726,802,726,802,726,802,726,726,726,802,726,802,726,726,802,726,726,802,726,726,802,726,802,726,802,726,802,726,802,802,803,802,0,726,802,726,802,726,802,726,802,726,802,726,802,726,802,802,726,802,726,802,726,802,726,802,726,802,802,726,726,726,726,802,802,726,726,726,726,802,802,726,802,726,802,726,802,726,802,726,802,726,802,726,802,726,802,726,802,0,0,806,694,806,806,806,806,806,806,806,806,806,806,806,694,806,694,806,694,806,694,806,806,806,806,806,694,806,694,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,694,806,806,806,806,806,806,806,806,806,806,806,694,806,694,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,694,806,806,694,806,694,694,694,694,694,806,694,806,694,806,806,806,694,806,694,694,806,694,806,806,806,806,694,806,694,806,694,806,694,806,694,806,694,806,694,806,694,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,694,806,694,806,806,806,806,806,806,806,806,694,806,694,806,694,806,694,806,694,806,694,806,694,806,694,694,806,694,0,658,658,658,658,658,0,0,0,845,1438,832,845,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,832,845,832,845,1438,832,845,1438,832,845,832,845,832,845,1438,832,845,845,832,845,1438,832,845,1438,832,845,832,845,1438,832,845,1438,832,832,832,832,832,832,845,1438,832,845,1438,832,845,1438,832,845,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,832,845,832,845,832,845,832,845,832,845,832,845,832,845,832,845,845,832,845,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,845,1438,832,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,848,704,704,704,704,704,704,704,704,704,704,704,848,704,704,704,848,704,0,0,0,0,0,851,849,805,849,805,849,805,849,805,849,805,851,805,849,805,849,805,849,805,849,849,805,849,805,849,805,849,805,849,805,849,849,805,849,805,849,805,849,805,851,805,849,805,849,805,849,805,849,805,849,805,849,805,849,805,849,805,849,849,849,851,849,805,849,805,849,805,849,805,849,805,849,805,849,805,849,805,849,805,0,0,688,0,0,0,831,0,688,0,814,838,688,814,838,836,0,688,831,688,836,688,0,0,0,0,838,688,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,813,810,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,701,852,814,838,688,812,836,701,852,814,838,688,812,836,1439,813,810,831,701,852,690,814,838,688,812,836,810,701,690,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,690,852,852,814,814,838,838,688,688,812,812,836,836,1439,813,810,831,701,852,690,814,838,688,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,690,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,810,813,690,690,690,0,1439,701,688,701,852,814,838,688,812,836,852,814,838,688,812,836,852,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,813,810,831,701,852,690,814,838,688,812,836,690,813,810,831,701,852,690,814,838,688,812,836,865,865,0,864,877,885,877,885,863,900,900,864,864,892,893,0,896,892,893,896,0,863,900,0,900,864,864,864,864,864,863,904,909,0,900,897,865,0,0,904,875,875,883,876,897,900,0,0,863,891,0,904,877,885,904,0,862,886,886,0,904,900,864,880,880,864,875,894,900,874,0,0,878,900,904,864,864,864,864,864,864,882,875,882,882,882,901,864,884,900,0,0,864,864,892,864,878,0,904,0,892,897,893,892,893,864,864,0,864,885,865,885,865,864,0,0,0,0,864,864,894,879,877,864,864,864,875,874,864,909,875,0,854,0,900,0,875,0,900,897,892,873,892,0,854,885,901,865,885,865,904,863,0,0,900,0,900,900,904,892,893,903,864,875,0,864,864,896,896,904,855,864,864,892,873,892,879,0,900,900,875,875,0,900,862,864,864,892,891,892,904,900,0,863,893,864,893,864,864,864,909,0,892,892,891,886,894,864,892,898,898,898,875,864,0,864,864,864,864,864,879,875,875,863,875,864,0,875,854,903,854,876,883,883,883,883,883,883,883,883,883,883,883,883,864,0,863,904,0,900,900,864,864,900,0,0,904,864,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,864,856,855,880,875,0,875,884,863,0,864,0,863,0,900,0,892,892,864,864,864,877,898,864,0,0,0,0,900,864,0,864,854,884,0,0,904,863,0,892,893,904,0,0,900,0,864,864,903,864,876,864,0,0,885,901,865,859,877,900,0,873,854,0,864,864,864,864,864,863,863,0,874,875,875,899,856,895,0,854,875,875,904,900,895,899,899,895,899,899,897,900,854,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,855,856,857,858,861,862,864,907,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,857,865,865,0,881,888,889,905,906,855,856,855,856,855,856,855,856,855,855,856,856,855,856,855,856,902,907,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,863,858,867,858,858,867,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,872,873,874,854,875,876,877,878,879,880,882,855,883,884,888,891,892,893,894,895,896,864,0,860,872,873,874,854,875,876,877,878,879,880,882,855,883,884,888,891,892,893,894,895,896,864,855,856,863,863,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,872,911,911,855,856,861,858,867,861,859,855,856,907,910,911,860,869,858,867,861,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,855,856,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,908,857,857,857,857,855,856,911,860,859,871,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,891,892,893,894,895,896,864,897,898,899,856,900,901,909,860,860,860,871,871,871,872,872,872,873,873,873,874,874,874,854,854,854,875,875,875,876,876,876,877,877,877,865,865,865,878,878,878,879,879,879,880,880,880,881,881,881,882,882,882,855,855,855,883,883,883,884,884,884,866,866,866,863,863,863,863,885,885,885,862,862,862,888,888,888,891,891,891,892,892,892,893,893,893,894,894,894,895,895,895,896,896,896,864,864,864,856,856,856,901,901,901,909,909,909,907,861,855,856,861,902,858,858,858,869,865,860,869,858,867,861,859,871,857,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,855,855,855,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,856,856,856,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,861,859,859,871,857,872,873,874,854,875,876,877,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,855,856,855,855,856,856,855,856,899,855,856,855,856,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,861,869,0,908,911,911,911,911,867,867,860,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,862,888,891,892,893,894,895,896,864,901,909,858,858,867,911,888,860,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,862,888,891,892,893,894,895,896,864,901,909,897,860,858,858,867,899,858,863,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,887,889,890,866,867,855,856,855,856,855,856,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,858,857,869,861,855,856,857,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,865,855,856,863,859,900,863,858,867,861,855,856,884,884,877,904,858,867,855,856,858,855,856,0,865,858,867,861,871,871,871,907,859,857,881,866,887,889,890,905,907,908,907,900,858,867,861,859,857,885,869,869,855,856,858,867,861,859,855,856,907,910,911,871,881,885,907,887,860,872,873,874,854,875,876,877,878,879,880,882,855,883,884,885,888,891,892,893,894,895,896,864,899,863,910,0,861,858,910,910,855,856,867,907,863,885,863,885,863,855,856,863,857,889,861,861,857,911,861,908,855,856,855,856,859,855,856,862,911,874,878,865,865,865,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,859,857,857,860,865,883,863,855,856,859,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,858,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,881,887,889,890,905,906,885,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,855,856,859,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,0,902,860,869,858,867,861,859,871,857,872,873,874,854,875,876,877,865,878,879,880,881,882,855,883,884,866,863,885,886,887,862,888,889,890,891,892,893,894,895,896,864,897,898,899,856,900,901,902,903,904,905,906,907,908,909,910,911,885,865,861,857,857,908,885,869,1440,1441,1442,1442,1442,1442,1443,1444,1445,1445,1445,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1444,1455,1447,1448,1449,1447,1456,1449,1455,1446,1445,1447,1447,1448,1457,1450,1451,1455,1458,1447,1448,1447,1456,1458,1459,1460,1457,1452,1444,1458,1448,1447,1461,1459,1454,1453,1462,1461,1459,1463,1463,1464,1464,1465,1466,1467,1468,1467,1468,1469,1469,1470,1471,1471,1472,1473,1474,1475,1475,1476,1472,1475,1474,1477,1478,1473,1474,1479,1477,1480,1478,1472,1477,1480,1473,1476,1481,1479,1474,1477,1482,1483,1484,1485,1482,1486,1487,1482,1488,1486,1489,1486,1490,1489,1490,1484,1485,1483,1490,1488,1484,918,918,918,918,918,918,0,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,0,0,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,0,918,918,918,918,0,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,920,919,919,0,919,919,919,919,919,928,919,920,919,919,921,921,928,0,0,920,919,0,928,919,919,920,919,928,919,919,919,928,928,919,0,0,0,0,919,919,0,0,919,919,919,920,0,928,928,0,0,928,0,0,925,931,919,921,920,922,923,926,927,924,925,928,919,920,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,922,919,920,919,920,919,920,919,920,919,919,920,920,919,920,919,920,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,919,921,920,922,923,924,925,919,921,920,922,923,924,925,919,920,931,919,921,920,922,923,926,927,924,925,928,919,920,922,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,919,920,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,919,920,923,919,921,920,923,919,919,919,920,920,920,923,923,923,919,920,919,919,919,919,919,921,921,920,920,920,920,920,922,923,926,927,924,925,928,928,931,919,921,920,922,923,926,927,924,925,928,928,931,919,921,920,922,923,926,927,924,925,928,919,920,919,919,920,920,919,920,919,920,919,920,931,919,921,920,922,923,926,927,924,925,928,923,923,926,931,919,921,920,922,923,926,927,924,925,928,919,920,919,920,919,920,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,919,920,931,919,921,920,922,923,926,927,924,925,928,919,920,919,920,919,920,919,920,926,923,931,921,919,920,922,925,921,927,919,920,924,919,920,923,928,919,920,919,920,919,920,924,927,919,921,920,922,923,924,925,921,928,921,928,919,920,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,925,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,931,919,921,920,922,923,926,927,924,925,928,927,919,920,931,919,921,920,922,923,926,927,924,925,928,927,922,931,919,921,920,922,923,926,927,924,925,928,931,922,922,1491,1491,0,0,937,0,0,937,934,0,0,0,937,937,933,933,933,0,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,932,935,938,932,933,934,935,936,937,938,932,933,934,935,936,937,932,933,934,935,932,933,934,935,938,932,933,934,935,936,937,932,935,936,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,936,932,933,934,935,932,932,932,933,933,933,935,935,935,935,932,933,934,934,935,937,937,938,932,933,934,935,936,937,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,932,933,935,932,933,935,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,935,936,933,935,932,935,937,932,935,932,933,934,935,934,937,933,934,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,932,933,934,935,936,937,938,935,0,0,0,946,0,0,0,0,946,946,939,0,942,942,942,942,0,0,939,0,0,946,946,946,946,946,946,946,946,946,946,946,946,946,946,0,945,947,939,940,941,946,942,943,944,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,940,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,943,940,939,940,941,942,943,944,939,940,941,942,943,944,945,947,939,940,941,946,942,943,944,940,941,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,947,939,940,941,942,943,944,939,939,939,940,940,940,941,941,941,943,943,943,944,944,944,943,945,939,940,941,946,946,942,942,943,944,945,947,939,940,941,946,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,939,940,941,943,944,939,940,941,943,944,945,947,939,940,941,946,942,943,944,943,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,943,940,945,940,941,943,944,943,941,941,0,940,941,946,943,940,939,940,941,942,943,944,946,942,946,942,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,947,939,940,941,946,942,943,944,945,0,943,0,952,0,949,949,949,0,0,952,0,952,952,0,952,952,951,949,951,952,948,952,950,950,948,949,950,948,949,950,951,952,953,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,953,948,949,950,951,952,953,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,948,948,949,949,949,950,950,950,951,951,951,952,952,952,953,953,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,953,953,953,953,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,948,949,950,951,952,953,955,954,956,956,956,956,956,956,956,956,956,956,956,956,956,956,0,0,956,956,956,955,956,0,956,956,956,956,956,956,956,955,954,0,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,957,0,956,955,956,956,956,956,956,956,956,956,956,956,956,956,956,956,957,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,0,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,955,956,956,956,956,954,956,956,956,956,956,957,956,956,956,960,960,956,0,956,956,956,956,0,956,960,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,954,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,956,957,957,956,956,956,956,956,956,956,956,956,956,956,956,956,0,0,0,963,956,957,958,954,955,959,960,961,962,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,959,961,954,955,954,955,954,955,954,955,954,954,955,955,954,955,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,961,961,956,957,958,954,955,959,960,961,962,956,957,958,954,955,959,960,961,962,956,956,954,955,963,956,957,958,954,955,959,960,961,962,954,955,961,963,959,961,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,954,955,962,956,954,955,959,960,962,956,956,956,954,954,954,955,955,955,959,959,959,960,960,960,962,962,962,954,955,958,961,956,957,957,958,954,954,954,954,954,955,955,955,955,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,954,955,954,954,955,955,954,955,954,955,954,955,963,956,957,958,954,955,959,960,961,962,956,956,963,956,954,959,962,956,954,959,962,963,956,957,958,954,955,959,960,961,962,954,955,954,955,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,954,955,963,956,957,958,954,955,959,960,961,962,954,955,954,955,954,955,954,955,961,963,954,955,959,961,956,954,955,954,955,962,958,954,955,954,955,954,955,956,957,958,954,955,959,960,961,962,957,957,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,954,955,963,956,957,958,954,955,959,960,961,962,963,956,957,958,954,955,959,960,961,962,963,0,961,0,0,0,965,966,965,965,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,966,966,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,966,965,966,965,966,965,965,966,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,965,966,0,0,0,970,969,970,969,970,969,970,969,970,969,970,969,970,969,969,969,970,969,970,969,970,969,970,969,970,969,969,969,969,969,969,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,969,969,969,970,970,0,969,969,969,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,970,969,0,0,0,973,973,973,973,973,0,0,973,982,0,0,973,973,913,977,0,982,982,0,982,0,977,982,973,982,968,982,968,968,0,973,982,912,973,968,0,0,968,973,973,973,979,914,973,973,973,973,968,973,973,968,968,979,968,973,968,913,0,0,0,973,973,973,977,968,0,0,979,973,977,968,973,0,973,975,973,0,0,975,977,973,973,982,973,973,973,977,982,0,973,914,0,975,912,973,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,978,967,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,930,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,930,971,971,972,972,930,976,973,975,930,914,977,978,979,980,912,968,916,973,975,930,914,977,978,979,980,912,968,916,977,977,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,916,967,916,930,981,975,930,976,971,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,0,975,930,914,977,978,979,980,982,912,968,975,975,975,930,930,930,977,977,977,982,982,982,981,0,972,983,973,973,981,975,930,914,914,913,977,977,978,976,979,979,980,980,982,912,968,968,972,972,972,972,983,967,972,983,973,973,981,975,930,914,913,977,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,983,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,977,967,975,930,977,978,982,967,912,975,930,977,978,982,930,930,0,976,930,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,980,912,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,977,983,981,967,977,977,983,977,981,975,930,976,971,977,971,967,977,978,973,967,981,972,973,975,930,914,977,978,979,980,912,968,916,973,914,977,979,980,968,978,973,914,977,979,980,968,912,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,972,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,980,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,976,967,972,983,973,981,975,930,914,913,977,978,976,979,980,982,971,912,968,916,967,1492,1492,1493,1494,1493,1495,1496,1495,1496,1497,1498,1497,0,0,913,985,0,0,0,914,985,913,975,975,914,975,0,985,985,985,985,985,930,985,985,930,985,985,985,985,985,985,985,0,985,985,985,985,930,930,930,985,985,985,985,985,985,985,985,985,985,985,985,985,985,985,985,985,985,985,989,1001,998,1003,998,998,1004,990,990,1005,1002,1003,1000,991,992,990,989,990,989,991,991,0,0,996,995,995,996,997,0,1003,1000,1000,1007,0,1007,0,1000,1007,989,987,991,0,996,1002,991,990,1005,1007,0,996,996,996,996,996,1000,1000,0,0,998,991,992,1003,1003,1007,996,0,0,0,1007,0,989,987,989,996,996,996,984,1001,999,1001,1000,1000,1000,996,1000,1005,1005,996,1000,996,1005,1002,996,996,1001,996,1002,1002,1000,996,1005,996,996,996,1005,996,996,996,996,1003,1007,1000,996,996,996,996,996,996,1000,996,1002,1003,1002,1002,1003,1005,1005,996,1000,1000,996,1000,1000,1000,996,996,996,996,996,996,997,1000,1000,1000,1000,996,999,1001,1002,1006,996,1001,996,996,1000,1007,996,997,0,1000,0,991,991,1005,1002,1004,1004,1005,1005,1002,996,1005,1000,1002,1001,1003,0,1003,1000,984,996,997,999,1000,1006,1004,1000,1000,1002,996,1003,991,991,1000,1000,988,991,988,1003,998,998,991,991,989,991,990,0,1001,1004,995,996,997,1007,0,0,991,1003,1003,0,0,1004,1001,1002,1005,1005,992,0,0,0,0,987,988,997,984,1005,1000,1000,996,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,974,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,987,988,988,989,989,990,990,991,991,992,992,987,988,989,990,991,992,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,0,987,993,988,994,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,1006,1007,987,993,988,994,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,1006,1007,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,990,991,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,974,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,974,987,988,989,990,991,992,987,988,989,990,991,992,987,987,987,988,988,988,989,989,989,990,990,990,991,991,991,992,992,992,974,987,988,989,990,991,992,987,987,987,987,987,993,988,988,988,988,988,994,974,995,995,996,996,997,997,984,984,998,998,999,999,1000,1000,1001,1001,1002,1002,1003,1003,989,989,989,989,989,1004,1004,1005,1005,990,990,990,990,990,991,991,991,991,991,992,992,992,992,992,929,1008,1006,1006,1007,1007,987,993,988,994,974,995,996,996,996,996,996,997,997,997,997,997,984,984,998,999,1000,1000,1001,1002,1003,1003,1003,989,1004,1005,1005,990,991,992,929,1008,1006,1007,1007,1007,1007,1007,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,987,987,988,988,989,989,990,990,991,991,992,992,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,929,974,974,974,929,929,929,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,974,1008,993,987,988,989,990,991,992,990,991,994,987,988,989,990,991,992,993,1008,974,987,988,989,990,991,992,996,997,984,998,1000,1001,1003,1005,1007,987,988,989,990,991,992,987,988,989,990,991,992,987,988,989,990,991,992,987,993,988,994,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,1006,1007,995,996,997,984,998,999,1000,1001,1002,1003,1004,1005,1006,1007,995,996,997,984,998,999,1000,1001,1002,1003,1004,1005,1006,1007,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,994,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,994,974,987,988,989,990,991,992,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,1008,1008,987,993,988,994,974,995,996,997,984,998,999,1000,1001,1002,1003,989,1004,1005,990,991,992,929,1008,1006,1007,1499,1500,1501,1500,1501,1500,1499,1502,1502,1503,1504,1505,1506,1507,1506,1507,1508,1506,1507,1505,1504,1509,1510,1511,1511,1511,1512,1512,1513,1514,1515,1516,1514,1515,1516,1517,1518,1513,1514,1516,1518,1519,1519,1520,1521,1520,1520,1522,1523,1524,1523,1524,1524,1521,1524,1522,1525,1526,1527,1528,1529,1525,1527,1528,1529,1530,1525,1526,1527,1528,1529,1530,1530,1531,1532,1531,1013,1016,824,824,824,0,0,0,824,0,0,0,824,0,830,821,824,1020,1020,1021,1020,1021,1021,0,830,821,824,0,0,1020,821,824,830,821,824,1020,1020,1021,824,824,1020,821,824,830,824,1016,828,830,1016,824,0,0,1016,0,0,1013,0,824,824,0,0,0,821,824,824,824,824,824,824,830,0,0,0,824,1013,1013,828,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,1017,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,829,780,778,829,780,778,1017,1013,1013,1013,1013,1013,1013,1013,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1018,827,1014,1015,1016,819,821,1017,1018,1019,823,1020,1021,824,1013,1022,827,1014,1015,1016,819,821,1017,1018,1019,823,1020,1021,824,1013,1022,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,829,780,778,1013,1022,823,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,829,1014,830,1015,1016,819,821,780,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,778,1013,1015,1013,1013,1013,1013,1013,827,829,1014,1014,1014,830,830,1015,1016,1016,819,821,821,780,1017,1018,1019,823,1020,1020,1021,1021,824,824,1013,1013,1013,1013,1013,1022,778,823,828,827,829,1014,830,830,830,830,830,1015,1016,1016,1016,819,821,821,821,821,821,780,1017,1018,1019,823,1020,1021,824,824,824,824,824,824,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,1013,1013,1013,1013,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1014,1013,1013,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,1013,1013,1013,829,827,1014,819,823,819,823,830,1022,1015,823,823,1013,1022,823,1013,1013,827,1014,830,1016,821,824,1014,819,1018,1019,1017,1022,1013,1013,1013,1019,827,1014,1015,1016,819,821,1017,1018,1019,823,1020,1021,824,1013,1022,1014,830,1016,821,1020,1021,824,1014,830,1016,821,1020,1021,824,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1013,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,823,828,827,829,1014,830,1015,1016,819,821,780,1017,1018,1019,823,1020,1021,824,1013,1022,778,1533,1533,1534,1535,1536,1537,1538,1539,1540,1534,1540,1541,1538,1539,1540,1542,1542,1534,1535,1536,1541,1543,1537,1543,1544,1544,1544,840,0,840,837,840,837,837,837,840,837,840,837,0,0,837,837,837,837,837,837,837,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,840,837,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,840,837,837,839,840,840,837,837,837,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,839,840,837,840,837,840,837,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,840,837,839,1545,1546,1547,1548,1548,1545,1546,1547,1548,0,0,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,841,841,1024,1024,841,841,1024,841,1024,841,1024,841,1024,841,841,841,841,841,841,1024,1024,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,841,841,841,841,841,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,841,1024,1024,841,1024,841,1024,1034,817,815,1034,798,1030,1030,0,0,0,1036,0,0,0,0,0,1034,0,0,0,0,818,0,0,798,0,0,798,817,818,826,822,1030,1549,1034,798,843,1029,1034,798,815,1034,826,843,843,818,843,843,843,818,818,818,826,818,826,826,818,818,818,843,1034,1029,818,843,843,817,818,1034,818,1029,1031,798,1034,798,817,1031,1030,1031,798,817,818,818,826,822,1029,818,798,1036,798,1029,1029,1549,798,798,843,0,0,1036,0,0,0,0,0,0,1034,1036,1025,0,0,0,0,0,0,0,0,0,843,843,826,822,798,798,798,817,1030,817,1029,1028,1028,1028,1029,843,822,843,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,825,825,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1025,777,835,808,809,807,779,1025,777,835,808,809,807,779,825,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,816,798,817,1028,1029,818,842,1030,843,844,825,1031,826,822,815,798,817,1028,1029,818,842,1030,843,844,825,1031,826,822,815,825,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,705,777,1032,835,1036,808,1033,809,807,779,1550,842,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1551,842,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,705,1034,1035,816,798,777,777,817,1032,1032,835,835,1036,808,808,1033,1033,1028,1029,818,842,1030,809,809,843,844,825,807,807,1031,826,822,779,779,815,842,825,842,842,842,705,1034,1035,816,798,798,777,817,817,1032,835,1036,808,1033,1028,1029,1029,818,818,842,1030,1030,809,843,843,844,844,825,807,1031,826,826,822,822,779,815,815,1551,842,1037,705,1034,1035,816,798,798,798,777,817,817,817,817,1032,835,1036,808,1033,1028,1029,818,818,818,818,818,842,1030,809,843,844,825,807,1031,826,826,826,822,822,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1035,1035,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,816,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,705,1034,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1025,1025,1025,1032,835,1033,1552,1551,1550,842,825,825,825,825,1552,825,1551,825,842,842,1025,1551,1552,1551,798,817,818,826,822,798,817,1028,1029,818,842,1030,843,844,825,1031,826,822,815,798,817,1029,818,1030,843,844,826,822,815,798,817,1029,818,1030,843,844,826,822,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1550,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1552,1551,1037,1551,1037,705,1034,1035,816,798,777,817,1032,835,1036,808,1033,1028,1029,818,842,1030,809,843,844,825,807,1031,826,822,779,815,1553,1554,1555,1555,1554,1556,1557,1553,1558,1558,1559,1559,1560,1560,1560,1561,1561,1562,1562,1563,1564,1565,1566,1567,1565,1568,1569,1570,1568,1566,1567,1569,1570,1571,1572,1572,1573,1574,1575,1574,1573,1576,1577,1575,1573,1577,1575,1576,1577,1574,1576,0,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1042,1023,0,0,1039,1023,0,1043,1042,1023,0,1023,1043,0,0,1044,1023,1023,1042,1042,1044,0,1023,0,0,1039,1044,0,0,1023,1042,1042,1042,1042,1042,1042,1042,1044,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,0,1038,0,0,1041,1040,730,731,1042,1043,1044,1023,1041,1040,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1041,1041,1040,1040,1038,730,730,731,731,1042,1042,1043,1043,1044,1044,1023,1023,1038,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1038,1039,1023,1041,1040,730,731,1042,1043,1044,1023,1041,1040,730,731,1042,1043,1044,1023,1041,1040,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1040,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1040,1039,1041,1040,1038,730,731,1042,1043,1044,1023,1578,1579,1580,1579,1579,1578,1580,1581,1581,1582,1583,1581,1584,1583,1585,1582,1582,1581,1584,1583,1116,1057,1054,1054,1048,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1048,0,0,0,0,1057,1059,1059,1048,0,0,1048,0,0,1101,1048,0,0,0,0,0,0,0,1102,0,1052,1051,1051,1058,1058,1051,1057,1058,1051,1057,1058,0,0,1048,0,1048,0,1068,0,0,1048,0,0,1052,1052,1051,1058,1058,0,0,0,1068,1069,1047,1048,0,0,1057,1058,1069,0,1049,1048,0,0,0,1057,1058,1057,1057,0,1048,0,0,1116,1055,1054,0,1069,789,1047,1057,1057,0,0,0,0,0,0,1051,1051,1051,1051,1051,0,0,1056,1049,1113,0,1586,1056,1057,1058,0,1047,789,1047,1050,1052,1052,1052,1053,1054,1054,1058,0,1048,0,0,0,1057,0,1048,0,1048,1058,0,0,0,1048,0,789,1051,1051,1051,1059,1052,1051,1051,1057,1058,1051,1057,1058,1055,1048,0,0,0,1048,0,1586,1113,0,1048,0,0,0,1048,1057,1053,1048,0,0,0,0,0,0,0,1048,0,1101,1116,1057,1058,1058,1102,0,1057,0,0,1103,1082,1045,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,657,1076,1072,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1076,1094,1060,1087,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1094,1061,1087,0,1062,1062,1062,1062,1062,1098,1099,1078,1081,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1049,1050,1050,1051,1051,1052,1052,1053,1053,1054,1054,1055,1055,1056,1056,1057,1057,1058,1058,1059,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1076,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1079,1091,1106,1107,1108,1109,1071,1071,1067,1082,1062,1103,657,1066,1067,1062,1096,1097,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,853,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1105,1106,1107,1108,1109,1059,1110,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,853,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1105,1106,1107,1108,1109,1059,1110,1064,1088,1076,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,657,1046,665,1078,1079,1080,1082,1083,1085,1086,1088,1091,1092,1095,1096,1097,1098,1064,1099,1063,1065,1104,1116,1105,1106,1107,1108,1109,1089,853,1045,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1054,1056,1062,1062,1060,1062,1062,1062,1081,1106,1107,1108,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1114,1111,1111,853,1115,1103,1061,1097,1088,1064,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1065,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1114,1111,1111,665,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1075,1062,1045,1062,1062,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1072,1062,1062,1062,1062,1062,1062,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1066,1093,1070,0,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1587,1062,1062,1062,1098,1099,1062,1062,1077,1082,1065,1104,1085,1114,789,1068,1069,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1101,1102,1103,1059,789,789,789,1068,1068,1068,1069,1069,1069,1047,1047,1047,1049,1049,1049,1050,1050,1050,1051,1051,1051,1052,1052,1052,1053,1053,1053,1054,1054,1054,1055,1055,1055,1056,1056,1056,1057,1057,1057,1058,1058,1058,1101,1101,1101,1102,1102,1102,1103,1103,1103,1059,1059,1059,1111,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1089,1064,657,1084,1105,1070,1077,1078,1065,1104,1105,1106,1111,1115,789,789,1068,1068,1069,1069,1047,1047,689,689,1049,1049,1049,1049,1049,1050,1050,1050,1050,1050,1051,1051,1051,1051,1051,1052,1052,1052,1052,1052,1053,1053,1053,1053,1053,1054,1054,1054,1054,1054,1055,1055,1055,1055,1055,1056,1056,1056,1056,1056,1057,1057,1057,1057,1057,1058,1058,1058,1058,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1059,1059,1059,1059,1110,1060,1075,1089,1100,1108,853,1088,1115,1113,1112,1121,789,789,789,789,789,1068,1068,1069,1069,1047,1047,689,1049,1050,1051,1052,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1049,1050,1050,1051,1051,1052,1052,1053,1053,1054,1054,1055,1055,1056,1056,1057,1057,1058,1058,1059,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1111,1111,1121,1111,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1122,1123,0,1070,1090,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1061,1105,1115,657,1114,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1111,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1073,1060,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1052,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1112,1074,1060,1075,1076,1077,1078,1082,1083,1086,1088,1064,1063,1100,1082,1086,1088,1072,1076,1076,1052,1111,1061,1094,853,1089,1074,1060,1061,1076,1094,1060,1076,1065,1115,1085,1088,1088,1064,1070,1052,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1103,1064,1079,1106,1107,1108,1109,1122,1096,1094,1062,1123,1089,853,1088,1073,1078,1098,1099,665,1083,1075,1092,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1062,1096,1081,1112,1060,1064,1082,1065,1065,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1062,1062,1062,1062,1062,1062,1062,1062,1062,1074,1060,1079,1093,1066,1067,1100,1068,1069,1047,689,1065,1084,1066,1093,1086,1587,1111,1097,1087,1111,1106,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1123,1046,1122,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1096,1097,1046,1092,1067,1122,1082,1064,1063,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,853,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1105,1106,1107,1108,1109,1059,1110,789,1068,1069,1047,689,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1105,1062,1062,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1045,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1111,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1103,853,1074,1060,1075,1080,1089,1091,1092,1095,1110,1105,1088,1105,1105,1088,1105,1080,1095,1060,1089,0,1115,1113,1112,1121,789,1068,1069,1047,689,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1070,1071,1072,657,853,1046,665,1073,1074,1060,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1061,1066,1067,1095,1096,1097,1098,1064,1099,1063,1100,1101,1102,1103,1065,1104,1116,1105,1106,1107,1108,1109,1059,1110,1090,1111,1061,1062,1090,1090,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1124,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1125,1125,1125,1125,1125,1124,703,1125,1126,1124,703,1125,1126,1125,1125,703,703,1124,703,1125,1126,1124,1125,1125,1125,1125,1125,1124,1124,1124,1124,1124,1124,1124,703,1124,1124,1124,1124,1124,1124,1124,1124,1124,703,1125,1126,1124,703,1125,1126,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1124,1125,1124,1125,1125,1124,703,1125,1126,1125,1125,1125,1125,1125,1125,1124,703,1125,1126,1125,1125,1125,1125,1125,1124,1124,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,1124,1124,1124,703,1124,703,1124,1124,703,1125,1126,1125,703,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,1124,1124,1125,1124,1125,1125,1125,1125,1125,1125,1125,1125,1125,1125,1125,1125,1124,1124,1124,1124,1124,703,1125,1125,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,703,1125,1126,1124,1124,1124,703,1125,1126,1124,703,1125,1126,1124,1125,0,0,0,0,0,0,0,0,0,0,1134,0,0,0,0,0,0,1134,0,0,0,1134,0,0,0,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1127,1137,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1129,1129,1129,1129,1129,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1129,1129,1130,1133,1132,1134,1135,1130,1133,1132,1134,1135,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1129,1129,1129,1137,1129,1129,1136,1136,1136,1136,1136,1136,1136,1130,1136,1136,1136,1136,1136,1136,1136,1133,1146,1137,1128,1147,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1136,1136,1136,1136,1136,1136,1136,1136,1136,1136,1136,1136,1136,1129,1129,1129,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1129,1129,1129,1129,1129,1129,1128,1147,1147,1127,1136,1152,1129,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1137,1128,1128,1129,1129,1129,1129,1129,1136,1133,1136,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1137,1137,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1136,1136,1127,1130,1152,1128,1130,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1137,1129,1130,1133,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1128,1128,1136,1137,1127,1146,1127,1129,1152,1128,1128,1129,1129,1129,1129,1129,1129,1129,1129,1129,1129,1129,1129,1136,1136,1152,1127,1127,1136,1136,1130,1133,1132,1134,1135,1129,1129,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1128,1147,1127,1136,1152,1129,1130,1133,1132,1134,1137,1135,1144,1139,1142,1138,1145,1143,1140,1131,1141,1146,1136,1129,1588,1589,1589,0,0,0,0,0,0,0,0,0,0,0,0,1162,1162,0,1174,0,0,1178,0,0,0,1178,0,1162,0,0,0,0,0,0,1174,0,1160,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1162,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1163,1163,1163,1163,1163,1162,1162,1162,1162,1162,1162,1162,1162,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1169,1163,1163,1161,1162,1161,1162,1162,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1160,1162,1163,1163,1163,1163,1163,1169,1169,1169,1169,1169,1169,1169,1161,1169,1169,1169,1169,1169,1179,1169,1169,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1179,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1169,1179,1169,1169,1183,1162,1163,1160,1163,1163,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1163,1163,1163,1163,1163,1163,1191,1185,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1162,1169,1163,1163,1163,1163,1163,1185,1179,1162,1162,1162,1162,1169,1179,1162,1185,1169,1163,1161,1189,1165,1162,1162,1162,1162,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1162,1162,1162,1162,1162,1162,1179,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1169,1169,1169,1162,1183,1161,1187,1162,1161,1191,1185,1179,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1162,1163,1185,1161,1162,1162,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1162,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1169,1162,1162,1162,1162,1169,1162,1183,1183,1183,1163,1187,1169,1169,1169,1166,1185,1183,1169,1169,1162,1183,1163,1163,1162,1163,1163,1163,1163,1163,1163,1163,1163,1163,1163,1179,1183,1169,1169,1169,1162,1162,1187,1183,1162,1183,1169,1161,1162,1162,1163,1163,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1160,1162,1169,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1191,1185,1179,1160,1183,1169,1187,1163,1161,1189,1165,1162,1168,1170,1166,1180,1177,1172,1175,1171,1186,1178,1176,1173,1164,1174,1169,1163,1590,1590,1590,1591,1591,833,0,834,0,834,833,0,0,0,834,833,0,0,834,833,0,0,834,833,0,0,0,0,0,0,0,691,834,833,0,0,0,0,834,833,0,0,691,834,833,0,0,834,833,834,0,0,834,0,0,834,0,834,0,0,833,0,834,833,0,0,834,833,0,0,1199,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1196,1196,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1196,1197,1196,1197,1203,1203,1198,1199,1200,1201,1196,1196,1197,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1196,1197,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1210,1224,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1208,1212,692,1196,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,1198,1198,1198,1199,1199,1199,1200,1200,1200,1201,1201,1201,1196,1196,1196,1197,1197,1197,1202,1202,1202,1203,1203,1203,1204,1204,1204,1205,1205,1205,1206,1206,1206,1207,1207,1207,1208,1208,1208,1209,1209,1209,1210,1210,1210,1211,1211,1211,1212,1212,1212,1213,1213,1213,1214,1214,1214,1215,1215,1215,1216,1216,1216,1217,1217,1217,1218,1218,1218,1219,1219,1219,1220,1220,1220,1221,1221,1221,1222,1222,1222,1223,1223,1223,1224,1224,1224,834,834,834,833,833,833,1214,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,833,833,833,833,833,833,833,833,833,833,833,833,833,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1216,1217,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,1196,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,1223,1223,1219,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1200,1202,1204,1206,1209,1211,1214,1215,1218,1219,1222,1223,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1201,1220,1221,1196,1215,1227,1196,1228,1197,1208,1210,1213,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,691,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1207,1207,1196,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1209,1211,1198,1199,1200,1201,1196,1197,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,834,833,691,1196,1205,1209,1211,693,1197,1196,0,0,0,0,0,0,678,678,0,0,0,1235,1233,662,678,1229,1230,1231,0,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1229,1230,1231,0,1230,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,662,678,1229,1230,1231,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,662,1232,1232,678,1229,1230,1231,1235,1233,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1234,1234,1234,1234,1235,1233,662,678,1229,1230,1231,0,662,678,662,662,662,678,678,678,1235,1230,1229,1230,1229,1235,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,662,678,0,662,678,1230,1235,1233,662,678,1229,1230,1231,0,0,1229,1230,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,662,0,1235,678,1229,1230,1231,0,0,1233,1235,1234,1234,1234,1234,1234,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,1235,1233,662,678,1229,1230,1231,662,1229,1235,1233,662,678,1229,1230,1231,1235,1231,1231,1231,105,0,1247,306,105,0,0,105,0,1247,0,0,0,0,1236,1236,1236,1236,1236,1246,1236,1246,1236,1236,1236,1236,1246,1236,1236,0,306,1236,1236,1236,1236,1236,1236,1236,1236,106,1236,1236,1236,1236,1236,1236,1236,1236,1236,106,1246,306,1236,1236,1236,1236,1236,1236,1236,1236,1236,1236,1236,1592,1593,1592,0,315,0,115,115,0,0,0,0,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,116,179,115,116,179,315,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,179,179,115,115,115,179,115,116,179,179,115,116,179,115,116,179,179,179,115,116,179,179,179,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,116,315,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,179,115,116,196,212,212,1269,0,200,0,0,0,1269,196,0,0,0,0,0,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,104,212,196,104,104,212,196,217,104,200,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,0,212,196,217,104,212,196,212,212,212,212,196,217,104,212,196,196,196,217,104,212,196,217,104,212,196,217,104,212,196,212,196,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,209,212,196,217,104,0,212,196,217,104,200,196,212,196,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,212,196,217,104,0,109,1237,0,308,195,0,1237,109,1238,1238,1238,195,0,195,1238,1237,109,1238,109,1237,1238,0,195,1238,1238,1237,1238,195,195,195,195,0,0,0,0,0,1238,1238,1238,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,110,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,195,1237,1238,109,110,195,1237,1238,109,110,339,195,1237,1238,1239,109,110,339,0,308,339,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,1238,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,195,1237,1238,109,109,109,109,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,195,1237,1238,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,195,1239,339,339,339,339,339,339,110,339,110,308,339,195,1237,1238,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,339,195,1237,1238,1239,109,110,110,339,195,1237,1238,1239,109,110,1238,339,1268,102,0,310,0,0,102,102,102,0,0,1243,1243,0,0,0,0,0,0,0,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,103,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,332,320,1242,332,1243,208,1244,102,103,0,1244,0,310,1242,1244,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,208,102,208,208,208,102,102,102,320,320,1242,332,1243,208,1244,102,103,0,1244,1244,1244,332,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,208,208,103,320,1242,332,1243,208,1244,102,103,320,320,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1244,1244,320,0,1244,1244,0,1244,1244,0,1244,1244,320,208,1244,320,1242,1244,103,320,320,320,320,320,0,1244,1244,1242,103,332,332,332,1242,310,320,1242,332,1243,208,1244,102,103,320,320,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,320,1242,332,1243,208,1244,102,103,1244,1244,208,320,320,1242,332,1243,208,1244,102,103,103,320,1242,332,1243,208,1244,102,103,0,1245,1245,0,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1594,1594,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,0,24,24,24,37,37,0,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,38,249,250,251,252,253,248,37,38,38,37,38,38,249,250,251,252,253,37,38,37,248,249,250,251,252,253,112,0,312,112,0,0,0,0,112,113,112,113,112,113,112,113,112,113,113,113,113,112,113,112,113,112,113,112,113,112,113,0,312,112,113,112,113,112,113,112,113,112,112,112,112,112,113,113,113,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,312,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,1595,1596,340,340,340,0,340,0,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,105,0,1247,306,105,0,0,105,1247,0,0,0,0,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,1246,1246,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,1246,105,106,1246,1247,0,306,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,105,105,105,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,106,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,106,1246,306,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,105,106,1246,1247,106,1592,1593,1592,0,1250,1250,155,1254,1257,1257,1257,1257,1253,1253,1255,1254,1257,0,1257,1257,1257,1257,1257,1257,1253,1253,1253,1253,1251,1257,1251,0,0,0,1255,0,242,1257,1257,0,1257,1253,155,1250,1253,0,0,1253,1257,1257,1253,1257,0,1257,0,1257,1257,1254,1257,1257,1253,0,1251,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,0,0,0,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,1249,1252,1253,242,1250,1251,1254,155,1255,0,242,155,242,155,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,1252,1252,1250,1254,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,0,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,1248,1253,242,1250,1251,1254,155,242,242,242,1250,1250,1250,1251,1251,1251,155,155,155,1252,0,0,0,0,0,0,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,0,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,0,242,242,0,1252,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1249,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1252,1257,1252,0,1252,0,0,1248,1252,1250,1254,242,155,1252,1252,0,1252,0,0,0,0,0,0,1248,1252,0,1248,1249,1252,1253,242,1250,1251,1254,155,1255,0,0,1252,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,242,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1252,1257,1248,1249,1252,1253,242,1250,1251,1254,155,1255,1597,1598,1598,1597,1599,1599,0,0,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,0,0,0,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,833,0,834,0,834,833,0,0,0,834,833,0,0,834,833,0,0,834,833,0,0,0,0,0,0,0,691,834,833,0,0,0,0,834,833,0,0,691,834,833,0,0,834,833,834,0,0,834,0,0,834,0,834,0,0,833,0,834,833,0,0,834,833,0,0,1199,1203,1203,1210,1224,1208,1212,692,1214,1216,1217,1223,1223,1219,1201,1220,1221,1215,1227,1228,1208,1210,1213,1207,1207,1209,1211,1205,1209,1211,693,0,1256,0,1256,1256,1256,1256,1256,1256,1256,1256,1248,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1248,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,1256,0,0,1262,1262,1262,1262,1262,1262,1262,1262,1262,1262,1262,1252,1262,1262,1262,1262,1262,1262,1262,1262,1262,1252,1262,1262,1262,1262,1252,1262,1262,1262,1262,1262,1262,1262,1262,1262,1252,1252,1252,1262,1252,1252,1252,1252,1262,1252,1262,1262,1262,1262,1262,1262,1262,1262,1252,1262],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[[3,[[2,[-1]]]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[5,5]],[[[6,[-1]],[7,[-1]]],[[6,[-1]]],[[9,[],[[8,[]]]]]],[[[10,[-1]],[7,[-1]]],[[10,[-1]]],[[9,[],[[8,[]]]]]],[[[7,[-1]],[7,[-1]]],[[7,[-1]]],[[9,[],[[8,[]]]]]],[[5,5],11],0,0,[10,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[14,[[15,[12]]]],0,[-2,[[1,[-1]]],[],[[17,[],[[16,[[1,[-1]]]]]]]],[-2,[[18,[-1]]],[],[[17,[],[[16,[[18,[-1]]]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,6],[10,12],[10,12],0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[5,5],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[[[6,[-1]]],[[6,[-1]]],32],[[[10,[-1]]],[[10,[-1]]],32],[33,33],[[[34,[-1]]],[[34,[-1]]],32],[14,14],[[[7,[-1]]],[[7,[-1]]],32],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,6],35],[[36,37],24],[[36,37,-1],24,[[39,[37],[[8,[38]]]]]],[[],20],[[],22],[[]],[[],[[41,[40]]]],[[]],[[],[[41,[40]]]],[[]],[[],24],[[]],[[],[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],[[6,[-1]]],42],[[],[[10,[-1]]],42],[[],33],[[],[[34,[-1]]],42],[[],14],[[],[[7,[-1]]],42],[24,43],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[6,[-1]],[6,[-1]]],-1,[45,46]],[[5,12]],[[5,5]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[29,29],29],[[47,-2],-1,[],[[39,[],[[8,[-1]]]]]],[[19,19],35],[[20,20],35],[[21,21],35],[[22,22],35],[[23,23],35],[[24,24],35],[[25,25],35],[[25,12],35],[[5,12],35],[[5,5],35],[[26,26],35],[[27,27],35],[[28,28],35],[[29,29],35],[[31,31],35],[[[6,[-1]],[6,[-1]]],35,48],[[[10,[-1]],[10,[-1]]],35,48],[[33,33],35],[[[34,[-1]],[34,[-1]]],35,48],[[14,14],35],[[[7,[-1]],[7,[-1]]],35,48],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,0,[[10,12],10],[[34,-1],34,[[49,[34]]]],[24,38],0,[29,50],[[28,34,34],34],[[30,34,34],30],[29,29],[[[1,[-1]],51],[[53,[11,52]]],[]],[[[18,[-1]],51],[[53,[11,52]]],[]],[[54,51],55],[[54,51],55],[[19,51],[[53,[11,52]]]],[[20,51],[[53,[11,52]]]],[[21,51],[[53,[11,52]]]],[[22,51],[[53,[11,52]]]],[[23,51],[[53,[11,52]]]],[[24,51],[[53,[11,52]]]],[[24,51],[[53,[11,52]]]],[[25,51],[[53,[11,52]]]],[[5,51],[[53,[11,52]]]],[[26,51],[[53,[11,52]]]],[[27,51],[[53,[11,52]]]],[[28,51],[[53,[11,52]]]],[[29,51],[[53,[11,52]]]],[[30,51],[[53,[11,52]]]],[[31,51],[[53,[11,52]]]],[[[6,[-1]],51],[[53,[11,52]]],56],[[[6,[-1]],51],[[53,[11,52]]],57],[[[10,[-1]],51],[[53,[11,52]]],57],[[33,51],[[53,[11,52]]]],[[[34,[-1]],51],[[53,[11,52]]],57],[[14,51],[[53,[11,52]]]],[[[7,[-1]],51],[[53,[11,52]]],57],0,[-1,-1,[]],[11,[[1,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[58,54],[59,19],[-1,-1,[]],[60,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[61,23],[-1,-1,[]],[-1,-1,[]],[25,5],[-1,-1,[]],[62,5],[12,5],[23,26],[27,26],[61,26],[-1,-1,[]],[-1,-1,[]],[[[15,[12]]],27],[[[64,[63,12]]],27],[63,27],[[[15,[12]]],27],[-1,-1,[]],[50,29],[31,29],[-1,-1,[]],[12,29],[[[15,[50]]],30],[[[15,[12]]],30],[[[15,[12]]],30],[[[15,[50]]],30],[50,30],[12,30],[-1,-1,[]],[50,31],[12,31],[-1,-1,[]],[[[11,[-1,-1]]],[[6,[-1]]],46],[-1,-1,[]],[[[15,[-1]]],[[6,[-1]]],46],[[[10,[65]]],10],[-1,-1,[]],[-1,-1,[]],[[[7,[-1]]],[[34,[-1]]],[]],[[[11,[-1,-1]]],[[34,[-1]]],[]],[-1,-1,[]],[30,34],[[[15,[-1]]],[[34,[-1]]],[]],[-1,-1,[]],[[[34,[-1]]],[[7,[-1]]],[]],[[[15,[-1]]],[[7,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[66,[[67,[5]]]],[68,[[67,[5]]]],[[12,12,12,12],27],[-2,[[18,[-1]]],[],[[69,[],[[8,[-1]]]]]],[[12,12,12],27],[[62,62,62],27],[[12,12,12,12],27],[[62,62,62,12],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,[[67,[5]]]],0,0,[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],0,[[19,-1],11,74],[[22,-1],11,74],[[28,-1],11,74],[[[34,[-1]],-2],11,71,74],0,0,0,[30,12],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[10,10],[[67,[10]]]],[[10,10],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,[[15,[12]]]],[[[18,[-1]]],[[3,[[41,[69]]]]],[]],[27,[[15,[62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[27,11],[29,35],[[10,10],35],0,0,[[[1,[-1]],-3],[[1,[-2]]],[],[],[[40,[-1],[[8,[-2]]]],77,78,32]],[[[18,[-1]],-3],[[18,[-2]]],[],[],[[40,[-1],[[8,[-2]]]],77,32]],[[34,34],34],[[34,34],34],0,[[5,12]],[[5,5]],[[31,12],31],[[6,14],6],[[10,12],10],[[10,14],10],[[34,14],34],[[[34,[-1]],-1],[],[[79,[],[[8,[]]]],80]],[[14,14],14],[[7,14],7],[[[7,[-1]],-1],[[7,[-1]]],[[79,[],[[8,[]]]],80]],0,[[],[[53,[47,81]]]],[[12,12,12,12],27],[12,30],[[-1,-1],[[6,[-1]]],46],[[6,34],10],[[-1,-1],[[34,[-1]]],[]],[[-1,-1],[[7,[-1]]],[]],[[],[[1,[-1]]],[]],[[],[[18,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[65,65],14],0,[24,37],[[25,25],[[67,[82]]]],[[25,12],[[67,[82]]]],[[5,5],[[67,[82]]]],[[5,12],[[67,[82]]]],[[31,31],[[67,[82]]]],[[-2,-4],[[1,[-3]]],[],[[83,[],[[8,[-1]]]],77],[],[[39,[-1],[[8,[-3]]]],77]],[10,6],0,[[-2,-4,-7],[[88,[[0,[[87,[],[[84,[-1]],[85,[-3]],[86,[-5]]]]]]]]],[],[[89,[-1]]],[90,57],[[91,[-1,-3]]],[42,92],93,[[94,[-1,-3,-5,-6]]]],0,0,0,[-1,20,[[49,[95]]]],[[-2,-4,-7],96,42,[[89,[-1]]],[57,90],[[91,[-1,-3]]],[42,92],93,[[94,[-1,-3,-5,-6]]]],[[-2,-4],[[1,[-3]]],[],[[97,[],[[16,[-1]]]],77],[],[[40,[-1],[[8,[-3]]]],77]],[12,14],[[23,12],23],[[26,12],26],[[27,12],27],[14,12],0,[[[2,[-1]]],[[1,[-1]]],[]],[10,34],[10,[[67,[[10,[65]]]]]],[[47,-1],11,[[83,[],[[8,[11]]]],77]],0,[24,98],[[24,99],100],[24,101],[[24,102],103],[24,104],[[24,105],106],[[24,107],108],[[24,109],110],[24,111],[[24,112],113],[[24,[41,[40]]],114],[[24,115],116],[[24,117],118],[[24,[41,[40]],119],120],[[24,[41,[40]]],121],[24,122],[[24,123],124],0,[[5,5]],[[[6,[-1]],[6,[-1]]],[[7,[-1]]],[[125,[],[[8,[]]]]]],[[[6,[-1]],[7,[-1]]],[[6,[-1]]],[[125,[],[[8,[]]]]]],[[[10,[-1]],[7,[-1]]],[[10,[-1]]],[[125,[],[[8,[]]]]]],[[[34,[-1]],[34,[-1]]],[],[[125,[],[[8,[]]]]]],[[[7,[-1]],[7,[-1]]],[[7,[-1]]],[[125,[],[[8,[]]]]]],[[5,5],11],0,0,0,0,[[5,10],[[11,[6,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,[[12,12],14],[14,7],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,10],10],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[30,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-2,[[1,[-1]]],[],[[129,[-1]]]],0,0,0,0,[[[18,[-1]],-2],[[18,[[11,[-2,-1]]]]],[],[71,32,90,78]],[[20,-1],20,[[49,[27]]]],[130,22],[[20,-1],20,[[49,[95]]]],[[[34,[-1]]],[[10,[-1]]],42],[[20,-1],20,[[49,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[131,[-1]]],35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,10],0,[133,[[3,[134]]]],[132,[[0,[135]]]],[136,11],0,[132,132],[[[137,[-1,-2]]],[[137,[-1,-2]]],32,32],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[133,134],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[138,-1,-2,139,132,140],11,136,[]],[[133,134,-1,-2,139,132,140,10],11,136,[]],[44,11],[44,11],[44,11],[136,11],[136,11],[[136,141,-1],11,[[49,[26]]]],[[132,51],[[53,[11,52]]]],[[[137,[-1,-2]],51],[[53,[11,52]]],57,57],[[[131,[-1]],51],[[53,[11,52]]],57],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[131,[-1]]],11,[]],[[[131,[-1]]],11,[]],[[[131,[-1]]],35,[]],[[[131,[-1]]],35,[]],[[138,132,-1,6],35,136],0,[[138,-1,34],142,136],[[133,134,-1,143],142,136],0,[[[131,[-1]],[131,[-2]],-3],11,[],[],[[40,[-2],[[8,[-1]]]]]],0,[[138,132,140,10,-1],144,136],[[133,134,132,140,10,-1],144,136],[-1,[[11,[[148,[],[[145,[-2]],[85,[-3]],[86,[-4]],[146,[-5]],[147,[-1]]]],[1,[-3]]]]],[],47,[57,90],42,[149,150]],[142,132],[[[3,[-1]]],[[131,[-1]]],[]],[[138,21,132,140,-1,151,[131,[-2]]],152,136,[]],[[133,134,21,132,140,-1,151,[131,[-2]],10],152,136,[]],[[138,132,-1,129],11,136],[[133,134,132,-1,129],11,136],0,[[138,132,-1],[[67,[[153,[-2,-3,-1]]]]],136,[],[]],[[133,134,132,-1,7],[[67,[[153,[-2,-3,-1]]]]],136,[],[]],[132,6],[[[131,[-1]],-1],11,[]],[[151,154],[[67,[36]]]],[[[131,[-1]]],[[67,[155]]],[]],0,[[[131,[-1]],155],11,[]],[[[131,[-1]],-2],11,[],39],[[[156,[-1]]],96,[]],[[[156,[-1]]],96,[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],66,47,[57,90],42,[149,150],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],66,47,[57,90],42,[149,150],[]],0,[133,[[34,[29]]]],0,[133,[[34,[29]]]],[[136,10],11],[[136,14],11],[133,157],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]],-3],43,47,[57,90],42,[149,150],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]],-3],43,47,[57,90],42,[149,150],[]],0,[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],[[18,[-2]]],47,[57,90],42,[149,150],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],[[18,[-2]]],47,[57,90],42,[149,150],[]],0,[133,158],0,[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],-3,47,[57,90],42,[149,150],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],-3,47,[57,90],42,[149,150],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],36,47,[57,90],42,[149,150],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]],-2],[[1,[-2]]],47,[57,90],42,[149,150],[]],0,[[[148,[],[[145,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[147,[-5]]]]],[[159,[-2,-3,-4]]],47,[57,90],42,[149,150],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[136,10,-1],11,[[39,[136]]]],[[7,142],132],[[136,14,-1],11,[[39,[136]]]],[[136,7,-1],11,[[39,[136]]]],[[151,154,36],11],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[154,154],[160,160],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[154,154],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[154,51],[[53,[11,52]]]],[[160,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[151,154],[[67,[36]]]],[[160,154],[[67,[36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[151,154,36],11],[[160,154,36],11],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[161,[[162,[62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,161],[163,163],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[161,[[162,[62]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[165,[],[[164,[-1]]]],-1,166,10],11,[32,71]],[44,11],[44,11],[-1,-2,[],[[168,[167]]]],[-1,-2,[],[[168,[167]]]],[[161,161],35],[[163,163],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[161,51],[[53,[11,52]]]],[[163,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[161,-1],11,74],[[163,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[165,[],[[164,[-1]]]],-1],[[34,[65]]],[32,71]],[-1,161,[[169,[[162,[62]]]],90,78]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[142,19,19,34],142],[[142,19,19,34],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[143,-1,-2],142,[[49,[29]]],[[49,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[142,10],[142,[[162,[142]]]],[143,143],[142,142],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[143,-1,-2,-3],142,[[49,[29]]],[[49,[29]]],[[39,[143],[[8,[142]]]]]],[[142,30],142],[[],142],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[143,143],35],0,[[143,51],[[53,[11,52]]]],[[142,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[143,-1],143,[[49,[29]]]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[143,143],[143,34],[[143,12],143],[[143,12],143],[143,34],[[143,12],143],[[143,12],143],[[142,-1],142,[[49,[6]]]],[[142,-1],11,[[49,[6]]]],[[34,34],143],[34,142],[[143,12,-1,-2],142,[[39,[143],[[8,[142]]]]],[[39,[143],[[8,[142]]]]]],[[],-1,[]],[[143,-1,-2,-3,-4],142,[[49,[29]]],[[49,[29]]],[[49,[30]]],[[39,[143],[[8,[142]]]]]],[[143,-1,-2,-3,-4,-5],142,[[49,[29]]],[[49,[29]]],[[49,[30]]],[[39,[143],[[8,[142]]]]],[[39,[142,34],[[8,[142]]]]]],[[143,-1,-2,34],34,[[49,[29]]],[[49,[29]]]],[[143,-1],143,[[49,[34]]]],[142,34],[[143,-1,-2,-3],142,[[49,[29]]],[[49,[29]]],[[39,[143],[[8,[34]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[142,-1],142,[[49,[7]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[143,-1],143,[[49,[29]]]],[[34,[3,[142]]],142],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[170,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[170,-1,143,29,29,30,12,19,[162,[[171,[-2,-3,-1]]]],[162,[134]]],142,136,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[172,172],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[172,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,173],[[6,[67,[172]]],172],[172,6],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,173],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[173,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[174,[-1,-2,-3]]],[],[],136],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[138,-1,-2,139,132,140],11,136,[]],[[[153,[-1,-2,-3]],-3,-2,139,132,140],11,[],[],136],[[[174,[-1,-2,-3]],-3,-2,139,132,140],11,[],[],136],[44,11],[44,11],[-1,-1,[]],[[[174,[-1,-2,-3]]],[[153,[-1,-2,-3]]],[],[],136],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[162,[[171,[-1,-2,-3]]]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[153,[-1,-2,-3]],132,-3,6],35,[],[],136],[[[174,[-1,-2,-3]],132,-3,6],35,[],[],136],[[138,132,-1,6],35,136],[[138,-1,34],142,136],[[[153,[-1,-2,-3]],-3,34],142,[],[],136],[[[174,[-1,-2,-3]],-3,34],142,[],[],136],[[[153,[-1,-2,-3]],40],[[153,[-4,-2,-3]]],[],[],136,[]],[[[153,[-1,-2,-3]],132,140,10,-3],144,[],[],136],[[[174,[-1,-2,-3]],132,140,10,-3],144,[],[],136],[[138,132,140,10,-1],144,136],[[[41,[138]]],[[153,[-1,-2,-3]]],[],[],136],[[],[[174,[-1,-2,-3]]],[],[],136],[[],-1,[]],[[[153,[-1,-2,-3]],21,132,140,-3,151,[131,[-1]]],152,[],[],136],[[[174,[-1,-2,-3]],21,132,140,-3,151,[131,[-1]]],152,[],[],136],[[138,21,132,140,-1,151,[131,[-2]]],152,136,[]],[[[153,[-1,-2,-3]],132,-3,129],11,[],[],136],[[[174,[-1,-2,-3]],132,-3,129],11,[],[],136],[[138,132,-1,129],11,136],[[[153,[-1,-2,-3]],132,-3],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[[174,[-1,-2,-3]]],[[153,[-1,-2,-3]]],[],[],136],[[[174,[-1,-2,-3]],132,-3],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[138,132,-1],[[67,[[153,[-2,-3,-1]]]]],136,[],[]],[[[174,[-1,-2,-3]],-4],[[174,[-1,-2,-3]]],[],[],136,[[49,[[153,[-1,-2,-3]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[[153,[-1,-2,-3]]]]],[[174,[-1,-2,-3]]],[],[],136],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[136,11],[141,141],[139,139],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],141],[[],139],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[136,11],[136,11],[[141,141],35],[[139,139],35],[[136,141,-1],11,[[49,[26]]]],[[141,51],[[53,[11,52]]]],[[139,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],0,[[136,10],11],[[136,14],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,10,-1],11,[[39,[136]]]],[[136,14,-1],11,[[39,[136]]]],[[136,7,-1],11,[[39,[136]]]],0,0,0,0,[[[69,[],[[8,[-1]]]],175],11,[]],[[[41,[[69,[],[[8,[-1]]]]]],[176,[[41,[97]]]]],[[176,[[41,[97]]]]],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[177,177],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[[178,179,[67,[27]],10],11],[44,11],[[177,177],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[177,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[177,-1],11,74],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[178,179],[[34,[65]]]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]]],34,[80,48,42]],0,[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],44],11,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[188,188],[189,189],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[190,[],[[180,[-1]]]],[137,[130,-1]]],189,[80,48]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]]],44,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[[181,[],[[180,[-1]]]]],191,[80,48,42]],[188,44],[[[181,[],[[180,[-1]]]]],[[11,[44,44]]],[80,48,42]],[[[149,[],[[180,[-1]],[192,[-2]],[193,[-3]]]]],-1,[80,48],[[190,[],[[180,[-1]]]]],[[181,[],[[180,[-1]]]]]],[[[149,[],[[180,[-1]],[192,[-2]],[193,[-3]]]]],31,[80,48],[[190,[],[[180,[-1]]]]],[[181,[],[[180,[-1]]]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],0,[[188,188],35],[[189,189],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[149,[],[[180,[-1]],[192,[-2]],[193,[-3]]]],-3,6,27,10],11,[80,48],[[190,[],[[180,[-1]]]]],[[181,[],[[180,[-1]]]]]],[[[149,[],[[180,[-1]],[192,[-2]],[193,[-3]]]],-2,6,27,10],11,[80,48],[[190,[],[[180,[-1]]]]],[[181,[],[[180,[-1]]]]]],[[[149,[],[[180,[-1]],[192,[-2]],[193,[-3]]]],[137,[36,-1]],6,27,10],11,[80,48],[[190,[],[[180,[-1]]]]],[[181,[],[[180,[-1]]]]]],[[188,51],[[53,[11,52]]]],[[189,51],[[53,[11,52]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[190,[],[[180,[-1]]]],44,44],[[67,[6]]],[80,48]],[[[181,[],[[180,[-1]]]],-1,-2,-3],11,[80,48,42],185,[[40,[],[[8,[[194,[-1]]]]]]]],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],130],-3,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],0,[[[190,[],[[180,[-1]]]],6],[[67,[188]]],[80,48]],[[[190,[],[[180,[-1]]]]],60,[80,48]],0,[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]],44],[[67,[130]]],[80,48,42]],[[[181,[],[[180,[-1]]]]],44,[80,48,42]],0,[[[190,[],[[180,[-1]]]]],34,[80,48]],[[[181,[],[[180,[-1]]]]],34,[80,48,42]],[[[190,[],[[180,[-1]]]]],12,[80,48]],[[[190,[],[[180,[-1]]]]],12,[80,48]],[-1,[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]]],[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[[181,[],[[180,[-1]]]],195],11,[80,48,42]],[[[190,[],[[180,[-1]]]],34],11,[80,48]],[[[181,[],[[180,[-1]]]]],[[67,[36]]],[80,48,42]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[181,[],[[180,[-1]]]],34,-1,31,196,-2],11,[80,48,42],185],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],-1],11,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[[190,[],[[180,[-1]]]],[137,[130,-1]]],11,[80,48]],[[[190,[],[[180,[-1]]]]],59,[80,48]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[137,[130,-1]]],[[190,[],[[180,[-1]]]]],[80,48]],[130,[[181,[],[[180,[-1]]]]],[80,48,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]]],34,[80,48,42]],[197,197],[191,191],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]]],191,[80,48,42]],[[[181,[],[[180,[-1]]]]],[[11,[44,44]]],[80,48,42]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[197,197],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[197,51],[[53,[11,52]]]],[[191,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]],-1,-2,-3],11,[80,48,42],185,[[40,[],[[8,[[194,[-1]]]]]]]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[181,[],[[180,[-1]]]],44],[[67,[130]]],[80,48,42]],[[[181,[],[[180,[-1]]]]],44,[80,48,42]],[[[181,[],[[180,[-1]]]]],34,[80,48,42]],[[[181,[],[[180,[-1]]]],195],11,[80,48,42]],[[[181,[],[[180,[-1]]]]],[[67,[36]]],[80,48,42]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[181,[],[[180,[-1]]]],34,-1,31,196,-2],11,[80,48,42],185],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[181,[],[[180,[-1]]]]],[80,48,42]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],44],11,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[198,44],11],[198,198],[[[194,[-1]]],[[194,[-1]]],32],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]]],44,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[198,44],[[],[[194,[-1]]],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[[194,[-1]],[194,[-1]]],35,48],[[198,51],[[53,[11,52]]]],[[[194,[-1]],51],[[53,[11,52]]],57],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],130],-3,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[198,130]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]]],[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[[],198],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[185,[],[[182,[-1]],[183,[-2]],[184,[-3]]]],-1],11,[48,32],[],[[187,[],[[16,[[11,[[186,[44]],-2]]]]]]]],[198,11],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,[[3,[134]]]],0,[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,49],[201,201],[[-1,-2],11,[],[]],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[49,[27]]]],[[[199,[-1,-2]],[67,[-3]]],[[199,[-1,-2]]],200,149,[[49,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[129,[67,[201]],10,202],11],[[129,13,[67,[201]]],11],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[133,134],11],[[134,-1],11,[[203,[133]]]],[[134,[162,[-1]]],11,[[203,[133]]]],[[134,[162,[-1]],-2,-3],11,[],[[40,[134,-1]]],[[40,[-1],[[8,[134]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[133,134,-1,-2,139,132,140,10],11,136,[]],[[[199,[-1,-2]],134,-2,-1,139,132,140,10],11,200,149],[44,11],[44,11],[44,11],[[],134],[[201,201],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[129,[[204,[-1]]],[]],[[134,51],[[53,[11,52]]]],[[201,51],[[53,[11,52]]]],[[129,205,[67,[201]]],11],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,49],[-1,-1,[]],[130,[[199,[-1,-2]]],200,149],[-1,-1,[]],[206,201],[-1,-1,[]],[207,201],[208,201],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[201,-1],11,74],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[49,[29]]]],[[[199,[-1,-2]],60],[[199,[-1,-2]]],200,149],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[133,134,-1,143],142,136],[[[199,[-1,-2]],134,-2,143],142,200,149],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[49,[196]]]],[[133,134,132,140,10,-1],144,136],[-1,[[199,[-2,-3]]],209,200,149],[-1,134,[[203,[133]]]],[-1,201,[[49,[[210,[130]]]]]],[[133,134,21,132,140,-1,151,[131,[-2]],10],152,136,[]],[[133,134,132,-1,129],11,136],0,[[133,134,132,-1,7],[[67,[[153,[-2,-3,-1]]]]],136,[],[]],[[129,211,[67,[201]],10,7],11],[[[199,[-1,-2]],212],[[199,[-1,-2]]],200,149],[133,[[34,[29]]]],[[[199,[-1,-2]]],[[34,[29]]],200,149],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[49,[31]]]],[133,[[34,[29]]]],[[[199,[-1,-2]]],157,200,149],[133,157],0,[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[40,[-1],[[8,[104]]]]]],[[[199,[-1,-2]]],158,200,149],[133,158],0,0,[[129,213,[67,[201]]],11],[-1,-2,[],[]],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],201],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[199,[-1,-2]],59],[[199,[-1,-2]]],200,149],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[199,[-1,-2]],-3],[[199,[-1,-2]]],200,149,[[49,[29]]]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[129,[67,[201]],10,202],11],[[129,13,[67,[201]]],11],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[129,[[204,[-1]]],[]],[[[204,[-1]],51],[[53,[11,52]]],57],[205,11],0,[[129,205,[67,[201]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,35],[[[41,[129]],-3],[[0,[[129,[-2]]]]],[],[],[[40,[-1],[[8,[-2]]]]]],[[213,44],11],[213,11],[213,11],[[201,-2],[[0,[[129,[-1]]]]],[],[[129,[-1]]]],[[211,214],11],0,[[129,211,[67,[201]],10,7],11],[213,11],[[211,215],11],0,[[129,213,[67,[201]]],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,11],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[216,216],[[-1,-2],11,[],[]],[-1,-2,[],[]],[[],[[0,[[129,[-1]]]]],[]],[[],216],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[216,216],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[],[[0,[[129,[201]]]]]],[[216,51],[[53,[11,52]]]],[201,[[0,[[129,[-1]]]]],[]],[205,11],[[],[[0,[[129,[-1]]]]],[]],[[],[[0,[[129,[-1]]]]],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,35],[[],-1,[]],[-1,-2,[],[]],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,11],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,[[201,214],[[0,[[129,[-1]]]]],[]],[[211,214],11],[[201,215],[[0,[[129,[-1]]]]],[]],[[211,215],11],0,0,0,0,0,[[201,44],[[0,[[129,[-1]]]]],[]],[[213,44],11],[201,[[0,[[129,[-1]]]]],[]],[213,11],[201,[[0,[[129,[-1]]]]],[]],[213,11],[201,[[0,[[129,[-1]]]]],[]],[213,11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],[[-1,139,132,217,104,10],11,149],[209,[[210,[130]]]],[[217,-1,143,29,29,130,196,[67,[31]],67,60,59,212],142,149],[[[200,[],[[218,[-1]]]],-1],104,[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[158,158],[[-1,-2],11,[],[]],[[158,158],82],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[3,[134]],[162,[-1]],-2,-3,-4],11,[],[[40,[134,-1]]],[[40,[44],[[8,[35]]]]],[[40,[-1],[[8,[134]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[157,-1,[]],[157,-1,[]],[44,11],[44,11],[[158,158],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[157,51],[[53,[11,52]]]],[[158,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[158,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,157,[]],[[],158],[[158,158],[[67,[82]]]],0,[[],158],0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[59,59],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[60,60],35],[[59,59],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[60,51],[[53,[11,52]]]],[[59,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[60,-1],11,74],[[59,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,95],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[[],95],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[95,95],35],[[95,51],[[53,[11,52]]]],[219,95],[12,95],[-1,-1,[]],[50,95],[62,95],[[[15,[12]]],95],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,[-2,[[1,[-1]]],[],[[40,[[67,[36]]],[[8,[-1]]]]]],[-2,[[1,[-1]]],[],[[40,[[67,[36]]],[[8,[-1]]]]]],[36,[[1,[-1]]],[]],[36,[[1,[-1]]],[]],0,[[44,-3],[[1,[-1]]],77,[[83,[],[[8,[11]]]],77],[[39,[[220,[-1]]],[[8,[-2]]]],77]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[221,221],[222,222],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[221,221],35],[[222,222],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[221,51],[[53,[11,52]]]],[[222,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[18,[21]]]],[[],[[18,[-1]]],77],[[],[[18,[-1]]],77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[47,-2],-1,[],[[39,[],[[8,[-1]]]]]],[[],[[53,[47,81]]]],[[47,-1],11,[[83,[],[[8,[11]]]],77]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[223,223],[224,224],[225,225],[226,226],[227,227],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],224],[[],225],[[],226],[[],227],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[223,223],35],[[224,224],35],[[225,225],35],[[226,226],35],[[227,227],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[223,51],[[53,[11,52]]]],[[224,51],[[53,[11,52]]]],[[225,51],[[53,[11,52]]]],[[226,51],[[53,[11,52]]]],[[227,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[224,-1],11,74],[[225,-1],11,74],[[226,-1],11,74],[[227,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[[53,[11,223]]]]],[[49,[[210,[[162,[62]]]]]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[61,12,27],61],[[61,-1],61,[[17,[],[[16,[228]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[228,228],[61,61],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],228],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[228,228],35],[[61,61],35],[[228,51],[[53,[11,52]]]],[[61,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,61,[[49,[5]]]],[[],-1,[]],0,[[61,12],61],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],229],[229,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[230,[[230,[130]]]],[[229,229],229],[[229,229],11],[[229,229],229],[[229,229],11],[229,65],[229,65],[[229,229],229],[[229,229],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[230,[-1]]],[[230,[-1]]],32],[231,231],[232,232],[229,229],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[230,[-1]],[230,[-1]]],82,233],[[229,229],82],[229,35],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[229,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[229,229],35],[229,35],[[],229],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[229,229],229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[[],229],[[[230,[-1]],[230,[-1]]],35,48],[[231,231],35],[[232,232],35],[[229,229],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[229,-1],11,[[17,[],[[16,[229]]]]]],[[[230,[-1]],51],[[53,[11,52]]],57],[[231,51],[[53,[11,52]]]],[[232,51],[[53,[11,52]]]],[[229,51],[[53,[11,52]]]],[[229,51],[[53,[11,52]]]],[[229,51],[[53,[11,52]]]],[[229,51],[[53,[11,52]]]],[[229,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[229]]]],[65,229],[65,229],[65,229],[-1,229,[[17,[],[[16,[229]]]]]],[130,[[67,[229]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[230,[-1]],-2],11,71,74],[[229,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[229,229],11],[[229,229],229],[[229,229],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[229,35],[229,35],[229,[[234,[229]]]],[229,[[235,[229]]]],0,[229,35],[229,229],[[],-1,[]],[[],[[18,[-1]]],77],[[],[[18,[-1]]],77],[[[230,[-1]],[230,[-1]]],[[67,[82]]],236],[[229,229],[[67,[82]]]],[[229,229],11],[[229,229,35],11],[229,35],[[229,229],229],[[229,229],11],[[229,229],229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[229,229],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[229,229],229],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[237,237],[[-1,-2],11,[],[]],[[237,237],82],[[-1,-2],82,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[237,237],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[237,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[237,-1],11,74],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[237,237],[[67,[82]]]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[238,238],[140,140],[239,239],[240,240],[144,144],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[144,144],82],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],140],[[],144],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[238,238],35],[[140,140],35],[[239,239],35],[[240,240],35],[[144,144],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[238,51],[[53,[11,52]]]],[[140,51],[[53,[11,52]]]],[[239,51],[[53,[11,52]]]],[[240,51],[[53,[11,52]]]],[[144,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[238,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[140,10],35],[[],-1,[]],[[],-1,[]],[[144,144],[[67,[82]]]],[140,[[67,[6]]]],[[140,6],[[67,[6]]]],[[140,10],[[67,[6]]]],[[140,10],[[67,[6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],11,[],[]],[-1,-2,[],[]],[92,43],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[43,43],35],[[43,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[[241,[],[[145,[-2]],[85,[-3]],[86,[-4]],[147,[-1]]]],[1,[-3]]]]],[],47,[57,90],42],[[[156,[-1]]],96,[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],242],66,47,[57,90],42,[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],-3],43,47,[57,90],42,[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]]],[[18,[-2]]],47,[57,90],42,[]],0,[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],242],-3,47,[57,90],42,[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],242],36,47,[57,90],42,[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],-2],[[1,[-2]]],47,[57,90],42,[]],[[[241,[],[[145,[-1]],[85,[-2]],[86,[-3]],[147,[-4]]]],242],[[159,[-2,-3,243]]],47,[57,90],42,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[24,121],[[],-1,[]],[[],-1,[]],0,0,[[[244,[],[[218,[-1]]]],-1],121,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[88,[-1]],35],[[88,[-1]]],87],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[88,[-1]]],[[88,[-1]]],87],[-1,-2,[],[]],[[[88,[-1]],22],[[88,[-1]]],87],[92,43],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[[88,[-1]],35],[[88,[-1]]],87],[[[88,[-1]],51],55,[57,87]],[[[88,[-1]],-2],[[88,[-1]]],87,[[49,[[210,[[162,[62]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]]],[[1,[-2]]],[],[90,57],[42,92],93,47],[[[88,[-1]],-2],[[88,[[0,[[87,[],[[84,[]],[85,[]],[86,[]]]]]]]]],87,[[40,[],[[8,[1]]]]]],[[-2,-4,-7],[[88,[[0,[[87,[],[[84,[-1]],[85,[-3]],[86,[-5]]]]]]]]],[],[[89,[-1]]],[90,57],[[91,[-1,-3]]],[42,92],93,[[94,[-1,-3,-5,-6]]]],[[[88,[-1]]],96,87],[[[88,[-1]],-2],96,87,[[40,[],[[8,[]]]],32]],[[[88,[-1]],156],[[88,[-1]]],87],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1,-3],43,[],[90,57],[42,92],93,47],[[[88,[-1]],-2],[[88,[[0,[[87,[],[[84,[]],[85,[]],[86,[]]]]]]]]],87,[[40,[],[[8,[43]]]]]],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1],[[18,[-2]]],[],[90,57],[42,92],93,47],[[[88,[-1]],-2],[[88,[[0,[[87,[],[[84,[]],[85,[]],[86,[]]]]]]]]],87,[[40,[],[[8,[18]]]]]],0,[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1],-3,[],[90,57],[42,92],93,47],[[[88,[-1]],-2],[[88,[[0,[[87,[],[[84,[]],[85,[]],[86,[]]]]]]]]],87,[[40,[],[[8,[]]]]]],[[89,-1],36,[]],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1],36,[],[90,57],[42,92],93,47],[[[88,[-1]],35],[[88,[-1]]],87],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1,-2],[[1,[-2]]],[],[90,57],[42,92],93,47],[[91,-1,-2],[[0,[[49,[[1,[-2]]]]]]],[],[]],[[[87,[],[[84,[-1]],[85,[-2]],[86,[-3]],[146,[-4]],[145,[-5]]]],-1],[[159,[-2,-3,-4]]],[],[90,57],[42,92],93,47],[[94,-1],[[0,[[49,[[159,[-2,-3,-4]]]]]]],[],[],[],[]],[-1,-2,[],[]],[[[88,[-1]],-2],[[88,[-1]]],87,[[49,[34]]]],0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],32],[[-1,-2],11,[],[]],[-1,-2,[],[]],[[],[[156,[-1]]],42],0,0,[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],0,[[[156,[-1]],51],55,57],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,[-1,[[156,[-1]]],[]],0,[[-1,44,-4],[[18,[-2]]],71,77,[[83,[],[[8,[245]]]],77],[[39,[[220,[-2]]],[[8,[-3]]]],77]],[[],[[18,[-1]]],[]],[[-1,-3],[[18,[-2]]],71,[],[[97,[],[[16,[-2]]]],77]],[[-1,-2,-5],[[18,[-3]]],71,77,77,[[83,[],[[8,[[11,[-3,-2]]]]]],77],[[202,[-2],[[8,[-4]]]],77,78]],0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[246,246],[[-1,-2],11,[],[]],[-1,-2,[],[]],0,0,[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[-2,[[1,[-1]]],[],[[40,[246],[[8,[-1]]]],90]],[[246,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[247,247],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[37,37],35],[[247,247],35],[[37,51],[[53,[11,52]]]],[[247,51],[[53,[11,52]]]],[[247,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,37],247],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,37,-1],247,[[39,[37],[[8,[38]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[38,38],35],[[248,248],35],[[249,249],35],[[250,250],35],[[251,251],35],[[252,252],35],[[253,253],35],[[38,51],[[53,[11,52]]]],[[248,51],[[53,[11,52]]]],[[249,51],[[53,[11,52]]]],[[250,51],[[53,[11,52]]]],[[251,51],[[53,[11,52]]]],[[252,51],[[53,[11,52]]]],[[253,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,38],[[27,27,27],250],[[27,27],251],[[27,27,27],252],[[27,27,27],253],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[27,27],248],[[27,27],249],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[254,254],254],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[255,256]],[[255,254],255],[[254,256]],[[254,254],254],[[255,256],11],[[255,254],11],[[254,254],11],[[254,256],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[254,257],[254,257],[254,257],[254,70],[254,12],[254,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[255,254],[[67,[255]]]],[[254,254],[[67,[254]]]],[[255,256],[[67,[255]]]],[[254,65],[[67,[254]]]],[[255,255],[[67,[254]]]],[[254,65],[[67,[254]]]],[[255,254],[[67,[255]]]],[[254,254],[[67,[254]]]],[[255,256],[[67,[255]]]],[255,255],[254,254],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[255,255],82],[[254,254],82],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],254],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,[[53,[254]]],258],[-1,[[53,[259]]],[[261,[260]]]],[[254,65],254],[[254,256]],[[254,65],11],[[254,254],12],[[254,254],66],[[254,12],254],[[254,66],254],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[255,255],254],[-1,260,[]],[255,254],[[255,262],35],[[255,255],35],[[254,256],35],[[254,254],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[254,[[18,[255]]]],[[255,51],[[53,[11,52]]]],[[254,51],[[53,[11,52]]]],[263,255],[-1,-1,[]],[262,255],[-1,-1,[]],[264,254],[265,254],[-1,-1,[]],[-1,-1,[]],[70,254],[70,254],[70,254],[70,254],[12,254],[66,254],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[255,-1],11,74],[[254,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[254,35],[[254,65],254],[[254,65],11],[[254,12],254],[[254,66],254],[[70,65],254],[[],255],[[],-1,[]],[[255,262],[[67,[82]]]],[[255,255],[[67,[82]]]],[[254,254],[[67,[82]]]],[[254,256],[[67,[82]]]],[[254,254],254],[[255,255],254],[[254,65],254],[[254,254],254],[[254,-1],53,266],[[],260],[[255,255],256],[[255,256]],[[255,262]],[[255,255],254],[[255,254],255],[[254,254],254],[[254,256]],[[255,256],11],[[255,254],11],[[254,254],11],[[254,256],11],[254,65],[254,65],[254,65],[-1,254,[[187,[],[[16,[254]]]]]],[-1,254,[[187,[],[[16,[254]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[256,[[53,[254,267]]]],[-1,[[53,[-2]]],[],[]],[12,[[53,[254,268]]]],[66,[[53,[254,268]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[269,269],[270,270],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[269,269],35],[[270,270],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[269,51],[[53,[11,52]]]],[[270,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[270,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[271,[-1,-2,-3]],19],[[271,[-1,-2,-3]]],[],[],136],[[[272,[-1,-2,-3]],19],[[272,[-1,-2,-3]]],[],[],136],[[[273,[-1,-2,-3]],60],[[273,[-1,-2,-3]]],[],274,136],[[[273,[-1,-2,-3]],59],[[273,[-1,-2,-3]]],[],274,136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[275,[-1,-2,-3,-4,-5]]],[[275,[-1,-2,-3,-4,-5]]],[],[],[],[[40,[-2],[[8,[-3]]]]],136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-4,[[276,[-1,-2,-3]]],[],277,136,[[49,[[171,[-1,-2,-3]]]]]],0,[-4,[[278,[-4,-1,-2,-3]]],[],[],279,[[280,[-1,-2,-3]]]],[[[281,[-1]],50],[[281,[-1]]],282],[[[273,[-1,-2,-3]]],[[273,[-1,-2,-3]]],[],274,136],[[[273,[-1,-2,-3]]],[[273,[-1,-2,-3]]],[],274,136],0,[[-1,35],[[283,[-2,-3,-4]]],[[49,[36]]],[],284,149],[[[271,[-1,-2,-3]]],[[3,[134]]],[],[],136],[[[285,[-1,-2,-3]]],[[3,[134]]],32,[],136],[[[272,[-1,-2,-3]]],[[3,[134]]],[],[],136],[[[286,[-1,-2,-3]]],[[3,[134]]],[],[],136],[[[275,[-1,-2,-3,-4,-5]]],[[3,[134]]],[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]]],[[3,[134]]],32,277,136],[[[287,[-1,-2,-3,-4]]],[[3,[134]]],[56,32],32,288,149],[[[273,[-1,-2,-3]]],[[3,[134]]],[],274,136],[[[289,[-1,-2,-3]]],[[3,[134]]],[],290,136],[[[291,[-1,-2,-3]]],[[3,[134]]],[],292,136],[[[293,[-1,-2,-3]]],[[3,[134]]],[],274,149],[[[294,[-1,-2,-3,-4,-5]]],[[3,[134]]],[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[276,[-1,-2,-3]],-4],[[276,[-1,-2,-3]]],[],277,136,49],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,49],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,49],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,49],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,49],[[[298,[-1]],-2],[[298,[-1]]],299,49],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,49],[[[302,[-1]],-2],[[302,[-1]]],303,49],[[[291,[-1,-2,-3]],-4],[[291,[-1,-2,-3]]],[],292,136,49],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,49],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,49],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,49],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,49],[[[293,[-1,-2,-3]],-4],[[293,[-1,-2,-3]]],[],274,149,49],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,49],[[[314,[-1]],-2],[[314,[-1]]],315,49],[[[281,[-1]],-2],[[281,[-1]]],282,49],[[[271,[-1,-2,-3]],35],[[271,[-1,-2,-3]]],[],[],136],[[[272,[-1,-2,-3]],35],[[272,[-1,-2,-3]]],[],[],136],[[[276,[-1,-2,-3]],35],[[276,[-1,-2,-3]]],[],277,136],[[[273,[-1,-2,-3]],35],[[273,[-1,-2,-3]]],[],274,136],[-4,[[271,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],0,0,[[[316,[-1]],130,[67,[-1]],-3],[[287,[-1,-2,-4,-5]]],[56,32],[],[[40,[-1],[[8,[-2]]]]],288,149],[-4,[[171,[-1,-2,-3]]],[],[],136,[[317,[-1,-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-4,[[273,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[[[314,[-1]],28],[[314,[-1]]],315],[[[318,[-1]],28],[[318,[-1]]],[]],[[],[[271,[-1,-2]]],[],136],[[],[[272,[-1,-2]]],[],136],[[],[[286,[-1,-2]]],[],136],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[-1]]]],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[-1]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[271,[-1,-2,-3]],134],11,[],[],136],[[[285,[-1,-2,-3]],134],11,32,[],136],[[[272,[-1,-2,-3]],134],11,[],[],136],[[[286,[-1,-2,-3]],134],11,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134],11,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134],11,32,277,136],[[[273,[-1,-2,-3]],134],11,[],274,136],[[[289,[-1,-2,-3]],134],11,[],290,136],[[[291,[-1,-2,-3]],134],11,[],292,136],[[[309,[-1,-2,-3]],134],11,32,310,149],[[[293,[-1,-2,-3]],134],11,[],274,149],[[[294,[-1,-2,-3,-4,-5]],134],11,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[271,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],[],136],[[[285,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,32,[],136],[[[272,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],[],136],[[[286,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,-5,-2,139,132,140,10],11,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,32,277,136],[[[283,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],284,149],[[[287,[-1,-2,-3,-4]],134,-4,-3,139,132,140,10],11,[56,32],32,288,149],[[[273,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],274,136],[[[289,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]],134,-6,-5,139,132,140,10],11,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[298,[-1]],134,-2,-1,139,132,140,10],11,299,136],[[[300,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,32,301,149],[[[302,[-1]],134,-2,-1,139,132,140,10],11,303,136],[[[291,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],292,136],[[[304,[-1,-2,-3]],134,-4,-3,139,132,140,10],11,[80,[49,[66]],319],32,306,136],[[[307,[-1,-2,-3,-4]],134,-4,-3,139,132,140,10],11,185,[],308,149],[[[309,[-1,-2,-3]],134,-3,-2,132,140,[67,[320]],10],11,32,310,149],[[[309,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,32,310,149],[[[311,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],312,149],[[[293,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],274,149],[[[313,[-1,-2,-3]],134,-4,-3,139,132,140,10],11,[80,[49,[66]],319],32,306,136],[[[321,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,-3,-2,139,132,140,10],11,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]],134,-3,-4,139,132,140,10],11,[],[[323,[-1]]],324,[]],[[[314,[-1]],134,-2,-1,139,132,140,10],11,315,178],[[[281,[-1]],134,[327,[325,326]],-1,139,132,140,10],11,282],[[328,134,-1,-2,139,132,140,10],11,136,[]],[[[318,[-1]],134,-2,-3,139,132,140,10],11,[32,71],[[165,[],[[164,[-1]]]]],[]],[[[278,[-4,-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],[],279,[[280,[-1,-2,-3]]]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[[[286,[-1,-2,-3]],-4],[[286,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[[[318,[-1]],166],[[318,[-1]]],[]],[[328,51],[[53,[11,52]]]],[[[318,[-1]],51],[[53,[11,52]]],57],[[[278,[-4,-1,-2,-3]],51],[[53,[11,52]]],57,57,[57,279],[57,[280,[-1,-2,-3]]]],[[],[[1,[-1]]],[]],[[],[[1,[-1]]],[]],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,49],[[[287,[-1,-2,-3,-4]]],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,49],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,49],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,49],[[[309,[-1,-2,-3]]],[[309,[-1,-2,-3]]],32,310,149],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[314,[-2]]],[[49,[329]]],315],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[[171,[-1,-2,-3]]]]],[[271,[-1,-2,-3]]],[],[],136],[[[3,[[171,[-1,-2,-3]]]]],[[272,[-1,-2,-3]]],[],[],136],[[[3,[[171,[-1,-2,-3]]]]],[[286,[-1,-2,-3]]],[],[],136],[[[293,[-1,-2,-3]],-4],[[293,[-1,-2,-3]]],[],274,149,[[49,[31]]]],[[[295,[-1,-2,-3,-4,-5,-6]],330],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[286,[-1,-2,-3]],-4],[[286,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[276,[-1,-2,-3]],-4],[[276,[-1,-2,-3]]],[],277,136,[[49,[29]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[49,[29]]]],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[49,[29]]]],[[[298,[-1]],-2],[[298,[-1]]],299,[[49,[29]]]],[[[291,[-1,-2,-3]],-4],[[291,[-1,-2,-3]]],[],292,136,[[49,[29]]]],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[31]]]],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[49,[29]]]],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[29]]]],[[[322,[-1,-2]],-3],[[322,[-1,-2]]],[],[[323,[-1]]],[[49,[29]]]],[[[314,[-1]],-2],[[314,[-1]]],315,[[49,[29]]]],[[328,-1],328,[[49,[29]]]],[[[318,[-1]],-2],[[318,[-1]]],[],[[49,[29]]]],[[[278,[-4,-1,-2,-3]],-5],[[278,[-4,-1,-2,-3]]],[],[],279,[[280,[-1,-2,-3]]],[[49,[29]]]],[[[307,[-1,-2,-3,-4]]],[[307,[-5,-2,-3,-4]]],185,[],308,149,185],[-1,[[302,[-2]]],[[49,[31]]],303],[-1,[[302,[-2]]],[[49,[31]]],303],[[],328],[[-4,-5],[[171,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]],[[49,[[171,[-1,-2,-3]]]]]],[[[283,[-1,-2,-3]],331],[[283,[-1,-2,-3]]],[],284,149],[[[287,[-1,-2,-3,-4]],332],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149],[[[309,[-1,-2,-3]],332],[[309,[-1,-2,-3]]],32,310,149],[[[273,[-1,-2,-3]],206],[[273,[-1,-2,-3]]],[],274,136],[[[291,[-1,-2,-3]],207],[[291,[-1,-2,-3]]],[],292,136],[[[309,[-1,-2,-3]],208],[[309,[-1,-2,-3]]],32,310,149],0,[-2,[[318,[-1]]],[],[[49,[-1]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,49],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[40,[-3,102],[[8,[103]]]]]],[[[285,[-1,-2,-3]],144],[[285,[-1,-2,-3]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-5,[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[17,[],[[16,[[11,[-1,[171,[-2,-3,-4]]]]]]]]]],0,[[[271,[-1,-2,-3]],134,-3,143],142,[],[],136],[[[285,[-1,-2,-3]],134,-3,143],142,32,[],136],[[[272,[-1,-2,-3]],134,-3,143],142,[],[],136],[[[286,[-1,-2,-3]],134,-3,143],142,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,-5,143],142,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,-3,143],142,32,277,136],[[[283,[-1,-2,-3]],134,-3,143],142,[],284,149],[[[287,[-1,-2,-3,-4]],134,-4,143],142,[56,32],32,288,149],[[[273,[-1,-2,-3]],134,-3,143],142,[],274,136],[[[289,[-1,-2,-3]],134,-3,143],142,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]],134,-6,143],142,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[298,[-1]],134,-2,143],142,299,136],[[[300,[-1,-2,-3]],134,-3,143],142,32,301,149],[[[302,[-1]],134,-2,143],142,303,136],[[[291,[-1,-2,-3]],134,-3,143],142,[],292,136],[[[304,[-1,-2,-3]],134,-4,143],142,[80,[49,[66]],319],32,306,136],[[[307,[-1,-2,-3,-4]],134,-4,143],142,185,[],308,149],[[[309,[-1,-2,-3]],134,-3,143,[67,[320]]],142,32,310,149],[[[309,[-1,-2,-3]],134,-3,143],142,32,310,149],[[[311,[-1,-2,-3]],134,-3,143],142,[],312,149],[[[293,[-1,-2,-3]],134,-3,143],142,[],274,149],[[[313,[-1,-2,-3]],134,-4,143],142,[80,[49,[66]],319],32,306,136],[[[321,[-1,-2,-3]],134,-3,143],142,[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,-3,143],142,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]],134,-3,143],142,[],[[323,[-1]]],324],[[[314,[-1]],134,-2,143],142,315,178],[[[281,[-1]],134,[327,[325,326]],143],142,282],[[328,134,-1,143],142,136],[[[318,[-1]],134,-2,143],142,[32,71],[[165,[],[[164,[-1]]]]]],[[[278,[-4,-1,-2,-3]],134,-3,143],142,[],[],279,[[280,[-1,-2,-3]]]],[[-1,-6],[[294,[-2,-3,-4,-1,-5]]],71,[],[],[],[[49,[[171,[-2,-3,-4]]]]],[[40,[-1],[[8,[-5]]]]]],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[49,[196]]]],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[49,[196]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[49,[196]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[49,[31]]]],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[31]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[49,[31]]]],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,49],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[40,[-3],[[8,[121]]]]]],[-4,[[285,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[271,[-1,-2,-3]],134,132,140,10,-3],144,[],[],136],[[[285,[-1,-2,-3]],134,132,140,10,-3],144,32,[],136],[[[272,[-1,-2,-3]],134,132,140,10,-3],144,[],[],136],[[[286,[-1,-2,-3]],134,132,140,10,-3],144,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,132,140,10,-5],144,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,132,140,10,-3],144,32,277,136],[[[283,[-1,-2,-3]],134,132,140,10,-3],144,[],284,149],[[[287,[-1,-2,-3,-4]],134,132,140,10,-4],144,[56,32],32,288,149],[[[273,[-1,-2,-3]],134,132,140,10,-3],144,[],274,136],[[[289,[-1,-2,-3]],134,132,140,10,-3],144,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]],134,132,140,10,-6],144,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[300,[-1,-2,-3]],134,132,140,10,-3],144,32,301,149],[[[291,[-1,-2,-3]],134,132,140,10,-3],144,[],292,136],[[[304,[-1,-2,-3]],134,132,140,10,-4],144,[80,[49,[66]],319],32,306,136],[[[307,[-1,-2,-3,-4]],134,132,140,10,-4],144,185,[],308,149],[[[309,[-1,-2,-3]],134,132,140,10,-3],144,32,310,149],[[[311,[-1,-2,-3]],134,132,140,10,-3],144,[],312,149],[[[293,[-1,-2,-3]],134,132,140,10,-3],144,[],274,149],[[[313,[-1,-2,-3]],134,132,140,10,-4],144,[80,[49,[66]],319],32,306,136],[[[321,[-1,-2,-3]],134,132,140,10,-3],144,[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,132,140,10,-3],144,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]],134,132,140,10,-3],144,[],[[323,[-1]]],324],[[[278,[-4,-1,-2,-3]],134,132,140,10,-3],144,[],[],279,[[280,[-1,-2,-3]]]],[[],[[271,[-1,-2,-3]]],[],[],136],[-4,[[285,[-1,-2,-3]]],[],[],[],[[49,[[171,[-1,-2,-3]]]]]],[[],[[272,[-1,-2,-3]]],[],[],136],[[],[[286,[-1,-2,-3]]],[],[],136],[[-3,-6],[[275,[-4,-1,-2,-3,-5]]],[],[],[[40,[-1],[[8,[-2]]]]],[],136,[[49,[[171,[-4,-2,-5]]]]]],[-4,[[276,[-1,-2,-3]]],[],277,136,[[49,[[171,[-1,-2,-3]]]]]],[[-1,35],[[283,[-2,-3,-4]]],[[49,[36]]],[],284,149],[[[316,[-1]],130,[67,[-1]],-3],[[287,[-1,-2,-4,-5]]],[56,32],[],[[40,[-1],[[8,[-2]]]]],288,149],[-4,[[273,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[[[334,[-1]],-5],[[289,[-2,-3,-4]]],[],[],290,136,[[40,[335,-1,35],[[8,[[336,[-2,-3,-4]]]]]]]],[[-2,[67,[-3]],-5],[[295,[-1,-2,-3,-4,-6,-7]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,[[40,[-1],[[8,[-4]]]]],297,149],[[[337,[12]],12],[[298,[-1]]],299],[[-1,-2,[67,[-2]],-4],[[300,[-3,-5,-6]]],[[49,[36]]],[338,80],32,[[39,[-2],[[8,[-3]]]]],301,149],[-4,[[291,[-1,-2,-3]]],[],292,136,[[49,[[171,[-1,-2,-3]]]]]],[[[337,[-1]],-1,-3],[[304,[-1,-2,-4]]],[80,[305,[62]],236],32,[[40,[-1],[[8,[-2]]]]],306],[[[339,[-1]]],[[307,[198,-2,-3,-1]]],149,[],308],[[130,130],[[309,[-1,-2,-3]]],32,310,149],[[-1,35,-3],[[311,[-2,-4,-5]]],[[49,[[67,[36]]]]],[],[[40,[35],[[8,[-2]]]]],312,149],[[-4,-5,340],[[293,[-1,-2,-3]]],[],274,149,[[49,[[171,[-1,-2,-3]]]]],[[49,[[171,[-1,-2,-3]]]]]],[[[337,[-1]],-1,-3],[[313,[-1,-2,-4]]],[80,[305,[62]],236],32,[[40,[-1],[[8,[-2]]]]],306],[-4,[[321,[-1,-2,-3]]],[],[],136,[[40,[34],[[8,[[171,[-1,-2,-3]]]]]]]],[[-1,-6],[[294,[-2,-3,-4,-1,-5]]],71,[],[],[],[[49,[[171,[-2,-3,-4]]]]],[[40,[-1],[[8,[-5]]]]]],[-2,[[322,[-1,-2]]],[],[[323,[-1]]]],[-1,[[314,[-2]]],[[49,[179]]],315],[341,[[281,[-1]]],282],[[-1,-2],328,[[49,[29]]],[[49,[29]]]],[-2,[[318,[-1]]],[],[[49,[-1]]]],[-4,[[278,[-4,-1,-2,-3]]],[],[],279,[[280,[-1,-2,-3]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[40,[195],[[8,[-2]]]]]],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[40,[335],[[8,[-1]]]]]],[[[287,[-1,-2,-3,-4]],-2],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149],[[[295,[-1,-2,-3,-4,-5,-6]],-4],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[40,[342],[[8,[-1]]]]]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[271,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],136],[[[285,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,32,[],136],[[[272,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],136],[[[286,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,21,132,140,-5,151,[131,[-1]],10],152,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,32,277,136],[[[283,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],284,149],[[[287,[-1,-2,-3,-4]],134,21,132,140,-4,151,[131,[-2]],10],152,[56,32],32,288,149],[[[273,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],274,136],[[[289,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]],134,21,132,140,-6,151,[131,[-4]],10],152,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[300,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,32,301,149],[[[291,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],292,136],[[[304,[-1,-2,-3]],134,21,132,140,-4,151,[131,[-2]],10],152,[80,[49,[66]],319],32,306,136],[[[307,[-1,-2,-3,-4]],134,21,132,140,-4,151,[131,[-2]],10],152,185,[],308,149],[[[309,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,32,310,149],[[[311,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],312,149],[[[293,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],274,149],[[[313,[-1,-2,-3]],134,21,132,140,-4,151,[131,[-2]],10],152,[80,[49,[66]],319],32,306,136],[[[321,[-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[[323,[-1]]],324],[[[278,[-4,-1,-2,-3]],134,21,132,140,-3,151,[131,[-1]],10],152,[],[],279,[[280,[-1,-2,-3]]]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[40,[36],[[8,[-2]]]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[40,[36],[[8,[-1]]]]]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[285,[-1,-2,-3]],-4],[[285,[-1,-2,-3]]],[],[],[],[[40,[6],[[8,[-1]]]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-4],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[40,[-1],[[8,[-2]]]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[40,[36],[[8,[-1]]]]]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[276,[-1,-2,-3]],-1],[[276,[-1,-2,-3]]],[],277,136],[[[276,[-1,-2,-3]],[67,[-1]]],[[276,[-1,-2,-3]]],[],277,136],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[304,[-1,-2,-3]],-2],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306],[[[313,[-1,-2,-3]],-2],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306],[[[289,[-1,-2,-3]],-4,-5],[[289,[-1,-2,-3]]],[],290,136,[[49,[31]]],[[40,[343],[[8,[-1]]]]]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[285,[-1,-2,-3]],-1],[[285,[-1,-2,-3]]],[],[],[]],[[[291,[-1,-2,-3]],-4],[[291,[-1,-2,-3]]],[],292,136,[[40,[344],[[8,[-1]]]]]],[[[309,[-1,-2,-3]],-1],[[309,[-1,-2,-3]]],32,310,149],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[40,[35],[[8,[-1]]]]]],[[[283,[-1,-2,-3]],[67,[-4]]],[[283,[-1,-2,-3]]],[],284,149,[[40,[35],[[8,[-1]]]]]],[-4,[[171,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[271,[-1,-2,-3]],134,132,-3,129],11,[],[],136],[[[285,[-1,-2,-3]],134,132,-3,129],11,32,[],136],[[[272,[-1,-2,-3]],134,132,-3,129],11,[],[],136],[[[286,[-1,-2,-3]],134,132,-3,129],11,[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,132,-5,129],11,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,132,-3,129],11,32,277,136],[[[273,[-1,-2,-3]],134,132,-3,129],11,[],274,136],[[[289,[-1,-2,-3]],134,132,-3,129],11,[],290,136],[[[291,[-1,-2,-3]],134,132,-3,129],11,[],292,136],[[[309,[-1,-2,-3]],134,132,-3,129],11,32,310,149],[[[317,[],[[84,[-1]],[345,[-2]]]],-1,129],11,42,[]],[[[321,[-1,-2,-3]],134,132,-3,129],11,[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,132,-3,129],11,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],0,[[[271,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[[285,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],32,[],136],[[[272,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[[286,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[[275,[-1,-2,-3,-4,-5]],134,132,-5,7],[[67,[[153,[-1,-2,-5]]]]],[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],32,277,136],[[[287,[-1,-2,-3,-4]],134,132,-4,7],[[67,[[153,[-2,-3,-4]]]]],[56,32],32,288,149],[[[273,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],274,136],[[[289,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]],134,132,-6,7],[[67,[[153,[-4,-5,-6]]]]],[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[291,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],292,136],[[[293,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],274,149],[[[321,[-1,-2,-3]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136],[[[294,[-1,-2,-3,-4,-5]],134,132,-3,7],[[67,[[153,[-1,-2,-3]]]]],[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[30]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[49,[30]]]],[[[276,[-1,-2,-3]],-4],[[276,[-1,-2,-3]]],[],277,136,[[49,[30]]]],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[49,[30]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[49,[30]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[49,[30]]]],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[49,[30]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[49,[30]]]],[[[293,[-1,-2,-3]],-4],[[293,[-1,-2,-3]]],[],274,149,[[49,[31]]]],0,0,[[-2,[67,[-3]],-5],[[295,[-1,-2,-3,-4,-6,-7]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,[[40,[-1],[[8,[-4]]]]],[297,244],149],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[49,[36]]]],0,[[[337,[12]],12],[[298,[-1]]],299],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[286,[-1,-2,-3]],-4],[[286,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[271,[-1,-2,-3]],[67,[-4]]],[[271,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[272,[-1,-2,-3]],[67,[-4]]],[[272,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],[[[286,[-1,-2,-3]],[67,[-4]]],[[286,[-1,-2,-3]]],[],[],136,[[49,[[171,[-1,-2,-3]]]]]],0,[341,[[281,[-1]]],282],0,[[-1,-2,[67,[-2]],-4],[[300,[-3,-5,-6]]],[[49,[36]]],[80,338],32,[[39,[-2],[[8,[-3]]]]],301,149],[-4,[[321,[-1,-2,-3]]],[],[],136,[[40,[34],[[8,[[171,[-1,-2,-3]]]]]]]],[-4,[[272,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],0,0,0,[-4,[[291,[-1,-2,-3]]],[],292,136,[[49,[[171,[-1,-2,-3]]]]]],[[[309,[-1,-2,-3]],35],[[309,[-1,-2,-3]]],32,310,149],0,[-2,[[322,[-1,-2]]],[],[[323,[-1]]]],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[-1]]]],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[-1]]]],[[[271,[-1,-2,-3]]],[[34,[29]]],[],[],136],[[[285,[-1,-2,-3]]],[[34,[29]]],32,[],136],[[[272,[-1,-2,-3]]],[[34,[29]]],[],[],136],[[[286,[-1,-2,-3]]],[[34,[29]]],[],[],136],[[[275,[-1,-2,-3,-4,-5]]],[[34,[29]]],[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]]],[[34,[29]]],32,277,136],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[49,[31]]]],[[[283,[-1,-2,-3]]],[[34,[29]]],[],284,149],[[[287,[-1,-2,-3,-4]]],[[34,[29]]],[56,32],32,288,149],[[[287,[-1,-2,-3,-4]],12],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149],[[[273,[-1,-2,-3]]],[[34,[29]]],[],274,136],[[[289,[-1,-2,-3]]],[[34,[29]]],[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]]],[[34,[29]]],[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[298,[-1]]],[[34,[29]]],299],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[49,[31]]]],[[[300,[-1,-2,-3]]],[[34,[29]]],32,301,149],[[[302,[-1]]],[[34,[29]]],303],[[[291,[-1,-2,-3]]],[[34,[29]]],[],292,136],[[[304,[-1,-2,-3]]],[[34,[29]]],[80,[49,[66]],319],32,306],[[[307,[-1,-2,-3,-4]]],[[34,[29]]],185,[],308,149],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[49,[31]]]],[[[309,[-1,-2,-3]]],[[34,[29]]],32,310,149],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[49,[31]]]],[[[311,[-1,-2,-3]]],[[34,[29]]],[],312,149],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[49,[31]]]],[[[293,[-1,-2,-3]]],[[34,[29]]],[],274,149],[[[313,[-1,-2,-3]]],[[34,[29]]],[80,[49,[66]],319],32,306],[[[321,[-1,-2,-3]]],[[34,[29]]],[],[],136],[[[294,[-1,-2,-3,-4,-5]]],[[34,[29]]],[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]]],[[34,[29]]],[],[[323,[-1]]]],[[[314,[-1]]],[[34,[29]]],315],[[[281,[-1]]],[[34,[29]]],282],[328,[[34,[29]]]],[[[318,[-1]]],[[34,[29]]],[32,71]],[[[278,[-4,-1,-2,-3]]],[[34,[29]]],[],[],279,[[280,[-1,-2,-3]]]],[[[293,[-1,-2,-3]]],[[34,[29]]],[],274,149],[[[317,[],[[84,[-1]],[345,[-2]]]]],[[34,[29]]],42,[]],[[[294,[-1,-2,-3,-4,-5]]],[[34,[29]]],[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],0,[[[337,[-1]],-1,-3],[[304,[-1,-2,-4]]],[80,[305,[62]],236],32,[[40,[-1],[[8,[-2]]]]],306],[[[293,[-1,-2,-3]],35],[[293,[-1,-2,-3]]],[],274,149],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[31]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[49,[31]]]],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[49,[31]]]],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[49,[31]]]],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[49,[31]]]],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[49,[31]]]],[-4,[[286,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],0,[[[285,[-1,-2,-3]]],157,32,[],136],[[[275,[-1,-2,-3,-4,-5]]],157,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]]],157,32,277,136],[[[283,[-1,-2,-3]]],157,[],284,149],[[[287,[-1,-2,-3,-4]]],157,[56,32],32,288,149],[[[273,[-1,-2,-3]]],157,[],274,136],[[[289,[-1,-2,-3]]],157,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]]],157,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[300,[-1,-2,-3]]],157,32,301,149],[[[291,[-1,-2,-3]]],157,[],292,136],[[[304,[-1,-2,-3]]],157,[80,[49,[66]],319],32,306],[[[307,[-1,-2,-3,-4]]],157,185,[],308,149],[[[309,[-1,-2,-3]]],157,32,310,149],[[[311,[-1,-2,-3]]],157,[],312,149],[[[293,[-1,-2,-3]]],157,[],274,149],[[[313,[-1,-2,-3]]],157,[80,[49,[66]],319],32,306],[[[321,[-1,-2,-3]]],157,[],[],136],[[[294,[-1,-2,-3,-4,-5]]],157,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]]],157,[],[[323,[-1]]]],[[[281,[-1]]],157,282],[[[278,[-4,-1,-2,-3]]],157,[],[],279,[[280,[-1,-2,-3]]]],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[-1]]]],[[[313,[-1,-2,-3]],-1],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306],[[[276,[-1,-2,-3]],-4],[[276,[-1,-2,-3]]],[],277,136,[[40,[-2,107],[[8,[108]]]]]],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[40,[-2,123],[[8,[124]]]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[40,[-2],[[8,[111]]]]]],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[40,[-2],[[8,[114]]]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[40,[-5,119],[[8,[120]]]]]],[[[298,[-1]],-2],[[298,[-1]]],299,[[40,[-1],[[8,[98]]]]]],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[40,[-2,99],[[8,[100]]]]]],[[[302,[-1]],-2],[[302,[-1]]],303,[[40,[-1],[[8,[122]]]]]],[[[291,[-1,-2,-3]],-4],[[291,[-1,-2,-3]]],[],292,136,[[40,[-2,117],[[8,[118]]]]]],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[40,[-3,105],[[8,[106]]]]]],[[[307,[-1,-2,-3,-4]],-5],[[307,[-1,-2,-3,-4]]],185,[],308,149,[[40,[-3,109],[[8,[110]]]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[40,[-2,102],[[8,[103]]]]]],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[40,[-2,112],[[8,[113]]]]]],[[[293,[-1,-2,-3]],-4],[[293,[-1,-2,-3]]],[],274,149,[[40,[-2],[[8,[111]]]]]],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[40,[-3,105],[[8,[106]]]]]],[[[314,[-1]],-2],[[314,[-1]]],315,[[40,[-1,115],[[8,[116]]]]]],[[[281,[-1]],-2],[[281,[-1]]],282,[[40,[-1],[[8,[101]]]]]],0,[-1,[[314,[-2]]],[[49,[179]]],315],[[[285,[-1,-2,-3]]],158,32,[],136],[[[275,[-1,-2,-3,-4,-5]]],158,[],[],[],[[40,[-2],[[8,[-3]]]]],136],[[[276,[-1,-2,-3]]],158,32,277,136],[[[283,[-1,-2,-3]]],158,[],284,149],[[[287,[-1,-2,-3,-4]]],158,[56,32],32,288,149],[[[273,[-1,-2,-3]]],158,[],274,136],[[[289,[-1,-2,-3]]],158,[],290,136],[[[295,[-1,-2,-3,-4,-5,-6]]],158,[32,296,48],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[300,[-1,-2,-3]]],158,32,301,149],[[[291,[-1,-2,-3]]],158,[],292,136],[[[304,[-1,-2,-3]]],158,[80,[49,[66]],319],32,306],[[[307,[-1,-2,-3,-4]]],158,185,[],308,149],[[[309,[-1,-2,-3]]],158,32,310,149],[[[311,[-1,-2,-3]]],158,[],312,149],[[[293,[-1,-2,-3]]],158,[],274,149],[[[313,[-1,-2,-3]]],158,[80,[49,[66]],319],32,306],[[[321,[-1,-2,-3]]],158,[],[],136],[[[294,[-1,-2,-3,-4,-5]]],158,[],[],136,71,[[49,[[171,[-1,-2,-3]]]]]],[[[322,[-1,-2]]],158,[],[[323,[-1]]]],[[[281,[-1]]],158,282],[[[278,[-4,-1,-2,-3]]],158,[],[],279,[[280,[-1,-2,-3]]]],0,[-1,[[199,[-2,-3]]],209,200,149],[[[311,[-1,-2,-3]],60],[[311,[-1,-2,-3]]],[],312,149],[[[275,[-1,-2,-3,-4,-5]]],[[275,[-1,-2,-3,-4,-5]]],[],[],[],[[40,[-2],[[8,[-3]]]]],136],0,[[[339,[-1]]],[[307,[198,-2,-3,-1]]],149,32,308],0,[[130,130],[[309,[-1,-2,-3]]],32,310,149],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[49,[196]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[49,[196]]]],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[49,[196]]]],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[49,[196]]]],[[[283,[-1,-2,-3]],212],[[283,[-1,-2,-3]]],[],284,149],[[[295,[-1,-2,-3,-4,-5,-6]],212],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149],[[[300,[-1,-2,-3]],212],[[300,[-1,-2,-3]]],32,301,149],[[[311,[-1,-2,-3]],212],[[311,[-1,-2,-3]]],[],312,149],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[49,[31]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[49,[31]]]],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[49,[31]]]],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[49,[31]]]],0,[[-1,-4],[[275,[-2,-5,-1,[0,[[40,[-5]]]],-3]]],32,[],136,[[49,[[171,[-2,-1,-3]]]]],[]],0,[[-1,35,-3],[[311,[-2,-4,-5]]],[[49,[[67,[36]]]]],[],[[40,[35],[[8,[-2]]]]],312,149],0,[[-4,-5,340],[[293,[-1,-2,-3]]],[],274,149,[[49,[[171,[-1,-2,-3]]]]],[[49,[[171,[-1,-2,-3]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[317,[],[[84,[-1]],[345,[-2]]]],-1,-2],[[67,[-3]]],42,[],[]],[-1,[[199,[-2,-3]]],296,200,149],[-1,[[302,[-2]]],[[49,[31]]],303],[-1,[[302,[-2]]],[[49,[31]]],303],0,[[[337,[-1]],-1,-3],[[313,[-1,-2,-4]]],[80,[305,[62]],236],32,[[40,[-1],[[8,[-2]]]]],306],[[],328],[[[317,[],[[84,[-1]],[345,[-2]]]],-1],[[171,[-2,-3,-4]]],42,[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[271,[-1,-2,-3]],-4],[[271,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[272,[-1,-2,-3]],-4],[[272,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[286,[-1,-2,-3]],-4],[[286,[-1,-2,-3]]],[],[],136,[[49,[29]]]],[[[276,[-1,-2,-3]],-4],[[276,[-1,-2,-3]]],[],277,136,[[49,[29]]]],[[[283,[-1,-2,-3]],-4],[[283,[-1,-2,-3]]],[],284,149,[[49,[29]]]],[[[287,[-1,-2,-3,-4]],-5],[[287,[-1,-2,-3,-4]]],[56,32],[],288,149,[[49,[29]]]],[[[273,[-1,-2,-3]],-4],[[273,[-1,-2,-3]]],[],274,136,[[49,[29]]]],[[[289,[-1,-2,-3]],-4],[[289,[-1,-2,-3]]],[],290,136,[[49,[29]]]],[[[295,[-1,-2,-3,-4,-5,-6]],-7],[[295,[-1,-2,-3,-4,-5,-6]]],[296,48,32],[[203,[[162,[-1]]]]],[[203,[-1]]],32,297,149,[[49,[29]]]],[[[298,[-1]],-2],[[298,[-1]]],299,[[49,[29]]]],[[[300,[-1,-2,-3]],-4],[[300,[-1,-2,-3]]],32,301,149,[[49,[29]]]],[[[291,[-1,-2,-3]],-4],[[291,[-1,-2,-3]]],[],292,136,[[49,[29]]]],[[[304,[-1,-2,-3]],-4],[[304,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[29]]]],[[[309,[-1,-2,-3]],-4],[[309,[-1,-2,-3]]],32,310,149,[[49,[29]]]],[[[311,[-1,-2,-3]],-4],[[311,[-1,-2,-3]]],[],312,149,[[49,[29]]]],[[[313,[-1,-2,-3]],-4],[[313,[-1,-2,-3]]],[80,[305,[62]],236],32,306,[[49,[31]]]],[[[322,[-1,-2]],-3],[[322,[-1,-2]]],[],[[323,[-1]]],[[49,[29]]]],[[[314,[-1]],-2],[[314,[-1]]],315,[[49,[29]]]],[[328,-1],328,[[49,[29]]]],[[[318,[-1]],-2],[[318,[-1]]],[],[[49,[29]]]],[[[278,[-4,-1,-2,-3]],-5],[[278,[-4,-1,-2,-3]]],[],[],279,[[280,[-1,-2,-3]]],[[49,[29]]]],[44,[[271,[-1,-2,-3]]],[],[],136],[44,[[272,[-1,-2,-3]]],[],[],136],[44,[[286,[-1,-2,-3]]],[],[],136],[-4,[[271,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[-4,[[272,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[-4,[[286,[-1,-2,-3]]],[],[],136,[[17,[],[[16,[[171,[-1,-2,-3]]]]]]]],[[-4,346],[[291,[-1,-2,-3]]],[],292,136,[[49,[[171,[-1,-2,-3]]]]]],[-1,328,[[49,[29]]]],[-1,328,[[49,[29]]]],0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,107],[108,108],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,107],108],[[],-1,[]],[[],108],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[107,107],35],[[108,108],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[107,51],[[53,[11,52]]]],[[108,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[24,107],108],[[24,107],108],0,[[[277,[],[[218,[-1]]]],-1,107],108,[]],[[24,107],108],[[24,107],108],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[108,-1],108,[[49,[26]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,12],347],[348,348],[349,349],[347,347],[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[356,356],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],349],[[],350],[[],351],[[],352],[[],353],[[],355],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[280,[],[[84,[-1]]]],-1,-2,-3,10,140],3,42,279,[]],[[355,-1],11,[[202,[347,27]]]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[348,348],35],[[354,354],35],[[356,356],35],0,0,[[348,51],[[53,[11,52]]]],[[349,51],[[53,[11,52]]]],[[347,51],[[53,[11,52]]]],[[350,51],[[53,[11,52]]]],[[351,51],[[53,[11,52]]]],[[352,51],[[53,[11,52]]]],[[353,51],[[53,[11,52]]]],[[354,51],[[53,[11,52]]]],[[355,51],[[53,[11,52]]]],[[356,51],[[53,[11,52]]]],0,[-1,-1,[]],[357,348],[348,349],[-1,-1,[]],[357,349],[27,349],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[348,354],[27,354],[-1,-1,[]],[130,355],[36,355],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,6],347],0,0,0,0,[[[280,[],[[84,[-1]]]],-1,10,140],144,42],[-1,347,[[39,[358]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[348,359],0,0,[347,360],[[6,34],347],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[347,[362,[12,361,361]]],347],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[280,[],[[84,[-1]]]],-1,356,10,140],[[11,[152,[67,[-2]]]]],42,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[350,27],350],[[350,351],350],[[350,352],350],[[350,12],350],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[152,152],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[152,152],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[152,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[152,152],152],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[363,363],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[363,363],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[363,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[357,12,27],357],[[357,-1],357,[[17,[],[[16,[228]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[357,357],[359,359],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],0,[[357,357],35],[[359,359],35],[[357,51],[[53,[11,52]]]],[[359,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[6,6],357],[[23,10],359],[357,359],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[[358,364],11],[[358,6,6,12],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[358,6,6,6],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[358,347],0,[[358,6,12],11],[364,364],[[-1,-2],11,[],[]],[358,11],[-1,-2,[],[]],[-1,-2,[],[]],[[],358],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[358,365],11],0,[[364,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[358,6],11],[[358,6],11],[[],358],[[],-1,[]],[[358,6,6],11],0,[[358,6,34],11],0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[365,365],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],0,0,[[365,51],[[53,[11,52]]]],[-1,-1,[]],[364,365],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[366,367],[360,368],[369,370],[[360,371],[[162,[12]]]],[[368,371],[[162,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],372],[[],[[374,[373]]]],[369,375],[44,376],[369,11],[377,377],[366,366],[367,367],[[[378,[-1,-2]]],[[378,[-1,-2]]],32,32],[360,360],[368,368],[369,369],[370,370],[[[379,[-1]]],[[379,[-1]]],32],[380,380],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[371,371],[387,387],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],377],[[],360],[[],369],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[377,377],35],[[[378,[-1,-2]],[378,[-1,-2]]],35,48,48],[[381,381],35],[[382,382],35],[[383,383],35],[[384,384],35],[[385,385],35],[[386,386],35],[[371,371],35],[[387,387],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[366,387],[[378,[371,386]]]],[[367,387],[[378,[371,386]]]],[[[379,[-1]],387],[[378,[-1,11]]],[]],[[380,387],[[378,[371,386]]]],[[366,[162,[-1]],[162,[-2]]],[[388,[-1,-2]]],[],[]],[360,[[67,[[11,[[389,[12,361]],[162,[12]]]]]]]],[368,[[67,[[11,[[389,[12,361]],[162,[12]]]]]]]],[[377,51],[[53,[11,52]]]],[[366,51],[[53,[11,52]]]],[[367,51],[[53,[11,52]]]],[[[378,[-1,-2]],51],[[53,[11,52]]],57,57],[[360,51],[[53,[11,52]]]],[[368,51],[[53,[11,52]]]],[[369,51],[[53,[11,52]]]],[[370,51],[[53,[11,52]]]],[[381,51],[[53,[11,52]]]],[[382,51],[[53,[11,52]]]],[[383,51],[[53,[11,52]]]],[[384,51],[[53,[11,52]]]],[[385,51],[[53,[11,52]]]],[[386,51],[[53,[11,52]]]],[[371,51],[[53,[11,52]]]],[[387,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[366,367],[-1,-1,[]],[[[378,[-1,-2]]],-1,32,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[360,368],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,360,[[17,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]]],[-1,369,[[17,[],[[16,[368]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,386],[44,371],[[390,371],[[162,[12]]]],[[391,371],[[162,[12]]]],[[360,371],[[162,[12]]]],[[368,371],[[162,[12]]]],[[369,44],368],[[370,44],368],[[392,386],[[389,[12,361]]]],[[360,386],[[389,[12,361]]]],[[368,386],[[389,[12,361]]]],[[[379,[-1]],386],[[389,[12,361]]],393],[[392,371],[[389,[12,361]]]],[[360,371],[[389,[12,361]]]],[[368,371],[[389,[12,361]]]],[[[379,[-1]],371],[[389,[12,361]]],393],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[378,[-1,-2]],-3],11,71,71,74],[[385,-1],11,74],[[386,-1],11,74],[[371,-1],11,74],[[387,-1],11,74],[360,394],[368,394],[[[379,[-1]]],395,[]],[[360,386],[[389,[12,361]]]],[[360,371],[[389,[12,361]]]],[[368,371],[[389,[12,361]]]],[[368,386],[[389,[12,361]]]],[[[379,[-1]],371],-1,[]],[369,[[186,[44]]]],[370,[[186,[44]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[366,396],[360,397],[368,397],[368,397],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[378,[-1,-2]]],35,[],[]],[368,35],[369,35],[370,35],[[384,398],35],[383,35],[[384,398],35],[383,35],[366,396],[367,396],[360,397],[368,397],[369,399],[370,399],[[[379,[-1]]],[[400,[-1]]],[]],[380,401],[360,402],[368,402],0,0,[360,[[67,[[11,[[389,[12,361]],[162,[12]]]]]]]],[368,[[67,[[11,[[389,[12,361]],[162,[12]]]]]]]],[369,44],[370,44],0,[[[162,[12]],44],391],[[],360],[[],369],[[366,387],[[67,[387]]]],[[367,387],[[67,[387]]]],[[366,387],387],[[367,387],387],[[],-1,[]],[[],-1,[]],[[],-1,[]],[390,44],[391,44],[360,44],[368,44],[386,44],[371,44],[383,383],0,0,[[[379,[-1]]],[[403,[-1]]],393],[[366,[162,[-1]],[162,[-2]]],[[404,[-1,-2]]],[],[]],0,0,0,[393,[[389,[12,361]]]],[[369,44,44,44],11],[360,[[406,[405]]]],[368,[[406,[405]]]],[[],[[407,[373]]]],0,[[[378,[-1,-2]]],-1,32,[]],[383,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[386,44],[371,44],[387,44],0,[[[378,[[389,[12,361]],[389,[12,361]]]],-1],[[378,[[389,[12,361]],[389,[12,361]]]]],[[408,[12]]]],[[360,-1],360,[[408,[12]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,360],[[44,44,44],369],[[[378,[-1,-2]]],[[378,[[389,[12,361]],[389,[12,361]]]]],393,393],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[409,[389,[12,361]],12,385,[162,[12]]],11],[[[374,[-1]],[389,[12,361]],12,385],11,409],[[409,[389,[12,361]],[410,[12,361]],[411,[12]],385,[162,[12]]],11],[[[374,[-1]],[389,[12,361]],[410,[12,361]],[411,[12]],385],11,409],[[409,[412,[12]],[162,[12]]],[[11,[371,371]]]],[[[374,[-1]],[412,[12]]],[[11,[371,371]]],409],[[409,[389,[12,361]],[162,[12]]],371],[[[374,[-1]],[389,[12,361]]],371,409],[[409,[379,[[389,[12,361]]]],[162,[12]]],11],[[413,[379,[[389,[12,361]]]]],11],[[[374,[-1]],[379,[[389,[12,361]]]]],11,409],[[409,[414,[12,361]],385,[162,[12]]],11],[[[374,[-1]],[414,[12,361]],385],11,409],[[409,[414,[12,361]],415,385,[162,[12]]],11],[[[374,[-1]],[414,[12,361]],415,385],11,409],[[[407,[-1]],[389,[12,361]],[410,[12,361]],[411,[12]],[411,[12]]],11,409],[[413,[410,[12,361]],[411,[12]],377,[389,[12,361]]],11],[[[407,[-1]],[410,[12,361]],[411,[12]],377,[389,[12,361]]],11,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[409,[389,[12,361]],[162,[12]]],371],[[[416,[-1]],[389,[12,361]],[162,[12]]],371,409],[[[417,[-1,-2]],[389,[12,361]],[162,[12]]],371,409,[[408,[12]]]],[[[374,[-1]],[389,[12,361]],[162,[12]]],371,409],[[[374,[-1]],[389,[12,361]]],371,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[419,[],[[418,[-1]]]]],-1,[]],[[[416,[-1]]],[],[419,409]],[[[416,[-1]]],[],419],[[[417,[-1,-2]]],[],419,[]],[[[407,[-1]]],[],[409,419]],[[[407,[-1]]],[],[419,409]],[[[374,[-1]]],[],[409,419]],[[[374,[-2]]],-1,[],[[419,[],[[418,[-1]]]],409]],[415,415],[[[374,[-1]]],[[374,[-1]]],[32,409]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[413,11],[409,11],[[[407,[-1]]],11,409],[[[407,[-1]]],11,409],[[[374,[-1]]],11,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[409,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]],[389,[12,361]],[389,[12,361]]],11],[[[416,[-1]],[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409],[[[417,[-1,-2]],[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409,[[408,[12]]]],[[[407,[-1]],[389,[12,361]],[389,[12,361]],[389,[12,361]]],371,409],[[[407,[-1]],[389,[12,361]],[389,[12,361]],[389,[12,361]]],11,409],[[[374,[-1]],[389,[12,361]],[389,[12,361]],[389,[12,361]]],371,409],[[[374,[-1]],[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409],[[[407,[-1]]],[[389,[12,361]]],409],[[],415],[[],[[374,[-1]]],[409,42]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[409,35],11],[[[416,[-1]],35],11,409],[[[417,[-1,-2]],35],11,409,[[408,[12]]]],[[[374,[-1]],35],11,409],[[[374,[-1]],35],11,409],[[415,415],35],[[[374,[-1]],[374,[-1]]],35,[48,409]],[[409,[378,[[11,[[389,[12,361]],[162,[12]]]],[389,[12,361]]]]],11],[[[374,[373]],[162,[368]]],11],[[409,12],[[416,[409]]]],[[[407,[-1]],12],[[407,[[416,[-1]]]]],409],[[[374,[-1]],12],[[374,[[416,[-1]]]]],409],[[415,51],[[53,[11,52]]]],[[415,51],[[53,[11,52]]]],[[[374,[-1]],51],[[53,[11,52]]],[57,409]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[[374,[-1]],-2],11,[71,409],74],[[413,12],11],[[[407,[-1]],12],11,409],[[],44],[[],44],[[],44],[[],44],[[],44],[[[374,[-1]]],-1,409],[[[374,[-1]]],-1,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[374,[-1]]],-1,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[409,[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]]],11],[[[416,[-1]],[389,[12,361]],[162,[12]]],371,409],[[[417,[-1,-2]],[389,[12,361]],[162,[12]]],371,409,[[408,[12]]]],[[[407,[-1]],[389,[12,361]]],11,409],[[[407,[-1]],[389,[12,361]]],371,409],[[[374,[-1]],[389,[12,361]]],371,409],[[[374,[-1]],[389,[12,361]],[162,[12]]],371,409],[[413,[389,[12,361]]],11],[[[407,[-1]],[389,[12,361]]],371,409],[[[407,[-1]],[389,[12,361]]],11,409],[[-1,12],[[416,[-1]]],409],[[-1,-2],[[417,[-1,-2]]],[],[]],[-1,[[407,[-1]]],409],[12,415],[[],[[374,[-1]]],[42,409]],[[],-1,[]],[[],-1,[]],[409,44],[[[416,[-1]]],44,409],[[[417,[-1,-2]]],44,409,[[408,[12]]]],[[[374,[-1]]],44,409],[[415,415],[[67,[82]]]],[[409,[378,[[389,[12,361]],[389,[12,361]]]],[162,[12]]],11],[[[374,[-1]],[378,[[389,[12,361]],[389,[12,361]]]]],11,409],[[409,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]],[389,[12,361]]],11],[[[416,[-1]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409],[[[417,[-1,-2]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409,[[408,[12]]]],[[[407,[-1]],[389,[12,361]],[389,[12,361]]],11,409],[[[407,[-1]],[389,[12,361]],[389,[12,361]]],371,409],[[[374,[-1]],[389,[12,361]],[389,[12,361]]],371,409],[[[374,[-1]],[389,[12,361]],[389,[12,361]],[162,[12]]],371,409],[[413,[410,[12,361]],[411,[12]],377,[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]],[411,[12]],377,[410,[12,361]]],11,409],[[413,[410,[12,361]],[410,[12,361]],[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]],[410,[12,361]],[410,[12,361]]],11,409],[[413,12],11],[[[407,[-1]],12],11,409],[[413,[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]]],11,409],[[413,[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]]],11,409],[[413,[410,[12,361]],[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]],[410,[12,361]]],11,409],[[413,12],11],[[[407,[-1]],12],11,409],[[409,44,44],11],[[413,44,44],11],[[[416,[-1]],44,44],11,409],[[[417,[-1,-2]],44,44],11,409,[[408,[12]]]],[[[407,[-1]],44,44],11,409],[[[407,[-1]],44,44],11,409],[[[374,[-1]],44,44],11,409],[[[374,[-1]],44,44],11,409],[[[416,[-1]],12],11,409],[[[417,[-1,-2]],-2],11,[],[]],[[[407,[[417,[-1,-2]]]],-2],11,409,[[408,[12]]]],[[413,[389,[12,361]],[389,[12,361]]],11],[[[407,[-1]],[389,[12,361]],[389,[12,361]]],11,409],[[413,[389,[12,361]]],11],[[[407,[-1]],[389,[12,361]]],11,409],[[413,[410,[12,361]],[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]],[410,[12,361]]],11,409],[[413,[410,[12,361]]],11],[[[407,[-1]],[410,[12,361]]],11,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],0,0,[[409,-1],[[417,[409,-1]]],[[408,[12]]]],[[[407,[-1]],-2],[[407,[[417,[-1,-2]]]]],409,[[408,[12]]]],[[[374,[-1]],-2],[[374,[[417,[-1,-2]]]]],409,[[408,[12]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[413,12],11],[[[407,[-1]],12],11,409],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[44,44],[[374,[-1]]],[42,409]],[409,[[407,[409]]]],[[[374,[-1]]],[[407,[-1]]],409],[-1,[[374,[-1]]],409],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[372,371],387],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[372,366],[[[404,[-1,-2]]],[[404,[-1,-2]]],32,32],[372,372],[[[388,[-1,-2]]],[[388,[-1,-2]]],32,32],[396,396],[[[420,[-1,-2]]],[[420,[-1,-2]]],32,32],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[372,386,386,371],387],[[],372],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[372,35],[[67,[387]]]],[[[404,[-1,-2]]],[[388,[-1,-2]]],[],[]],[[[404,[-1,-2]],51],[[53,[11,52]]],57,57],[[372,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[404,[-1,-2]],386],[[389,[12,361]]],393,393],[[[404,[-1,-2]],371],[[389,[12,361]]],393,393],[[[404,[-1,-2]],371],-1,[],[]],[[[404,[-1,-2]],386],-2,[],[]],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[404,[-1,-2]]],396,[],[]],[[372,371],387],[[],372],[[[388,[-1,-2]]],[[67,[[378,[-1,-2]]]]],[],[]],[396,[[67,[[378,[371,386]]]]]],[[[420,[-1,-2]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],393,393],[[],-1,[]],[[[388,[-1,-2]]],[[420,[-1,-2]]],393,393],[[372,386,371],387],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,372],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[421,[-1]]],-1,422],0,[[[423,[-1]]],[[412,[-1]]],422],[[[423,[-1]]],[[412,[-1]]],422],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[411,[-1]],[411,[-1]]],[[411,[-1]]],[[9,[],[[8,[]]]]]],[[[411,[-1]],[411,[-1]]],[[411,[-1]]],[80,[9,[],[[8,[]]]]]],[[[411,[-1]],[411,[-1]]],11,424],[[[426,[],[[425,[-1]]]],-1],[[426,[],[[425,[-1]]]]],422],[[[427,[-1]],-1],[[427,[-1]]],422],[[[427,[-1]],-1],[[427,[-1]]],422],[[[428,[-1]],-1],[[428,[-1]]],422],[[[428,[-1]],-1],[[428,[-1]]],422],[[[412,[-1]],-1],[[412,[-1]]],422],[[[412,[-1]],-1],[[412,[-1]]],422],[[[429,[-1]],-1],[[429,[-1]]],422],[[[429,[-1]],-1],[[429,[-1]]],422],0,[[[411,[-1]],[411,[-1]]],[[411,[-1]]],[[430,[],[[8,[]]]],[125,[],[[8,[]]]],[9,[],[[8,[]]]],[79,[],[[8,[]]]],431,432,80]],[[],-1,433],[[[411,[-1]],[411,[-1]],-1],35,[]],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[421,[-1]]],-1,422],0,[[[423,[-1]]],[[412,[-1]]],422],[[[428,[-1]]],[[412,[-1]]],422],[[[429,[-1]]],[[412,[-1]]],422],[[[423,[-1]]],[[412,[-1]]],422],[[[426,[],[[425,[-1]]]],-1],[[426,[],[[425,[-1]]]]],422],[[[427,[-1]],-1],[[427,[-1]]],422],[[[427,[-1]],-1],[[427,[-1]]],422],[[[428,[-1]],-1],[[428,[-1]]],422],[[[428,[-1]],-1],[[428,[-1]]],422],[[[412,[-1]],-1],[[412,[-1]]],422],[[[412,[-1]],-1],[[412,[-1]]],422],[[[429,[-1]],-1],[[429,[-1]]],422],[[[429,[-1]],-1],[[429,[-1]]],422],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[427,[-1]]],[[414,[-1,361]]],422],[[[428,[-1]]],[[414,[-1,361]]],422],[[[412,[-1]]],[[414,[-1,361]]],422],[[[429,[-1]]],[[414,[-1,361]]],422],[[[423,[-1]]],[[414,[-1,361]]],422],[[[427,[-1]]],[[11,[-1,-1]]],422],[[[428,[-1]]],[[11,[-1,-1]]],422],[[[429,[-1]]],[[11,[-1,-1]]],422],[[[423,[-1]]],[[11,[-1,-1]]],422],[[[427,[-1]]],[[11,[-1,-1]]],422],[[[428,[-1]]],[[11,[-1,-1]]],422],[[[429,[-1]]],[[11,[-1,-1]]],422],[[[423,[-1]]],[[11,[-1,-1]]],422],[[[429,[-1]]],[[423,[-1]]],422],[[[421,[-1]]],-1,422],0,[[[423,[-1]]],[[412,[-1]]],422],[[[411,[-1]]],[[411,[-2]]],[434,80],434],[[[423,[-1]]],[[412,[-1]]],422],0,[[[389,[-1,361]],-1],[[427,[-1]]],422],[[[412,[-1]],[414,[-1,361]]],[[67,[[412,[-1]]]]],422],[[[412,[-1]],[186,[-1]]],[[67,[[412,[-1]]]]],422],[[[412,[-1]],[186,[-1]]],[[67,[[412,[-1]]]]],422],[[[427,[-1]]],[[427,[-1]]],32],[[[435,[-1]]],[[435,[-1]]],32],[[[428,[-1]]],[[428,[-1]]],32],[[[412,[-1]]],[[412,[-1]]],32],[[[436,[-1]]],[[436,[-1]]],32],[[[421,[-1]]],[[421,[-1]]],32],[[[429,[-1]]],[[429,[-1]]],32],[[[423,[-1]]],[[423,[-1]]],32],[[[411,[-1]]],[[411,[-1]]],32],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[412,[-1]],[389,[-1,361]]],[[389,[-1,361]]],422],[[[429,[-1]],[389,[-1,361]]],-1,422],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[423,[-1]],[389,[-1,361]]],35,422],[[[412,[-1]],[412,[-1]]],35,422],0,0,0,0,[[[428,[-1]],[428,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[428,[-1]],[428,[-1]]],[[437,[[11,[-1,-1]]]]],422],[[],[[411,[-1]]],42],[-1,[[411,[-1]]],438],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[426,[],[[425,[-1]]]],-1],[[410,[-1,361]]],422],[[[427,[-1]],-1],[[410,[-1,361]]],422],[[[428,[-1]],-1],[[410,[-1,361]]],422],[[[428,[-1]],-1],[[410,[-1,361]]],422],[[[412,[-1]],-1],[[410,[-1,361]]],422],[[[429,[-1]],-1],[[410,[-1,361]]],422],[[[429,[-1]],-1],[[410,[-1,361]]],422],[[[412,[-1]],[389,[-1,361]]],-1,422],[[[436,[-1]],[389,[-1,361]]],-1,422],[[[421,[-1]],[389,[-1,361]]],-1,422],[[[429,[-1]],[389,[-1,361]]],-1,422],[[[411,[-1]],-1],[[411,[-1]]],[[439,[],[[8,[]]]]]],[[[411,[-1]],[411,[-1]]],-1,[[439,[],[[8,[]]]]]],[[[411,[-1]],-1],11,440],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[428,[-1]],-1,[389,[-1,361]]],[[428,[-1]]],422],[[[429,[-1]],-1,[389,[-1,361]]],[[429,[-1]]],422],[[[428,[-1]],-1,[389,[-1,361]],-1],[[428,[-1]]],422],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[427,[-1]]],[[411,[-1]]],422],[422,422],[[[427,[-1]],[427,[-1]]],35,48],[[[435,[-1]],[435,[-1]]],35,48],[[[428,[-1]],[428,[-1]]],35,48],[[[412,[-1]],[412,[-1]]],35,48],[[[421,[-1]],[421,[-1]]],35,48],[[[429,[-1]],[429,[-1]]],35,48],[[[423,[-1]],[423,[-1]]],35,48],[[[411,[-1]],[411,[-1]]],35,48],[[[436,[-1]]],[[421,[-1]]],422],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[427,[-1]]],[[414,[-1,361]]],422],[[[428,[-1]]],[[414,[-1,361]]],422],[[[429,[-1]]],[[414,[-1,361]]],422],[[[427,[-1]]],[[11,[-1,-1]]],422],[[[428,[-1]]],[[11,[-1,-1]]],422],[[[429,[-1]]],[[11,[-1,-1]]],422],[[[427,[-1]]],[[11,[-1,-1]]],422],[[[428,[-1]]],[[11,[-1,-1]]],422],[[[429,[-1]]],[[11,[-1,-1]]],422],[[[428,[-1]]],[[11,[[421,[-1]],[421,[-1]]]]],422],[[[429,[-1]]],[[11,[[421,[-1]],[421,[-1]]]]],422],0,[[[427,[-1]],-1],[[441,[-1]]],422],[[[428,[-1]],-1],[[442,[-1]]],422],[[[429,[-1]],-1],[[443,[-1]]],422],[[[429,[-1]],-1],[[444,[-1]]],422],[[[429,[-1]],-1],-1,422],[[[426,[],[[425,[-1]]]]],[[426,[],[[425,[-1]]]]],422],[[[427,[-1]]],[[427,[-1]]],422],[[[427,[-1]]],[[427,[-1]]],422],[[[428,[-1]]],[[428,[-1]]],422],[[[428,[-1]]],[[428,[-1]]],422],[[[412,[-1]]],[[412,[-1]]],422],[[[412,[-1]]],[[412,[-1]]],422],[[[429,[-1]]],[[429,[-1]]],422],[[[429,[-1]]],[[429,[-1]]],422],[[[427,[-1]],51],[[53,[11,52]]],57],[[[435,[-1]],51],[[53,[11,52]]],57],[[[428,[-1]],51],[[53,[11,52]]],57],[[[412,[-1]],51],[[53,[11,52]]],57],[[[436,[-1]],51],[[53,[11,52]]],57],[[[421,[-1]],51],[[53,[11,52]]],57],[[[429,[-1]],51],[[53,[11,52]]],57],[[[423,[-1]],51],[[53,[11,52]]],57],[[[411,[-1]],51],[[53,[11,52]]],57],[[[427,[-1]],-2],11,422,[[202,[[428,[-1]]]]]],[[[435,[-1]],-2],11,422,[[202,[[428,[-1]]]]]],[[[427,[-1]],-1,-2],11,422,[[202,[[412,[-1]]]]]],[[[435,[-1]],-1,-2],11,422,[[202,[[412,[-1]]]]]],[[[428,[-1]],-1,-2],11,422,[[202,[[412,[-1]]]]]],[[[429,[-1]],-1,-2],11,422,[[202,[[412,[-1]]]]]],[[[426,[],[[425,[-1]]]],-1,202],11,422],[[[427,[-1]],202],11,422],[[[427,[-1]],-1,-2],11,422,[[202,[[412,[-1]],[186,[-1]]]]]],[[[435,[-1]],-1,-2],11,422,[[202,[[412,[-1]],[186,[-1]]]]]],[[[428,[-1]],-1,-2],11,422,[[202,[[412,[-1]],[186,[-1]]]]]],[[[428,[-1]],202],11,422],[[[412,[-1]],202],11,422],[[[429,[-1]],-1,-2],11,422,[[202,[[412,[-1]],[186,[-1]]]]]],[[[429,[-1]],202],11,422],[[[428,[-1]],-2],11,422,[[202,[-1]]]],[[[427,[-1]],-2],11,422,[[202,[-1]]]],[[[428,[-1]],-2],11,422,[[202,[-1]]]],[[[427,[-1]],-2],11,422,[[202,[-1]]]],[[[428,[-1]],-2],11,422,[[202,[-1]]]],[[[428,[-1]],-2],11,422,[[202,[[428,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[429,[-1]]]]]],[[[428,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[[427,[-1]],-2],11,422,[[202,[[429,[-1]]]]]],[[[435,[-1]],-2],11,422,[[202,[[429,[-1]]]]]],[[[428,[-1]],-1,-2],11,422,[[202,[[429,[-1]]]]]],[[[427,[-1]],-2],11,422,[[202,[[429,[-1]],[186,[-1]]]]]],[[[435,[-1]],-2],11,422,[[202,[[429,[-1]],[186,[-1]]]]]],[[[428,[-1]],-1,-2],11,422,[[202,[[429,[-1]],[186,[-1]]]]]],[[[428,[-1]],-2],11,422,[[202,[[428,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[429,[-1]]]]]],[[[428,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[[428,[-1]],-2],11,422,[[202,[[428,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[429,[-1]]]]]],[[[428,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[[429,[-1]],-2],11,422,[[202,[[186,[-1]]]]]],[[],[[411,[-1]]],[432,[9,[],[[8,[]]]]]],[[],[[411,[-1]]],[432,[9,[],[[8,[]]]]]],[[],[[411,[-1]]],[432,[9,[],[[8,[]]]]]],[[[426,[],[[425,[-1]]]]],[[389,[-1,361]]],422],[[[427,[-1]]],[[389,[-1,361]]],422],[-1,-1,[]],[[[435,[-1]]],[[427,[-1]]],422],[[[427,[-1]]],[[389,[-1,361]]],422],[-1,-1,[]],[[[428,[-1]]],[[389,[-1,361]]],422],[[[428,[-1]]],[[389,[-1,361]]],422],[-1,-1,[]],[[[412,[-1]]],[[389,[-1,361]]],422],[[[412,[-1]]],[[389,[-1,361]]],422],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[429,[-1]]],[[389,[-1,361]]],422],[[[429,[-1]]],[[389,[-1,361]]],422],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[435,[-1]]],[[427,[-1]]],422],[[[411,[-1]]],-1,[]],[[[427,[-1]],-1],[[411,[-1]]],422],[[-1,-2],70,[71,72],73],[[[411,[-1]],-2],11,71,74],0,[[[412,[-1]],-1],[[67,[[389,[-1,361]]]]],422],[[[412,[-1]],-1],[[67,[-1]]],422],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[[412,[-1]],[412,[-1]]],[[67,[[389,[-1,361]]]]],422],[[[436,[-1]],[436,[-1]]],[[67,[[389,[-1,361]]]]],422],[[[412,[-1]],[412,[-1]]],[[67,[[11,[-1,-1]]]]],422],[[[412,[-1]],[412,[-1]]],35,422],[[[423,[-1]],[423,[-1]]],35,422],[[[436,[-1]],[414,[-1,361]]],35,422],[[[412,[-1]],[436,[-1]]],35,422],[[[423,[-1]],[412,[-1]]],35,422],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[421,[-1]]],[[421,[-1]]],422],[[[429,[-1]],-1],35,422],[[[411,[-1]]],35,45],[[[421,[-1]]],35,422],[[[428,[-1]],-1],35,422],[[[429,[-1]],-1],35,422],[[[428,[-1]]],35,422],[[[429,[-1]]],35,422],[[[428,[-1]],-1],35,422],[[[435,[-1]]],35,422],[[[421,[-1]]],35,422],[[[428,[-1]]],35,422],[[[429,[-1]]],35,422],[[[428,[-1]]],35,422],[[[429,[-1]]],35,422],0,[[[412,[-1]]],-1,422],[[[429,[-1]]],-1,422],[[[411,[-1]],[411,[-1]],-1],[[411,[-1]]],[[430,[],[[8,[]]]],[125,[],[[8,[]]]],[9,[],[[8,[]]]],[79,[],[[8,[]]]],431,432,80]],[[[412,[-1]],[436,[-1]]],[[67,[[389,[-1,361]]]]],422],[[[412,[-1]],[436,[-1]]],[[67,[-1]]],422],[[[428,[-1]],[436,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[429,[-1]],[436,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[428,[-1]],[436,[-1]]],[[437,[-1]]],422],[[[429,[-1]],[436,[-1]]],[[437,[-1]]],422],[[[428,[-1]],[412,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[429,[-1]],[412,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[428,[-1]],[412,[-1]]],[[437,[[11,[-1,-1]]]]],422],[[[429,[-1]],[412,[-1]]],[[437,[[11,[-1,-1]]]]],422],[[[429,[-1]]],[[67,[-1]]],422],[[[429,[-1]]],[[67,[-1]]],422],0,0,0,0,0,0,0,[[[412,[-1]]],[[389,[-1,361]]],422],0,[[[411,[-1]],-1],[[411,[-1]]],[[79,[],[[8,[]]]]]],[[[411,[-1]],-1],11,445],[[[411,[-1]]],[[411,[-1]]],[[446,[],[[8,[]]]]]],[[-1,-1,-1],[[421,[-1]]],422],[[[421,[-1]]],[[410,[-1,361]]],422],[[],-1,[]],[[[428,[-1]],-1],65,422],[[[421,[-1]],-1],[[421,[-1]]],422],[[[412,[-1]],[436,[-1]]],35,422],[[[412,[-1]],[412,[-1]]],35,422],[[[421,[-1]],[389,[-1,361]]],[[421,[-1]]],422],[[[411,[-1]],[411,[-1]]],[[67,[82]]],236],[[],[[411,[-1]]],[432,[9,[],[[8,[]]]]]],[[-1,-1],[[389,[-1,361]]],[]],0,[[[411,[-1]]],[[411,[-1]]],[[125,[],[[8,[]]]],[430,[],[[8,[]]]],[9,[],[[8,[]]]],447,432,236,80]],[[[421,[-1]],[389,[-1,361]]],[[389,[-1,361]]],422],0,[[[428,[-1]],[429,[-1]]],[[437,[[389,[-1,361]]]]],422],[[[428,[-1]],[429,[-1]]],[[437,[[11,[-1,-1]]]]],422],[-1,[[411,[-1]]],[]],0,0,0,[[[426,[],[[425,[-1]]]],-1],[[389,[-1,361]]],422],[[[427,[-1]],-1],[[389,[-1,361]]],422],[[[427,[-1]],-1],[[389,[-1,361]]],422],[[[428,[-1]],-1],[[389,[-1,361]]],422],[[[428,[-1]],-1],[[389,[-1,361]]],422],[[[412,[-1]],-1],[[389,[-1,361]]],422],[[[412,[-1]],-1],[[389,[-1,361]]],422],[[[429,[-1]],-1],[[389,[-1,361]]],422],[[[429,[-1]],-1],[[389,[-1,361]]],422],[[[427,[-1]],-1],[[410,[-1,361]]],422],[[[412,[-1]],-1],11,422],[[[411,[-1]]],[[411,[-1]]],[[125,[],[[8,[]]]],[430,[],[[8,[]]]],[9,[],[[8,[]]]],447,432,236,80]],[[[436,[-1]],[389,[-1,361]]],-1,422],[[[421,[-1]],[389,[-1,361]]],-1,422],[[[411,[-1]]],[[11,[-1,-1]]],448],[[-1,-1],[[449,[-1,361]]],[]],[[[428,[-1]],-1],[[437,[-1]]],422],[[[412,[-1]],-1],-1,422],[[[428,[-1]],-1],[[437,[-1]]],422],[[[412,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[421,[-1]],-1],[[67,[-1]]],422],[[[412,[-1]],-1],-1,422],[[[421,[-1]],-1],[[67,[-1]]],422],[[[426,[],[[425,[-1]]]],-1],[[11,[[426,[],[[425,[-1]]]],[426,[],[[425,[-1]]]]]]],422],[[[427,[-1]],-1],[[11,[[427,[-1]],[427,[-1]]]]],422],[[[427,[-1]],-1],[[11,[[427,[-1]],[427,[-1]]]]],422],[[[428,[-1]],-1],[[11,[[428,[-1]],[428,[-1]]]]],422],[[[428,[-1]],-1],[[11,[[428,[-1]],[428,[-1]]]]],422],[[[412,[-1]],-1],[[11,[[412,[-1]],[412,[-1]]]]],422],[[[412,[-1]],-1],[[11,[[412,[-1]],[412,[-1]]]]],422],[[[429,[-1]],-1],[[11,[[429,[-1]],[429,[-1]]]]],422],[[[429,[-1]],-1],[[11,[[429,[-1]],[429,[-1]]]]],422],[[[412,[-1]],-1],[[11,[[412,[-1]],[412,[-1]]]]],422],[[[426,[],[[425,[-1]]]],[186,[-1]]],[[426,[],[[425,[-1]]]]],422],[[[427,[-1]],[186,[-1]]],[[427,[-1]]],422],[[[427,[-1]],[186,[-1]]],[[427,[-1]]],422],[[[428,[-1]],[186,[-1]]],[[428,[-1]]],422],[[[428,[-1]],[186,[-1]]],[[428,[-1]]],422],[[[412,[-1]],[186,[-1]]],[[412,[-1]]],422],[[[412,[-1]],[186,[-1]]],[[412,[-1]]],422],[[[429,[-1]],[186,[-1]]],[[429,[-1]]],422],[[[429,[-1]],[186,[-1]]],[[429,[-1]]],422],[[[412,[-1]],[389,[-1,361]]],-1,422],[[[436,[-1]],[389,[-1,361]]],-1,422],[[[429,[-1]],[389,[-1,361]]],-1,422],[[[412,[-1]]],-1,422],0,[[[411,[-1]],[411,[-1]]],[],[[125,[],[[8,[]]]]]],[[[411,[-1]],[411,[-1]]],11,450],[-2,[[411,[-1]]],[9,80,447],[[187,[],[[16,[[411,[-1]]]]]]]],[-2,[[411,[-1]]],[9,447],[[187,[],[[16,[[411,[-1]]]]]]]],0,0,[[[421,[-1]]],[[410,[-1,361]]],422],[[[426,[],[[425,[-1]]]]],[[389,[-1,361]]],422],[[[427,[-1]]],[[389,[-1,361]]],422],[[[427,[-1]]],[[389,[-1,361]]],422],[[[428,[-1]]],[[389,[-1,361]]],422],[[[428,[-1]]],[[389,[-1,361]]],422],[[[412,[-1]]],[[389,[-1,361]]],422],[[[412,[-1]]],[[389,[-1,361]]],422],[[[429,[-1]]],[[389,[-1,361]]],422],[[[429,[-1]]],[[389,[-1,361]]],422],0,0,0,0,[[[435,[-1]]],[[427,[-1]]],422],[[[429,[-1]]],[[428,[-1]]],422],[[[411,[-1]]],-1,438],[[[428,[-1]]],[[428,[12]]],422],[[[412,[-1]]],[[412,[12]]],422],[[[436,[-1]]],[[436,[12]]],422],[[[429,[-1]]],[[429,[12]]],422],[[[411,[-1]]],[[411,[12]]],[434,80]],[[[428,[-1]]],[[428,[66]]],422],[[[412,[-1]]],[[412,[66]]],422],[[[436,[-1]]],[[436,[66]]],422],[[[429,[-1]]],[[429,[66]]],422],[[[411,[-1]]],[[411,[66]]],[434,80]],[[[412,[-1]]],[[436,[-1]]],422],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[428,[-1]]],[[429,[-1]]],422],[[[428,[-1]]],-1,422],[[[427,[-1]]],[[435,[-1]]],422],[[[412,[-1]]],[[410,[-1,361]]],422],0,[[[423,[-1]],-2],[[423,[-1]]],422,[[408,[-1]]]],[[[428,[-1]],-2],[[428,[-1]]],422,[[408,[-1]]]],[[[412,[-1]],-2],[[412,[-1]]],422,[[408,[-1]]]],[[[429,[-1]],-2],[[429,[-1]]],422,[[408,[-1]]]],[[[412,[-1]],[410,[-1,361]]],[[412,[-1]]],422],[[[411,[-1]]],[[67,[[411,[-2]]]]],[434,80],434],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[[],[[411,[-1]]],[432,[9,[],[[8,[]]]]]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[12,422],[[-1,-1],[[410,[-1,361]]],[]],0,[[[412,[-1]],-1],[[67,[[389,[-1,361]]]]],422],[[[412,[-1]],-1],[[67,[-1]]],422],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[426,[],[[425,[-1]]]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],0,0,0,[[[428,[-1]]],-1,422],[[[429,[-1]]],-1,422],[[[428,[-1]]],-1,422],[[[429,[-1]]],-1,422],0,0,[[[426,[],[[425,[-1]]]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[427,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[428,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[412,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],[[[429,[-1]],-1],-1,422],0,0,0,[[[428,[-1]]],-1,422],[[[429,[-1]]],-1,422],[[[428,[-1]]],-1,422],[[[429,[-1]]],-1,422],[[],[[411,[-1]]],447],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],0,[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[441,[-1]]],[[67,[[389,[-1,361]]]]],422],0,0,0,0,0,0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[437,[-1]]],[[162,[-1]]],[]],[[[437,[-1]]],[],[]],[[[437,[-1]]],[[162,[-1]]],[]],[451,130],[[[437,[-1]]],[],[]],[[[437,[-1]]],[[162,[-1]]],[]],[451,130],[[[437,[-1]]],[[162,[-1]]],[]],[451,130],[[[437,[-1]]],[[162,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[451,130],[-1,-2,[],[]],[-1,-2,[],[]],[[[437,[-1]]],[[162,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[451,130],[-1,-2,[],[]],[[[437,[-1]]],44,[]],[451,44],[[[437,[-1]]],11,[]],[451,11],[[[437,[-1]]],[[437,[-1]]],32],[[[452,[-1]]],[[452,[-1]]],32],[451,451],[[[453,[-1]]],[[453,[-1]]],32],[[[437,[-1]],[437,[-1]]],11,32],[[451,451],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[437,[-1]],[437,[-1]]],82,233],[[451,451],82],[[[453,[-1]],[453,[-1]]],82,233],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[437,[-1]]],[]],[[],451],[44,-1,[]],[[[437,[-1]]],[],[]],[44,-1,[]],[44,-1,[]],[451,130],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[437,[-1]]],[],[]],[44,-1,[]],[44,-1,[]],[451,130],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[437,[-1]],-2],[[454,[-1]]],[],[[455,[44]]]],[44,11],[[[437,[-1]]],11,[]],[[[452,[-1]]],11,[]],[44,11],[[[454,[-1]]],11,[]],[44,11],[44,11],[44,11],[[[453,[-1]]],-1,[]],[-1,-2,[],[[168,[167]]]],[-1,-2,[],[[168,[167]]]],[[[437,[-1]],[162,[-1]]],35,48],[[[437,[-1]],[437,[-1]]],35,48],[[451,451],35],[[451,130],35],[[[453,[-1]],[453,[-1]]],35,48],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[437,[-1]],-2],11,[],[[17,[],[[16,[-1]]]]]],[[[437,[62]]],[[53,[11,81]]]],[[[437,[-1]],51],[[53,[11,52]]],57],[[[452,[-1]],51],[[53,[11,52]]],57],[[451,51],[[53,[11,52]]]],[[451,51],[[53,[11,52]]]],[[[453,[-1]],51],[[53,[11,52]]],[]],[[[453,[-1]],51],[[53,[11,52]]],[]],[[[15,[-1]]],[[437,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[130,[[53,[451,[453,[130]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[15,[62]]],[[53,[451,456]]]],[-2,[[437,[-1]]],[],[[17,[],[[16,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[53,[451]]]],[[[437,[-1]],[437,[-1]]],35,236],[[451,451],35],[[451,130],35],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[437,[-1]],[437,[-1]]],35,236],[[451,130],35],[[451,451],35],[[[437,[-1]],-2],11,71,74],[[451,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[[437,[-1]],44,-1],11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[437,[-1]]],[[53,[[15,[-1]],[437,[-1]]]]],[]],[[[437,[-1]]],[[15,[-1]]],[]],[[[437,[-1]]],[],[]],[[[437,[-1]]],[],[]],[[[437,[-1]]],[[452,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[437,[-1]]],35,[]],[451,35],[[[437,[-1]]],35,[]],[451,35],[[[437,[-1]],[437,[-1]]],35,236],[[451,451],35],[[451,130],35],[[[437,[-1]]],44,[]],[451,44],[-1,44,[]],[-1,62,[]],[[[437,[-1]],[437,[-1]]],35,236],[[451,451],35],[[451,130],35],[[],[[437,[-1]]],[]],[[],451],[-1,[[453,[-1]]],[]],[[],[[437,[-1]]],[]],[[],451],[[[452,[-1]]],67,[]],[[[454,[-1]]],67,[]],[[[452,[-1]]],67,[]],[[[454,[-1]]],67,[]],[[],-1,[]],[[],-1,[]],[[[437,[-1]],[437,[-1]]],[[67,[82]]],236],[[451,451],[[67,[82]]]],[[451,130],[[67,[82]]]],[[[453,[-1]],[453,[-1]]],[[67,[82]]],236],[[[437,[-1]]],[[67,[-1]]],[]],[451,[[67,[167]]]],[[[437,[-1]],44],[[67,[-1]]],[]],[[[437,[-1]],-1],11,[]],[[451,167],11],[[451,130],11],[[[437,[-1]],-1],11,[]],[[[437,[-1]]],44,[]],[451,44],[[[437,[-1]],44],-1,[]],[[451,44],167],[[[437,[-1]],-2],11,[],[[202,[-1],[[8,[35]]]]]],[[[437,[-1]],44],11,[]],[[451,44],11],[[[453,[-1]]],453,[]],[[[452,[-1]]],[[11,[44,[67,[44]]]]],[]],[[[454,[-1]]],[[11,[44,[67,[44]]]]],[]],[-1,62,[]],[[[437,[-1]],44],[[67,[-1]]],[]],[[[437,[-1]],44],-1,[]],[[[437,[-1]]],[[437,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[[[437,[-1]],44],11,[]],[[451,44],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[[[437,[-1]],[162,[-1]]],[[53,[11,453]]],80],[[[162,[-1]]],[[53,[[437,[-1]]]]],32],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[130,[[53,[451]]]],[457,[[53,[451]]]],[-1,[[53,[-2]]],[],[]],[[[437,[-1]],44,-1],[[53,[11,[453,[-1]]]]],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[[[437,[-1]],-1],[[53,[11,[453,[-1]]]]],[]],[[451,167],[[53,[11,[453,[167]]]]]],[[451,130],[[53,[11,[453,[130]]]]]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[437,[62]],[162,[62]]],[[53,[44,81]]]],[[-1,[162,[12]]],[[53,[11,81]]],[]],[[-1,[162,[66]]],[[53,[11,81]]],[]],[[-1,[162,[458]]],[[53,[11,81]]],[]],[[-1,66],[[53,[11,81]]],[]],[[-1,458],[[53,[11,81]]],[]],[[-1,[162,[68]]],[[53,[11,81]]],[]],[[-1,[162,[398]]],[[53,[11,81]]],[]],[[-1,398],[[53,[11,81]]],[]],[[-1,[162,[65]]],[[53,[11,81]]],[]],[[-1,[162,[62]]],[[53,[11,81]]],[]],[[-1,[162,[459]]],[[53,[11,81]]],[]],[[-1,65],[[53,[11,81]]],[]],[[-1,68],[[53,[11,81]]],[]],[[-1,219],[[53,[11,81]]],[]],[[-1,257],[[53,[11,81]]],[]],[[-1,459],[[53,[11,81]]],[]],[[-1,50],[[53,[11,81]]],[]],[[-1,[162,[50]]],[[53,[11,81]]],[]],[[-1,62],[[53,[11,81]]],[]],[[-1,12],[[53,[11,81]]],[]],[[-1,[162,[219]]],[[53,[11,81]]],[]],[[-1,[162,[70]]],[[53,[11,81]]],[]],[[-1,70],[[53,[11,81]]],[]],[[-1,[162,[257]]],[[53,[11,81]]],[]],[[-1,[162,[257]]],[[53,[11,81]]],[]],[[-1,[162,[62]]],[[53,[11,81]]],[]],[[-1,[162,[458]]],[[53,[11,81]]],[]],[[-1,459],[[53,[11,81]]],[]],[[-1,398],[[53,[11,81]]],[]],[[-1,458],[[53,[11,81]]],[]],[[-1,70],[[53,[11,81]]],[]],[[-1,62],[[53,[11,81]]],[]],[[-1,219],[[53,[11,81]]],[]],[[-1,12],[[53,[11,81]]],[]],[[-1,68],[[53,[11,81]]],[]],[[-1,[162,[219]]],[[53,[11,81]]],[]],[[-1,[162,[398]]],[[53,[11,81]]],[]],[[-1,[162,[50]]],[[53,[11,81]]],[]],[[-1,[162,[70]]],[[53,[11,81]]],[]],[[-1,257],[[53,[11,81]]],[]],[[-1,[162,[68]]],[[53,[11,81]]],[]],[[-1,66],[[53,[11,81]]],[]],[[-1,65],[[53,[11,81]]],[]],[[-1,[162,[65]]],[[53,[11,81]]],[]],[[-1,[162,[66]]],[[53,[11,81]]],[]],[[-1,[162,[12]]],[[53,[11,81]]],[]],[[-1,[162,[459]]],[[53,[11,81]]],[]],[[-1,50],[[53,[11,81]]],[]],[[451,167],[[53,[11,52]]]],[[-1,460,12],[[53,[11,81]]],[]],[[-1,460,66],[[53,[11,81]]],[]],[[-1,460,459],[[53,[11,81]]],[]],[[-1,460,398],[[53,[11,81]]],[]],[[-1,460,219],[[53,[11,81]]],[]],[[-1,460,68],[[53,[11,81]]],[]],[[-1,460,458],[[53,[11,81]]],[]],[[451,130],[[53,[11,52]]]],[[-1,460,257],[[53,[11,81]]],[]],[[-1,460,50],[[53,[11,81]]],[]],[[-1,460,65],[[53,[11,81]]],[]],[[-1,460,70],[[53,[11,81]]],[]],[[-1,460,62],[[53,[11,81]]],[]],[[],451],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[442,[-1]]],[[67,[[389,[-1,361]]]]],422],[[[442,[-1]]],[[11,[44,[67,[44]]]]],422],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[449,[-1,-2]]],[[449,[-1,-2]]],461,[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],461,[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],461,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],461,[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[],9,[]],[[[464,[-1,-2]],[464,[-1,-2]]],[],[9,80],[]],[[[389,[-1,-2]],[410,[-1,-2]]],[],9,[]],[[[389,[-1,-2]],[449,[-1,-2]]],[],9,[]],[[[465,[-1,-2]],[462,[-1,-2]]],[],9,[]],[[[465,[-1,-2]],[463,[-1,-2]]],[],9,[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[],9,[],[]],[[[467,[-1,-2]],[467,[-1,-2]]],[[467,[-1,-2]]],[[9,[],[[8,[]]]]],[]],[[[449,[-1,-2]],[449,[-1,-2]]],[],9,[]],[[[449,[-1,-2]],[449,[-1,-2]]],[[449,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[462,[-1,-2]],[462,[-1,-2]]],[],9,[]],[[[462,[-1,-2]],[462,[-1,-2]]],[[462,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[468,[-1,-2,-3]],[468,[-1,-3,-4]]],[],9,[],[],[]],[[[469,[-1,-2,-3]],[469,[-1,-3,-4]]],[],9,[],[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[],[9,80],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[],9,[]],[[[463,[-1,-2]],[463,[-1,-2]]],[],[9,80],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[],9,[]],[[[464,[-1,-2]],[464,[-1,-2]]],11,424,[]],[[[389,[-1,-2]],[449,[-1,-2]]],11,424,[]],[[[389,[-1,-2]],[410,[-1,-2]]],11,[80,[9,[],[[8,[]]]]],[]],[[[465,[-1,-2]],[463,[-1,-2]]],11,[80,[9,[],[[8,[]]]]],[]],[[[465,[-1,-2]],[462,[-1,-2]]],11,424,[]],[[[467,[-1,-2]],[467,[-1,-2]]],11,424,[]],[[[449,[-1,-2]],[449,[-1,-2]]],11,424,[]],[[[462,[-1,-2]],[462,[-1,-2]]],11,424,[]],[[[468,[-1,-2,-3]],[468,[-1,-3,-3]]],11,424,[],[]],[[[469,[-1,-2,-3]],[469,[-1,-3,-3]]],11,424,[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],11,[80,[9,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],11,[80,[9,[],[[8,[]]]]],[]],[[[389,[-1,-2]],[449,[-1,-2]]],[[389,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[465,[-1,-2]],[462,[-1,-2]]],[[465,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[470,35],[471,35],[[470,470],470],[[471,471],471],0,[[[410,[-1,-2]]],[[411,[-1]]],[438,80],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[411,[-1]]],[[125,[],[[8,[]]]],438,80,[79,[],[[8,[]]]],[9,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[411,[-1]]],[438,448],[]],[470,35],[471,35],[[],-1,433],[[],[[389,[-1,-2]]],[],[]],[[],[[465,[-1,-2]]],[],[]],[[],-1,[]],[[],-1,433],[[],-1,433],[[],[[410,[-1,-2]]],[],[]],[[],[[463,[-1,-2]]],[],[]],[[[362,[-1,-2,-3]],[362,[-1,-2,-3]]],35,[],[],[]],[[[472,[-1,-2,-3]],[472,[-1,-2,-3]]],35,[],[],[]],[[[464,[-1,-2]],[464,[-1,-2]],-1],35,[],[]],[[[389,[-1,-2]],[389,[-1,-2]],[389,[-1,-2]]],35,[],[]],[[[465,[-1,-2]],[465,[-1,-2]],[465,[-1,-2]]],35,[],[]],[[[473,[-1,-2,-3]],[473,[-1,-2,-3]],-1],35,[],[],[]],[[[362,[-1,-2,-3]],[362,[-1,-2,-3]],-1],35,[],[],[]],[[[362,[-1,-2,-3]],[362,[-1,-2,-3]],-1],35,[],[],[]],[[[472,[-1,-2,-3]],[472,[-1,-2,-3]],-1],35,[],[],[]],[[[472,[-1,-2,-3]],[472,[-1,-2,-3]],-1],35,[],[],[]],[[[410,[-1,-2]],[410,[-1,-2]],[410,[-1,-2]]],35,[],[]],[[[463,[-1,-2]],[463,[-1,-2]],[463,[-1,-2]]],35,[],[]],0,0,[[[414,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],-1,[80,[79,[],[[8,[]]]]],[]],[[[449,[-1,-2]]],[],[79,80],[]],[[[463,[-1,-2]],[411,[-1]]],[[473,[-1,-2,-3]]],448,[],[]],[[[411,[-1]]],[[473,[-1,-2,-3]]],448,[],[]],[[[411,[-1]]],[[473,[-1,-2,-3]]],448,[],[]],[[[411,[-1]]],[[473,[-1,-2,-3]]],448,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-1,-1,-1,-1,-1],[[475,[-1,-2]]],80,[]],[[35,35],470],[[35,35,35],471],[[[414,[-1,-2]]],[[414,[-3,-2]]],[434,80],[],434],[[[475,[-1,-2]]],[[475,[-3,-2]]],[434,80],[],434],[[[464,[-1,-2]]],[[464,[-3,-2]]],[434,32],[],434],[[[389,[-1,-2]]],[[389,[-3,-2]]],[434,80],[],434],[[[465,[-1,-2]]],[[465,[-3,-2]]],[434,80],[],434],[[[474,[-1,-2]]],[[474,[-3,-2]]],[434,80],[],434],[[[466,[-1,-2,-3]]],[[466,[-4,-2,-3]]],434,[],[],434],[[[449,[-1,-2]]],[[449,[-3,-2]]],[434,80],[],434],[[[462,[-1,-2]]],[[462,[-3,-2]]],[434,80],[],434],[[[362,[-1,-2,-3]]],[[362,[-4,-2,-3]]],[434,80],[],[],434],[[[472,[-1,-2,-3]]],[[472,[-4,-2,-3]]],[434,80],[],[],434],[[[410,[-1,-2]]],[[410,[-3,-2]]],[434,80],[],434],[[[463,[-1,-2]]],[[463,[-3,-2]]],[434,80],[],434],[[[414,[-1,-2]]],[[414,[-1,-3]]],80,[],[]],[[[475,[-1,-2]]],[[475,[-1,-3]]],80,[],[]],[[[464,[-1,-2]]],[[464,[-1,-3]]],32,[],[]],[[[389,[-1,-2]]],[[389,[-1,-3]]],80,[],[]],[[[465,[-1,-2]]],[[465,[-1,-3]]],80,[],[]],[[[474,[-1,-2]]],[[474,[-1,-3]]],80,[],[]],[[[476,[-1,-2,-3]]],[[476,[-1,-4,-5]]],80,[],[],[],[]],[[[473,[-1,-2,-3]]],[[473,[-1,-4,-5]]],80,[],[],[],[]],[[[449,[-1,-2]]],[[449,[-1,-3]]],80,[],[]],[[[462,[-1,-2]]],[[462,[-1,-3]]],80,[],[]],[[[410,[-1,-2]]],[[410,[-1,-3]]],80,[],[]],[[[463,[-1,-2]]],[[463,[-1,-3]]],80,[],[]],[[[477,[-1,-2,-3]]],[[477,[-1,-4,-5]]],80,[],[],[],[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],478,[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],[478,80],[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],478,[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],[478,80],[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],[478,80],[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],478,[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],[478,80],[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],478,[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],[478,80],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],478,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],478,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],[478,80],[]],[[[414,[-1,-2]]],[[389,[-1,-2]]],[80,479,[9,[],[[8,[]]]],[439,[],[[8,[]]]]],[]],[[[475,[-1,-2]]],[[465,[-1,-2]]],[80,479,[9,[],[[8,[]]]],[439,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],[[389,[-1,-2]]],[80,479,[9,[],[[8,[]]]],[439,[],[[8,[]]]]],[]],[[[389,[-1,-2]],[389,[-1,-2]],[389,[-1,-2]]],[[389,[-1,-2]]],[80,236],[]],[[[465,[-1,-2]],[465,[-1,-2]],[465,[-1,-2]]],[[465,[-1,-2]]],[80,236],[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[[466,[-1,-2,-3]]],[80,236],[],[]],[[[449,[-1,-2]],[449,[-1,-2]],[449,[-1,-2]]],[[449,[-1,-2]]],[80,236],[]],[[[462,[-1,-2]],[462,[-1,-2]],[462,[-1,-2]]],[[462,[-1,-2]]],[80,236],[]],[[[410,[-1,-2]],[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[80,236],[]],[[[463,[-1,-2]],[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[80,236],[]],[[[410,[-1,-2]],-1,-1],[[410,[-1,-2]]],448,[]],[[[463,[-1,-2]],-1,-1],[[463,[-1,-2]]],448,[]],[[[414,[-1,-2]]],[[414,[-1,-2]]],32,[]],[[[475,[-1,-2]]],[[475,[-1,-2]]],32,[]],[[[480,[-1,-2]]],[[480,[-1,-2]]],32,[]],[[[464,[-1,-2]]],[[464,[-1,-2]]],32,[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],32,[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],32,[]],[[[474,[-1,-2]]],[[474,[-1,-2]]],32,[]],[[[476,[-1,-2,-3]]],[[476,[-1,-2,-3]]],32,[],[]],[[[473,[-1,-2,-3]]],[[473,[-1,-2,-3]]],32,[],[]],[[[466,[-1,-2,-3]]],[[466,[-1,-2,-3]]],32,[],[]],[[[467,[-1,-2]]],[[467,[-1,-2]]],32,[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],32,[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],32,[]],[[[362,[-1,-2,-3]]],[[362,[-1,-2,-3]]],32,[],[]],[[[472,[-1,-2,-3]]],[[472,[-1,-2,-3]]],32,[],[]],[[[468,[-1,-2,-3]]],[[468,[-1,-2,-3]]],32,[],[]],[[[469,[-1,-2,-3]]],[[469,[-1,-2,-3]]],32,[],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],32,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],32,[]],[[[477,[-1,-2,-3]]],[[477,[-1,-2,-3]]],32,[],[]],[470,470],[471,471],[361,361],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[464,[-1,-2]],[464,[-1,-2]]],82,233,[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],82,233,[],[]],[[361,361],82],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[[439,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[[439,[],[[8,[]]]],80],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[[79,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[[79,[],[[8,[]]]],80],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[414,[-1,-2]],[389,[-1,-2]]],35,236,[]],[[[475,[-1,-2]],[465,[-1,-2]]],35,236,[]],[[[474,[-1,-2]],[389,[-1,-2]]],35,[80,236,[9,[],[[8,[]]]]],[]],[[[449,[-1,-2]],[449,[-1,-2]]],35,236,[]],[[[462,[-1,-2]],[462,[-1,-2]]],35,236,[]],[[[414,[-1,-2]],[414,[-1,-2]]],35,236,[]],[[[475,[-1,-2]],[475,[-1,-2]]],35,236,[]],[[[474,[-1,-2]],[474,[-1,-2]]],35,[80,481,236,[9,[],[[8,[]]]]],[]],[438,438],[[[410,[-1,-2]],[410,[-1,-2]]],-1,[[125,[],[[8,[]]]],[79,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[477,[-1,-2,-3]]],[[11,[[463,[-1,-2]],[473,[-1,-2,-3]]]]],[],[],[]],0,[[],[[414,[-1,-2]]],42,[]],[[],[[475,[-1,-2]]],42,[]],[[],[[464,[-1,-2]]],42,[]],[[],[[389,[-1,-2]]],42,[]],[[],[[465,[-1,-2]]],42,[]],[[],[[474,[-1,-2]]],42,[]],[[],[[466,[-1,-2,-3]]],42,[],[]],[[],[[467,[-1,-2]]],42,[]],[[],[[449,[-1,-2]]],42,[]],[[],[[462,[-1,-2]]],42,[]],[[],[[362,[-1,-2,-3]]],[481,479],[],[]],[[],[[472,[-1,-2,-3]]],[481,479],[],[]],[[],[[468,[-1,-2,-3]]],481,[],[]],[[],[[469,[-1,-2,-3]]],481,[],[]],[[],[[410,[-1,-2]]],42,[]],[[],[[463,[-1,-2]]],42,[]],[[],361],[438,438],[[[475,[-1,-2]]],-1,[80,[125,[],[[8,[]]]]],[]],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[362,[-1,-2,-3]]],-1,[80,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],48,481,479],[],[]],[[[472,[-1,-2,-3]]],-1,[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[389,[-1,-2]],[389,[-1,-2]]],-1,[[448,[],[[8,[]]]],125],[]],[[[465,[-1,-2]],[465,[-1,-2]]],-1,[[448,[],[[8,[]]]],125],[]],[[[414,[-1,-2]],-1],[],[80,439],[]],[[[414,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[475,[-1,-2]],-1],[],[80,439],[]],[[[475,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[464,[-1,-2]],[466,[-1,-3,-2]]],[],439,[],[]],[[[464,[-1,-2]],[464,[-1,-3]]],[],439,[],[]],[[[464,[-1,-2]],-1],[],439,[]],[[[389,[-1,-2]],-1],[],[80,439],[]],[[[389,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[465,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[465,[-1,-2]],-1],[],[80,439],[]],[[[474,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[474,[-1,-2]],-1],[],[80,439],[]],[[[467,[-1,-2]],-1],[],[80,439],[]],[[[467,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[449,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[449,[-1,-2]],-1],[],[80,439],[]],[[[462,[-1,-2]],-1],[],[80,439],[]],[[[462,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[410,[-1,-2]],-1],[],[80,439],[]],[[[410,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[463,[-1,-2]],[466,[-1,-3,-2]]],[],[80,439],[],[]],[[[463,[-1,-2]],-1],[],[80,439],[]],[[[414,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[414,[-1,-2]],-1],11,[80,440],[]],[[[475,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[475,[-1,-2]],-1],11,[80,440],[]],[[[464,[-1,-2]],-1],11,[80,[439,[],[[8,[]]]]],[]],[[[389,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[389,[-1,-2]],-1],11,[80,[439,[],[[8,[]]]]],[]],[[[465,[-1,-2]],-1],11,[80,440],[]],[[[465,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[474,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[474,[-1,-2]],-1],11,[80,440],[]],[[[467,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[467,[-1,-2]],-1],11,[80,440],[]],[[[449,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[449,[-1,-2]],-1],11,[80,440],[]],[[[462,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[462,[-1,-2]],-1],11,[80,440],[]],[[[410,[-1,-2]],-1],11,[80,[439,[],[[8,[]]]]],[]],[[[410,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[463,[-1,-2]],-1],11,[80,[439,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[466,[-1,-2,-2]]],11,[80,440],[]],[[[389,[-1,-2]],[449,[-1,-2]]],[[389,[-1,-2]]],482,[]],[[[465,[-1,-2]],[462,[-1,-2]]],[[465,[-1,-2]]],482,[]],[[[410,[-1,-2]],[410,[-1,-2]]],-1,[[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],-1,[[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[414,[-1,-2]],[414,[-1,-2]]],35,48,[]],[[[475,[-1,-2]],[475,[-1,-2]]],35,48,[]],[[[480,[-1,-2]],[480,[-1,-2]]],35,48,[]],[[[464,[-1,-2]],[464,[-1,-2]]],35,48,[]],[[[389,[-1,-2]],[389,[-1,-2]]],35,48,[]],[[[465,[-1,-2]],[465,[-1,-2]]],35,48,[]],[[[474,[-1,-2]],[474,[-1,-2]]],35,48,[]],[[[476,[-1,-2,-3]],[476,[-1,-2,-3]]],35,48,[],[]],[[[473,[-1,-2,-3]],[473,[-1,-2,-3]]],35,48,[],[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],35,48,[],[]],[[[467,[-1,-2]],[467,[-1,-2]]],35,48,[]],[[[449,[-1,-2]],[449,[-1,-2]]],35,48,[]],[[[462,[-1,-2]],[462,[-1,-2]]],35,48,[]],[[[362,[-1,-2,-3]],[362,[-1,-2,-3]]],35,48,[],[]],[[[472,[-1,-2,-3]],[472,[-1,-2,-3]]],35,48,[],[]],[[[468,[-1,-2,-3]],[468,[-1,-2,-3]]],35,48,[],[]],[[[469,[-1,-2,-3]],[469,[-1,-2,-3]]],35,48,[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],35,48,[]],[[[463,[-1,-2]],[463,[-1,-2]]],35,48,[]],[[[477,[-1,-2,-3]],[477,[-1,-2,-3]]],35,48,48,48],[[470,470],35],[[471,471],35],[[361,361],35],[[[449,[-1,-2]],[449,[-1,-2]]],470,48,[]],[[[462,[-1,-2]],[462,[-1,-2]]],471,48,[]],[[[410,[-1,-2]],[410,[-1,-2]]],470,48,[]],[[[463,[-1,-2]],[463,[-1,-2]]],471,48,[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[411,[-1]],[411,[-1]],[411,[-1]]],[[473,[-1,-2,-3]]],448,[],[]],[[[389,[-1,-2]],-1],[[465,[-1,-2]]],80,[]],[[[410,[-1,-2]],-1],[[463,[-1,-2]]],80,[]],[[438,438],438],[[[389,[-1,-2]]],[[389,[-1,-2]]],[483,80],[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],483,[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],483,[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],[483,80],[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],483,[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],[483,80],[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],483,[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],[483,80],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],[483,80],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],483,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],483,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],[483,80],[]],[[[414,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[475,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[480,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[464,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[389,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[465,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[474,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[473,[-1,-2,-3]],51],[[53,[11,52]]],57,[],[]],[[[466,[-1,-2,-3]],51],[[53,[11,52]]],57,[],[]],[[[467,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[449,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[462,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[362,[-1,-2,-3]],51],[[53,[11,52]]],[80,57,48,479,481],[],[]],[[[472,[-1,-2,-3]],51],[[53,[11,52]]],[80,57,48,479,481],[],[]],[[[468,[-1,-2,-3]],51],[[53,[11,52]]],57,[],[]],[[[469,[-1,-2,-3]],51],[[53,[11,52]]],57,[],[]],[[[410,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[463,[-1,-2]],51],[[53,[11,52]]],57,[]],[[[477,[-1,-2,-3]],51],[[53,[11,52]]],57,57,57],[[470,51],[[53,[11,52]]]],[[471,51],[[53,[11,52]]]],[[361,51],[[53,[11,52]]]],[-1,-1,[]],[[[449,[-1,-2]]],[[414,[-1,-2]]],[80,481,236],[]],[[[462,[-1,-2]]],[[475,[-1,-2]]],[80,481,236],[]],[-1,-1,[]],[[[465,[-1,-2]]],[[480,[-1,-2]]],479,[]],[[[410,[-1,-2]]],[[480,[-1,-2]]],481,[]],[[[389,[-1,-2]]],[[480,[-1,-2]]],[481,479],[]],[[[463,[-1,-2]]],[[480,[-1,-2]]],481,[]],[-1,-1,[]],[-1,-1,[]],[[[15,[-1]]],[[389,[-1,-2]]],[],[]],[[[11,[-1,-1]]],[[389,[-1,-2]]],[],[]],[-1,-1,[]],[[[11,[-1,-1,-1]]],[[465,[-1,-2]]],[],[]],[-1,-1,[]],[[[15,[-1]]],[[465,[-1,-2]]],[],[]],[-1,-1,[]],[[[449,[-1,-2]]],[[474,[-1,-2]]],481,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[15,[-1]]],[[449,[-1,-2]]],[],[]],[[[11,[-1,-1]]],[[449,[-1,-2]]],[],[]],[[[410,[-1,-2]]],[[449,[-1,-2]]],[],[]],[-1,-1,[]],[[[11,[-1,-1,-1]]],[[462,[-1,-2]]],[],[]],[-1,-1,[]],[[[463,[-1,-2]]],[[462,[-1,-2]]],[],[]],[[[15,[-1]]],[[462,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[[[410,[-1,-2]]],[[468,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[-1,-1,[]],[[[463,[-1,-2]]],[[469,[-1,-2,-3]]],[],[],[]],[[[11,[-1,-1]]],[[410,[-1,-2]]],[],[]],[-1,-1,[]],[[[15,[-1]]],[[410,[-1,-2]]],[],[]],[[[449,[-1,-2]]],[[410,[-1,-2]]],[],[]],[[[15,[-1]]],[[463,[-1,-2]]],[],[]],[-1,-1,[]],[[[11,[-1,-1,-1]]],[[463,[-1,-2]]],[],[]],[[[473,[-1,-2,-3]]],[[477,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[[[463,[-1,-2]]],[[477,[-1,-3,-2]]],[],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[411,[-1]],-1],[[410,[-1,-2]]],[438,[79,[],[[8,[]]]],80],[]],[[[15,[-1]]],[[362,[-1,-2,-3]]],80,[],[]],[[[15,[-1]]],[[472,[-1,-2,-3]]],80,[],[]],[[[15,[[15,[-1]]]]],[[362,[-1,-2,-3]]],80,[],[]],[[[15,[[15,[-1]]]]],[[472,[-1,-2,-3]]],80,[],[]],[[[464,[-1,-2]]],[[467,[-1,-2]]],80,[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[389,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]],[464,[-1,-2]]],[[465,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]],[464,[-1,-2]],[464,[-1,-2]]],[[467,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[449,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]],[464,[-1,-2]]],[[462,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[410,[-1,-2]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]],[464,[-1,-2]]],[[463,[-1,-2]]],[],[]],[[[389,[-1,-2]],[449,[-1,-2]]],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[-1,[[414,[-2,-3]]],17,[80,481,236],[]],[-1,[[475,[-2,-3]]],17,[80,481,236],[]],[-1,[[474,[-2,-3]]],17,[80,481,236,[125,[],[[8,[]]]]],[]],[[[473,[-1,-2,-3]]],[[477,[-1,-2,-3]]],[],[],[]],[[[466,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[449,[-1,-2]]],[[414,[-1,-2]]],481,[]],[[[462,[-1,-2]]],[[475,[-1,-2]]],481,[]],[[[449,[-1,-2]]],[[474,[-1,-2]]],481,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[463,[-1,-2]]],[[477,[-1,-3,-2]]],[],[],[]],[[[414,[-1,361]]],[[414,[-1,-2]]],80,[]],[[[475,[-1,361]]],[[475,[-1,-2]]],80,[]],[[[389,[-1,361]]],[[389,[-1,-2]]],[],[]],[[[465,[-1,361]]],[[465,[-1,-2]]],[],[]],[[[474,[-1,361]]],[[474,[-1,-2]]],80,[]],[[[476,[-1,361,361]]],[[476,[-1,-2,-3]]],80,[],[]],[[[473,[-1,361,361]]],[[473,[-1,-2,-3]]],80,[],[]],[[[449,[-1,361]]],[[449,[-1,-2]]],[],[]],[[[462,[-1,361]]],[[462,[-1,-2]]],[],[]],[[[362,[-1,361,361]]],[[362,[-1,-2,-3]]],80,[],[]],[[[472,[-1,361,361]]],[[472,[-1,-2,-3]]],80,[],[]],[[[468,[-1,361,361]]],[[468,[-1,-2,-3]]],80,[],[]],[[[469,[-1,361,361]]],[[469,[-1,-2,-3]]],80,[],[]],[[[410,[-1,361]]],[[410,[-1,-2]]],[],[]],[[[463,[-1,361]]],[[463,[-1,-2]]],[],[]],[[[477,[-1,361,361]]],[[477,[-1,-2,-3]]],[],[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[467,[-1,-2]]],[[446,[],[[8,[]]]]],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[467,[-1,-2]]],[[446,[],[[8,[]]]]],[]],[[[464,[-1,-2]]],-1,32,[]],[[[466,[-1,-2,-3]]],-1,[],[],[]],[[[476,[-1,-2,-3]]],[[411,[-1]]],80,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[449,[-1,-2]],[449,[-1,-2]]],470,236,[]],[[[462,[-1,-2]],[462,[-1,-2]]],471,236,[]],[[[410,[-1,-2]],[410,[-1,-2]]],470,236,[]],[[[463,[-1,-2]],[463,[-1,-2]]],471,236,[]],[[[414,[-1,-2]],-3],11,71,[],74],[[[475,[-1,-2]],-3],11,71,[],74],[[[480,[-1,-2]],-3],11,71,[],74],[[[464,[-1,-2]],-3],11,71,[],74],[[[389,[-1,-2]],-3],11,71,[],74],[[[465,[-1,-2]],-3],11,71,[],74],[[[474,[-1,-2]],-3],11,71,[],74],[[[476,[-1,-2,-3]],-4],11,71,[],[],74],[[[473,[-1,-2,-3]],-4],11,71,[],[],74],[[[466,[-1,-2,-3]],-4],11,71,[],[],74],[[[467,[-1,-2]],-3],11,71,[],74],[[[449,[-1,-2]],-3],11,71,[],74],[[[462,[-1,-2]],-3],11,71,[],74],[[[362,[-1,-2,-3]],-4],11,71,[],[],74],[[[472,[-1,-2,-3]],-4],11,71,[],[],74],[[[468,[-1,-2,-3]],-4],11,71,[],[],74],[[[469,[-1,-2,-3]],-4],11,71,[],[],74],[[[410,[-1,-2]],-3],11,71,[],74],[[[463,[-1,-2]],-3],11,71,[],74],[[[477,[-1,-2,-3]],-4],11,71,71,71,74],[[470,-1],11,74],[[471,-1],11,74],[[361,-1],11,74],[[[414,[-1,-2]]],-1,[80,[125,[],[[8,[]]]]],[]],[[[475,[-1,-2]]],-1,[80,[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],0,0,[[[467,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],0,[[],[[476,[-1,-2,-3]]],447,[],[]],[[],[[473,[-1,-2,-3]]],[447,431],[],[]],[[],[[466,[-1,-2,-3]]],479,[],[]],[[],[[362,[-1,-2,-3]]],[481,479],[],[]],[[],[[472,[-1,-2,-3]]],[481,479],[],[]],[[],[[468,[-1,-2,-3]]],481,[],[]],[[],[[469,[-1,-2,-3]]],481,[],[]],[[],[[477,[-1,-2,-3]]],[],[],[]],[[[414,[-1,-2]],-1,-1],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[475,[-1,-2]],-1,-1,-1],[[475,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]],-1,-1],[[474,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[[414,[-1,-2]],[467,[-1,-2]]],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]],[467,[-1,-2]]],[[474,[-1,-2]]],[80,481,236,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[414,[-1,-2]],[414,[-1,-2]]],[[67,[[414,[-1,-2]]]]],[80,236],[]],[[[475,[-1,-2]],[475,[-1,-2]]],[[67,[[475,[-1,-2]]]]],[80,236],[]],[[[474,[-1,-2]],[474,[-1,-2]]],[[67,[[474,[-1,-2]]]]],[80,236,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[414,[-1,-2]],[414,[-1,-2]]],[[414,[-1,-2]]],[80,236],[]],[[[475,[-1,-2]],[475,[-1,-2]]],[[475,[-1,-2]]],[80,236],[]],[[[414,[-1,-2]],[414,[-1,-2]]],35,236,[]],[[[475,[-1,-2]],[475,[-1,-2]]],35,236,[]],[[[474,[-1,-2]],[474,[-1,-2]]],35,[80,236,[9,[],[[8,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[389,[-1,-2]]],[[15,[-1]]],[],[]],[-1,-2,[],[]],[[[389,[-1,-2]]],[[11,[-1,-1]]],[],[]],[-1,-2,[],[]],[[[465,[-1,-2]]],[[11,[-1,-1,-1]]],[],[]],[[[465,[-1,-2]]],[[15,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[449,[-1,-2]]],[[15,[-1]]],[],[]],[[[449,[-1,-2]]],[[11,[-1,-1]]],[],[]],[-1,-2,[],[]],[[[462,[-1,-2]]],[[11,[-1,-1,-1]]],[],[]],[[[462,[-1,-2]]],[[15,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[468,[-1,-2,-3]]],[[362,[-1,-2,-3]]],[481,479],[],[]],[[[468,[-1,-2,-3]]],[[410,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[[[469,[-1,-2,-3]]],[[463,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[[[469,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[481,479],[],[]],[[[410,[-1,-2]]],[[11,[-1,-1]]],[],[]],[[[410,[-1,-2]]],[[15,[-1]]],[],[]],[-1,-2,[],[]],[[[463,[-1,-2]]],[[15,[-1]]],[],[]],[-1,-2,[],[]],[[[463,[-1,-2]]],[[11,[-1,-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[476,[-1,-2,-3]]],[[476,[-1,-3,-2]]],448,[],[]],[[[473,[-1,-2,-3]]],[[473,[-1,-3,-2]]],448,[],[]],[[[466,[-1,-2,-3]]],[[466,[-3,-2]]],[479,439],[],[]],[[[362,[-1,-2,-3]]],[[67,[[362,[-1,-3,-2]]]]],[80,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],48,481,479],[],[]],[[[472,[-1,-2,-3]]],[[67,[[472,[-1,-3,-2]]]]],[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[468,[-1,-2,-3]]],[[468,[-3,-2]]],[446,80],[],[]],[[[469,[-1,-2,-3]]],[[469,[-3,-2]]],[446,80],[],[]],[[[477,[-1,-2,-3]]],[[477,[-1,-3,-2]]],[],[],[]],[[[472,[-1,-2,-3]]],35,[481,479,48],[],[]],[[[472,[-1,-2,-3]]],35,[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[414,[-1,-2]]],35,236,[]],[[[475,[-1,-2]]],35,236,[]],[[[474,[-1,-2]]],35,[80,481,236],[]],[[[449,[-1,-2]]],35,[481,236],[]],[[[462,[-1,-2]]],35,[481,236],[]],[[[414,[-1,-2]]],35,45,[]],[[[475,[-1,-2]]],35,45,[]],[[[389,[-1,-2]]],35,45,[]],[[[465,[-1,-2]]],35,45,[]],[[[474,[-1,-2]]],35,45,[]],[[[449,[-1,-2]]],35,45,[]],[[[462,[-1,-2]]],35,45,[]],[[[410,[-1,-2]]],35,45,[]],[[[463,[-1,-2]]],35,45,[]],[[[466,[-1,-2,-3]]],35,[48,479],[],[]],[[[468,[-1,-2,-3]]],35,[481,48],[],[]],[[[469,[-1,-2,-3]]],35,[481,48],[],[]],[[[362,[-1,-2,-3]]],35,[80,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],48,481,479],[],[]],[[[472,[-1,-2,-3]]],35,[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[414,[-1,-2]]],35,236,[]],[[[475,[-1,-2]]],35,236,[]],[[[473,[-1,-2,-3]]],35,[],[],[]],[[[449,[-1,-2]]],35,461,[]],[[[462,[-1,-2]]],35,461,[]],[[[467,[-1,-2]]],35,[481,48],[]],0,0,0,[[[410,[-1,-2]]],-1,448,[]],[[[463,[-1,-2]]],-1,448,[]],[[[414,[-1,-2]],[414,[-1,-2]],-1],[[414,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[475,[-1,-2]],[475,[-1,-2]],-1],[[475,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[464,[-1,-2]],[464,[-1,-2]],-1],[[464,[-1,-2]]],[479,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[9,[],[[8,[]]]],32],[]],[[[389,[-1,-2]],[389,[-1,-2]],-1],[[389,[-1,-2]]],[479,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[9,[],[[8,[]]]],80],[]],[[[465,[-1,-2]],[465,[-1,-2]],-1],[[465,[-1,-2]]],[479,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[9,[],[[8,[]]]],80],[]],[[[474,[-1,-2]],[474,[-1,-2]],-1],[[474,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[473,[-1,-2,-3]],[473,[-1,-2,-3]],-1],[[473,[-1,-2,-3]]],448,[],[]],[[[449,[-1,-2]],[449,[-1,-2]],-1],[[449,[-1,-2]]],[479,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[9,[],[[8,[]]]],80],[]],[[[462,[-1,-2]],[462,[-1,-2]],-1],[[462,[-1,-2]]],[479,[125,[],[[8,[]]]],[79,[],[[8,[]]]],[9,[],[[8,[]]]],80],[]],[[[410,[-1,-2]],[410,[-1,-2]],-1],[[410,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[463,[-1,-2]],[463,[-1,-2]],-1],[[463,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[449,[-1,-2]],[449,[-1,-2]]],470,236,[]],[[[462,[-1,-2]],[462,[-1,-2]]],471,236,[]],[[[410,[-1,-2]],[410,[-1,-2]]],470,236,[]],[[[463,[-1,-2]],[463,[-1,-2]]],471,236,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[464,[-1,-2]],[464,[-1,-2]]],[[464,[-1,-2]]],236,[]],[[[389,[-1,-2]],[389,[-1,-2]]],[[389,[-1,-2]]],236,[]],[[[465,[-1,-2]],[465,[-1,-2]]],[[465,[-1,-2]]],236,[]],[[[474,[-1,-2]]],[[389,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[[466,[-1,-2,-3]]],236,[],[]],[[[449,[-1,-2]],[449,[-1,-2]]],[[449,[-1,-2]]],236,[]],[[[462,[-1,-2]],[462,[-1,-2]]],[[462,[-1,-2]]],236,[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],236,[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],236,[]],0,0,[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[464,[-1,-2]]],236,[]],[[[389,[-1,-2]],[389,[-1,-2]]],[[389,[-1,-2]]],236,[]],[[[465,[-1,-2]],[465,[-1,-2]]],[[465,[-1,-2]]],236,[]],[[[474,[-1,-2]]],[[389,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[[466,[-1,-2,-3]]],236,[],[]],[[[449,[-1,-2]],[449,[-1,-2]]],[[449,[-1,-2]]],236,[]],[[[462,[-1,-2]],[462,[-1,-2]]],[[462,[-1,-2]]],236,[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],236,[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],236,[]],0,0,[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],[[[414,[-1,-2]],-1],[],[80,79],[]],[[[414,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[475,[-1,-2]],-1],[],[80,79],[]],[[[475,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[464,[-1,-2]],-1],[],79,[]],[[[464,[-1,-2]],[466,[-1,-2,-3]]],[],79,[],[]],[[[389,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[389,[-1,-2]],-1],[],[80,79],[]],[[[465,[-1,-2]],-1],[],[80,79],[]],[[[465,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[474,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[474,[-1,-2]],-1],[],[80,79],[]],[[[466,[-1,-2,-3]],[466,[-1,-3,-4]]],[],79,[],[],[]],[[[467,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[467,[-1,-2]],-1],[],[80,79],[]],[[[449,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[449,[-1,-2]],-1],[],[80,79],[]],[[[462,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[462,[-1,-2]],-1],[],[80,79],[]],[[[410,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[410,[-1,-2]],-1],[],[80,79],[]],[[[463,[-1,-2]],[466,[-1,-2,-3]]],[],[80,79],[],[]],[[[463,[-1,-2]],-1],[],[80,79],[]],[[[414,[-1,-2]],-1],11,[80,445],[]],[[[414,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[475,[-1,-2]],-1],11,[80,445],[]],[[[475,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[464,[-1,-2]],-1],11,[80,[79,[],[[8,[]]]]],[]],[[[389,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[389,[-1,-2]],-1],11,[80,[79,[],[[8,[]]]]],[]],[[[465,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[465,[-1,-2]],-1],11,[80,445],[]],[[[474,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[474,[-1,-2]],-1],11,[80,445],[]],[[[467,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[467,[-1,-2]],-1],11,[80,445],[]],[[[449,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[449,[-1,-2]],-1],11,[80,445],[]],[[[462,[-1,-2]],-1],11,[80,445],[]],[[[462,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[410,[-1,-2]],-1],11,[80,[79,[],[[8,[]]]]],[]],[[[410,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[463,[-1,-2]],[466,[-1,-2,-2]]],11,[80,445],[]],[[[463,[-1,-2]],-1],11,[80,[79,[],[[8,[]]]]],[]],[[[472,[-1,-2,-3]],-1],[[472,[-1,-2,-3]]],[[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,[446,[],[[8,[]]]],[9,[],[[8,[]]]],236,479,481],[],[]],[[[464,[-1,-2]]],[],446,[]],[[[389,[-1,-2]]],[],446,[]],[[[465,[-1,-2]]],[],446,[]],[[[467,[-1,-2]]],[[467,[-1,-2]]],[[446,[],[[8,[]]]]],[]],[[[449,[-1,-2]]],[],446,[]],[[[462,[-1,-2]]],[],446,[]],[[[410,[-1,-2]]],[],446,[]],[[[463,[-1,-2]]],[],446,[]],[[[389,[-1,-2]],[389,[-1,-2]]],[[414,[-1,-2]]],[],[]],[[[465,[-1,-2]],[465,[-1,-2]]],[[475,[-1,-2]]],[],[]],[[-1,-1,-1,-1],[[480,[-1,-2]]],[],[]],[-1,[[464,[-1,-2]]],[],[]],[[-1,-1],[[389,[-1,-2]]],[],[]],[[-1,-1,-1],[[465,[-1,-2]]],[],[]],[[[389,[-1,-2]],[449,[-1,-2]]],[[474,[-1,-2]]],[],[]],[[[411,[-1]]],[[476,[-1,-2,-3]]],[],[],[]],[-1,[[466,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1],[[467,[-1,-2]]],[],[]],[[-1,-1],[[449,[-1,-2]]],[],[]],[[-1,-1,-1],[[462,[-1,-2]]],[],[]],[[-1,-1,-1,-1,-1,-1],[[362,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[[472,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[468,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1],[[469,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[410,[-1,-2]]],[],[]],[[-1,-1,-1],[[463,[-1,-2]]],[],[]],[[[473,[-1,-2,-3]],[463,[-1,-3]]],[[477,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1],[[472,[-1,-2,-3]]],[481,479],[],[]],[-1,[[467,[-1,-2]]],80,[]],[[[463,[-1,-2]],[473,[-1,-2,-3]]],[[477,[-1,-2,-3]]],[],[],[]],[470,35],[471,35],[[[473,[-1,-2,-3]]],-1,448,[],[]],[[[473,[-1,-2,-3]]],[[473,[-1,-2,-3]]],448,[],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],448,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],448,[]],[470,470],[471,471],[[[449,[-1,-2]],[449,[-1,-2]]],470,48,[]],[[[462,[-1,-2]],[462,[-1,-2]]],471,48,[]],[[[410,[-1,-2]],[410,[-1,-2]]],470,48,[]],[[[463,[-1,-2]],[463,[-1,-2]]],471,48,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[],[[466,[-1,-2,-3]]],479,[],[]],[[],[[410,[-1,-2]]],479,[]],[[],[[463,[-1,-2]]],479,[]],[[470,470],470],[[471,471],471],[[],[[389,[-1,-2]]],481,[]],[[],[[465,[-1,-2]]],481,[]],0,[[-1,-1,-1,-1,-1,-1],[[472,[-1,-2,-3]]],[],[],[]],[[[414,[-1,-2]],[467,[-1,-2]]],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]],[467,[-1,-2]]],[[474,[-1,-2]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[362,[-1,-2,-3]],[414,[-1,-2]]],[[414,[-1,-3]]],[[125,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[472,[-1,-2,-3]],[414,[-1,-2]]],[[67,[[414,[-1,-3]]]]],[[125,[],[[8,[]]]],[439,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[472,[-1,-2,-3]],[475,[-1,-2]]],[[67,[[475,[-1,-3]]]]],[[125,[],[[8,[]]]],[439,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[362,[-1,-2,-3]],[474,[-1,-2]]],[[474,[-1,-3]]],[[125,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[472,[-1,-2,-3]],[474,[-1,-2]]],[[67,[[474,[-1,-3]]]]],[[125,[],[[8,[]]]],[439,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[67,[82]]],236,[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[[67,[82]]],236,[],[]],[[361,361],[[67,[82]]]],[-1,[[472,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[389,[-1,-2]]],[],[]],[[-1,-1,-1],[[465,[-1,-2]]],[],[]],[[[389,[12,-1]]],[[389,[12,361]]],[]],[[[362,[-1,-2,-3]],[411,[-1]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],481,438],[],[]],[[[472,[-1,-2,-3]],-1,-1,-1,[411,[-1]]],[[472,[-1,-2,-3]]],[[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,481,479,438],[],[]],[[[362,[-1,-2,-3]],-1,-1],[[362,[-1,-2,-3]]],[80,[79,[],[[8,[]]]]],[],[]],[[[472,[-1,-2,-3]],-1,-1,-1],[[472,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[362,[-1,-2,-3]],[410,[-1,-2]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[472,[-1,-2,-3]],[463,[-1,-2]]],[[472,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[[125,[],[[8,[]]]],[439,[],[[8,[]]]],80,[79,[],[[8,[]]]],[9,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[[125,[],[[8,[]]]],[439,[],[[8,[]]]],80,[79,[],[[8,[]]]],[9,[],[[8,[]]]]],[]],[[[472,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[80,[79,[],[[8,[]]]],[439,[],[[8,[]]]],481,479,48],[],[]],[[-1,-1,-1,-1],[[473,[-1,-2,-3]]],[],[],[]],0,[-1,[[476,[-1,-2,-3]]],[],[],[]],0,[438,438],[[-1,-1,-1,-1],[[474,[-1,-2]]],[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[479,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],80],[]],[[[389,[-1,-2]],[449,[-1,-2]]],[[389,[-1,-2]]],482,[]],[[[465,[-1,-2]],[462,[-1,-2]]],[[465,[-1,-2]]],482,[]],0,[[[410,[-1,-2]]],[[410,[-1,-2]]],45,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],45,[]],[[[411,[-1]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],481,438],[],[]],[[-1,-1,-1,[411,[-1]]],[[472,[-1,-2,-3]]],[],[],[]],0,[[[414,[-1,-2]]],[[414,[-1,-2]]],484,[]],[[[475,[-1,-2]]],[[475,[-1,-2]]],484,[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],484,[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],[484,80],[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],[484,80],[]],[[[465,[-1,-2]]],[[465,[-1,-2]]],484,[]],[[[474,[-1,-2]]],[[474,[-1,-2]]],[483,478,484,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],484,[]],[[[449,[-1,-2]]],[[449,[-1,-2]]],[484,80],[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],484,[]],[[[462,[-1,-2]]],[[462,[-1,-2]]],[484,80],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],[484,80],[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],484,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],484,[]],[[[463,[-1,-2]]],[[463,[-1,-2]]],[484,80],[]],[[[414,[-1,-2]]],[[414,[-1,-2]]],[483,478],[]],[[[475,[-1,-2]]],[[475,[-1,-2]]],[483,478],[]],[[[474,[-1,-2]]],[[474,[-1,-2]]],[483,478,484,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[414,[-1,-2]]],[[414,[-1,-2]]],[483,478],[]],[[[475,[-1,-2]]],[[475,[-1,-2]]],[483,478],[]],[[[474,[-1,-2]]],[[474,[-1,-2]]],[483,478,484,[9,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[464,[-1,-2]]],485,[]],[[[464,[-1,-2]],[464,[-1,-2]]],[[464,[-1,-2]]],485,[]],[[[414,[-2,-3]],-1,-1],[[414,[-2,-3]]],80,[[79,[-1],[[8,[]]]],80],[]],[[[475,[-2,-3]],-1,-1,-1],[[475,[-2,-3]]],80,[[79,[-1],[[8,[]]]],80],[]],[[[474,[-2,-3]],-1,-1],[[474,[-2,-3]]],80,[80,[79,[-1],[[8,[]]]]],[]],[[-1,-1],[[362,[-1,-2,-3]]],481,[],[]],[[-1,-1,-1],[[472,[-1,-2,-3]]],[481,479],[],[]],[[470,[389,[-1,-2]],[389,[-1,-2]]],[[389,[-1,-2]]],[],[]],[[471,[465,[-1,-2]],[465,[-1,-2]]],[[465,[-1,-2]]],[],[]],[[470,[449,[-1,-2]],[449,[-1,-2]]],[[449,[-1,-2]]],[],[]],[[471,[462,[-1,-2]],[462,[-1,-2]]],[[462,[-1,-2]]],[],[]],[[470,[410,[-1,-2]],[410,[-1,-2]]],[[410,[-1,-2]]],[],[]],[[471,[463,[-1,-2]],[463,[-1,-2]]],[[463,[-1,-2]]],[],[]],[[[414,[-1,-2]],[449,[-1,-2]]],11,[80,[125,[],[[8,[]]]]],[]],[438,438],[[[414,[-1,-2]]],[[449,[-1,-2]]],[80,[125,[],[[8,[]]]]],[]],[[[475,[-1,-2]]],[[462,[-1,-2]]],[80,[125,[],[[8,[]]]]],[]],0,[[-1,-1],[[449,[-1,-2]]],[],[]],[[-1,-1,-1],[[462,[-1,-2]]],[],[]],[[[411,[-1]],[411,[-1]]],[[472,[-1,-2,-3]]],[438,481,479],[],[]],[[[473,[-1,-2,-3]],[473,[-1,-2,-3]],-1],[[473,[-1,-2,-3]]],[],[],[]],[-1,[[389,[-1,-2]]],32,[]],[-1,[[465,[-1,-2]]],32,[]],[-1,[[449,[-1,-2]]],32,[]],[-1,[[462,[-1,-2]]],32,[]],[-1,[[468,[-1,-2,-3]]],32,[],[]],[-1,[[469,[-1,-2,-3]]],32,[],[]],[-1,[[410,[-1,-2]]],32,[]],[-1,[[463,[-1,-2]]],32,[]],[[[410,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[9,[],[[8,[]]]]],[]],[[[463,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[9,[],[[8,[]]]]],[]],[[[473,[-1,-2,-3]]],-1,448,[],[]],[[[464,[-1,-2]],[464,[-1,-2]]],[],125,[]],[[[389,[-1,-2]],[410,[-1,-2]]],[],125,[]],[[[389,[-1,-2]],[449,[-1,-2]]],[],125,[]],[[[389,[-1,-2]],[389,[-1,-2]]],[],125,[]],[[[465,[-1,-2]],[465,[-1,-2]]],[],125,[]],[[[465,[-1,-2]],[463,[-1,-2]]],[],125,[]],[[[465,[-1,-2]],[462,[-1,-2]]],[],125,[]],[[[466,[-1,-2,-3]],[466,[-1,-2,-3]]],[],125,[],[]],[[[467,[-1,-2]],[467,[-1,-2]]],[[467,[-1,-2]]],[[125,[],[[8,[]]]]],[]],[[[449,[-1,-2]],[449,[-1,-2]]],[],125,[]],[[[462,[-1,-2]],[462,[-1,-2]]],[],125,[]],[[[468,[-1,-2,-3]],[468,[-1,-4,-3]]],[],125,[],[],[]],[[[469,[-1,-2,-3]],[469,[-1,-4,-3]]],[],125,[],[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],[],125,[]],[[[463,[-1,-2]],[463,[-1,-2]]],[],125,[]],[[[464,[-1,-2]],[464,[-1,-2]]],11,450,[]],[[[389,[-1,-2]],[449,[-1,-2]]],11,450,[]],[[[389,[-1,-2]],[410,[-1,-2]]],11,[80,[125,[],[[8,[]]]]],[]],[[[465,[-1,-2]],[462,[-1,-2]]],11,450,[]],[[[465,[-1,-2]],[463,[-1,-2]]],11,[80,[125,[],[[8,[]]]]],[]],[[[467,[-1,-2]],[467,[-1,-2]]],11,450,[]],[[[449,[-1,-2]],[449,[-1,-2]]],11,450,[]],[[[462,[-1,-2]],[462,[-1,-2]]],11,450,[]],[[[468,[-1,-2,-3]],[468,[-1,-3,-3]]],11,450,[],[]],[[[469,[-1,-2,-3]],[469,[-1,-3,-3]]],11,450,[],[]],[[[410,[-1,-2]],[410,[-1,-2]]],11,[80,[125,[],[[8,[]]]]],[]],[[[463,[-1,-2]],[463,[-1,-2]]],11,[80,[125,[],[[8,[]]]]],[]],[-3,[[464,[-1,-2]]],[[9,[],[[8,[]]]],481],[],[[187,[],[[16,[[464,[-1,-2]]]]]]]],[-3,[[464,[-1,-2]]],[[9,[],[[8,[]]]],80,481],[],[[187,[],[[16,[[464,[-1,-2]]]]]]]],[-3,[[449,[-1,-2]]],[[9,[],[[8,[]]]],80,481],[],[[187,[],[[16,[[449,[-1,-2]]]]]]]],[-3,[[449,[-1,-2]]],[[9,[],[[8,[]]]],481],[],[[187,[],[[16,[[449,[-1,-2]]]]]]]],[-3,[[462,[-1,-2]]],[[9,[],[[8,[]]]],481],[],[[187,[],[[16,[[462,[-1,-2]]]]]]]],[-3,[[462,[-1,-2]]],[[9,[],[[8,[]]]],80,481],[],[[187,[],[[16,[[462,[-1,-2]]]]]]]],[-3,[[410,[-1,-2]]],[[9,[],[[8,[]]]],80,481],[],[[187,[],[[16,[[410,[-1,-2]]]]]]]],[-3,[[410,[-1,-2]]],[[9,[],[[8,[]]]],481],[],[[187,[],[[16,[[410,[-1,-2]]]]]]]],[-3,[[463,[-1,-2]]],[[9,[],[[8,[]]]],80,481],[],[[187,[],[[16,[[463,[-1,-2]]]]]]]],[-3,[[463,[-1,-2]]],[[9,[],[[8,[]]]],481],[],[[187,[],[[16,[[463,[-1,-2]]]]]]]],[438,438],[[[476,[-1,-2,-3]],[476,[-1,-4,-2]]],[[476,[-1,-4,-3]]],448,[],[],[]],[[[473,[-1,-2,-3]],[473,[-1,-3,-4]]],[[473,[-1,-2,-4]]],[],[],[],[]],[[[362,[-1,-2,-3]],[362,[-1,-3,-4]]],[[362,[-1,-2,-4]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[],[]],[[[472,[-1,-2,-3]],[472,[-1,-3,-4]]],[[472,[-1,-2,-4]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[],[]],[[[477,[-1,-2,-3]],[477,[-1,-3,-4]]],[[477,[-1,-2,-4]]],[],[],[],[]],[[[362,[-1,-2,-3]],[411,[-1]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],481,438],[],[]],[[[472,[-1,-2,-3]],-1,-1,-1,[411,[-1]]],[[472,[-1,-2,-3]]],[[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],[439,[],[[8,[]]]],80,481,479,438],[],[]],[[[362,[-1,-2,-3]],-1,-1],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481],[],[]],[[[472,[-1,-2,-3]],-1,-1,-1],[[472,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[362,[-1,-2,-3]],[410,[-1,-3]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[472,[-1,-2,-3]],[463,[-1,-3]]],[[472,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]],481,479],[],[]],[[[465,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[472,[-1,-2,-3]]],[[362,[-1,-2,-3]]],80,[],[]],[[[463,[-1,-2]]],[[410,[-1,-2]]],80,[]],[[[389,[-1,-2]]],[[465,[-1,-2]]],[481,80],[]],[[[476,[-1,-2,-3]]],[[473,[-1,-2,-3]]],448,[],[]],[[[362,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[481,479,80],[],[]],[[[410,[-1,-2]]],[[463,[-1,-2]]],[481,80],[]],[[[389,[-1,-2]]],[[15,[-1]]],80,[]],[[[465,[-1,-2]]],[[15,[-1]]],80,[]],[[[449,[-1,-2]]],[[15,[-1]]],80,[]],[[[462,[-1,-2]]],[[15,[-1]]],80,[]],[[[362,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[472,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[468,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[469,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[410,[-1,-2]]],[[15,[-1]]],80,[]],[[[463,[-1,-2]]],[[15,[-1]]],80,[]],[[[465,[-1,-2]]],[[15,[-1]]],[479,80],[]],[[[463,[-1,-2]]],[[15,[-1]]],[481,80],[]],[[[362,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[472,[-1,-2,-3]]],[[15,[-1]]],80,[],[]],[[[362,[-1,-2,-3]]],[[15,[[15,[-1]]]]],80,[],[]],[[[472,[-1,-2,-3]]],[[15,[[15,[-1]]]]],80,[],[]],[[[472,[-1,-2,-3]]],[[15,[[15,[-1]]]]],80,[],[]],[[[474,[-1,-2]]],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[414,[-1,-2]]],[[414,[12,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[12,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[12,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[12,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[12,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[12,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[12,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[12,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[12,-2]]],[434,80],[]],[[[414,[-1,-2]]],[[414,[66,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[66,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[66,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[66,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[66,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[66,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[66,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[66,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[66,-2]]],[434,80],[]],[[[414,[-1,-2]]],[[414,[219,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[219,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[219,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[219,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[219,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[219,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[219,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[219,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[219,-2]]],[434,80],[]],[[[414,[-1,-2]]],[[414,[68,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[68,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[68,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[68,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[68,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[68,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[68,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[68,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[68,-2]]],[434,80],[]],[[[414,[-1,-2]]],[[67,[[414,[-1,-2]]]]],[80,236],[]],[[[475,[-1,-2]]],[[67,[[475,[-1,-2]]]]],[80,236],[]],[[[474,[-1,-2]]],[[67,[[474,[-1,-2]]]]],[80,481,236],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[410,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[463,[-1,-2]]],[[465,[-1,-2]]],80,[]],[[[480,[-1,-2]]],[[67,[[389,[-1,-2]]]]],[80,[439,[],[[8,[]]]],481,236],[]],[[[480,[-1,-2]]],[[67,[[465,[-1,-2]]]]],[80,[439,[],[[8,[]]]],481,236],[]],[[[414,[-1,-2]]],[[474,[-1,-2]]],[80,[125,[],[[8,[]]]]],[]],[[[410,[-1,-2]]],[[449,[-1,-2]]],80,[]],[[[476,[-1,-2,-3]]],[[362,[-1,-2,-3]]],[80,[9,[],[[8,[]]]],[125,[],[[8,[]]]],[79,[],[[8,[]]]],447,438],[],[]],[[[473,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[],[],[]],[[[468,[-1,-2,-3]]],[[362,[-1,-2,-3]]],[481,479,80],[],[]],[[[469,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[481,479,80],[],[]],[[[410,[-1,-2]]],[[362,[-1,-2,-2]]],[481,479,80],[]],[[[463,[-1,-2]]],[[472,[-1,-2,-2]]],[481,479,80],[]],[[[477,[-1,-2,-3]]],[[472,[-1,-2,-3]]],[],[],[]],[[[389,[-1,-2]]],[[11,[-1,-1]]],80,[]],[[[465,[-1,-2]]],[[11,[-1,-1,-1]]],80,[]],[[[449,[-1,-2]]],[[11,[-1,-1]]],80,[]],[[[462,[-1,-2]]],[[11,[-1,-1,-1]]],80,[]],[[[468,[-1,-2,-3]]],[[11,[-1,-1]]],80,[],[]],[[[469,[-1,-2,-3]]],[[11,[-1,-1,-1]]],80,[],[]],[[[410,[-1,-2]]],[[11,[-1,-1]]],80,[]],[[[463,[-1,-2]]],[[11,[-1,-1,-1]]],80,[]],[[[465,[-1,-2]]],[[11,[-1,-1,-1,-1]]],[479,80],[]],[[[463,[-1,-2]]],[[11,[-1,-1,-1,-1]]],[481,80],[]],[[[414,[-1,-2]]],[[414,[65,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[65,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[65,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[65,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[65,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[65,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[65,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[65,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[65,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[70,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[70,-2]]],[434,80],[]],[[[414,[-1,-2]]],[[414,[-1,361]]],80,[]],[[[475,[-1,-2]]],[[475,[-1,361]]],80,[]],[[[389,[-1,-2]]],[[389,[-1,361]]],80,[]],[[[465,[-1,-2]]],[[465,[-1,361]]],80,[]],[[[474,[-1,-2]]],[[474,[-1,361]]],80,[]],[[[476,[-1,-2,-3]]],[[476,[-1,361,361]]],80,[],[]],[[[473,[-1,-2,-3]]],[[473,[-1,361,361]]],80,[],[]],[[[449,[-1,-2]]],[[449,[-1,361]]],80,[]],[[[462,[-1,-2]]],[[462,[-1,361]]],80,[]],[[[362,[-1,-2,-3]]],[[362,[-1,361,361]]],80,[],[]],[[[472,[-1,-2,-3]]],[[472,[-1,361,361]]],80,[],[]],[[[468,[-1,-2,-3]]],[[468,[-1,361,361]]],80,[],[]],[[[469,[-1,-2,-3]]],[[469,[-1,361,361]]],80,[],[]],[[[410,[-1,-2]]],[[410,[-1,361]]],80,[]],[[[463,[-1,-2]]],[[463,[-1,361]]],80,[]],[[[477,[-1,-2,-3]]],[[477,[-1,361,361]]],[],[],[]],[[[414,[-1,-2]]],[[414,[44,-2]]],[434,80],[]],[[[475,[-1,-2]]],[[475,[44,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[389,[44,-2]]],[434,80],[]],[[[465,[-1,-2]]],[[465,[44,-2]]],[434,80],[]],[[[474,[-1,-2]]],[[474,[44,-2]]],[434,80],[]],[[[449,[-1,-2]]],[[449,[44,-2]]],[434,80],[]],[[[462,[-1,-2]]],[[462,[44,-2]]],[434,80],[]],[[[410,[-1,-2]]],[[410,[44,-2]]],[434,80],[]],[[[463,[-1,-2]]],[[463,[44,-2]]],[434,80],[]],[[[389,[-1,-2]]],[[410,[-1,-2]]],80,[]],[[[465,[-1,-2]]],[[463,[-1,-2]]],80,[]],[[[449,[-1,-2]]],[[410,[-1,-2]]],80,[]],[[[462,[-1,-2]]],[[463,[-1,-2]]],80,[]],[[[468,[-1,-2,-3]]],[[410,[-1,-2]]],80,[],[]],[[[469,[-1,-2,-3]]],[[463,[-1,-2]]],80,[],[]],0,[[[468,[-1,-2,-3]],[414,[-1,-2]]],[[414,[-3]]],[9,80],[],[]],[[[466,[-1,-2,-3]],[414,[-1,-2]]],[[414,[-3]]],[80,79],[],[]],[[[469,[-1,-2,-3]],[414,[-1,-2]]],[[414,[-3]]],[9,80],[],[]],[[[466,[-1,-2,-3]],[475,[-1,-2]]],[[475,[-3]]],[80,79],[],[]],[[[469,[-1,-2,-3]],[475,[-1,-2]]],[[475,[-3]]],[9,80],[],[]],[[[476,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-1,-3]]],448,[],[]],[[[476,[-1,361,361]],[389,[-1,361]]],[[389,[-1,361]]],422],[[[466,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-3]]],[80,79],[],[]],[[[466,[-1,361,361]],[389,[-1,361]]],[[389,[-1,361]]],422],[[[362,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[362,[-1,361,361]],[389,[-1,361]]],[[389,[-1,361]]],422],[[[468,[-1,361,361]],[389,[-1,361]]],[[389,[-1,361]]],422],[[[468,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-3]]],[9,80],[],[]],[[[473,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-1,-3]]],[],[],[]],[[[472,[-1,-2,-3]],[389,[-1,-2]]],[[67,[[389,[-1,-3]]]]],[[439,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[469,[-1,-2,-3]],[389,[-1,-2]]],[[389,[-3]]],[9,80],[],[]],[[[472,[-1,-2,-3]],[389,[-1,-2]]],[[480,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[473,[-1,-2,-3]],[465,[-1,-2]]],[[465,[-1,-3]]],[],[],[]],[[[466,[-1,-2,-3]],[465,[-1,-2]]],[[465,[-3]]],[80,79],[],[]],[[[472,[-1,-2,-3]],[465,[-1,-2]]],[[67,[[465,[-1,-3]]]]],[[439,[],[[8,[]]]],481,236,80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[469,[-1,-2,-3]],[465,[-1,-2]]],[[465,[-3]]],[9,80],[],[]],[[[472,[-1,-2,-3]],[465,[-1,-2]]],[[480,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[466,[-1,-2,-3]],[474,[-1,-2]]],[[474,[-3]]],[80,79],[],[]],[[[468,[-1,-2,-3]],[474,[-1,-2]]],[[474,[-3]]],[[9,[],[[8,[]]]],80],[],[]],[[[469,[-1,-2,-3]],[474,[-1,-2]]],[[474,[-1,-3]]],[[9,[],[[8,[]]]],80],[],[]],[[[466,[-1,-2,-3]],[449,[-1,-2]]],[[449,[-3]]],[80,79],[],[]],[[[468,[-1,-2,-3]],[449,[-1,-2]]],[[449,[-1,-3]]],[],[],[]],[[[469,[-1,-2,-3]],[449,[-1,-2]]],[[449,[-1,-3]]],[],[],[]],[[[476,[-1,-2,-3]],[410,[-1,-2]]],[[410,[-1,-3]]],448,[],[]],[[[476,[-1,361,361]],[410,[-1,361]]],[[410,[-1,361]]],422],[[[466,[-1,-2,-3]],[410,[-1,-2]]],[[410,[-3]]],[80,79],[],[]],[[[466,[-1,361,361]],[410,[-1,361]]],[[410,[-1,361]]],422],[[[362,[-1,-2,-3]],[410,[-1,-2]]],[[410,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[362,[-1,361,361]],[410,[-1,361]]],[[410,[-1,361]]],422],[[[468,[-1,361,361]],[410,[-1,361]]],[[410,[-1,361]]],422],[[[473,[-1,-2,-3]],[410,[-1,-2]]],[[410,[-1,-3]]],[],[],[]],[[[472,[-1,-2,-3]],[410,[-1,-2]]],[[410,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[473,[-1,-2,-3]],[463,[-1,-2]]],[[463,[-1,-3]]],[],[],[]],[[[472,[-1,-2,-3]],[463,[-1,-2]]],[[463,[-1,-3]]],[80,[9,[],[[8,[]]]],[79,[],[[8,[]]]]],[],[]],[[[414,[-1,-2]],[410,[-1,-2]]],[[414,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[475,[-1,-2]],[463,[-1,-2]]],[[475,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[[474,[-1,-2]],[410,[-1,-2]]],[[474,[-1,-2]]],[80,[9,[],[[8,[]]]]],[]],[[-1,-1],[[362,[-1,-2,-3]]],[481,479],[],[]],[[-1,-1,-1],[[472,[-1,-2,-3]]],[481,479],[],[]],0,[[[414,[-1,-2]]],[[67,[[414,[-3,-2]]]]],[434,80],[],434],[[[475,[-1,-2]]],[[67,[[475,[-3,-2]]]]],[434,80],[],434],[[[464,[-1,-2]]],[[67,[[464,[-3,-2]]]]],[434,32],[],434],[[[389,[-1,-2]]],[[67,[[389,[-3,-2]]]]],[434,80],[],434],[[[465,[-1,-2]]],[[67,[[465,[-3,-2]]]]],[434,80],[],434],[[[474,[-1,-2]]],[[67,[[474,[-3,-2]]]]],[434,80],[],434],[[[466,[-1,-2,-3]]],[[67,[[466,[-4,-2,-3]]]]],434,[],[],434],[[[449,[-1,-2]]],[[67,[[449,[-3,-2]]]]],[434,80],[],434],[[[462,[-1,-2]]],[[67,[[462,[-3,-2]]]]],[434,80],[],434],[[[362,[-1,-2,-3]]],[[67,[[362,[-4,-2,-3]]]]],[434,80],[],[],434],[[[472,[-1,-2,-3]]],[[67,[[472,[-4,-2,-3]]]]],[434,80],[],[],434],[[[410,[-1,-2]]],[[67,[[410,[-3,-2]]]]],[434,80],[],434],[[[463,[-1,-2]]],[[67,[[463,[-3,-2]]]]],[434,80],[],434],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[[[410,[-1,-2]]],[[67,[[410,[-1,-2]]]]],448,[]],[[[463,[-1,-2]]],[[67,[[463,[-1,-2]]]]],448,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[414,[-1,-2]],[414,[-1,-2]]],[[414,[-1,-2]]],[80,236],[]],[[[475,[-1,-2]],[475,[-1,-2]]],[[475,[-1,-2]]],[80,236],[]],[[[474,[-1,-2]],[474,[-1,-2]]],[[474,[-1,-2]]],[80,236,[9,[],[[8,[]]]],[125,[],[[8,[]]]],481],[]],[[-1,-1,-1,-1],[[473,[-1,-2,-3]]],448,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[-1,-1],[[410,[-1,-2]]],[],[]],[[-1,-1,-1],[[463,[-1,-2]]],[],[]],[[[473,[-1,-2,-3]]],[[463,[-1,361]]],80,[],[]],[[[467,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],[[[475,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[462,[-1,-2]]],-1,[[79,[],[[8,[]]]],80],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[414,[-1,-2]]],-1,[80,[125,[],[[8,[]]]]],[]],[[[475,[-1,-2]]],-1,[80,[125,[],[[8,[]]]]],[]],[[[474,[-1,-2]]],-1,[80,[9,[],[[8,[]]]]],[]],0,0,[[[362,[-1,-2,-3]]],[[362,[-1,-2,-4]]],80,[],[],[]],[[[472,[-1,-2,-3]]],[[472,[-1,-2,-4]]],80,[],[],[]],[[[410,[-1,-2]],-1],[[410,[-1,-2]]],448,[]],[[[410,[-1,-2]],-1],[[410,[-1,-2]]],448,[]],[[[463,[-1,-2]],-1],[[463,[-1,-2]]],448,[]],[[[410,[-1,-2]],-1],[[410,[-1,-2]]],448,[]],[[[463,[-1,-2]],-1],[[463,[-1,-2]]],448,[]],[[[362,[-1,-2,-3]]],[[362,[-1,-4,-3]]],80,[],[],[]],[[[472,[-1,-2,-3]]],[[472,[-1,-4,-3]]],80,[],[],[]],0,0,0,0,0,0,0,0,0,[[[414,[-1,-2]]],[[186,[-1]]],80,[]],[[[475,[-1,-2]]],[[186,[-1]]],80,[]],[[[474,[-1,-2]]],[[186,[-1]]],[80,[9,[],[[8,[]]]]],[]],[[[465,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[463,[-1,-2]]],[[410,[-1,-2]]],80,[]],[471,470],[[[475,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],[[[465,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[463,[-1,-2]]],[[410,[-1,-2]]],80,[]],[471,470],[[[475,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],0,0,0,0,0,0,0,0,0,[[[414,[-1,-2]]],[[186,[-1]]],80,[]],[[[475,[-1,-2]]],[[186,[-1]]],80,[]],[[[474,[-1,-2]]],[[186,[-1]]],[80,[9,[],[[8,[]]]]],[]],[[[389,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[410,[-1,-2]]],[[410,[-1,-2]]],80,[]],[[[465,[-1,-2]]],[[389,[-1,-2]]],80,[]],[[[463,[-1,-2]]],[[410,[-1,-2]]],80,[]],[471,470],[[[475,[-1,-2]]],-1,[80,[79,[],[[8,[]]]],[125,[],[[8,[]]]]],[]],0,0,0,0,0,[[[475,[-1,-2]]],[[186,[-1]]],80,[]],[[],[[414,[-1,-2]]],481,[]],[[],[[475,[-1,-2]]],481,[]],[[],[[464,[-1,-2]]],481,[]],[[],[[389,[-1,-2]]],481,[]],[[],[[389,[-1,-2]]],481,[]],[[],[[465,[-1,-2]]],481,[]],[[],[[465,[-1,-2]]],481,[]],[[],[[474,[-1,-2]]],481,[]],[[],[[467,[-1,-2]]],481,[]],[[],[[449,[-1,-2]]],481,[]],[[],[[449,[-1,-2]]],481,[]],[[],[[462,[-1,-2]]],481,[]],[[],[[462,[-1,-2]]],481,[]],[[],[[410,[-1,-2]]],481,[]],[[],[[410,[-1,-2]]],481,[]],[[],[[463,[-1,-2]]],481,[]],[[],[[463,[-1,-2]]],481,[]],0,[[],-1,[]],[[433,433],35],[[433,433,-1],35,[]],[[-1,-1],-1,236],[[-1,-1],-1,236],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[478,478],[483,483],[[],479],[484,484],[[],481],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[429,[-1]],-1],[[486,[-1]]],422],[[[443,[-1]]],[[67,[[389,[-1,361]]]]],422],[[[444,[-1]]],[[67,[-1]]],422],[[[443,[-1]]],[[11,[44,[67,[44]]]]],422],[[[444,[-1]]],[[11,[44,[67,[44]]]]],422],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[426,[],[[425,[-1]]]],-1],[[426,[],[[425,[-1]]]]],422],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[426,[],[[425,[-1]]]],-1],[[426,[],[[425,[-1]]]]],422],[[[426,[],[[425,[-1]]]],-1],[[410,[-1,361]]],422],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[426,[],[[425,[-1]]]]],[[426,[],[[425,[-1]]]]],422],[[[426,[],[[425,[-1]]]],-1,202],11,422],[[[426,[],[[425,[-1]]]]],[[389,[-1,361]]],422],[[[426,[],[[425,[-1]]]],-1],[[389,[-1,361]]],422],[[[426,[],[[425,[-1]]]],-1],[[11,[[426,[],[[425,[-1]]]],[426,[],[[425,[-1]]]]]]],422],[[[426,[],[[425,[-1]]]],[186,[-1]]],[[426,[],[[425,[-1]]]]],422],[[[426,[],[[425,[-1]]]]],[[389,[-1,361]]],422],[[408,[389,[-1,361]]],[[389,[-1,361]]],[]],[[408,[410,[-1,361]]],[[410,[-1,361]]],[]],[[[426,[],[[425,[-1]]]],-1],-1,422],[[[426,[],[[425,[-1]]]],-1],-1,422],[[-1,-1,-1,-1],[[437,[-1]]],422],[[[410,[-1,361]],[410,[-1,361]]],-1,422],[[[389,[-1,361]],[389,[-1,361]],[389,[-1,361]]],-1,422],[[-1,-1],[[11,[-1,-1]]],45],[[[410,[-1,361]]],[[410,[-1,361]]],422],[[[410,[-1,361]]],[[410,[-1,361]]],45],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[487,[-1]]],[[187,[],[[16,[[389,[12,361]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[[488,12],[[489,[488]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[12,-1],[[489,[-1]]],[[187,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]]],[[-1,-2],[[490,[-2,-1]]],[[408,[12]]],[[187,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]]],[[35,-1],[[487,[-1]]],[[187,[],[[16,[[389,[12,361]]]]]]]],[[[406,[-1]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],[[187,[],[[16,[[378,[[11,[[389,[12,361]],[162,[12]]]],[389,[12,361]]]]]]]]]],[[[489,[-1]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],[[187,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]]],[[[490,[-1,-2]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],[[187,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]],[[408,[12]]]],[[[487,[-1]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],[[187,[],[[16,[[389,[12,361]]]]]]]],[-1,[[487,[-1]]],[[187,[],[[16,[[389,[12,361]]]]]]]],[[[489,[-1]]],[[11,[44,[67,[44]]]]],[[187,[],[[16,[[378,[[389,[12,361]],[389,[12,361]]]]]]]]]],[[488,-1],[[490,[488,-1]]],[[408,[12]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[406,[-1]]],-1,[[187,[],[[16,[[378,[[11,[[389,[12,361]],[162,[12]]]],[389,[12,361]]]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[12,12],[[389,[12,361]]]],0,[[12,12],[[449,[12,361]]]],[[12,12],[[410,[12,361]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[373,[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[162,[12]]],371],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[373,360],[376,360],[376,360],[373,373],[376,376],[397,397],[402,402],[394,394],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[373,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[],373],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[373,35],11],[[376,35],11],[[376,35],11],[[373,[162,[368]]],11],[[376,[162,[368]]],11],[[394,51],[[53,[11,52]]]],[[402,12,-1],11,[[202,[[378,[[11,[[389,[12,361]],[162,[12]]]],[389,[12,361]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[405,360],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[373,[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[162,[12]]],371],[[],373],[44,376],[405,67],[397,[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]]],[402,67],[394,[[67,[[378,[371,386]]]]]],[[],-1,[]],[373,44],[376,44],[376,44],[402,397],[[373,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[376,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[373,44,44],11],[[376,44,44],11],[[376,44,44],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[44,44],373],[373,[[407,[373]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[375,[389,[12,361]]],371],[[375,[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[162,[12]]],371],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[375,44],[375,44],[491,44],[491,44],[399,399],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[375,[389,[12,361]],[389,[12,361]],[389,[12,361]]],371],[[375,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[375,35],11],[[375,35],11],[[491,35],11],[[491,35],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[375,[389,[12,361]]],371],[[375,[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[162,[12]]],371],[[369,44],491],[399,[[67,[368]]]],[399,[[67,[368]]]],[375,44],[491,44],[[375,[389,[12,361]],[389,[12,361]]],371],[[375,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[491,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[375,44,44],11],[[375,44,44],11],[[491,44,44],11],[[491,44,44],11],[399,[[11,[44,[67,[44]]]]]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[375,44],491],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[401,401],[[[400,[-1]]],[[400,[-1]]],32],[[[403,[-1]]],[[403,[-1]]],32],[395,395],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[186,[65]],35],395],[401,[[67,[[378,[371,386]]]]]],[[[400,[-1]]],[[67,[[378,[-1,11]]]]],[]],[[[403,[-1]]],[[67,[[378,[[389,[12,361]],[389,[12,361]]]]]]],393],[395,[[67,[[378,[371,386]]]]]],[-1,[[492,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[409,[389,[12,361]],12,385,[162,[12]]],11],[[409,[389,[12,361]],[410,[12,361]],[411,[12]],385,[162,[12]]],11],[[409,[412,[12]],[162,[12]]],[[11,[371,371]]]],[[409,[389,[12,361]],[162,[12]]],371],[[409,[379,[[389,[12,361]]]],[162,[12]]],11],[[413,[379,[[389,[12,361]]]]],11],[[409,[414,[12,361]],385,[162,[12]]],11],[[409,[414,[12,361]],415,385,[162,[12]]],11],[[413,[410,[12,361]],[411,[12]],377,[389,[12,361]]],11],[[409,[389,[12,361]],[162,[12]]],371],[[[419,[],[[418,[-1]]]]],-1,[]],[413,11],[409,11],[[409,[389,[12,361]],[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]],[389,[12,361]],[389,[12,361]]],11],[[409,35],11],[[409,[378,[[11,[[389,[12,361]],[162,[12]]]],[389,[12,361]]]]],11],[[409,12],[[416,[409]]]],[[488,12],[[489,[488]]]],[[413,12],11],[[409,[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]]],11],[[413,[389,[12,361]]],11],[409,44],[[409,[378,[[389,[12,361]],[389,[12,361]]]],[162,[12]]],11],[[409,[389,[12,361]],[389,[12,361]],[162,[12]]],371],[[413,[389,[12,361]],[389,[12,361]]],11],[[413,[410,[12,361]],[411,[12]],377,[410,[12,361]]],11],[[413,[410,[12,361]],[410,[12,361]],[410,[12,361]]],11],[[413,12],11],[[413,[410,[12,361]]],11],[[413,[410,[12,361]]],11],[[413,[410,[12,361]],[410,[12,361]]],11],[[413,12],11],[[409,44,44],11],[[413,44,44],11],[[413,[389,[12,361]],[389,[12,361]]],11],[[413,[389,[12,361]]],11],[[413,[410,[12,361]],[410,[12,361]]],11],[[413,[410,[12,361]]],11],[[409,-1],[[417,[409,-1]]],[[408,[12]]]],[[488,-1],[[490,[488,-1]]],[[408,[12]]]],[[413,12],11],[409,[[407,[409]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[331,[-1]]],[[331,[-1]]],32],[123,123],[124,124],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,123],124],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[[331,[-1]],[331,[-1]]],35,48],[[123,123],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[331,[-1]],51],[[53,[11,52]]],57],[[123,51],[[53,[11,52]]]],[[124,51],[[53,[11,52]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[24,123],124],[[24,123],124],0,0,[[[284,[],[[218,[-1]]]],-1,123],124,[]],[[24,123],124],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[316,[-1]]],[[316,[-1]]],32],[[-1,-2],11,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[[316,[-1]],51],[[53,[11,52]]],57],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[316,[-1]]],[56,32]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[[[3,[-1]],[67,[-1]]],[[316,[-1]]],[56,32]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[24,111],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[206,206],[111,111],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],111],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,111,10],11,136],[44,11],[44,11],[[206,206],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[206,51],[[53,[11,52]]]],[[111,51],[[53,[11,52]]]],[-1,-1,[]],[23,111],[27,111],[-1,-1,[]],[61,111],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[206,-1],11,74],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[143,29,29,12,12,30,60,59,-1],142,[[39,[143],[[8,[142]]]]]],[-1,206,[[49,[[210,[130]]]]]],[[],-1,[]],[24,111],0,[[[274,[],[[218,[-1]]]],-1],111,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,111,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],206],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[206,[[1,[[67,[10]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,-1],111,[[49,[26]]]],[[111,-1,-2],111,[[49,[27]]],[[49,[31]]]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[493,493],[166,166],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[493,163],[[],166],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,132,-1,28,166],11,[32,71],[[165,[],[[164,[-1]]]]]],[[[494,[-1]],134,-2,-3,139,132,140,10],11,[32,71],[[165,[],[[164,[-1]]]]],[]],[44,11],[44,11],[44,11],[[493,493],35],[[166,166],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[494,[-1]],166],[[494,[-1]]],[]],[[493,51],[[53,[11,52]]]],[[166,51],[[53,[11,52]]]],[-1,-1,[]],[-1,493,[[49,[329]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,493,[[169,[[162,[62]]]],90,78]],[-1,493,[[49,[329]]]],[[65,65,-1],493,[[169,[[162,[62]]]],90,78]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[493,-1],11,74],[[166,-1],11,74],[[[494,[-1]],-2],[[494,[-1]]],[],[[49,[29]]]],[493,70],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,143,-1,29,29,28],142,[],[[165,[],[[164,[-1]]]]]],[[[494,[-1]],134,-2,143],142,[32,71],[[165,[],[[164,[-1]]]]]],[[[494,[-1]],12],[[494,[-1]]],[]],[[[494,[-1]],12],[[494,[-1]]],[]],[[[494,[-1]],134,132,140,10,-2],144,[32,71],[[165,[],[[164,[-1]]]]]],[-1,[[494,[-1]]],[]],[[],-1,[]],[[[494,[-1]],134,21,132,140,-2,151,[131,[-3]],10],152,[32,71],[[165,[],[[164,[-1]]]]],[]],[[[494,[-1]],-2],[[494,[-1]]],[],[[49,[31]]]],[[[494,[-1]],12],[[494,[-1]]],[]],[[[494,[-1]]],[[34,[29]]],[32,71]],[[[494,[-1]]],157,[32,71]],[[[494,[-1]]],158,[32,71]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,[[494,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[494,[-1]],-2],[[494,[-1]]],[],[[49,[29]]]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[495,495],[[-1,-2],11,[],[]],[-1,-2,[],[]],[[],495],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[495,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,495,34],34,165],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[495,35],[[],495],[[],-1,[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[333,[-1,-2,-3,-4]],19],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[333,[-1,-2,-3,-4]]],[[3,[134]]],[80,48],[],[],136],0,[-1,-2,[],[]],[[],[[333,[-1,-2,-3]]],[80,48],[],136],[44,-1,[]],[44,-1,[]],[[[333,[-1,-2,-3,-4]],134],11,[80,48],[],[],136],[-1,-2,[],[]],[[[333,[-1,-2,-3,-4]],134,-4,-3,139,132,140,10],11,[80,48],[],[],136],[44,11],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[17,[],[[16,[[11,[-1,[171,[-2,-3,-4]]]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[3,[-1]],[3,[[171,[-2,-3,-4]]]]],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[29]]]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[333,[-1,-2,-3,-4]],134,-4,143],142,[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[31]]]],[[[333,[-1,-2,-3,-4]],134,132,140,10,-4],144,[80,48],[],[],136],[[],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136],[[],-1,[]],[[[333,[-1,-2,-3,-4]],134,21,132,140,-4,151,[131,[-2]],10],152,[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],134,132,-4,129],11,[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],134,132,-4,7],[[67,[[153,[-2,-3,-4]]]]],[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[30]]]],[[[333,[-1,-2,-3,-4]],-1,-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[[171,[-2,-3,-4]]]]]],[[[333,[-1,-2,-3,-4]],-1,[67,[-5]]],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[[171,[-2,-3,-4]]]]]],[[[333,[-1,-2,-3,-4]]],[[34,[29]]],[80,48],[],[],136],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[31]]]],[[[333,[-1,-2,-3,-4]]],157,[80,48],[],[],136],[[[333,[-1,-2,-3,-4]]],158,[80,48],[],[],136],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[[[333,[-1,-2,-3,-4]],-5],[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[49,[29]]]],[44,[[333,[-1,-2,-3,-4]]],[80,48],[],[],136],[-5,[[333,[-1,-2,-3,-4]]],[80,48],[],[],136,[[17,[],[[16,[[11,[-1,[171,[-2,-3,-4]]]]]]]]]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,121],[[],-1,[]],[[],496],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[496,51],[[53,[11,52]]]],[[121,51],[[53,[11,52]]]],[[[497,[-1,-2,-3,-4]],-5],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149,49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[496,[162,[-1]],[67,[44]],-3,[67,[40]]],[[497,[-1,-2,-4,-5]]],[296,32],[],[[202,[-1],[[8,[-2]]]]],244,149],[[],496],[[],-1,[]],[[[497,[-1,-2,-3,-4]],6,12],[[153,[-2,-3,-4]]],[296,32],[],244,149],[[[497,[-1,-2,-3,-4]],-5],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149,[[49,[30]]]],0,0,[[[244,[],[[218,[-1]]]],-1],121,[]],0,[[[497,[-1,-2,-3,-4]],-5],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149,[[49,[196]]]],[[[497,[-1,-2,-3,-4]],212],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149],[[[497,[-1,-2,-3,-4]],-5],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149,[[49,[31]]]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[497,[-1,-2,-3,-4]],12],[[497,[-1,-2,-3,-4]]],[296,32],[],244,149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[334,[-1]],335,498],[[67,[335]]],[]],[[[499,[-1,-2,-3]]],[[499,[-1,-2,-3]]],[],274,136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[500,132,6],35],[[[336,[-1,-2,-3]],132,6],35,[],274,136],[[[336,[-1,-2,-3]],-4],[[336,[-1,-2,-3]]],[],274,136,49],[[[499,[-1,-2,-3]],-4],[[499,[-1,-2,-3]]],[],274,136,49],[501,501],[[[502,[-1]]],[[502,[-1]]],32],[498,498],[503,503],[335,335],[504,504],[[[334,[-1]]],[[334,[-1]]],32],[342,342],[505,505],[506,506],[507,507],[343,343],[114,114],[508,508],[509,509],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[334,[-1]],335],[[67,[[11,[-1,335]]]]],[]],[[335,335],82],[[504,504],82],0,[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[499,[-1,-2,-3]],-4],[[499,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[24,114],[[],-1,[]],[[],506],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[336,[-1,-2,-3]],134,-3,-2,139,132,140,10],11,[],274,136],[[[499,[-1,-2,-3]],134,-3,-2,139,132,140,10,35],11,[],274,136],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[334,[-1]],335,505],11,[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[501,501],35],[[498,498],35],[[335,335],35],[[504,504],35],[[114,114],35],[[508,508],35],[[509,509],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[501,51],[[53,[11,52]]]],[[[502,[-1]],51],[[53,[11,52]]],57],[[498,51],[[53,[11,52]]]],[[503,51],[[53,[11,52]]]],[[335,51],[[53,[11,52]]]],[[504,51],[[53,[11,52]]]],[[[334,[-1]],51],[[53,[11,52]]],57],[[342,51],[[53,[11,52]]]],[[505,51],[[53,[11,52]]]],[[506,51],[[53,[11,52]]]],[[507,51],[[53,[11,52]]]],[[343,51],[[53,[11,52]]]],[[[510,[-1]],51],[[53,[11,52]]],57],[[114,51],[[53,[11,52]]]],[[508,51],[[53,[11,52]]]],[[509,51],[[53,[11,52]]]],[-1,-1,[]],[-4,[[336,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[334,[-1]],335],[[67,[-1]]],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[334,[-1]],335],[[67,[-1]]],[]],[[501,-1],11,74],[[503,-1],11,74],[[335,-1],11,74],[[504,-1],11,74],0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[334,[-1]]],35,[]],[[[499,[-1,-2,-3]],132,6],35,[],274,136],[[[334,[-1]]],[[0,[[187,[],[[16,[[11,[335,-1]]]]]]]]],[]],[[[510,[-1]]],[[41,[187]]],[]],[[[334,[-1]]],[[0,[[187,[],[[16,[[11,[335,-1]]]]]]]]],[]],[[[334,[-1]]],503,[]],[[[510,[-1]]],503,[]],[[[334,[-1]]],44,[]],[[[334,[-1]],335],11,[]],[[[334,[-1]]],[[67,[335]]],[]],[[[334,[-1]],335,507],11,[]],[-4,[[336,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[-4,[[499,[-1,-2,-3]]],[],274,136,[[49,[[171,[-1,-2,-3]]]]]],[-1,[[11,[[334,[-1]],335]]],[]],[[],-1,[]],[[[499,[-1,-2,-3]],-4],[[499,[-1,-2,-3]]],[],274,136,[[49,[30]]]],[[503,12,34],[[511,[335,10]]]],0,[[335,335],[[67,[82]]]],[[504,504],[[67,[82]]]],0,0,[[[334,[-1]],504,12],11,[]],[[[334,[-1]]],11,[]],[[501,10,12,12],[[11,[10,10]]]],[[[334,[-1]],501,335,-1],[[67,[[11,[335,504]]]]],[]],0,[[501,10,12,12],10],[[503,12,34],[[511,[504,[11,[501,10,12]]]]]],[[[334,[-1]],335,335,506],11,[]],[503,[[0,[[187,[],[[16,[504]]]]]]]],0,[[[290,[],[[218,[-1]]]],-1],114,[]],[[[336,[-1,-2,-3]],-4],[[336,[-1,-2,-3]]],[],274,136,[[40,[-2],[[8,[111]]]]]],[[[499,[-1,-2,-3]],-4],[[499,[-1,-2,-3]]],[],274,136,[[40,[-2],[[8,[111]]]]]],[[[334,[-1]],335,335],11,[]],[[[336,[-1,-2,-3]],[499,[-1,-2,-3]]],[[336,[-1,-2,-3]]],[],274,136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-2,[[334,[-1]]],[],[[49,[[502,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[512,512],[513,513],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[513,513],35],[[512,51],[[53,[11,52]]]],[[513,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[515,[335,-1,[514,[175]]]],[502,[-1]],44],512,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[512,503],0,[513,[[67,[[11,[335,6]]]]]],[513,[[67,[[11,[504,501]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[330,[-1]]],[[330,[-1]]],32],[[[516,[-1]]],[[516,[-1]]],32],[119,119],[120,120],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,119],120],[[],-1,[]],[[],[[330,[-1]]],[]],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[[[330,[-1]],[330,[-1]]],35,48],[[[516,[-1]],[516,[-1]]],35,48],[[119,119],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[330,[-1]],51],[[53,[11,52]]],57],[[[516,[-1]],51],[[53,[11,52]]],57],[[119,51],[[53,[11,52]]]],[[120,51],[[53,[11,52]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],-1,[]],0,0,0,[[[297,[],[[218,[-1]]]],-1,119],120,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[[-1,-2],11,[],[]],[-1,-2,[],[]],[24,98],[[],-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[98,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,98],[24,98],[[[299,[],[[218,[-1]]]],-1],98,[]],[24,98],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[517,517],[518,518],[519,519],[101,101],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,101],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[517,517],35],[[518,518],35],[[519,519],35],[[101,101],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[341,51],[[53,[11,52]]]],[[517,51],[[53,[11,52]]]],[[518,51],[[53,[11,52]]]],[[519,51],[[53,[11,52]]]],[[519,51],[[53,[11,52]]]],[[101,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[520,519],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[341,519]]],[[169,[[162,[62]]]]]],[[[282,[],[[218,[-1]]]],-1],101,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,518],[[53,[341,519]]],[[169,[[162,[62]]]]]],[[-1,517,518],[[53,[341,519]]],[[169,[[162,[62]]]]]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,99],[100,100],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,99],100],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[99,99],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[99,51],[[53,[11,52]]]],[[100,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[301,[],[[218,[-1]]]],-1,99],100,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[521,521],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[24,122],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[521,12],[[11,[12,12]]]],0,[[122,51],[[53,[11,52]]]],[[521,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[303,[],[[218,[-1]]]],-1],122,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[344,214],[344,214],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[522,523],522],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[344,10],[214,214],[215,215],[346,346],[522,522],[523,523],[207,207],[344,344],[117,117],[118,118],[524,524],[525,525],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[344,10],[[24,117],118],[[],-1,[]],[[],214],[[],215],[[],346],[[],522],[[],523],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[214,214],35],[[215,215],35],[[346,346],35],[[522,522],35],[[523,523],35],[[207,207],35],[[117,117],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[214,51],[[53,[11,52]]]],[[215,51],[[53,[11,52]]]],[[346,51],[[53,[11,52]]]],[[522,51],[[53,[11,52]]]],[[523,51],[[53,[11,52]]]],[[207,51],[[53,[11,52]]]],[[344,51],[[53,[11,52]]]],[[117,51],[[53,[11,52]]]],[[118,51],[[53,[11,52]]]],[[524,51],[[53,[11,52]]]],[[525,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2],70,[71,72],73],[[207,-1],11,74],[346,[[67,[522]]]],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[522,-1],522,[[49,[31]]]],[[],522],[-1,207,[[49,[[210,[130]]]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[344,215],[[207,214],[[1,[-1]]],[]],0,[[522,-1],522,[[49,[31]]]],[[207,215],[[1,[-1]]],[]],[[[292,[],[[218,[-1]]]],-1,117],118,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],207],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[346,[[67,[522]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[522,-1],522,[[49,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[526,526],[527,527],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],528],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[323,[],[[84,[-1]],[529,[-2]]]],-1,140,10],-2,42,530],[44,11],[44,11],[44,11],[[527,527],35],[[526,51],[[53,[11,52]]]],[[528,51],[[53,[11,52]]]],[[527,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[528,[[67,[-1]]],[]],[528,[[67,[-1]]],[]],[528,35],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[526,34],[[[323,[],[[84,[-1]],[529,[-2]]]],-1,10,140],144,42,530],[[],-1,[]],[526,65],[526,[[34,[65]]]],[526,65],[[530,531,532,533,528,10,526],11],[526,14],[[530,534,528,535,[10,[65]]],11],[526,66],[[528,-1],11,90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[[323,[],[[84,[-1]],[529,[-2]]]],-1,527,10,140,[131,[-3]]],[[11,[152,[67,[-3]]]]],42,530,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[65]],66],526],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[533,533],0,0,0,[[],536],[[],537],[[],538],[[],539],[[],540],[[],541],[[],542],[[],543],[[],544],[[],545],[[],537],[[],537],0,0,0,0,0,0,[[],35],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[546,547],[546,548],[[549,-2],[[67,[-1]]],[],[[39,[67],[[8,[-1]]]]]],[550,67],[[551,-2],-1,[],[[39,[67],[[8,[-1]]]]]],[[531,-2],[[67,[-1]]],[],[[39,[67],[[8,[-1]]]]]],[[552,-1],11,[[39,[67]]]],[552,[[553,[552]]]],[554,[[162,[62]]]],[555,[[162,[62]]]],[556,[[162,[62]]]],0,0,0,0,0,0,[[533,557],[[67,[533]]]],0,0,0,0,0,0,0,0,0,[[534,558],559],[[560,65],11],[[560,561,65],11],[[559,561,65],11],[[534,562],560],0,0,0,0,0,0,[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],[536,65],[536,65],[537,70],[537,70],[538,65],[538,65],[539,65],[539,65],[540,65],[540,65],[541,65],[541,65],[542,65],[542,65],[543,65],[543,65],[544,65],[544,65],[545,62],[545,62],[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],0,[[533,[67,[557]]],[[67,[65]]]],[533,[[11,[65,65]]]],[[533,[67,[557]]],[[67,[65]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[563,563],35],[[563,563,35,-1],11,[[202,[130,70,70]]]],0,[[534,546,70,[67,[70]]],11],[[534,552,564],11],[565,565],[566,566],[536,536],[[[567,[-1]]],[[567,[-1]]],32],[537,537],[538,538],[563,563],[568,568],[539,539],[569,569],[570,570],[571,571],[540,540],[572,572],[573,573],[[[574,[-1]]],[[574,[-1]]],[]],[575,575],[576,576],[577,577],[578,578],[579,579],[580,580],[581,581],[582,582],[583,583],[584,584],[585,585],[586,586],[541,541],[587,587],[588,588],[589,589],[590,590],[591,591],[592,592],[547,547],[533,533],[548,548],[[[593,[-1]]],[[593,[-1]]],32],[594,594],[[[595,[-1]]],[[595,[-1]]],32],[596,596],[597,597],[598,598],[542,542],[599,599],[600,600],[601,601],[602,602],[603,603],[562,562],[604,604],[605,605],[606,606],[[[607,[-1]]],[[607,[-1]]],32],[608,608],[609,609],[610,610],[611,611],[558,558],[612,612],[613,613],[614,614],[615,615],[616,616],[617,617],[618,618],[619,619],[620,620],[621,621],[622,622],[623,623],[624,624],[625,625],[626,626],[627,627],[543,543],[628,628],[629,629],[544,544],[630,630],[631,631],[632,632],[633,633],[634,634],[635,635],[557,557],[636,636],[637,637],[638,638],[[[639,[-1]]],[[639,[-1]]],32],[640,640],[641,641],[642,642],[643,643],[644,644],[645,645],[646,646],[647,647],[[[648,[-1]]],[[648,[-1]]],32],[[[553,[-1]]],[[553,[-1]]],32],[649,649],[[[650,[-1]]],[[650,[-1]]],32],[564,564],[651,651],[652,652],[545,545],[653,653],[654,654],[655,655],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[568,568],82],[[539,539],82],[[569,569],82],[[[574,[-1]],[574,[-1]]],82,[]],[[630,630],82],0,0,0,0,0,[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],0,0,0,0,[572,632],[536,536],[537,537],[538,538],[539,539],[540,540],[541,541],[542,542],[543,543],[544,544],[545,545],[[],539],[533,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[533,557],62],[[549,531,[656,[[3,[533]]]]],11],0,0,[[536,536],35],[[537,537],35],[[538,538],35],[[539,539],35],[[540,540],35],[[541,541],35],[[542,542],35],[[543,543],35],[[544,544],35],[[545,545],35],[536,35],[537,35],[539,35],[540,35],[541,35],[542,35],[543,35],[544,35],[545,35],[[534,546,70,546,70,70],11],[[534,[648,[546]],[553,[552]],635],11],[[534,[553,[552]],[648,[546]],635],11],[[534,[553,[552]],[553,[552]],635],11],0,0,0,[[550,[657,[-1]]],551,658],[[531,603],659],[[531,616],660],[[531,[661,[[67,[130]]]]],546],[[531,[661,[[67,[130]]]]],546],[[531,662],546],[[531,[663,[[67,[130]]]]],534],[[531,613],664],[[551,[665,[-1]],[666,[[67,[130]]]],[67,[667]]],[[53,[[11,[531,532]],621]]],658],[[531,600],668],[[531,[669,[[67,[130]]]]],561],[[531,617],670],[[531,608],671],[[531,601],672],[[531,589],673],[[531,674],673],[[531,589],673],[[550,-1],[[53,[549,623]]],[[49,[675]]]],[[550,676],[[53,[549,623]]]],[[531,[677,[[67,[130]],[162,[533]]]]],552],[[531,[677,[[67,[130]],[162,[533]]]]],552],[[531,532,[677,[[67,[130]],[162,[533]]]],678,[162,[62]]],552],[[552,599],535],0,[[],538],[[],566],[[],536],[[],[[567,[-1]]],[]],[[],537],[[],538],[[],563],[[],568],[[],572],[[],575],[[],576],[[],579],[[],580],[[],582],[[],584],[[],550],[[],585],[[],[[593,[-1]]],42],[[],594],[[],[[595,[-1]]],42],[[],542],[[],599],[[],600],[[],601],[[],562],[[],609],[[],611],[[],558],[[],614],[[],615],[[],617],[[],618],[[],622],[[],628],[[],629],[[],679],[[],631],[[],634],[[],635],[[],557],[[],636],[[],637],[[],[[639,[-1]]],42],[[],641],[[],642],[[],643],[[],564],[[],653],[[],654],[[],680],0,0,0,[552,65],0,0,0,0,0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[554],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[556,[[162,[62]]]],[44,-1,[]],[555],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[554],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[555],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,[531,11],[546,11],[552,11],0,0,[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[552,632],0,0,[[559,65,65,65],11],[[559,546,70],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],563],[[],563],[[560,[186,[65]],[186,[65]]],11],[[560,[186,[65]],[186,[65]]],11],[[670,[186,[65]],[186,[65]]],11],[[670,[186,[65]],[186,[65]]],11],[[560,[186,[65]],219,[186,[65]]],11],[[560,[186,[65]],219,[186,[65]]],11],[[670,[186,[65]],219,[186,[65]]],11],[[670,[186,[65]],219,[186,[65]]],11],[[560,546,70],11],[[560,546,70],11],[[670,546,70],11],[[670,546,70],11],[[560,546,70],11],[[560,546,70],11],[[670,546,70],11],[[670,546,70],11],0,0,[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[549,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[554,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[551,11],[531,11],[44,11],[44,11],[44,11],[44,11],[546,11],[44,11],[44,11],[552,11],[44,11],[44,11],[535,11],[672,11],[44,11],[44,11],[660,11],[44,11],[659,11],[44,11],[673,11],[44,11],[44,11],[44,11],[44,11],[668,11],[671,11],[44,11],[44,11],[664,11],[681,11],[44,11],[534,11],[44,11],[560,11],[44,11],[44,11],[44,11],[559,11],[44,11],[44,11],[682,11],[44,11],[561,11],[44,11],[44,11],[532,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[683,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[556,11],[44,11],[555,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,0,[[],536],[[],537],[[],538],[[],539],[[],540],[[],541],[[],542],[[],543],[[],544],[[],545],[-1,-2,[],[[168,[167]]]],[-1,-2,[],[[168,[167]]]],[560,11],0,0,[560,11],[559,11],0,0,0,0,0,[[550,536],[[3,[551]]]],[[565,565],35],[[566,566],35],[[536,536],35],[[[567,[-1]],[567,[-1]]],35,48],[[537,537],35],[[538,538],35],[[563,563],35],[[568,568],35],[[539,539],35],[[569,569],35],[[570,570],35],[[571,571],35],[[540,540],35],[[572,572],35],[[573,573],35],[[[574,[-1]],[574,[-1]]],35,[]],[[575,575],35],[[576,576],35],[[577,577],35],[[578,578],35],[[579,579],35],[[580,580],35],[[581,581],35],[[582,582],35],[[583,583],35],[[584,584],35],[[585,585],35],[[541,541],35],[[590,590],35],[[591,591],35],[[592,592],35],[[533,533],35],[[[593,[-1]],[593,[-1]]],35,48],[[594,594],35],[[[595,[-1]],[595,[-1]]],35,48],[[542,542],35],[[599,599],35],[[601,601],35],[[604,604],35],[[609,609],35],[[611,611],35],[[612,612],35],[[614,614],35],[[615,615],35],[[617,617],35],[[618,618],35],[[619,619],35],[[620,620],35],[[622,622],35],[[624,624],35],[[625,625],35],[[626,626],35],[[627,627],35],[[543,543],35],[[628,628],35],[[629,629],35],[[544,544],35],[[630,630],35],[[631,631],35],[[632,632],35],[[633,633],35],[[634,634],35],[[635,635],35],[[557,557],35],[[636,636],35],[[637,637],35],[[638,638],35],[[[639,[-1]],[639,[-1]]],35,48],[[640,640],35],[[642,642],35],[[643,643],35],[[644,644],35],[[645,645],35],[[646,646],35],[[647,647],35],[[649,649],35],[[564,564],35],[[651,651],35],[[545,545],35],[[654,654],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[560,-1],11,[[17,[],[[16,[682]]]]]],[[536,-1],11,[[17,[],[[16,[536]]]]]],[[537,-1],11,[[17,[],[[16,[537]]]]]],[[538,-1],11,[[17,[],[[16,[538]]]]]],[[539,-1],11,[[17,[],[[16,[539]]]]]],[[540,-1],11,[[17,[],[[16,[540]]]]]],[[541,-1],11,[[17,[],[[16,[541]]]]]],[[542,-1],11,[[17,[],[[16,[542]]]]]],[[543,-1],11,[[17,[],[[16,[543]]]]]],[[544,-1],11,[[17,[],[[16,[544]]]]]],[[545,-1],11,[[17,[],[[16,[545]]]]]],0,[551,537],[531,537],[534,681],[[670,[684,[[67,[130]]]]],682],0,0,0,[[565,51],[[53,[11,52]]]],[[566,51],[[53,[11,52]]]],[[536,51],[[53,[11,52]]]],[[536,51],[[53,[11,52]]]],[[536,51],[[53,[11,52]]]],[[536,51],[[53,[11,52]]]],[[536,51],[[53,[11,52]]]],[[[567,[-1]],51],[[53,[11,52]]],57],[[537,51],[[53,[11,52]]]],[[537,51],[[53,[11,52]]]],[[537,51],[[53,[11,52]]]],[[537,51],[[53,[11,52]]]],[[537,51],[[53,[11,52]]]],[[538,51],[[53,[11,52]]]],[[538,51],[[53,[11,52]]]],[[538,51],[[53,[11,52]]]],[[538,51],[[53,[11,52]]]],[[538,51],[[53,[11,52]]]],[[563,51],[[53,[11,52]]]],[[568,51],[[53,[11,52]]]],[[539,51],[[53,[11,52]]]],[[539,51],[[53,[11,52]]]],[[539,51],[[53,[11,52]]]],[[539,51],[[53,[11,52]]]],[[539,51],[[53,[11,52]]]],[[549,51],[[53,[11,52]]]],[[569,51],[[53,[11,52]]]],[[570,51],[[53,[11,52]]]],[[571,51],[[53,[11,52]]]],[[540,51],[[53,[11,52]]]],[[540,51],[[53,[11,52]]]],[[540,51],[[53,[11,52]]]],[[540,51],[[53,[11,52]]]],[[540,51],[[53,[11,52]]]],[[572,51],[[53,[11,52]]]],[[573,51],[[53,[11,52]]]],[[[574,[-1]],51],[[53,[11,52]]],[]],[[575,51],[[53,[11,52]]]],[[576,51],[[53,[11,52]]]],[[577,51],[[53,[11,52]]]],[[578,51],[[53,[11,52]]]],[[579,51],[[53,[11,52]]]],[[580,51],[[53,[11,52]]]],[[581,51],[[53,[11,52]]]],[[582,51],[[53,[11,52]]]],[[583,51],[[53,[11,52]]]],[[584,51],[[53,[11,52]]]],[[550,51],[[53,[11,52]]]],[[551,51],[[53,[11,52]]]],[[531,51],[[53,[11,52]]]],[[585,51],[[53,[11,52]]]],[[586,51],[[53,[11,52]]]],[[541,51],[[53,[11,52]]]],[[541,51],[[53,[11,52]]]],[[541,51],[[53,[11,52]]]],[[541,51],[[53,[11,52]]]],[[541,51],[[53,[11,52]]]],[[546,51],[[53,[11,52]]]],[[587,51],[[53,[11,52]]]],[[552,51],[[53,[11,52]]]],[[535,51],[[53,[11,52]]]],[[672,51],[[53,[11,52]]]],[[660,51],[[53,[11,52]]]],[[659,51],[[53,[11,52]]]],[[673,51],[[53,[11,52]]]],[[588,51],[[53,[11,52]]]],[[589,51],[[53,[11,52]]]],[[674,51],[[53,[11,52]]]],[[668,51],[[53,[11,52]]]],[[671,51],[[53,[11,52]]]],[[664,51],[[53,[11,52]]]],[[681,51],[[53,[11,52]]]],[[534,51],[[53,[11,52]]]],[[560,51],[[53,[11,52]]]],[[590,51],[[53,[11,52]]]],[[559,51],[[53,[11,52]]]],[[670,51],[[53,[11,52]]]],[[591,51],[[53,[11,52]]]],[[682,51],[[53,[11,52]]]],[[561,51],[[53,[11,52]]]],[[532,51],[[53,[11,52]]]],[[592,51],[[53,[11,52]]]],[[547,51],[[53,[11,52]]]],[[533,51],[[53,[11,52]]]],[[548,51],[[53,[11,52]]]],[[[593,[-1]],51],[[53,[11,52]]],57],[[594,51],[[53,[11,52]]]],[[[595,[-1]],51],[[53,[11,52]]],57],[[596,51],[[53,[11,52]]]],[[597,51],[[53,[11,52]]]],[[598,51],[[53,[11,52]]]],[[542,51],[[53,[11,52]]]],[[542,51],[[53,[11,52]]]],[[542,51],[[53,[11,52]]]],[[542,51],[[53,[11,52]]]],[[542,51],[[53,[11,52]]]],[[599,51],[[53,[11,52]]]],[[600,51],[[53,[11,52]]]],[[601,51],[[53,[11,52]]]],[[602,51],[[53,[11,52]]]],[[603,51],[[53,[11,52]]]],[[562,51],[[53,[11,52]]]],[[604,51],[[53,[11,52]]]],[[605,51],[[53,[11,52]]]],[[606,51],[[53,[11,52]]]],[[608,51],[[53,[11,52]]]],[[609,51],[[53,[11,52]]]],[[610,51],[[53,[11,52]]]],[[611,51],[[53,[11,52]]]],[[558,51],[[53,[11,52]]]],[[612,51],[[53,[11,52]]]],[[613,51],[[53,[11,52]]]],[[614,51],[[53,[11,52]]]],[[615,51],[[53,[11,52]]]],[[616,51],[[53,[11,52]]]],[[617,51],[[53,[11,52]]]],[[618,51],[[53,[11,52]]]],[[683,51],[[53,[11,52]]]],[[619,51],[[53,[11,52]]]],[[620,51],[[53,[11,52]]]],[[620,51],[[53,[11,52]]]],[[621,51],[[53,[11,52]]]],[[621,51],[[53,[11,52]]]],[[622,51],[[53,[11,52]]]],[[623,51],[[53,[11,52]]]],[[623,51],[[53,[11,52]]]],[[624,51],[[53,[11,52]]]],[[625,51],[[53,[11,52]]]],[[625,51],[[53,[11,52]]]],[[626,51],[[53,[11,52]]]],[[627,51],[[53,[11,52]]]],[[556,51],[[53,[11,52]]]],[[555,51],[[53,[11,52]]]],[[685,51],[[53,[11,52]]]],[[685,51],[[53,[11,52]]]],[[543,51],[[53,[11,52]]]],[[543,51],[[53,[11,52]]]],[[543,51],[[53,[11,52]]]],[[543,51],[[53,[11,52]]]],[[543,51],[[53,[11,52]]]],[[628,51],[[53,[11,52]]]],[[629,51],[[53,[11,52]]]],[[544,51],[[53,[11,52]]]],[[544,51],[[53,[11,52]]]],[[544,51],[[53,[11,52]]]],[[544,51],[[53,[11,52]]]],[[544,51],[[53,[11,52]]]],[[679,51],[[53,[11,52]]]],[[686,51],[[53,[11,52]]]],[[630,51],[[53,[11,52]]]],[[631,51],[[53,[11,52]]]],[[632,51],[[53,[11,52]]]],[[633,51],[[53,[11,52]]]],[[634,51],[[53,[11,52]]]],[[635,51],[[53,[11,52]]]],[[557,51],[[53,[11,52]]]],[[636,51],[[53,[11,52]]]],[[637,51],[[53,[11,52]]]],[[638,51],[[53,[11,52]]]],[[[639,[-1]],51],[[53,[11,52]]],57],[[640,51],[[53,[11,52]]]],[[641,51],[[53,[11,52]]]],[[642,51],[[53,[11,52]]]],[[643,51],[[53,[11,52]]]],[[644,51],[[53,[11,52]]]],[[645,51],[[53,[11,52]]]],[[646,51],[[53,[11,52]]]],[[647,51],[[53,[11,52]]]],[[[648,[-1]],51],[[53,[11,52]]],57],[[[553,[-1]],51],[[53,[11,52]]],57],[[649,51],[[53,[11,52]]]],[[[650,[-1]],51],[[53,[11,52]]],57],[[564,51],[[53,[11,52]]]],[[651,51],[[53,[11,52]]]],[[652,51],[[53,[11,52]]]],[[545,51],[[53,[11,52]]]],[[545,51],[[53,[11,52]]]],[[545,51],[[53,[11,52]]]],[[545,51],[[53,[11,52]]]],[[545,51],[[53,[11,52]]]],[[653,51],[[53,[11,52]]]],[[654,51],[[53,[11,52]]]],[[680,51],[[53,[11,52]]]],[[655,51],[[53,[11,52]]]],0,0,[552,533],0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[565,536],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,675,687],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[533,578],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[688,621],[-1,-1,[]],[-1,-1,[]],[689,623],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[536]]]],[70,[[67,[537]]]],[65,[[67,[538]]]],[65,[[67,[539]]]],[65,[[67,[540]]]],[65,[[67,[541]]]],[65,[[67,[542]]]],[65,[[67,[543]]]],[65,[[67,[544]]]],[62,[[67,[545]]]],[65,536],[65,536],[70,537],[70,537],[65,538],[65,538],[65,539],[65,539],[65,540],[65,540],[65,541],[65,541],[65,542],[65,542],[65,543],[65,543],[65,544],[65,544],[62,545],[62,545],[65,536],[70,537],[65,538],[65,539],[65,540],[65,541],[65,542],[65,543],[65,544],[62,545],[[],538],[690,550],[[],550],[-1,536,[[17,[],[[16,[536]]]]]],[-1,537,[[17,[],[[16,[537]]]]]],[-1,538,[[17,[],[[16,[538]]]]]],[-1,539,[[17,[],[[16,[539]]]]]],[-1,540,[[17,[],[[16,[540]]]]]],[-1,541,[[17,[],[[16,[541]]]]]],[-1,542,[[17,[],[[16,[542]]]]]],[-1,543,[[17,[],[[16,[543]]]]]],[-1,544,[[17,[],[[16,[544]]]]]],[-1,545,[[17,[],[[16,[545]]]]]],[130,[[67,[536]]]],[130,[[67,[537]]]],[130,[[67,[538]]]],[130,[[67,[539]]]],[130,[[67,[540]]]],[130,[[67,[541]]]],[130,[[67,[542]]]],[130,[[67,[543]]]],[130,[[67,[544]]]],[130,[[67,[545]]]],[65,[[67,[557]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[676,691]]],[692,693]],0,0,0,[550,[[67,[694]]]],[[671,65],660],[[664,65],660],[[549,551],679],[549,[[53,[683,620]]]],[[549,551,65,65],[[67,[[656,[[3,[533]]]]]]]],[551,568],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[551,571],[587,556],[587,555],[551,630],[[551,533],590],[532,12],0,[549,[[574,[549]]]],[551,[[574,[551]]]],[531,[[574,[531]]]],[546,[[574,[546]]]],[552,[[574,[552]]]],[535,[[574,[535]]]],[672,[[574,[672]]]],[660,[[574,[660]]]],[659,[[574,[659]]]],[673,[[574,[673]]]],[668,[[574,[668]]]],[671,[[574,[671]]]],[664,[[574,[664]]]],[682,[[574,[682]]]],[561,[[574,[561]]]],[532,[[574,[532]]]],[[533,537],590],[533,35],[533,35],[646,35],[533,35],[[565,-1],11,74],[[566,-1],11,74],[[536,-1],11,74],[[[567,[-1]],-2],11,71,74],[[537,-1],11,74],[[538,-1],11,74],[[563,-1],11,74],[[568,-1],11,74],[[539,-1],11,74],[[569,-1],11,74],[[540,-1],11,74],[[572,-1],11,74],[[573,-1],11,74],[[[574,[-1]],-2],11,[],74],[[575,-1],11,74],[[576,-1],11,74],[[577,-1],11,74],[[578,-1],11,74],[[579,-1],11,74],[[580,-1],11,74],[[581,-1],11,74],[[582,-1],11,74],[[584,-1],11,74],[[585,-1],11,74],[[541,-1],11,74],[[590,-1],11,74],[[591,-1],11,74],[[592,-1],11,74],[[533,-1],11,74],[[[593,[-1]],-2],11,71,74],[[594,-1],11,74],[[[595,[-1]],-2],11,71,74],[[542,-1],11,74],[[604,-1],11,74],[[609,-1],11,74],[[611,-1],11,74],[[612,-1],11,74],[[614,-1],11,74],[[615,-1],11,74],[[617,-1],11,74],[[618,-1],11,74],[[619,-1],11,74],[[622,-1],11,74],[[624,-1],11,74],[[626,-1],11,74],[[543,-1],11,74],[[628,-1],11,74],[[629,-1],11,74],[[544,-1],11,74],[[632,-1],11,74],[[633,-1],11,74],[[634,-1],11,74],[[635,-1],11,74],[[557,-1],11,74],[[636,-1],11,74],[[637,-1],11,74],[[638,-1],11,74],[[[639,[-1]],-2],11,71,74],[[640,-1],11,74],[[642,-1],11,74],[[643,-1],11,74],[[644,-1],11,74],[[645,-1],11,74],[[646,-1],11,74],[[647,-1],11,74],[[651,-1],11,74],[[545,-1],11,74],[[654,-1],11,74],[552,65],0,0,0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],[[534,130],11],[[560,130],11],[[559,130],11],[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[[536,536],35],[[537,537],35],[[538,538],35],[[539,539],35],[[540,540],35],[[541,541],35],[[542,542],35],[[543,543],35],[[544,544],35],[[545,545],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[536],[537],[538],[539],[540],[541],[542],[543],[544],[545],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[536,35],[537,35],[538,35],[539,35],[540,35],[541,35],[542,35],[543,35],[544,35],[545,35],[533,35],[533,35],[612,35],[612,35],[[533,533],35],[533,35],[536,35],[537,35],[538,35],[539,35],[540,35],[541,35],[542,35],[543,35],[544,35],[545,35],[609,35],[611,35],[[564,533,65,65],35],[630,35],[533,35],[695,35],[[609,[67,[581]]],35],[[612,[67,[581]]],35],[618,35],[533,35],[[612,[67,[581]]],35],[579,35],[[551,549],35],[[[607,[-1]]],35,[]],[568,35],[536,[[234,[536]]]],[537,[[234,[537]]]],[538,[[234,[538]]]],[539,[[234,[539]]]],[540,[[234,[540]]]],[541,[[234,[541]]]],[542,[[234,[542]]]],[543,[[234,[543]]]],[544,[[234,[544]]]],[545,[[234,[545]]]],[536,[[235,[536]]]],[537,[[235,[537]]]],[538,[[235,[538]]]],[539,[[235,[539]]]],[540,[[235,[540]]]],[541,[[235,[541]]]],[542,[[235,[542]]]],[543,[[235,[543]]]],[544,[[235,[544]]]],[545,[[235,[545]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[564,65],[[186,[65]]]],0,0,0,0,0,[551,563],[531,563],0,0,0,0,0,[[587,627,-1],11,[[39,[[53,[11,625]]]],696]],[[[607,[-1]],-3],[[607,[-2]]],[],[],[[39,[-1],[[8,[-2]]]]]],[[[639,[-1]],-3],[[639,[-2]]],[],[],[[39,[-1],[[8,[-2]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[635,632],65],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[552,65],0,0,0,[[635,65,632],635],[[564,65],[[186,[65]]]],0,0,0,0,[[560,546,70,65],11],[[560,546,70,546,70,65],11],[[560,546,70,65],11],[[560,546,70,546,70,65],11],0,0,0,0,[609,35],[618,35],[619,35],[680,550],[536,536],[537,537],[538,538],[539,539],[540,540],[541,541],[542,542],[543,543],[544,544],[545,545],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,[[532,-1],11,[39,90]],[[531,[41,[697]]],11],0,0,0,0,0,0,[695,11],[[568,568],[[67,[82]]]],[[539,539],[[67,[82]]]],[[569,569],[[67,[82]]]],[[[574,[-1]],[574,[-1]]],[[67,[82]]],[]],[[583,583],[[67,[82]]]],[[630,630],[[67,[82]]]],0,[[635,533],635],[533,[[67,[65]]]],[[531,[607,[586]]],695],[[550,35],35],0,[534,11],[560,11],[559,11],[531,[[0,[[83,[],[[8,[[67,[685]]]]]],696]]]],0,0,0,0,[683,11],0,0,0,0,[[534,130],11],[[560,130],11],[[559,130],11],[[531,583],11],0,0,0,0,0,[573,35],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],[533,533],[[550,[567,[549]]],[[0,[[83,[],[[8,[[67,[551]]]]]],696]]]],[[551,[666,[[67,[130]]]],[67,[667]]],[[0,[[83,[],[[8,[[53,[[11,[531,532]],621]]]]]],696]]]],[533,537],0,0,[[534,561,[186,[65]],546,70],11],0,0,0,[552,65],0,0,[[541,65],35],[[533,[67,[557]],[67,[537]]],[[67,[643]]]],[[536,536,35],11],[[537,537,35],11],[[538,538,35],11],[[539,539,35],11],[[540,540,35],11],[[541,541,35],11],[[542,542,35],11],[[543,543,35],11],[[544,544,35],11],[[545,545,35],11],[[560,65,659,[162,[65]]],11],[[560,65,659,[162,[65]]],11],[[559,65,659,[162,[65]]],11],[[670,65,659,[162,[65]]],11],[[670,65,659,[162,[65]]],11],[[560,631],11],[[531,-1],11,[[40,[655,36]],90]],[[560,587,614],11],[[560,587,614],11],[[670,587,614],11],[[670,587,614],11],[[560,671],11],[[560,671],11],[[559,664],11],[[670,671],11],[[670,671],11],[[560,540,65,[162,[62]]],11],[[560,540,65,[162,[62]]],11],[[559,65,[162,[62]]],11],[[670,540,65,[162,[62]]],11],[[670,540,65,[162,[62]]],11],[[560,65,65,65,65],11],[[560,65],11],[[560,65,587],11],[[560,65,587],11],[[670,65,587],11],[[670,65,587],11],[[560,12,12,12,12,12,12],11],0,0,[546,70],[552,635],[626,70],0,0,0,[533,[[11,[65,65]]]],[[546,-1],587,[[455,[70]]]],0,[621,[[67,[698]]]],[623,[[67,[698]]]],[685,[[67,[698]]]],0,0,0,0,[531,11],0,0,0,0,[531,11],0,0,[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],[[532,-1],586,[[17,[],[[16,[681]]]]]],0,[541,[[3,[65]]]],[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],0,0,0,0,0,0,0,0,[634,633],[[633,65],634],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[565,130],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[[553,[-1]],649,35],[[650,[-1]]],[]],[[[650,[-1]]],[[553,[-1]]],80],[[536,536],11],[[537,537],11],[[538,538],11],[[539,539],11],[[540,540],11],[[541,541],11],[[542,542],11],[[543,543],11],[[544,544],11],[[545,545],11],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[536,536],536],[[537,537],537],[[538,538],538],[[539,539],539],[[540,540],540],[[541,541],541],[[542,542],542],[[543,543],543],[[544,544],544],[[545,545],545],[546,11],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[546,543],[552,544],0,0,0,0,[576,35],[[563,563],563],[[563,563],563],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[607,[-1]]],[]],[-1,[[607,[-1]]],[]],[552,65],0,0,[538,538],[[532,546,70,[162,[62]]],11],[[532,546,70,699],[[67,[554]]]],0,0,[[532,[553,[552]],[162,[62]],641,635],11],[[534,561,65],11],[[560,561,65],11],[[559,561,65],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[67,[130]],538],[[67,[130]]]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[700,565],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[700,[[67,[[701,[-1]]]]],658],[44,11],[[700,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[701,[-1]]],700,658],[700,[[67,[[75,[[701,[-1]]]]]]],658],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[702,[-1]]],[[705,[[704,[[702,[703]]]]]]],658],[[[706,[-1]]],[[705,[[704,[[706,[703]]]]]]],658],[[[707,[-1]]],[[705,[[704,[[707,[703]]]]]]],658],[[[702,[-1]]],[[705,[[704,[[702,[703]]]]]]],658],[[[706,[-1]]],[[705,[[704,[[706,[703]]]]]]],658],[[[707,[-1]]],[[705,[[704,[[707,[703]]]]]]],658],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[708,708],[709,709],[710,710],[711,711],[712,712],[713,713],[714,714],[715,715],[716,716],[717,717],[718,718],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[702,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[[[706,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[[[707,[-1]]],11,658],[44,11],[44,11],0,0,[[719,719],35],[[720,720],35],[[724,724],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[708,51],[[53,[11,52]]]],[[708,51],[[53,[11,52]]]],[[709,51],[[53,[11,52]]]],[[709,51],[[53,[11,52]]]],[[710,51],[[53,[11,52]]]],[[710,51],[[53,[11,52]]]],[[711,51],[[53,[11,52]]]],[[711,51],[[53,[11,52]]]],[[712,51],[[53,[11,52]]]],[[712,51],[[53,[11,52]]]],[[713,51],[[53,[11,52]]]],[[714,51],[[53,[11,52]]]],[[715,51],[[53,[11,52]]]],[[716,51],[[53,[11,52]]]],[[[702,[-1]],51],[[53,[11,52]]],[57,658]],[[717,51],[[53,[11,52]]]],[[717,51],[[53,[11,52]]]],[[718,51],[[53,[11,52]]]],[[718,51],[[53,[11,52]]]],[[719,51],[[53,[11,52]]]],[[[706,[-1]],51],[[53,[11,52]]],[57,658]],[[720,51],[[53,[11,52]]]],[[721,51],[[53,[11,52]]]],[[722,51],[[53,[11,52]]]],[[722,51],[[53,[11,52]]]],[[725,51],[[53,[11,52]]]],[[[707,[-1]],51],[[53,[11,52]]],[57,658]],[[723,51],[[53,[11,52]]]],[[723,51],[[53,[11,52]]]],[[724,51],[[53,[11,52]]]],[[724,51],[[53,[11,52]]]],[[710,726],11],[[717,726],11],[727,708],[728,708],[-1,-1,[]],[729,709],[-1,-1,[]],[729,710],[730,710],[731,710],[-1,-1,[]],[732,710],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[729,717],[-1,-1,[]],[727,717],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],0,[[719,-1],11,74],[[720,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[702,[-1]]],36,658],0,0,0,0,0,0,0,0,0,0,[708,[[67,[698]]]],[709,[[67,[698]]]],[710,[[67,[698]]]],[717,[[67,[698]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[733,[-1]]],[[705,[[704,[[733,[703]]]]]]],658],[[[734,[-1]]],[[705,[[704,[[734,[703]]]]]]],658],[[[733,[-1]]],[[705,[[704,[[733,[703]]]]]]],658],[[[734,[-1]]],[[705,[[704,[[734,[703]]]]]]],658],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[735,735],[736,736],[737,737],[738,738],[739,739],[740,740],[741,741],[742,742],[743,743],[744,744],[745,745],[746,746],[[[747,[-1]]],[[747,[-1]]],32],[748,748],[749,749],[750,750],[751,751],[752,752],[753,753],[[[754,[-1]]],[[754,[-1]]],32],[755,755],[756,756],[757,757],[758,758],[759,759],[760,760],[761,761],[762,762],[763,763],[764,764],[765,765],[766,766],[[[767,[-1]]],[[767,[-1]]],32],[768,768],[769,769],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],735],[[],741],[[],[[747,[-1]]],42],[[],759],0,0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[[[733,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[[[734,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[704,[[770,[703]]]]],771],0,0,0,[[735,735],35],[[740,740],35],[[742,742],35],[[745,745],35],[[748,748],35],[[752,752],35],[[753,753],35],[[[754,[-1]],[754,[-1]]],35,48],[[755,755],35],[[756,756],35],[[757,757],35],[[758,758],35],[[759,759],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[772,51],[[53,[11,52]]]],[[773,51],[[53,[11,52]]]],[[735,51],[[53,[11,52]]]],[[771,51],[[53,[11,52]]]],[[736,51],[[53,[11,52]]]],[[736,51],[[53,[11,52]]]],[[737,51],[[53,[11,52]]]],[[737,51],[[53,[11,52]]]],[[[734,[-1]],51],[[53,[11,52]]],[57,658]],[[738,51],[[53,[11,52]]]],[[738,51],[[53,[11,52]]]],[[739,51],[[53,[11,52]]]],[[739,51],[[53,[11,52]]]],[[740,51],[[53,[11,52]]]],[[741,51],[[53,[11,52]]]],[[742,51],[[53,[11,52]]]],[[742,51],[[53,[11,52]]]],[[743,51],[[53,[11,52]]]],[[743,51],[[53,[11,52]]]],[[744,51],[[53,[11,52]]]],[[744,51],[[53,[11,52]]]],[[745,51],[[53,[11,52]]]],[[745,51],[[53,[11,52]]]],[[746,51],[[53,[11,52]]]],[[746,51],[[53,[11,52]]]],[[[747,[-1]],51],[[53,[11,52]]],57],[[748,51],[[53,[11,52]]]],[[749,51],[[53,[11,52]]]],[[749,51],[[53,[11,52]]]],[[750,51],[[53,[11,52]]]],[[750,51],[[53,[11,52]]]],[[751,51],[[53,[11,52]]]],[[751,51],[[53,[11,52]]]],[[752,51],[[53,[11,52]]]],[[753,51],[[53,[11,52]]]],[[[754,[-1]],51],[[53,[11,52]]],57],[[755,51],[[53,[11,52]]]],[[756,51],[[53,[11,52]]]],[[757,51],[[53,[11,52]]]],[[758,51],[[53,[11,52]]]],[[759,51],[[53,[11,52]]]],[[760,51],[[53,[11,52]]]],[[760,51],[[53,[11,52]]]],[[761,51],[[53,[11,52]]]],[[761,51],[[53,[11,52]]]],[[762,51],[[53,[11,52]]]],[[762,51],[[53,[11,52]]]],[[763,51],[[53,[11,52]]]],[[763,51],[[53,[11,52]]]],[[764,51],[[53,[11,52]]]],[[765,51],[[53,[11,52]]]],[[765,51],[[53,[11,52]]]],[[766,51],[[53,[11,52]]]],[[766,51],[[53,[11,52]]]],[[[767,[-1]],51],[[53,[11,52]]],57],[[768,51],[[53,[11,52]]]],[[768,51],[[53,[11,52]]]],[[769,51],[[53,[11,52]]]],[[769,51],[[53,[11,52]]]],[[737,726],11],[[738,726],11],[[743,726],11],[[744,726],11],[[746,726],11],[[749,726],11],[[762,726],11],[[763,726],11],[[765,726],11],[[769,726],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[761,736],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[729,739],[-1,-1,[]],[-1,-1,[]],[724,742],[-1,-1,[]],[742,743],[729,743],[750,743],[727,743],[732,743],[722,743],[-1,-1,[]],[730,743],[768,743],[728,743],[718,743],[-1,-1,[]],[-1,-1,[]],[724,745],[718,746],[730,746],[774,746],[731,746],[732,746],[-1,-1,[]],[-1,-1,[]],[652,748],[-1,-1,[]],[768,749],[750,749],[-1,-1,[]],[729,749],[751,749],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[745,762],[730,762],[746,762],[774,762],[729,762],[750,762],[768,762],[728,762],[761,762],[722,762],[732,762],[731,762],[727,762],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[739,765],[728,765],[-1,-1,[]],[-1,-1,[]],[765,766],[768,766],[729,766],[-1,-1,[]],[-1,-1,[]],[729,768],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],0,[[735,-1],11,74],[[752,-1],11,74],[[753,-1],11,74],[[757,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[733,[-1]]],35,658],[[[733,[-1]]],36,658],0,0,0,0,0,0,0,0,0,0,[[[704,[[733,[703]]]],741],772],[[[704,[[733,[703]]]],759],773],[[735,[704,[[770,[703]]]],[67,[[776,[775]]]]],[[53,[771,736]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,[771,[[704,[[770,[703]]]]]],[772,[[704,[[733,[703]]]]]],[773,[[704,[[733,[703]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[773,[704,[[777,[703]]]],614,70,[67,[699]]],11],[[771,[704,[[777,[703]]]],614,70,[67,[699]]],11],[736,[[67,[698]]]],[738,[[67,[698]]]],[739,[[67,[698]]]],[742,[[67,[698]]]],[743,[[67,[698]]]],[744,[[67,[698]]]],[745,[[67,[698]]]],[746,[[67,[698]]]],[749,[[67,[698]]]],[762,[[67,[698]]]],[763,[[67,[698]]]],[765,[[67,[698]]]],[766,[[67,[698]]]],[768,[[67,[698]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[771,65,65,65,65],11],[[771,65,65,65,219,65],11],[[771,[704,[[777,[703]]]],70],11],[[771,[704,[[777,[703]]]],70],11],[[771,458],11],[771,11],[[771,458],11],[[771,65,[704,[[707,[703]]]],65,44],11],[[771,[704,[[777,[703]]]],614,70,[67,[699]]],11],[[771,[704,[[778,[703]]]]],11],[[771,540,65,65,62],11],[[771,65,[704,[[777,[703]]]],70,[67,[699]]],11],[[772,[704,[[779,[703]]]],65],11],[[772,65,65,65],11],[[772,[704,[[777,[703]]]],70],11],[772,11],[[772,458,65],11],[772,11],[[772,458,65],11],[[772,65,[704,[[707,[703]]]],65,44],11],[[772,[704,[[780,[703]]]]],11],[[772,65,65,62],11],[[772,[704,[[779,[703]]]],65],11],[[773,65],11],[[773,[704,[[779,[703]]]],65],11],[[773,65,65,65,65],11],[[773,65,65,65,219,65],11],[[773,[704,[[777,[703]]]],70],11],[[773,[704,[[777,[703]]]],70],11],[773,11],[773,11],[[773,704,44],11],[[773,458,65],11],[[773,[704,[[777,[703]]]],70,65],11],[[773,[704,[[777,[703]]]],70,[704,[[777,[703]]]],70,65],11],[[773,[704,[[777,[703]]]],70,65],11],[[773,[704,[[777,[703]]]],70,[704,[[777,[703]]]],70,65],11],[773,11],[[773,458,65],11],[[773,65,[704,[[707,[703]]]],65,44],11],[[773,631],11],[[773,[704,[[777,[703]]]],614,70,[67,[699]]],11],[[773,[704,[[778,[703]]]]],11],[[773,540,65,65,62],11],[[773,65,65,65,65],11],[[773,65],11],[[773,65,[704,[[777,[703]]]],70,[67,[699]]],11],[[773,12,12,12,12,12,12],11],[[773,[704,[[779,[703]]]],65],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[770,[-1]]],[[705,[[704,[[770,[703]]]]]]],658],[[[770,[-1]]],[[705,[[704,[[770,[703]]]]]]],658],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[781,781],[782,782],[783,783],[774,774],[784,784],[729,729],[727,727],[728,728],[785,785],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[[770,[-1]]]],[661,[[67,[[210,[130]]]]]]],[[777,[-1]]],658],[[],786],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[[[770,[-1]]],11,658],[44,11],[787,11],[788,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[782,782],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[770,[-1]],51],[[53,[11,52]]],658],[[781,51],[[53,[11,52]]]],[[781,51],[[53,[11,52]]]],[[782,51],[[53,[11,52]]]],[[783,51],[[53,[11,52]]]],[[774,51],[[53,[11,52]]]],[[774,51],[[53,[11,52]]]],[[784,51],[[53,[11,52]]]],[[784,51],[[53,[11,52]]]],[[729,51],[[53,[11,52]]]],[[729,51],[[53,[11,52]]]],[[727,51],[[53,[11,52]]]],[[727,51],[[53,[11,52]]]],[[728,51],[[53,[11,52]]]],[[728,51],[[53,[11,52]]]],[[785,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[729,781],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[789,729],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[788,790],[[[41,[40]]],790],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[770,[-1]]],35,658],0,0,[[],-1,[]],0,0,0,0,0,0,[781,[[67,[698]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[791,[[67,[[75,[[770,[-1]]]]]]],658],[791,[[67,[[770,[-1]]]]],658],[44,11],[[791,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[[770,[-1]]]]],791,658],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[792,[-1]]],[[705,[[704,[[770,[703]]]]]]],658],[[[792,[-1]]],[[705,[[704,[[770,[703]]]]]]],658],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[793,793],[794,794],[795,795],[796,796],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[[[792,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[793,51],[[53,[11,52]]]],[[[797,[-1]],51],[[53,[11,52]]],[57,658]],[[794,51],[[53,[11,52]]]],[[794,51],[[53,[11,52]]]],[[795,51],[[53,[11,52]]]],[[795,51],[[53,[11,52]]]],[[796,51],[[53,[11,52]]]],[[796,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[729,795],[765,795],[-1,-1,[]],[739,795],[798,796],[-1,-1,[]],[729,796],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[799,800],[[[41,[39]]],800],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[795,[[67,[698]]]],[796,[[67,[698]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[801,801],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[801,51],[[53,[11,52]]]],[[801,51],[[53,[11,52]]]],[729,801],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[801,[[67,[698]]]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[726,[704,[[707,[703]]]]],11],[[726,[704,[[702,[703]]]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[726,[704,[[777,[703]]]]],11],[[726,[704,[[777,[703]]]],130],11],0,[[726,[704,[[733,[703]]]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[[726,[704,[[780,[703]]]]],11],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[726,698],11],[[802,51],[[53,[11,52]]]],[[802,51],[[53,[11,52]]]],[[803,726],11],[[802,726],11],[[804,[806,[805]],698],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[726,130,36],11],0,0,[[726,56],11],[[726,[704,[[779,[703]]]]],11],[[726,[704,[[778,[703]]]]],11],[[726,[704,[[807,[703]]]]],11],[802,[[67,[698]]]],0,[[726,[704,[[808,[703]]]]],11],[[726,[704,[[808,[703]]]],130],11],[[726,[704,[[809,[703]]]]],11],[[726,[704,[[809,[703]]]],130],11],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[806,[-1]],[704,[[810,[703]]]],-3],-2,811,[],[[39,[67],[[8,[-2]]]]]],[[[806,[-1]],[704,[[810,[703]]]]],[[53,[568,812]]],811],[[[806,[-1]],[704,[[810,[703]]]]],11,811],[[[806,[-1]],[704,[[810,[703]]]]],[[53,[537,812]]],811],[[[806,[-1]],[704,[[810,[703]]]]],[[53,[571,812]]],811],[[[806,[-1]],[704,[[810,[703]]]]],[[53,[630,812]]],811],[[[806,[-1]],[704,[[810,[703]]]],533],[[53,[590,812]]],811],[[[806,[-1]],[704,[[810,[703]]]],[704,[813]]],[[53,[35,814]]],811],[[[806,[-1]],[704,[[810,[703]]]]],[[53,[563,812]]],811],[[[806,[-1]],[704,[[810,[703]]]],[666,[[67,[[210,[130]]]]]],[67,[667]]],[[11,[[704,[[770,[703]]]],[704,[[770,[703]]]],[67,[688]]]]],811],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[806,[-1]],[704,[[707,[703]]]]],11,811],[[[806,[-1]],[704,[[707,[703]]]]],36,811],[[[806,[-1]],[704,[[702,[703]]]]],11,811],[[[806,[-1]],[704,[[702,[703]]]]],36,811],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[806,[-1]],[704,[[777,[703]]]]],[[53,[11,815]]],811],[[[806,[-1]],[704,[[777,[703]]]],35],11,811],[[[806,[-1]],[704,[[777,[703]]]],70,[67,[70]]],[[53,[[11,[62,70]],798]]],811],[[[806,[-1]],[704,[[777,[703]]]]],36,811],[[[806,[-1]],[704,[[777,[703]]]],[186,[70]],816],[[53,[11,798]]],811],[[[806,[-1]],[704,[[777,[703]]]]],[[53,[11,798]]],811],[[[806,[-1]],11],11,811],[[[806,[-1]],[704,[[733,[703]]]]],11,811],[[[806,[-1]],[704,[[733,[703]]]]],36,811],[[[806,[-1]],[704,[[733,[703]]]],[704,[[777,[703]]]],70,[67,[70]]],[[53,[11,739]]],811],[[[806,[-1]],[704,[[733,[703]]]],[704,[[808,[703]]]],564],[[53,[11,739]]],811],[[[806,[-1]],[704,[[733,[703]]]],[704,[[777,[703]]]],70,[704,[[777,[703]]]],70,70],[[53,[11,766]]],811],[[[806,[-1]],[704,[[733,[703]]]],[648,[[704,[[777,[703]]]]]],[553,[[704,[[808,[703]]]]]],635],[[53,[11,766]]],811],[[[806,[-1]],[704,[[733,[703]]]],[553,[[704,[[808,[703]]]]]],[648,[[704,[[777,[703]]]]]],635],[[53,[11,766]]],811],[[[806,[-1]],[704,[[733,[703]]]],[553,[[704,[[808,[703]]]]]],[553,[[704,[[808,[703]]]]]],635],[[53,[11,766]]],811],[[[806,[-1]],[704,[[733,[703]]]]],11,811],[[[806,[-1]],[704,[[733,[703]]]],[639,[[67,[[210,[130]]]]]]],[[11,[[704,[[733,[703]]]],[67,[768]]]]],811],[[[806,[-1]],[704,[[733,[703]]]],130],[[53,[11,768]]],811],[[[806,[-1]],[704,[[733,[703]]]]],[[53,[11,768]]],811],[[[806,[-1]],[704,[[733,[703]]]],130],[[53,[11,768]]],811],[[[806,[-1]],[704,[[733,[703]]]],[704,[[779,[703]]]],65,65,[704,[[777,[703]]]],70],[[53,[11,749]]],811],[[[806,[-1]],[704,[[733,[703]]]],772],[[53,[11,744]]],811],[[[806,[-1]],[704,[[733,[703]]]],773],[[53,[11,763]]],811],[[[806,[-1]],[704,[[733,[703]]]],[704,[[779,[703]]]],65],[[53,[11,749]]],811],[-1,-2,[],[]],[-1,-2,[],[]],[[[806,[-1]],[704,[[780,[703]]]]],11,811],[[[806,[-1]],[704,[[780,[703]]]],65],[[11,[[704,[[702,[703]]]],[67,[723]]]]],811],[[[806,[-1]],[704,[[780,[703]]]]],36,811],[[[806,[-1]],[657,[-2]]],[[704,[[810,[703]]]]],811,658],[[[806,[-1]],[67,[[210,[130]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]],[661,[[67,[[210,[130]]]]]]],[[11,[[704,[[777,[703]]]],[67,[817]]]]],811],[[[806,[-1]],[704,[[810,[703]]]],[665,[-2]],[666,[[67,[[210,[130]]]]]],[67,[667]]],[[11,[[704,[[770,[703]]]],[704,[[770,[703]]]],[67,[688]]]]],811,658],[[[806,[-1]],[67,[[210,[130]]]]],11,811],[[[806,[-1]],[67,[[210,[130]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]],[677,[[67,[[210,[130]]]],[3,[533]]]]],[[11,[[704,[[808,[703]]]],[67,[818]]]]],811],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[[806,[-1]],[704,[[770,[703]]]],-3],-2,811,[],[[39,[67],[[8,[-2]]]]]],[[[806,[-1]],[704,[[770,[703]]]],715],[[11,[[704,[[707,[703]]]],[67,[710]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],716],[[11,[[704,[[702,[703]]]],[67,[709]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],[661,[[67,[[210,[130]]]]]]],[[11,[[704,[[777,[703]]]],[67,[817]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],[663,[[67,[[210,[130]]]]]]],[[11,[[704,[[733,[703]]]],[67,[729]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],819,[67,[[820,[-1]]]]],[[11,[[704,[[780,[703]]]],[67,[821]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],719],[[11,[[704,[[706,[703]]]],[67,[717]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],[669,[[67,[[210,[130]]]]]]],[[11,[[704,[[779,[703]]]],[67,[822]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],735],[[11,[771,[67,[736]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],823,[67,[[820,[-1]]]]],[[11,[[704,[[778,[703]]]],[67,[824]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],825],[[11,[[704,[[807,[703]]]],[67,[826]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],827,828],[[11,[[704,[[829,[703]]]],[67,[830]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],827,[210,[[162,[65]]]]],[[11,[[704,[[829,[703]]]],[67,[830]]]]],811],[[[806,[-1]],[704,[[770,[703]]]],[677,[[67,[[210,[130]]]],[3,[533]]]]],[[11,[[704,[[808,[703]]]],[67,[818]]]]],811],[[[806,[-1]],[704,[[770,[703]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]]],[[53,[568,784]]],811],[[[806,[-1]],[704,[[770,[703]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]]],[[53,[537,784]]],811],[[[806,[-1]],[704,[[770,[703]]]],-3],-2,811,[],[[39,[67],[[8,[-2]]]]]],[[[806,[-1]],[704,[[770,[703]]]]],36,811],[[[806,[-1]],[704,[[770,[703]]]]],[[53,[563,784]]],811],[[[806,[-1]],[704,[[770,[703]]]],130],11,811],[[[806,[-1]],[704,[[770,[703]]]],[607,[793]]],[[53,[35,781]]],811],[[[806,[-1]],[704,[[770,[703]]]],790],11,811],[[[806,[-1]],[704,[[770,[703]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]]],11,811],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[[[806,[-1]]],11,811],[44,11],[[[806,[-1]],831],[[3,[[704,[[810,[703]]]]]]],811],[[694,694],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[694,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[130,-1],[[806,[-1]]],811],[[-1,690],[[806,[-1]]],811],[-1,-2,[],[]],[-1,-2,[],[]],[[[806,[-1]]],694,811],0,[[694,565],832],[[],44],[[],44],0,[[[806,[-1]]],67,811],[[[806,[-1]],833,834],[[53,[[704,[813]],689]]],811],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[130,-1,680],[[806,[-1]]],811],[[[806,[-1]],[704,[[706,[703]]]]],11,811],[[[806,[-1]],[704,[[706,[703]]]]],36,811],[[[806,[-1]],35],[[53,[35,781]]],811],[[[806,[-1]],[704,[[779,[703]]]]],11,811],[[[806,[-1]],[704,[[779,[703]]]]],36,811],[[[806,[-1]],[704,[[770,[703]]]],699],[[53,[[11,[[704,[[835,[703]]]],62]],795]]],811],[[[806,[-1]],[704,[[770,[703]]]]],11,811],[[[806,[-1]],[704,[[770,[703]]]]],[[53,[12,794]]],811],[[[806,[-1]],[704,[[770,[703]]]],800],[[53,[11,794]]],811],[[[806,[-1]],[704,[[770,[703]]]],[162,[[704,[[733,[703]]]]]]],[[53,[793,796]]],811],[[[806,[-1]],[704,[[770,[703]]]],[704,[[777,[703]]]],70,70],[[53,[11,795]]],811],[[[806,[-1]],[704,[[770,[703]]]],[704,[[777,[703]]]],70,[162,[62]]],[[53,[11,795]]],811],[[[806,[-1]],[704,[[770,[703]]]],[704,[[777,[703]]]],70,[704,[[835,[703]]]]],[[53,[11,795]]],811],[[[806,[-1]],[704,[[770,[703]]]],[553,[[704,[[808,[703]]]]]],[162,[62]],641,635],[[53,[11,795]]],811],[[[806,[-1]],[704,[[734,[703]]]]],11,811],[[[806,[-1]],771,[684,[[67,[[210,[130]]]]]]],[[11,[[704,[[734,[703]]]],[67,[738]]]]],811],[[[806,[-1]],[704,[[734,[703]]]]],36,811],[[[806,[-1]],[704,[[778,[703]]]]],11,811],[[[806,[-1]],[704,[[778,[703]]]],65],[[11,[[704,[[702,[703]]]],[67,[723]]]]],811],[[[806,[-1]],[704,[[778,[703]]]]],36,811],[[[806,[-1]],[567,[[704,[813]]]],831],[[53,[[704,[[810,[703]]]],836]]],811],[[[806,[-1]],[704,[[807,[703]]]]],11,811],[[[806,[-1]],[704,[[807,[703]]]]],36,811],[[[806,[-1]],[704,[[829,[703]]]]],11,811],[[[806,[-1]],[704,[[829,[703]]]]],36,811],[[[806,[-1]],[704,[813]],-3],-2,811,[],[[39,[67],[[8,[-2]]]]]],[[[806,[-1]],[704,[813]],[704,[[770,[703]]]],[656,[[3,[533]]]]],[[67,[837]]],811],[[[806,[-1]],[704,[813]]],11,811],[[[806,[-1]],[704,[813]],[704,[[810,[703]]]]],[[53,[679,838]]],811],[[[806,[-1]],[704,[813]]],[[53,[839,840]]],811],[[[806,[-1]],[704,[813]]],[[53,[686,840]]],811],[[[806,[-1]],[704,[813]]],[[53,[11,840]]],811],[694,841],0,0,[[[806,[-1]],[704,[[808,[703]]]],-2],11,811,[[39,[67]]]],[[[806,[-1]],[704,[[808,[703]]]],842],[[11,[[704,[[809,[703]]]],[67,[843]]]]],811],[[[806,[-1]],[704,[[808,[703]]]]],[[53,[11,815]]],811],[[[806,[-1]],[704,[[808,[703]]]],35],11,811],[[[806,[-1]],[704,[[808,[703]]]]],36,811],[[[806,[-1]],[704,[[809,[703]]]],35],[[53,[11,844]]],811],[[[806,[-1]],[704,[[809,[703]]]]],36,811],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[130,-1],690,[]],[813,[[67,[[701,[658]]]]]],[[[806,[-1]]],[[845,[658]]],811],[690,[[67,[-1]]],[]],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[832,832],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[832,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[845,[-1]]],832,658],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[832,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[[[704,[-1]]],565,846],[-1,-2,[],[]],[-1,-2,[],[]],[[[704,[-1]]],[[704,[-1]]],846],[[-1,-2],11,[],[]],[[[704,[-1]],[704,[-1]]],82,846],[[-1,-2],82,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[[704,[-1]],[704,[-1]]],35,846],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[704,[-1]],51],[[53,[11,52]]],846],[-1,-1,[]],[847,[[704,[-1]]],846],[-1,-1,[]],[699,[[704,[-1]]],846],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[[704,[-1]],-2],11,846,74],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[848,699],[[[704,[-1]]],699,846],[-1,-2,[],[]],[[[704,[-1]],[704,[-1]]],[[67,[82]]],846],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[848,[[11,[65,65,565]]]],[[[704,[-1]]],[[11,[65,65,565]]],846],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[[65,65,565],848],[[65,65,565],[[704,[-1]]],846],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[],35],[[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[[849,[-1]],51],[[53,[11,52]]],[57,848]],[[805,51],[[53,[11,52]]]],[[[849,[-1]],-1],11,848],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],848],[[],-1,848],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[849,[-1]],-1],-1,848],[[],[[849,[-1]]],848],[[[849,[-1]],565],-1,848],[[[851,[],[[850,[-1]]]]],[[75,[[849,[-2]]]]],80,848],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[813,[[705,[[704,[813]]]]]],[[[810,[-1]]],[[705,[[704,[[810,[703]]]]]]],658],[813,[[705,[[704,[813]]]]]],[[[810,[-1]]],[[705,[[704,[[810,[703]]]]]]],658],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[701,[-1]]],[[701,[-1]]],[32,658]],[852,852],[814,814],[838,838],[688,688],[812,812],[836,836],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],690],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[[852,51],[[53,[11,52]]]],[[852,51],[[53,[11,52]]]],[[814,51],[[53,[11,52]]]],[[814,51],[[53,[11,52]]]],[[838,51],[[53,[11,52]]]],[[838,51],[[53,[11,52]]]],[[688,51],[[53,[11,52]]]],[[688,51],[[53,[11,52]]]],[[812,51],[[53,[11,52]]]],[[812,51],[[53,[11,52]]]],[[836,51],[[53,[11,52]]]],[[836,51],[[53,[11,52]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[852,688],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[813,[810,[-1]]],[[53,[853,838]]],658],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[810,[-1]],813],35,658],[813,36],0,[[130,680],690],[[],-1,[]],[130,536],0,0,[688,[[67,[698]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[854,855],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],855],[[],856],[[[857,[-1]],-3],[[857,[-2]]],[],[],[[39,[-1],[[8,[[857,[-2]]]]]]]],[[[858,[-1]],-1,859],[[860,[-1]]],[]],[[861,861],11],[[862,863],11],[864,44],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[857,[-1]]],-1,[]],[[865,865],[[67,[865]]]],[[865,865],35],0,0,0,0,0,0,[[855,855],855],[[856,856],856],[[855,855],11],[[856,856],11],[[855,855],855],[[856,856],856],[[855,855],11],[[856,856],11],[855,65],[855,65],[856,65],[856,65],[[855,855],855],[[856,856],856],[[855,855],11],[[856,856],11],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[863,[867,[866]]],[[67,[863]]]],[[[858,[-1]],[860,[-1]]],[[53,[11,868]]],[]],[[[867,[-1]],[860,[-1]]],[[53,[11,868]]],[338,71]],[[[858,[-1]],[869,[-1]]],[[53,[11,870]]],[]],[[[858,[-1]]],11,[]],[[[867,[-1]]],11,[]],[[[860,[-1]]],[[860,[-1]]],[]],[[[869,[-1]]],[[869,[-1]]],[]],[[[858,[-1]]],[[858,[-1]]],32],[[[867,[-1]]],[[867,[-1]]],32],[861,861],[859,859],[871,871],[[[857,[-1]]],[[857,[-1]]],32],[872,872],[873,873],[874,874],[854,854],[875,875],[876,876],[877,877],[865,865],[878,878],[879,879],[880,880],[881,881],[882,882],[855,855],[883,883],[884,884],[866,866],[863,863],[885,885],[886,886],[887,887],[862,862],[888,888],[889,889],[890,890],[891,891],[892,892],[893,893],[894,894],[895,895],[896,896],[864,864],[897,897],[898,898],[899,899],[856,856],[900,900],[901,901],[902,902],[903,903],[904,904],[905,905],[906,906],[907,907],[908,908],[909,909],[910,910],[911,911],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[860,[-1]],[860,[-1]]],82,[]],[[872,872],82],[[873,873],82],[[874,874],82],[[854,854],82],[[875,875],82],[[876,876],82],[[877,877],82],[[878,878],82],[[879,879],82],[[880,880],82],[[882,882],82],[[855,855],82],[[883,883],82],[[884,884],82],[[888,888],82],[[891,891],82],[[892,892],82],[[893,893],82],[[894,894],82],[[895,895],82],[[896,896],82],[[864,864],82],0,[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[855,855],[856,856],[[863,44],[[67,[912]]]],[863,[[67,[65]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[855,855],35],[[856,856],35],[[861,-1],11,[[455,[44]],32]],[[],[[858,[-1]]],[]],[[],[[867,[-1]]],[]],[[],861],[[],859],[[],855],[[],856],[[],907],[[],910],[[],911],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[861,[[162,[904]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[861,[[162,[904]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[855,855],855],[[856,856],856],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[[[857,[-1]],130],11,698],[[[857,[-1]],130,130],11,698],[[[857,[-1]],130],36,698],[[[857,[-1]],130,130],36,698],[[],855],[[],856],0,[[[860,[-1]],[860,[-1]]],35,[]],[[859,859],35],[[871,871],35],[[872,872],35],[[873,873],35],[[874,874],35],[[854,854],35],[[875,875],35],[[876,876],35],[[877,877],35],[[865,865],35],[[878,878],35],[[879,879],35],[[880,880],35],[[881,881],35],[[882,882],35],[[855,855],35],[[883,883],35],[[884,884],35],[[866,866],35],[[863,863],35],[[885,885],35],[[886,886],35],[[887,887],35],[[862,862],35],[[888,888],35],[[889,889],35],[[891,891],35],[[892,892],35],[[893,893],35],[[894,894],35],[[895,895],35],[[896,896],35],[[864,864],35],[[897,897],35],[[898,898],35],[[899,899],35],[[856,856],35],[[900,900],35],[[901,901],35],[[909,909],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[863,863,[867,[866]]],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[861,[67,[[11,[904,859]]]]],11],[[855,-1],11,[[17,[],[[16,[855]]]]]],[[856,-1],11,[[17,[],[[16,[856]]]]]],[[861,861],11],0,[[[858,[-1]],-2],[[67,[[860,[-1]]]]],[],[[40,[-1],[[8,[35]]]]]],[[[858,[-1]],-1,859,-2],[[860,[-1]]],[],[[40,[-1,-1],[[8,[35]]]]]],[[[858,[-1]],-1,859],[[860,[-1]]],48],[[[869,[-1]]],[[67,[[11,[[860,[-1]],[860,[-1]]]]]]],[]],[62,865],[[[860,[-1]],51],[[53,[11,52]]],[]],[[[869,[-1]],51],[[53,[11,52]]],[]],[[[858,[-1]],51],[[53,[11,52]]],57],[[[867,[-1]],51],[[53,[11,52]]],[57,338,71]],[[861,51],[[53,[11,52]]]],[[859,51],[[53,[11,52]]]],[[871,51],[[53,[11,52]]]],[[[857,[-1]],51],[[53,[11,52]]],57],[[[857,[-1]],51],[[53,[11,52]]],56],[[872,51],[[53,[11,52]]]],[[873,51],[[53,[11,52]]]],[[874,51],[[53,[11,52]]]],[[854,51],[[53,[11,52]]]],[[875,51],[[53,[11,52]]]],[[876,51],[[53,[11,52]]]],[[877,51],[[53,[11,52]]]],[[865,51],[[53,[11,52]]]],[[878,51],[[53,[11,52]]]],[[879,51],[[53,[11,52]]]],[[880,51],[[53,[11,52]]]],[[881,51],[[53,[11,52]]]],[[882,51],[[53,[11,52]]]],[[855,51],[[53,[11,52]]]],[[855,51],[[53,[11,52]]]],[[855,51],[[53,[11,52]]]],[[855,51],[[53,[11,52]]]],[[855,51],[[53,[11,52]]]],[[883,51],[[53,[11,52]]]],[[884,51],[[53,[11,52]]]],[[866,51],[[53,[11,52]]]],[[863,51],[[53,[11,52]]]],[[885,51],[[53,[11,52]]]],[[886,51],[[53,[11,52]]]],[[887,51],[[53,[11,52]]]],[[862,51],[[53,[11,52]]]],[[888,51],[[53,[11,52]]]],[[889,51],[[53,[11,52]]]],[[890,51],[[53,[11,52]]]],[[891,51],[[53,[11,52]]]],[[892,51],[[53,[11,52]]]],[[893,51],[[53,[11,52]]]],[[894,51],[[53,[11,52]]]],[[895,51],[[53,[11,52]]]],[[896,51],[[53,[11,52]]]],[[864,51],[[53,[11,52]]]],[[897,51],[[53,[11,52]]]],[[898,51],[[53,[11,52]]]],[[899,51],[[53,[11,52]]]],[[856,51],[[53,[11,52]]]],[[856,51],[[53,[11,52]]]],[[856,51],[[53,[11,52]]]],[[856,51],[[53,[11,52]]]],[[856,51],[[53,[11,52]]]],[[900,51],[[53,[11,52]]]],[[901,51],[[53,[11,52]]]],[[902,51],[[53,[11,52]]]],[[903,51],[[53,[11,52]]]],[[904,51],[[53,[11,52]]]],[[905,51],[[53,[11,52]]]],[[906,51],[[53,[11,52]]]],[[907,51],[[53,[11,52]]]],[[908,51],[[53,[11,52]]]],[[909,51],[[53,[11,52]]]],[[910,51],[[53,[11,52]]]],[[911,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[904]]],861],[[[186,[44]]],859],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[883,877],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[855]]]],[65,[[67,[856]]]],[65,855],[65,855],[65,856],[65,856],[65,855],[65,856],[65,899],[-1,855,[[17,[],[[16,[855]]]]]],[-1,856,[[17,[],[[16,[856]]]]]],[130,[[67,[855]]]],[130,[[67,[856]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[904]]],861],[[[186,[65]],[858,[-1]]],[[869,[-1]]],[]],0,0,0,[[911,909],[[860,[866]]]],[911,[[860,[866]]]],[911,[[860,[866]]]],[[[867,[-1]],-1],[[67,[[860,[-1]]]]],[338,71]],[[[867,[-1]],[860,[-1]]],[[53,[-1,868]]],[338,71]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[[858,[-1]],[860,[-1]]],-1,[]],[[[858,[-1]],[860,[-1]]],859,[]],[[[867,[-1]],[860,[-1]]],859,[]],0,0,[[[860,[-1]],-2],11,[],74],[[872,-1],11,74],[[873,-1],11,74],[[874,-1],11,74],[[854,-1],11,74],[[875,-1],11,74],[[876,-1],11,74],[[877,-1],11,74],[[865,-1],11,74],[[878,-1],11,74],[[879,-1],11,74],[[880,-1],11,74],[[881,-1],11,74],[[882,-1],11,74],[[855,-1],11,74],[[883,-1],11,74],[[884,-1],11,74],[[866,-1],11,74],[[863,-1],11,74],[[885,-1],11,74],[[862,-1],11,74],[[888,-1],11,74],[[891,-1],11,74],[[892,-1],11,74],[[893,-1],11,74],[[894,-1],11,74],[[895,-1],11,74],[[896,-1],11,74],[[864,-1],11,74],[[901,-1],11,74],[[909,-1],11,74],[897,35],[[[860,[-1]]],44,[]],[[[858,[-1]],[860,[-1]]],-1,[]],[[[858,[-1]],[869,[-1]]],[[162,[-1]]],[]],[[[867,[-1]],[860,[-1]]],-1,[]],[899,65],[[[858,[-1]],[860,[-1]]],-1,[]],[[863,911],[[53,[913,914]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,0,0,0,[[[867,[-1]],-1,859],[[860,[-1]]],[338,71]],[[855,855],11],[[856,856],11],[[855,855],855],[[856,856],856],[[855,855],35],[[856,856],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[858,[-1]]],[[3,[-1]]],[]],[[[857,[-1]]],-1,[]],[-1,-2,[],[]],[861,[[915,[904]]]],[855],[856],[[[857,[-1]]],[[857,[-2]]],[],[[305,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[865,35],[855,35],[856,35],[[863,[867,[866]]],35],[859,35],[[900,911],35],[[863,[867,[866]]],35],[[[858,[-1]]],35,[]],[[[867,[-1]]],35,[]],[861,35],[855,35],[856,35],[884,35],[884,35],[877,35],[904,35],[[[858,[-1]]],[[0,[135]]],[]],[[[867,[-1]]],[[0,[135]]],[338,71]],[855,[[234,[855]]]],[856,[[234,[856]]]],[[[858,[-1]]],[[0,[135]]],[]],[855,[[235,[855]]]],[856,[[235,[856]]]],0,0,[[[858,[-1]]],44,[]],[[[867,[-1]]],44,[]],[861,44],0,0,0,0,[[859,130],871],[[[857,[-1]],130],[[67,[871]]],[]],0,0,0,0,0,0,0,0,0,[900,35],[[],[[858,[-1]]],[]],[[],[[867,[-1]]],[]],[[],861],[[65,65],859],[-1,[[857,[-1]]],[]],[[62,865],[[67,[885]]]],[[[860,[-1]],[860,[-1]]],[[869,[-1]]],[]],[[[869,[-1]]],67,[]],[855,855],[856,856],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[865,[[67,[885]]]],[[907,[860,[900]]],[[67,[[860,[889]]]]]],0,[[[860,[-1]],[860,[-1]]],[[67,[82]]],[]],[[872,872],[[67,[82]]]],[[873,873],[[67,[82]]]],[[874,874],[[67,[82]]]],[[854,854],[[67,[82]]]],[[875,875],[[67,[82]]]],[[876,876],[[67,[82]]]],[[877,877],[[67,[82]]]],[[878,878],[[67,[82]]]],[[879,879],[[67,[82]]]],[[880,880],[[67,[82]]]],[[882,882],[[67,[82]]]],[[855,855],[[67,[82]]]],[[883,883],[[67,[82]]]],[[884,884],[[67,[82]]]],[[885,885],[[67,[82]]]],[[888,888],[[67,[82]]]],[[891,891],[[67,[82]]]],[[892,892],[[67,[82]]]],[[893,893],[[67,[82]]]],[[894,894],[[67,[82]]]],[[895,895],[[67,[82]]]],[[896,896],[[67,[82]]]],[[864,864],[[67,[82]]]],[[899,899],[[67,[82]]]],[863,[[67,[854]]]],0,0,[[861,904,859],11],[[[858,[-1]],44],[[869,[-1]]],[]],0,0,[[855,855],11],[[856,856],11],[[[867,[-1]],[860,[-1]],-1],11,[338,71]],0,[863,[[67,[865]]]],[885,865],[863,[[67,[877]]]],[885,877],[863,[[67,[62]]]],[[855,855,35],11],[[856,856,35],11],[[863,916],65],[[[857,[-1]]],[[67,[698]]],698],0,[861,[[0,[[187,[],[[16,[[11,[904,859]]]]]]]]]],[861,[[0,[[187,[],[[16,[[11,[904,[67,[859]]]]]]]]]]]],[[[857,[-1]]],[[0,[917]]],[]],0,[[861,-1,861],11,[[455,[44]],32]],0,[[855,855],855],[[856,856],856],[[855,855],11],[[856,856],11],[[859,859],11],[[855,855],855],[[856,856],856],[862,[[67,[875]]]],[911,916],[874,130],[[878,911],[[53,[913,914]]]],[865,863],[865,863],[[865,876],863],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[859,[[67,[[186,[44]]]]]],[-1,126,[]],[-1,36,[]],[[[860,[866]],916],36],[865,36],[883,130],[[863,916],36],[[855,855],11],[[856,856],11],[-1,859,[[187,[],[[16,[859]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[[[858,[-1]],[860,[-1]]],[[53,[-1,868]]],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,0,0,0,0,0,[885,863],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[855,855],855],[[856,856],856],[[859,859],859],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[885,62],0,[44,861],[[[857,[-1]],[11,[859,36]]],[[857,[-1]]],[]],[[[857,[-1]],859,-2],[[857,[-1]]],[],296],0,[865,[[67,[885]]]],[[[869,[-1]]],[[186,[65]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],918],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[[918,918],918],[[918,918],11],[[918,918],918],[[918,918],11],[918,65],[918,65],[[918,918],918],[[918,918],11],[-1,-2,[],[]],[-1,-2,[],[]],[918,918],[[-1,-2],11,[],[]],[918,918],[-1,-2,[],[]],[[918,918],35],[[],918],[44,-1,[]],[44,-1,[]],[[918,918],918],[-1,-2,[],[]],[44,11],[[],918],[[918,918],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[918,-1],11,[[17,[],[[16,[918]]]]]],[[918,51],[[53,[11,52]]]],[[918,51],[[53,[11,52]]]],[[918,51],[[53,[11,52]]]],[[918,51],[[53,[11,52]]]],[[918,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[918]]]],[65,918],[65,918],[65,918],[-1,918,[[17,[],[[16,[918]]]]]],[130,[[67,[918]]]],[-1,-2,[],[]],0,0,[[],44],[[918,918],11],[[918,918],918],[[918,918],35],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[918],[-1,-2,[],[]],[918,35],[918,35],[918,[[234,[918]]]],[918,[[235,[918]]]],0,[918,918],[[],-1,[]],[[918,918],11],[[918,918,35],11],0,[[918,918],918],[[918,918],11],[[918,918],918],[-1,-2,[],[]],[[918,918],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[918,918],918],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],919],[[],920],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[[919,919],919],[[920,920],920],[[919,919],11],[[920,920],11],[[919,919],919],[[920,920],920],[[919,919],11],[[920,920],11],[919,65],[919,65],[920,65],[920,65],[[919,919],919],[[920,920],920],[[919,919],11],[[920,920],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[919,919],[921,921],[920,920],[922,922],[923,923],[924,924],[925,925],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[919,919],[920,920],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[919,919],35],[[920,920],35],[[],922],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[919,919],919],[[920,920],920],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[],919],[[],920],0,[[919,919],35],[[921,921],35],[[920,920],35],[[923,923],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[919,-1],11,[[17,[],[[16,[919]]]]]],[[920,-1],11,[[17,[],[[16,[920]]]]]],[[919,51],[[53,[11,52]]]],[[919,51],[[53,[11,52]]]],[[919,51],[[53,[11,52]]]],[[919,51],[[53,[11,52]]]],[[919,51],[[53,[11,52]]]],[[921,51],[[53,[11,52]]]],[[921,51],[[53,[11,52]]]],[[920,51],[[53,[11,52]]]],[[920,51],[[53,[11,52]]]],[[920,51],[[53,[11,52]]]],[[920,51],[[53,[11,52]]]],[[920,51],[[53,[11,52]]]],[[922,51],[[53,[11,52]]]],[[923,51],[[53,[11,52]]]],[[926,51],[[53,[11,52]]]],[[927,51],[[53,[11,52]]]],[[924,51],[[53,[11,52]]]],[[925,51],[[53,[11,52]]]],[[928,51],[[53,[11,52]]]],[[928,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,928],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[919]]]],[65,[[67,[920]]]],[65,919],[65,919],[65,920],[65,920],[65,919],[65,920],[-1,919,[[17,[],[[16,[919]]]]]],[-1,920,[[17,[],[[16,[920]]]]]],[130,[[67,[919]]]],[130,[[67,[920]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[923,-1],11,74],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[919,919],11],[[920,920],11],[[919,919],919],[[920,920],920],[[919,919],35],[[920,920],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[919],[920],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[919,35],[920,35],[919,35],[920,35],[919,[[234,[919]]]],[920,[[234,[920]]]],[919,[[235,[919]]]],[920,[[235,[920]]]],0,0,[[-1,911,929,922,923,930],[[53,[[931,[-1]],928]]],804],[50,921],[919,919],[920,920],[[],-1,[]],0,[[921,921],[[67,[82]]]],0,[[919,919],11],[[920,920],11],0,[[919,919,35],11],[[920,920,35],11],0,[928,[[67,[698]]]],[[919,919],919],[[920,920],920],[[919,919],11],[[920,920],11],[[919,919],919],[[920,920],920],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[[919,919],11],[[920,920],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[919,919],919],[[920,920],920],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[931,[-1]]],[[53,[927,928]]],804],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[932,932],[933,933],[934,934],[935,935],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],932],[[],935],[[],936],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[[932,932],35],[[933,933],35],[[934,934],35],[[935,935],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[932,51],[[53,[11,52]]]],[[933,51],[[53,[11,52]]]],[[934,51],[[53,[11,52]]]],[[934,51],[[53,[11,52]]]],[[935,51],[[53,[11,52]]]],[[937,51],[[53,[11,52]]]],[[937,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,937],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[932,-1],11,74],[[933,-1],11,74],[[935,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,935],[[938,[-1]]],804],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[933,933],[[67,[82]]]],0,0,0,[937,[[67,[698]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[933,130],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[938,[-1]],911,929],[[53,[936,937]]],804],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[939,939],[940,940],[941,941],[942,942],[943,943],[944,944],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],940],[[],941],[[],943],[[],944],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[[939,939],35],[[940,940],35],[[941,941],35],[[942,942],35],[[943,943],35],[[944,944],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[[945,[-1]]],-1,804],[[939,51],[[53,[11,52]]]],[[940,51],[[53,[11,52]]]],[[941,51],[[53,[11,52]]]],[[946,51],[[53,[11,52]]]],[[946,51],[[53,[11,52]]]],[[942,51],[[53,[11,52]]]],[[942,51],[[53,[11,52]]]],[[943,51],[[53,[11,52]]]],[[944,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,946],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[939,-1],11,74],[[940,-1],11,74],[[941,-1],11,74],[[943,-1],11,74],[[944,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[945,[-1]]],804],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,0,0,[946,[[67,[698]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[945,[-1]],911,929,943,944],[[53,[947,946]]],804],[[911,929,943,944],[[53,[[11,[36,947]],946]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[948,130],[949,130],[950,130],[951,130],[952,130],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[948,948],[949,949],[950,950],[951,951],[952,952],[953,953],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],948],[[],949],[[],950],[[],951],[[],952],[[],953],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[948,948],35],[[949,949],35],[[950,950],35],[[951,951],35],[[952,952],35],[[953,953],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[948,51],[[53,[11,52]]]],[[949,51],[[53,[11,52]]]],[[950,51],[[53,[11,52]]]],[[951,51],[[53,[11,52]]]],[[952,51],[[53,[11,52]]]],[[953,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[948,-1],11,74],[[949,-1],11,74],[[950,-1],11,74],[[951,-1],11,74],[[952,-1],11,74],[[953,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],954],[[],955],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[[954,954],954],[[955,955],955],[[954,954],11],[[955,955],11],[[954,954],954],[[955,955],955],[[954,954],11],[[955,955],11],[954,62],[954,62],[955,65],[955,65],[[954,954],954],[[955,955],955],[[954,954],11],[[955,955],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[956,956],[957,957],[958,958],[954,954],[955,955],[959,959],[960,960],[961,961],[962,962],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[956,956],82],[[-1,-2],82,[],[]],[954,954],[955,955],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[954,954],35],[[955,955],35],0,[[963,65],[[53,[11,957]]]],[[],959],[[],961],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[954,954],954],[[955,955],955],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[],954],[[],955],0,[[956,956],35],[[954,954],35],[[955,955],35],[[959,959],35],[[960,960],35],[[962,962],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[954,-1],11,[[17,[],[[16,[954]]]]]],[[955,-1],11,[[17,[],[[16,[955]]]]]],0,0,[[956,51],[[53,[11,52]]]],[[957,51],[[53,[11,52]]]],[[957,51],[[53,[11,52]]]],[[958,51],[[53,[11,52]]]],[[954,51],[[53,[11,52]]]],[[954,51],[[53,[11,52]]]],[[954,51],[[53,[11,52]]]],[[954,51],[[53,[11,52]]]],[[954,51],[[53,[11,52]]]],[[955,51],[[53,[11,52]]]],[[955,51],[[53,[11,52]]]],[[955,51],[[53,[11,52]]]],[[955,51],[[53,[11,52]]]],[[955,51],[[53,[11,52]]]],[[959,51],[[53,[11,52]]]],[[960,51],[[53,[11,52]]]],[[961,51],[[53,[11,52]]]],[[962,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[62,[[67,[954]]]],[65,[[67,[955]]]],[62,954],[62,954],[65,955],[65,955],[62,954],[65,955],[-1,954,[[17,[],[[16,[954]]]]]],[-1,955,[[17,[],[[16,[955]]]]]],[130,[[67,[954]]]],[130,[[67,[955]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[53,[956]]]],[65,[[67,[956]]]],[963,[[964,[956,[514,[175]]]]]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[956,-1],11,74],[[954,-1],11,74],[[959,-1],11,74],[[962,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[954,954],11],[[955,955],11],[[954,954],954],[[955,955],955],[[954,954],35],[[955,955],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[954],[955],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[954,35],[955,35],[954,35],[955,35],[954,[[234,[954]]]],[955,[[234,[955]]]],[954,[[235,[954]]]],[955,[[235,[955]]]],0,[961,[[53,[963,957]]]],[954,954],[955,955],[[],-1,[]],[[],-1,[]],[[956,956],[[67,[82]]]],[[954,954],11],[[955,955],11],[[954,954,35],11],[[955,955,35],11],0,0,[[954,954],954],[[955,955],955],[[954,954],11],[[955,955],11],[[954,954],954],[[955,955],955],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[[954,954],11],[[955,955],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[954,954],954],[[955,955],955],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[963,911,929,[67,[962]],[67,[958]],[3,[65]]],[[53,[11,957]]]],[[911,929,961,[67,[962]]],[[53,[[3,[65]],957]]]],0,[911,11],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[[965,[-1,-2]],-1,-2],[[67,[-2]]],[71,338],[]],[[[965,[-1,-2]],-1,-2],[[67,[-2]]],[71,338],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[965,[-1,-2]]],[],[]],[[],966],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[[965,[-1,-2]],51],[[53,[11,52]]],57,57],[[966,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[966,[860,[900]],[867,[866]]],863],[[966,[860,[900]],[858,[900]],967],[[53,[11,968]]]],[[966,[860,[900]]]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[966,[860,[900]],[858,[900]],967],[[53,[11,968]]]],[[[965,[-2,-3]],-1],[[67,[-3]]],[71,338,72],[[203,[-1]],71,338],[]],[[],966],[[],-1,[]],[[],-1,[]],[[[965,[-1,-2]]],11,[],[]],[[[965,[-1,-2]]],11,[],[]],[[966,[860,[900]],[867,[866]]],[[860,[866]]]],[966,11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[969,969],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[969,130],11],[[969,130,-1],11,[[169,[667]]]],[[969,130],36],[[969,130,-1],36,[[169,[667]]]],[[969,51],[[53,[11,52]]]],[[969,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[969,[[0,[917]]]],[[969,130],[[67,[871]]]],[969,130],[[],970],[[970,130],[[53,[911,969]]]],[130,[[53,[911,969]]]],[969,[[67,[698]]]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[971,130],36],[[971,[67,[36]],130],36],[[972,[860,[900]],865,859],[[53,[[860,[900]],973]]]],[[972,[860,[900]],865,859],[[53,[[860,[900]],973]]]],[[930,[860,[900]],[867,[866]],974],975],[976,11],[973,973],[975,975],[930,930],[914,914],[977,977],[978,978],[979,979],[980,980],[912,912],[968,968],[916,916],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[977,977],82],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[930,975],35],[[],981],[[],975],[[],930],[[],976],[[],971],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[861,11],[[975,975],35],[[930,930],35],[[914,914],35],[[977,977],35],[[978,978],35],[[979,979],35],[[980,980],35],[[982,982],35],[[912,912],35],[[968,968],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[981,[858,[900]]],[[67,[[11,[904,859]]]]]],[[[860,[866]],[162,[[860,[900]]]],[858,[900]],[867,[866]]],[[0,[[187,[],[[16,[[860,[900]]]]]]]]]],[[972,51],[[53,[11,52]]]],[[983,51],[[53,[11,52]]]],[[973,51],[[53,[11,52]]]],[[973,51],[[53,[11,52]]]],[[981,51],[[53,[11,52]]]],[[975,51],[[53,[11,52]]]],[[930,51],[[53,[11,52]]]],[[914,51],[[53,[11,52]]]],[[914,51],[[53,[11,52]]]],[[913,51],[[53,[11,52]]]],[[977,51],[[53,[11,52]]]],[[977,51],[[53,[11,52]]]],[[978,51],[[53,[11,52]]]],[[976,51],[[53,[11,52]]]],[[979,51],[[53,[11,52]]]],[[979,51],[[53,[11,52]]]],[[980,51],[[53,[11,52]]]],[[980,51],[[53,[11,52]]]],[[982,51],[[53,[11,52]]]],[[912,51],[[53,[11,52]]]],[[968,51],[[53,[11,52]]]],[[968,51],[[53,[11,52]]]],[[911,[858,[900]],983,981,861],972],[911,972],[[911,[858,[900]],983,981,861],972],[911,972],[[983,[860,[900]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[984,973],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[876,977],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[858,[900]]],983],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,977],0,[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],0,[912,[[67,[[860,[866]]]]]],[[975,-1],11,74],[[930,-1],11,74],[[977,-1],11,74],[[978,-1],11,74],[[982,-1],11,74],0,0,0,[[976,[860,[866]]],978],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[912,[867,[866]]],863],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[977,65],35],[[983,[860,[900]]],35],[981,35],0,[[977,65]],[[977,977]],[[],983],[65,[[67,[977]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[977,977],[[67,[82]]]],[[971,911,[162,[130]],[162,[130]],[162,[130]],[162,[130]],[515,[982,36,[514,[175]]]]],11],[[967,900,-1],[[53,[912,968]]],[[40,[[860,[900]]],[[8,[[53,[912,968]]]]]]]],[[977,65],65],0,[973,[[67,[698]]]],0,[[981,[858,[900]]],11],[972,916],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[978,65],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[912,916],36],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[[972,900,859],[[53,[[860,[900]],973]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[976,916],[[53,[11,980]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[911,[858,[890]],[162,[905]]],967],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[860,[900]],985,911,907,974],[[67,[913]]]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[985,985],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[911,907,974,930],986],[[985,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],987],[[],988],[[],989],[[],990],[[],991],[[],992],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[987,62],[987,62],[988,62],[988,62],[989,62],[989,62],[990,62],[990,62],[991,50],[991,50],[992,62],[992,62],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[885,[[53,[11,984]]]],[987,987],[993,993],[988,988],[994,994],[995,995],[996,996],[997,997],[984,984],[998,998],[999,999],[1000,1000],[1001,1001],[1002,1002],[1003,1003],[989,989],[1004,1004],[1005,1005],[990,990],[991,991],[992,992],[1006,1006],[1007,1007],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[987,987],[988,988],[989,989],[990,990],[991,991],[992,992],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[987,987],35],[[988,988],35],[[989,989],35],[[990,990],35],[[991,991],35],[[992,992],35],[[],990],[[],991],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[974,974],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[[],987],[[],988],[[],989],[[],990],[[],991],[[],992],[[987,987],35],[[988,988],35],[[989,989],35],[[990,990],35],[[991,991],35],[[992,992],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[974,44],[[987,-1],11,[[17,[],[[16,[987]]]]]],[[988,-1],11,[[17,[],[[16,[988]]]]]],[[989,-1],11,[[17,[],[[16,[989]]]]]],[[990,-1],11,[[17,[],[[16,[990]]]]]],[[991,-1],11,[[17,[],[[16,[991]]]]]],[[992,-1],11,[[17,[],[[16,[992]]]]]],[[987,51],[[53,[11,52]]]],[[987,51],[[53,[11,52]]]],[[987,51],[[53,[11,52]]]],[[987,51],[[53,[11,52]]]],[[987,51],[[53,[11,52]]]],[[993,51],[[53,[11,52]]]],[[988,51],[[53,[11,52]]]],[[988,51],[[53,[11,52]]]],[[988,51],[[53,[11,52]]]],[[988,51],[[53,[11,52]]]],[[988,51],[[53,[11,52]]]],[[994,51],[[53,[11,52]]]],[[974,51],[[53,[11,52]]]],[[995,51],[[53,[11,52]]]],[[995,51],[[53,[11,52]]]],[[996,51],[[53,[11,52]]]],[[996,51],[[53,[11,52]]]],[[997,51],[[53,[11,52]]]],[[997,51],[[53,[11,52]]]],[[984,51],[[53,[11,52]]]],[[984,51],[[53,[11,52]]]],[[998,51],[[53,[11,52]]]],[[998,51],[[53,[11,52]]]],[[999,51],[[53,[11,52]]]],[[999,51],[[53,[11,52]]]],[[1000,51],[[53,[11,52]]]],[[1000,51],[[53,[11,52]]]],[[1001,51],[[53,[11,52]]]],[[1001,51],[[53,[11,52]]]],[[1002,51],[[53,[11,52]]]],[[1002,51],[[53,[11,52]]]],[[1003,51],[[53,[11,52]]]],[[1003,51],[[53,[11,52]]]],[[989,51],[[53,[11,52]]]],[[989,51],[[53,[11,52]]]],[[989,51],[[53,[11,52]]]],[[989,51],[[53,[11,52]]]],[[989,51],[[53,[11,52]]]],[[1004,51],[[53,[11,52]]]],[[1004,51],[[53,[11,52]]]],[[1005,51],[[53,[11,52]]]],[[1005,51],[[53,[11,52]]]],[[990,51],[[53,[11,52]]]],[[990,51],[[53,[11,52]]]],[[990,51],[[53,[11,52]]]],[[990,51],[[53,[11,52]]]],[[990,51],[[53,[11,52]]]],[[991,51],[[53,[11,52]]]],[[991,51],[[53,[11,52]]]],[[991,51],[[53,[11,52]]]],[[991,51],[[53,[11,52]]]],[[991,51],[[53,[11,52]]]],[[992,51],[[53,[11,52]]]],[[992,51],[[53,[11,52]]]],[[992,51],[[53,[11,52]]]],[[992,51],[[53,[11,52]]]],[[992,51],[[53,[11,52]]]],[[929,51],[[53,[11,52]]]],[[1008,51],[[53,[11,52]]]],[[1006,51],[[53,[11,52]]]],[[1006,51],[[53,[11,52]]]],[[1007,51],[[53,[11,52]]]],[[1007,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[995,996],[-1,-1,[]],[914,996],[968,996],[984,996],[-1,-1,[]],[1009,997],[984,997],[995,997],[968,997],[-1,-1,[]],[1009,984],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1010,1000],[-1,-1,[]],[-1,-1,[]],[1000,1003],[1002,1003],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1009,1005],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1011,1007],[870,1007],[-1,-1,[]],[1012,1007],[980,1007],[868,1007],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[62,[[67,[987]]]],[62,[[67,[988]]]],[62,[[67,[989]]]],[62,[[67,[990]]]],[50,[[67,[991]]]],[62,[[67,[992]]]],[62,987],[62,987],[62,988],[62,988],[62,989],[62,989],[62,990],[62,990],[50,991],[50,991],[62,992],[62,992],[62,987],[62,988],[62,989],[62,990],[50,991],[62,992],[-1,987,[[17,[],[[16,[987]]]]]],[-1,988,[[17,[],[[16,[988]]]]]],[-1,989,[[17,[],[[16,[989]]]]]],[-1,990,[[17,[],[[16,[990]]]]]],[-1,991,[[17,[],[[16,[991]]]]]],[-1,992,[[17,[],[[16,[992]]]]]],[130,[[67,[987]]]],[130,[[67,[988]]]],[130,[[67,[989]]]],[130,[[67,[990]]]],[130,[[67,[991]]]],[130,[[67,[992]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[929,44],974],[974,44],[[974,[860,[889]]],988],[[974,[860,[900]]],994],[[929,[860,[907]]]],[[929,[860,[900]]]],[[929,[860,[866]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[987,987],35],[[988,988],35],[[989,989],35],[[990,990],35],[[991,991],35],[[992,992],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[987],[988],[989],[990],[991],[992],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[987,35],[988,35],[989,35],[990,35],[991,35],[992,35],[987,35],[988,35],[989,35],[990,35],[991,35],[992,35],[987,[[234,[987]]]],[988,[[234,[988]]]],[989,[[234,[989]]]],[990,[[234,[990]]]],[991,[[234,[991]]]],[992,[[234,[992]]]],[987,[[235,[987]]]],[988,[[235,[988]]]],[989,[[235,[989]]]],[990,[[235,[990]]]],[991,[[235,[991]]]],[992,[[235,[992]]]],0,[[990,991],1008],0,[987,987],[988,988],[989,989],[990,990],[991,991],[992,992],[[],-1,[]],[[],-1,[]],0,[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],0,[1008,11],0,[[987,987,35],11],[[988,988,35],11],[[989,989,35],11],[[990,990,35],11],[[991,991,35],11],[[992,992,35],11],[996,[[67,[698]]]],[997,[[67,[698]]]],[984,[[67,[698]]]],[998,[[67,[698]]]],[1000,[[67,[698]]]],[1001,[[67,[698]]]],[1003,[[67,[698]]]],[1005,[[67,[698]]]],[1007,[[67,[698]]]],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[987,987],11],[[988,988],11],[[989,989],11],[[990,990],11],[[991,991],11],[[992,992],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[987,987],987],[[988,988],988],[[989,989],989],[[990,990],990],[[991,991],991],[[992,992],992],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[[1008,911],[[53,[929,[857,[1007]]]]]],[[1008,885],[[53,[11,984]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],1013],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[829,[-1]]],[[705,[[704,[[829,[703]]]]]]],658],[[[780,[-1]]],[[705,[[704,[[780,[703]]]]]]],658],[[[778,[-1]]],[[705,[[704,[[778,[703]]]]]]],658],[[[829,[-1]]],[[705,[[704,[[829,[703]]]]]]],658],[[[780,[-1]]],[[705,[[704,[[780,[703]]]]]]],658],[[[778,[-1]]],[[705,[[704,[[778,[703]]]]]]],658],0,[[1013,1013],1013],[[1013,1013],11],[[1013,1013],1013],[[1013,1013],11],[1013,65],[1013,65],[[1013,1013],1013],[[1013,1013],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[827,827],[[[1014,[-1]]],[[1014,[-1]]],32],[1015,1015],[1016,1016],[819,819],[821,821],[1017,1017],[1018,1018],[1019,1019],[823,823],[1020,1020],[1021,1021],[824,824],[1013,1013],[1022,1022],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[1013,1013],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1013,1013],35],[[],1022],0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[1013,1013],1013],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[[829,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[780,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[778,[-1]]],11,658],[44,11],[[],1013],0,[[1013,1013],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[1013,-1],11,[[17,[],[[16,[1013]]]]]],[[827,51],[[53,[11,52]]]],[[[829,[-1]],51],[[53,[11,52]]],[57,658]],[[[1014,[-1]],51],[[53,[11,52]]],57],[[[1014,[[857,[1007]]]],51],[[53,[11,52]]]],[[[1014,[969]],51],[[53,[11,52]]]],[[830,51],[[53,[11,52]]]],[[830,51],[[53,[11,52]]]],[[1015,51],[[53,[11,52]]]],[[1016,51],[[53,[11,52]]]],[[1016,51],[[53,[11,52]]]],[[819,51],[[53,[11,52]]]],[[821,51],[[53,[11,52]]]],[[821,51],[[53,[11,52]]]],[[[780,[-1]],51],[[53,[11,52]]],[57,658]],[[1017,51],[[53,[11,52]]]],[[1018,51],[[53,[11,52]]]],[[1019,51],[[53,[11,52]]]],[[823,51],[[53,[11,52]]]],[[1020,51],[[53,[11,52]]]],[[1020,51],[[53,[11,52]]]],[[1021,51],[[53,[11,52]]]],[[1021,51],[[53,[11,52]]]],[[824,51],[[53,[11,52]]]],[[824,51],[[53,[11,52]]]],[[1013,51],[[53,[11,52]]]],[[1013,51],[[53,[11,52]]]],[[1013,51],[[53,[11,52]]]],[[1013,51],[[53,[11,52]]]],[[1013,51],[[53,[11,52]]]],[[1022,51],[[53,[11,52]]]],[[[778,[-1]],51],[[53,[11,52]]],[57,658]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1014,[969]]],830],[[[1014,[[857,[1007]]]]],830],[-1,-1,[]],[729,830],[727,830],[-1,-1,[]],[717,1016],[-1,-1,[]],[709,1016],[-1,-1,[]],[729,821],[1023,821],[-1,-1,[]],[728,821],[1016,821],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[727,824],[728,824],[729,824],[1016,824],[-1,-1,[]],[1021,824],[761,824],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[1013]]]],[65,1013],[65,1013],[65,1013],[-1,1013,[[17,[],[[16,[1013]]]]]],[130,[[67,[1013]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[1013,-1],11,74],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[1013,1013],11],[[1013,1013],1013],[[1013,1013],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1013],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1013,35],[1013,35],[1013,[[234,[1013]]]],[1013,[[235,[1013]]]],[[[829,[-1]]],36,658],0,0,0,0,0,0,[[830,130],[[67,[871]]]],0,0,0,0,[1013,1013],[[],-1,[]],0,[[1013,1013],11],[[1013,1013,35],11],0,[[[1014,[-1]]],[[67,[698]]],698],[830,[[67,[698]]]],[1016,[[67,[698]]]],[821,[[67,[698]]]],[824,[[67,[698]]]],0,0,0,0,0,0,[[1013,1013],1013],[[1013,1013],11],[[1013,1013],1013],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[1013,1013],11],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1013,1013],1013],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[840,840],[837,837],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[840,51],[[53,[11,52]]]],[[840,51],[[53,[11,52]]]],[[837,51],[[53,[11,52]]]],[[837,51],[[53,[11,52]]]],[[839,51],[[53,[11,52]]]],[729,840],[-1,-1,[]],[728,837],[-1,-1,[]],[729,837],[781,837],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[840,[[67,[698]]]],[837,[[67,[698]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[841,841],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],841],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],0,[[841,841],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[841,51],[[53,[11,52]]]],[[[1024,[-1,-2]],51],[[53,[11,52]]],[57,848],[57,[1025,[-1]]]],[[[1024,[-1,-2]],-1,-2],11,848,[[1025,[-1]]]],[[[1024,[-1,-2]],-1,130],11,848,[[1025,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[841,35],[[[1024,[-1,-2]],-1],36,848,[[1025,[-1]]]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1024,[-1,-2]],-1,[1026,[-2,-1]]],[[67,[[75,[-2]]]]],848,[[1025,[-1]]]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[1025,[[705,[-1]]],848],[[[777,[-1]]],[[705,[[704,[[777,[703]]]]]]],658],[[[835,[-1]]],[[705,[[704,[[835,[703]]]]]]],658],[[[808,[-1]]],[[705,[[704,[[808,[703]]]]]]],658],[[[809,[-1]]],[[705,[[704,[[809,[703]]]]]]],658],[[[807,[-1]]],[[705,[[704,[[807,[703]]]]]]],658],[[[779,[-1]]],[[705,[[704,[[779,[703]]]]]]],658],[1025,[[705,[-1]]],848],[[[777,[-1]]],[[705,[[704,[[777,[703]]]]]]],658],[[[835,[-1]]],[[705,[[704,[[835,[703]]]]]]],658],[[[808,[-1]]],[[705,[[704,[[808,[703]]]]]]],658],[[[809,[-1]]],[[705,[[704,[[809,[703]]]]]]],658],[[[807,[-1]]],[[705,[[704,[[807,[703]]]]]]],658],[[[779,[-1]]],[[705,[[704,[[779,[703]]]]]]],658],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[808,[-1]]],1027,658],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[798,798],[817,817],[1028,1028],[1029,1029],[818,818],[842,842],[1030,1030],[843,843],[844,844],[825,825],[1031,1031],[826,826],[822,822],[815,815],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],842],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[[[705,[-1]]],11,848],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[777,[-1]]],11,658],[44,11],[[[1032,[-1]]],11,658],[44,11],[44,11],[[[835,[-1]]],11,658],[44,11],[44,11],[[[808,[-1]]],11,658],[44,11],[[[1033,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[[809,[-1]]],11,658],[44,11],[44,11],[44,11],[44,11],[[[807,[-1]]],11,658],[44,11],[44,11],[44,11],[[[779,[-1]]],11,658],[44,11],[44,11],[[842,842],35],[[825,825],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[705,[-1]],51],[[53,[11,52]]],[57,848]],[[1034,51],[[53,[11,52]]]],[[1035,51],[[53,[11,52]]]],[[816,51],[[53,[11,52]]]],[[798,51],[[53,[11,52]]]],[[798,51],[[53,[11,52]]]],[[[777,[-1]],51],[[53,[11,52]]],[57,658]],[[817,51],[[53,[11,52]]]],[[817,51],[[53,[11,52]]]],[[[1032,[-1]],51],[[53,[11,52]]],[57,658]],[[[835,[-1]],51],[[53,[11,52]]],[57,658]],[[[1036,[-1]],51],[[53,[11,52]]],[57,658]],[[[808,[-1]],51],[[53,[11,52]]],[57,658]],[[[1033,[-1]],51],[[53,[11,52]]],[57,658]],[[1028,51],[[53,[11,52]]]],[[1029,51],[[53,[11,52]]]],[[1029,51],[[53,[11,52]]]],[[818,51],[[53,[11,52]]]],[[818,51],[[53,[11,52]]]],[[842,51],[[53,[11,52]]]],[[1030,51],[[53,[11,52]]]],[[1030,51],[[53,[11,52]]]],[[[809,[-1]],51],[[53,[11,52]]],[57,658]],[[843,51],[[53,[11,52]]]],[[843,51],[[53,[11,52]]]],[[844,51],[[53,[11,52]]]],[[844,51],[[53,[11,52]]]],[[825,51],[[53,[11,52]]]],[[[807,[-1]],51],[[53,[11,52]]],[57,658]],[[1031,51],[[53,[11,52]]]],[[826,51],[[53,[11,52]]]],[[826,51],[[53,[11,52]]]],[[822,51],[[53,[11,52]]]],[[822,51],[[53,[11,52]]]],[[[779,[-1]],51],[[53,[11,52]]],[57,658]],[[815,51],[[53,[11,52]]]],[[815,51],[[53,[11,52]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[730,798],[729,798],[-1,-1,[]],[728,817],[729,817],[-1,-1,[]],[798,817],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[843,818],[1029,818],[728,818],[729,818],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[729,826],[727,826],[-1,-1,[]],[727,822],[729,822],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1037,1035],[[[41,[39]]],1035],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1025,1025],35],[[[75,[1025]]],35],[1025,36],[[[1032,[-1]]],57,658],[[[835,[-1]]],36,658],[[[1033,[-1]]],57,658],0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],0,[[[75,[1025]]],44],0,0,0,[798,[[67,[698]]]],[817,[[67,[698]]]],[818,[[67,[698]]]],[826,[[67,[698]]]],[822,[[67,[698]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[[1026,[-2,-1]],51],[[53,[11,52]]],[57,848],[57,[1025,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[1026,[-2,-1]],-1],[[75,[-2]]],848,[[1025,[-1]]]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[543,543],[[53,[11,730]]]],[[1038,1039,[515,[888,699,[514,[175]]]],130,540,[515,[65,1040,[514,[175]]]],[67,[619]]],[[53,[[515,[65,1040,[514,[175]]]],1023]]]],[[533,1041],[[53,[11,1041]]]],[[544,544],[[53,[11,731]]]],[1041,1041],[1040,1040],[730,730],[731,731],[1042,1042],[1043,1043],[1044,1044],[1023,1023],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[1041,51],[[53,[11,52]]]],[[1041,51],[[53,[11,52]]]],[[1040,51],[[53,[11,52]]]],[[1040,51],[[53,[11,52]]]],[[1038,51],[[53,[11,52]]]],[[730,51],[[53,[11,52]]]],[[730,51],[[53,[11,52]]]],[[731,51],[[53,[11,52]]]],[[731,51],[[53,[11,52]]]],[[1042,51],[[53,[11,52]]]],[[1042,51],[[53,[11,52]]]],[[1043,51],[[53,[11,52]]]],[[1043,51],[[53,[11,52]]]],[[1044,51],[[53,[11,52]]]],[[1044,51],[[53,[11,52]]]],[[1023,51],[[53,[11,52]]]],[[1023,51],[[53,[11,52]]]],[[1038,130],[[53,[35,1023]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[911,929,563,537],1038],[563,1039],[1023,[[67,[698]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],0,[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[626,1040],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1045,[67,[254]]],[[53,[[67,[[1046,[-1]]]],1047]]],1048],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,0,0,[[],1049],[[],1050],[[],1051],[[],1052],[[],1053],[[],1054],[[],1055],[[],1056],[[],1057],[[],1058],[[],1059],0,0,[1060,65],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[[1061,65],1061],0,0,[[1062,[1063,[-1]]],11,1048],[[1062,130],11],[[1062,[67,[130]]],[[53,[11,789]]]],[[1062,65],11],[[1062,[1064,[-1]]],11,1048],0,0,0,0,[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],[1049,65],[1049,65],[1050,65],[1050,65],[1051,65],[1051,65],[1052,62],[1052,62],[1053,65],[1053,65],[1054,62],[1054,62],[1055,62],[1055,62],[1056,62],[1056,62],[1057,50],[1057,50],[1058,50],[1058,50],[1059,62],[1059,62],[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[1062,65,-2],11,1048,[[17,[],[[16,[[1065,[-1]]]]]]]],0,0,[[1066,1061,1061],11],[[1067,1061],11],[[1062,[186,[70]]],11],0,0,[789,789],[1068,1068],[1069,1069],[1047,1047],[689,689],[1049,1049],[1050,1050],[1051,1051],[1052,1052],[1053,1053],[1054,1054],[1055,1055],[1056,1056],[1057,1057],[1058,1058],[1070,1070],[1071,1071],[1072,1072],[853,853],[1073,1073],[1074,1074],[1060,1060],[1075,1075],[1076,1076],[1077,1077],[[[1078,[-1]]],[[1078,[-1]]],[32,1048]],[[[1079,[-1]]],[[1079,[-1]]],1048],[[[1080,[-1]]],[[1080,[-1]]],1048],[1081,1081],[[[1082,[-1]]],[[1082,[-1]]],[32,1048]],[[[1083,[-1]]],[[1083,[-1]]],[32,1048]],[1084,1084],[[[1085,[-1]]],[[1085,[-1]]],1048],[[[1086,[-1]]],[[1086,[-1]]],[32,1048]],[1087,1087],[[[1088,[-1]]],[[1088,[-1]]],[32,1048]],[1089,1089],[[[1090,[-1]]],[[1090,[-1]]],32],[[[1091,[-1]]],[[1091,[-1]]],[32,1048]],[[[1092,[-1]]],[[1092,[-1]]],[32,1048]],[1093,1093],[1094,1094],[1061,1061],[1066,1066],[1067,1067],[[[1095,[-1]]],[[1095,[-1]]],1048],[[[1096,[-1]]],[[1096,[-1]]],1048],[[[1097,[-1]]],[[1097,[-1]]],[32,1048]],[[[1098,[-1]]],[[1098,[-1]]],1048],[[[1064,[-1]]],[[1064,[-1]]],[32,1048]],[[[1099,[-1]]],[[1099,[-1]]],1048],[[[1063,[-1]]],[[1063,[-1]]],[32,1048]],[1100,1100],[1101,1101],[1102,1102],[1103,1103],[[[1065,[-1]]],[[1065,[-1]]],[32,1048]],[[[1104,[-1]]],[[1104,[-1]]],[32,1048]],[[[1105,[-1]]],[[1105,[-1]]],[32,1048]],[[[1106,[-1]]],[[1106,[-1]]],[32,1048]],[[[1107,[-1]]],[[1107,[-1]]],[32,1048]],[[[1108,[-1]]],[[1108,[-1]]],[32,1048]],[[[1109,[-1]]],[[1109,[-1]]],[32,1048]],[1059,1059],[1110,1110],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,[1049,1049],[1050,1050],[1051,1051],[1052,1052],[1053,1053],[1054,1054],[1055,1055],[1056,1056],[1057,1057],[1058,1058],[1059,1059],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[1045,1089],[[53,[11,1047]]]],[[1049,1049],35],[[1050,1050],35],[[1051,1051],35],[[1052,1052],35],[[1053,1053],35],[[1054,1054],35],[[1055,1055],35],[[1056,1056],35],[[1057,1057],35],[[1058,1058],35],[[1059,1059],35],[1054,35],[1056,35],[[1062,-1],11,[[187,[],[[16,[1093]]]]]],[[1062,-1],11,[[187,[],[[16,[1067]]]]]],[1060,1061],[[1062,[186,[65]],70,699],11],[[1062,1058,-1],11,[[187,[],[[16,[1067]]]]]],[[1062,1058,-1],11,[[187,[],[[16,[1066]]]]]],0,0,0,0,[[1111,1100],[[53,[789]]]],[[1111,[1082,[-1]]],[[53,[789]]],1048],[[1111,1077],[[53,[789]]]],[[1111,1074],[[53,[789]]]],[[1111,[1083,[-1]]],[[53,[789]]],1048],[[1111,[1086,[-1]]],[[53,[1069]]],1048],[1111,[[53,[789]]]],[[1111,[1078,[-1]]],[[53,[789]]],1048],[[1111,[669,[[67,[130]]]]],[[53,[789]]]],[[1111,[1088,[-1]]],[[53,[1069]]],1048],[[1111,1076],[[53,[789]]]],[[1111,1112,1113],[[53,[1068]]]],[[1114,833,834],[[53,[689]]]],[[1111,1060],[[53,[789]]]],[[1111,1075],[[53,[789]]]],0,0,[[],1103],0,0,0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1111,11],[1114,11],[1111,11],[1111,11],0,[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],0,0,[1062,11],[1045,11],[[1062,[15,[65]]],11],[[1062,70],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1062,65,65,65,65],11],[[1062,65,65,219,65,65],11],[[1062,70,65],11],[[1062,70,70,65],11],[[1062,70,65],11],[[1062,70,70,65],11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,0,0,0,[[],1049],[[],1050],[[],1051],[[],1052],[[],1053],[[],1054],[[],1055],[[],1056],[[],1057],[[],1058],[[],1059],0,[1062,11],[1062,11],[1062,[[53,[789]]]],0,0,[[1062,65],11],[1062,11],0,0,0,0,0,[1114,[[3,[[657,[-1]]]]],1048],[[789,789],35],[[1068,1068],35],[[1069,1069],35],[[1047,1047],35],[[1049,1049],35],[[1050,1050],35],[[1051,1051],35],[[1052,1052],35],[[1053,1053],35],[[1054,1054],35],[[1055,1055],35],[[1056,1056],35],[[1057,1057],35],[[1058,1058],35],[[1101,1101],35],[[1102,1102],35],[[1103,1103],35],[[1059,1059],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[1111,11],[[1049,-1],11,[[17,[],[[16,[1049]]]]]],[[1050,-1],11,[[17,[],[[16,[1050]]]]]],[[1051,-1],11,[[17,[],[[16,[1051]]]]]],[[1052,-1],11,[[17,[],[[16,[1052]]]]]],[[1053,-1],11,[[17,[],[[16,[1053]]]]]],[[1054,-1],11,[[17,[],[[16,[1054]]]]]],[[1055,-1],11,[[17,[],[[16,[1055]]]]]],[[1056,-1],11,[[17,[],[[16,[1056]]]]]],[[1057,-1],11,[[17,[],[[16,[1057]]]]]],[[1058,-1],11,[[17,[],[[16,[1058]]]]]],[[1059,-1],11,[[17,[],[[16,[1059]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[1111,-1],11,[[187,[],[[16,[[186,[70]]]]]]]],[[1115,51],[[53,[11,52]]]],[[789,51],[[53,[11,52]]]],[[789,51],[[53,[11,52]]]],[[1068,51],[[53,[11,52]]]],[[1068,51],[[53,[11,52]]]],[[1069,51],[[53,[11,52]]]],[[1069,51],[[53,[11,52]]]],[[1047,51],[[53,[11,52]]]],[[1047,51],[[53,[11,52]]]],[[689,51],[[53,[11,52]]]],[[689,51],[[53,[11,52]]]],[[1049,51],[[53,[11,52]]]],[[1049,51],[[53,[11,52]]]],[[1049,51],[[53,[11,52]]]],[[1049,51],[[53,[11,52]]]],[[1049,51],[[53,[11,52]]]],[[1050,51],[[53,[11,52]]]],[[1050,51],[[53,[11,52]]]],[[1050,51],[[53,[11,52]]]],[[1050,51],[[53,[11,52]]]],[[1050,51],[[53,[11,52]]]],[[1051,51],[[53,[11,52]]]],[[1051,51],[[53,[11,52]]]],[[1051,51],[[53,[11,52]]]],[[1051,51],[[53,[11,52]]]],[[1051,51],[[53,[11,52]]]],[[1052,51],[[53,[11,52]]]],[[1052,51],[[53,[11,52]]]],[[1052,51],[[53,[11,52]]]],[[1052,51],[[53,[11,52]]]],[[1052,51],[[53,[11,52]]]],[[1053,51],[[53,[11,52]]]],[[1053,51],[[53,[11,52]]]],[[1053,51],[[53,[11,52]]]],[[1053,51],[[53,[11,52]]]],[[1053,51],[[53,[11,52]]]],[[1054,51],[[53,[11,52]]]],[[1054,51],[[53,[11,52]]]],[[1054,51],[[53,[11,52]]]],[[1054,51],[[53,[11,52]]]],[[1054,51],[[53,[11,52]]]],[[1055,51],[[53,[11,52]]]],[[1055,51],[[53,[11,52]]]],[[1055,51],[[53,[11,52]]]],[[1055,51],[[53,[11,52]]]],[[1055,51],[[53,[11,52]]]],[[1056,51],[[53,[11,52]]]],[[1056,51],[[53,[11,52]]]],[[1056,51],[[53,[11,52]]]],[[1056,51],[[53,[11,52]]]],[[1056,51],[[53,[11,52]]]],[[1057,51],[[53,[11,52]]]],[[1057,51],[[53,[11,52]]]],[[1057,51],[[53,[11,52]]]],[[1057,51],[[53,[11,52]]]],[[1057,51],[[53,[11,52]]]],[[1058,51],[[53,[11,52]]]],[[1058,51],[[53,[11,52]]]],[[1058,51],[[53,[11,52]]]],[[1058,51],[[53,[11,52]]]],[[1058,51],[[53,[11,52]]]],[[1070,51],[[53,[11,52]]]],[[1071,51],[[53,[11,52]]]],[[1072,51],[[53,[11,52]]]],[[[657,[-1]],51],[[53,[11,52]]],[57,1048]],[[853,51],[[53,[11,52]]]],[[[1046,[-1]],51],[[53,[11,52]]],[57,1048]],[[[665,[-1]],51],[[53,[11,52]]],[57,1048]],[[1073,51],[[53,[11,52]]]],[[1074,51],[[53,[11,52]]]],[[1060,51],[[53,[11,52]]]],[[1075,51],[[53,[11,52]]]],[[1076,51],[[53,[11,52]]]],[[1077,51],[[53,[11,52]]]],[[[1078,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1079,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1080,[-1]],51],[[53,[11,52]]],[57,1048]],[[1081,51],[[53,[11,52]]]],[[[1082,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1083,[-1]],51],[[53,[11,52]]],[57,1048]],[[1084,51],[[53,[11,52]]]],[[[1085,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1086,[-1]],51],[[53,[11,52]]],[57,1048]],[[1087,51],[[53,[11,52]]]],[[[1088,[-1]],51],[[53,[11,52]]],[57,1048]],[[1089,51],[[53,[11,52]]]],[[[1090,[-1]],51],[[53,[11,52]]],57],[[[1091,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1092,[-1]],51],[[53,[11,52]]],[57,1048]],[[1093,51],[[53,[11,52]]]],[[1094,51],[[53,[11,52]]]],[[1061,51],[[53,[11,52]]]],[[1066,51],[[53,[11,52]]]],[[1067,51],[[53,[11,52]]]],[[[1095,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1096,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1097,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1098,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1064,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1099,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1063,[-1]],51],[[53,[11,52]]],[57,1048]],[[1100,51],[[53,[11,52]]]],[[1101,51],[[53,[11,52]]]],[[1102,51],[[53,[11,52]]]],[[1103,51],[[53,[11,52]]]],[[[1065,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1104,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1116,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1105,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1106,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1107,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1108,[-1]],51],[[53,[11,52]]],[57,1048]],[[[1109,[-1]],51],[[53,[11,52]]],[57,1048]],[[1059,51],[[53,[11,52]]]],[[1059,51],[[53,[11,52]]]],[[1059,51],[[53,[11,52]]]],[[1059,51],[[53,[11,52]]]],[[1059,51],[[53,[11,52]]]],[[1110,51],[[53,[11,52]]]],0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1117,789],[1118,789],[1119,789],[1120,789],[-1,-1,[]],[789,1068],[-1,-1,[]],[789,1069],[-1,-1,[]],[-1,-1,[]],[789,1047],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[533,1052],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[1049]]]],[65,[[67,[1050]]]],[65,[[67,[1051]]]],[62,[[67,[1052]]]],[65,[[67,[1053]]]],[62,[[67,[1054]]]],[62,[[67,[1055]]]],[62,[[67,[1056]]]],[50,[[67,[1057]]]],[50,[[67,[1058]]]],[62,[[67,[1059]]]],[65,1049],[65,1049],[65,1050],[65,1050],[65,1051],[65,1051],[62,1052],[62,1052],[65,1053],[65,1053],[62,1054],[62,1054],[62,1055],[62,1055],[62,1056],[62,1056],[50,1057],[50,1057],[50,1058],[50,1058],[62,1059],[62,1059],[65,1049],[65,1050],[65,1051],[62,1052],[65,1053],[62,1054],[62,1055],[62,1056],[50,1057],[50,1058],[62,1059],[-1,1049,[[17,[],[[16,[1049]]]]]],[-1,1050,[[17,[],[[16,[1050]]]]]],[-1,1051,[[17,[],[[16,[1051]]]]]],[-1,1052,[[17,[],[[16,[1052]]]]]],[-1,1053,[[17,[],[[16,[1053]]]]]],[-1,1054,[[17,[],[[16,[1054]]]]]],[-1,1055,[[17,[],[[16,[1055]]]]]],[-1,1056,[[17,[],[[16,[1056]]]]]],[-1,1057,[[17,[],[[16,[1057]]]]]],[-1,1058,[[17,[],[[16,[1058]]]]]],[-1,1059,[[17,[],[[16,[1059]]]]]],[130,[[67,[1049]]]],[130,[[67,[1050]]]],[130,[[67,[1051]]]],[130,[[67,[1052]]]],[130,[[67,[1053]]]],[130,[[67,[1054]]]],[130,[[67,[1055]]]],[130,[[67,[1056]]]],[130,[[67,[1057]]]],[130,[[67,[1058]]]],[130,[[67,[1059]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1111,[1104,[-1]]],1103,1048],[1111,70],[1121,[[3,[36]]]],[1111,[[53,[70,789]]]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[1122,630],[1123,12],0,0,0,[[1049,-1],11,74],[[1050,-1],11,74],[[1051,-1],11,74],[[1052,-1],11,74],[[1053,-1],11,74],[[1054,-1],11,74],[[1055,-1],11,74],[[1056,-1],11,74],[[1057,-1],11,74],[[1058,-1],11,74],[[1059,-1],11,74],0,0,0,0,[1070,[[53,[1114,689]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],[[1062,130],11],[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[[1049,1049],35],[[1050,1050],35],[[1051,1051],35],[[1052,1052],35],[[1053,1053],35],[[1054,1054],35],[[1055,1055],35],[[1056,1056],35],[[1057,1057],35],[[1058,1058],35],[[1059,1059],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1049],[1050],[1051],[1052],[1053],[1054],[1055],[1056],[1057],[1058],[1059],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1111,-1],11,[[187,[],[[16,[[186,[70]]]]]]]],[1049,35],[1050,35],[1051,35],[1052,35],[1053,35],[1054,35],[1055,35],[1056,35],[1057,35],[1058,35],[1059,35],0,[1060,35],[1049,35],[1050,35],[1051,35],[1052,35],[1053,35],[1054,35],[1055,35],[1056,35],[1057,35],[1058,35],[1059,35],[1052,35],[1049,[[234,[1049]]]],[1050,[[234,[1050]]]],[1051,[[234,[1051]]]],[1052,[[234,[1052]]]],[1053,[[234,[1053]]]],[1054,[[234,[1054]]]],[1055,[[234,[1055]]]],[1056,[[234,[1056]]]],[1057,[[234,[1057]]]],[1058,[[234,[1058]]]],[1059,[[234,[1059]]]],[1049,[[235,[1049]]]],[1050,[[235,[1050]]]],[1051,[[235,[1051]]]],[1052,[[235,[1052]]]],[1053,[[235,[1053]]]],[1054,[[235,[1054]]]],[1055,[[235,[1055]]]],[1056,[[235,[1056]]]],[1057,[[235,[1057]]]],[1058,[[235,[1058]]]],[1059,[[235,[1059]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1052,557],[[1111,[186,[70]]],[[53,[1073,789]]]],[[635,632],1061],[[1094,1061],1061],0,0,0,0,[[1061,1061],1061],0,0,0,0,0,0,0,0,0,0,0,[[533,557],1052],[1049,1049],[1050,1050],[1051,1051],[1052,1052],[1053,1053],[1054,1054],[1055,1055],[1056,1056],[1057,1057],[1058,1058],[1059,1059],[[],-1,[]],0,0,0,0,0,0,[[1122,537,563],[[53,[[665,[-1]],789]]],1048],0,0,[[1062,1110],11],[1123,[[53,[11,1047]]]],0,0,0,0,0,0,0,0,0,0,0,[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],[[1062,-1],11,[[187,[],[[16,[]]]]]],[[1062,[186,[65]]],11],0,0,0,0,0,0,0,0,[[1049,1049,35],11],[[1050,1050,35],11],[[1051,1051,35],11],[[1052,1052,35],11],[[1053,1053,35],11],[[1054,1054,35],11],[[1055,1055,35],11],[[1056,1056,35],11],[[1057,1057,35],11],[[1058,1058,35],11],[[1059,1059,35],11],[[1062,65,[162,[65]]],11],[[1062,[15,[12]]],11],[1062,11],[[1062,[1079,[-1]],614],11,1048],[[1062,540,65,[162,[65]]],11],[1062,11],[[1062,[1090,[65]]],11],[[1062,65],11],[[1062,65,[1079,[-1]]],11,1048],[[1062,[1090,[12]],[186,[12]]],11],0,0,0,0,0,0,0,[1068,[[67,[698]]]],[1069,[[67,[698]]]],[1047,[[67,[698]]]],[689,[[67,[698]]]],0,0,0,0,0,0,[1111,35],0,0,[1111,11],0,[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],[[1123,162,[67,[[11,[70]]]]],[[53,[11,789]]]],0,[1122,[[67,[853]]]],[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],0,0,0,0,0,[[1122,533],1051],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,126,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[1049,1049],11],[[1050,1050],11],[[1051,1051],11],[[1052,1052],11],[[1053,1053],11],[[1054,1054],11],[[1055,1055],11],[[1056,1056],11],[[1057,1057],11],[[1058,1058],11],[[1059,1059],11],0,[[1062,-2],11,1048,[[187,[],[[16,[[1091,[-1]]]]]]]],[[1062,-2],11,1048,[[187,[],[[16,[[1092,[-1]]]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1045,11],[[1049,1049],1049],[[1050,1050],1050],[[1051,1051],1051],[[1052,1052],1052],[[1053,1053],1053],[[1054,1054],1054],[[1055,1055],1055],[[1056,1056],1056],[[1057,1057],1057],[[1058,1058],1058],[[1059,1059],1059],[1111,[[53,[11,789]]]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1111,70,65],[[53,[35,789]]]],0,[[1062,65],11],0,0,0,0,[874,540],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1124,[67,[254]]],[[53,[[67,[[1046,[703]]]],1047]]]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[1125,[1063,[703]]],11],[[1125,130],11],[[1125,[67,[130]]],[[53,[11,789]]]],[[1125,1126,65],11],[[1125,[1064,[703]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1125,65,-1],11,[[17,[],[[16,[[1065,[703]]]]]]]],[[1125,1126,[186,[70]]],11],[703,703],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1124,1124,1089],[[53,[11,1047]]]],[[1125,1126,1126,-1],11,[]],[[1125,1126,1126,-1],11,[]],[[1125,1126,[186,[65]],1126,70,699],11],[[1125,1126,1058,1126,-1],11,[]],[[1125,1126,1058,1126,-1],11,[]],[[1124,1100],[[53,[1126,789]]]],[[1124,[1082,[703]]],[[53,[1126,789]]]],[[1124,1077],[[53,[1126,789]]]],[[1124,1074],[[53,[1126,789]]]],[[1124,[1083,[703]]],[[53,[1125,789]]]],[[1124,[1086,[703]]],[[53,[1126,1069]]]],[1124,[[53,[1126,789]]]],[130,690],[[1124,[1078,[703]]],[[53,[1126,789]]]],[[1124,[669,[[67,[130]]]]],[[53,[1126,789]]]],[[1124,[1088,[703]]],[[53,[1126,1069]]]],[[1124,1076],[[53,[1126,789]]]],[[1124,1112,1113],[[53,[1126,1068]]]],[[1124,833,834],[[53,[1124,689]]]],[[1124,1060],[[53,[1126,789]]]],[[1124,1126,1075],[[53,[1126,789]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1125],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1126],11],[[1124,1124],11],[[1124,1126],11],[[1124,1126],11],[1125,11],[[1124,1126],11],[[1125,[15,[65]]],11],[[1125,1126,70],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1125,65,65,65,65],11],[[1125,65,65,219,65,65],11],[[1125,1126,70,65],11],[[1125,1126,70,1126,70,65],11],[[1125,1126,70,65],11],[[1125,1126,70,1126,70,65],11],[44,11],[44,11],[44,11],[44,11],[1125,11],[1125,11],[1125,[[53,[1126,789]]]],[[1125,1126,65],11],[1125,11],[1124,[[3,[[657,[703]]]]]],[[1124,1124],11],[[1124,1126,-1],11,[]],[[703,51],[[53,[11,52]]]],[[1125,51],[[53,[11,52]]]],[[1126,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1124,[1104,[703]]],1103],[[1124,1126],70],[[1124,1126],[[53,[70,789]]]],[1124,630],[813,[[67,[[701,[703]]]]]],[1124,12],[[[806,[-1]]],[[845,[703]]],811],[1070,[[53,[1124,689]]]],[[],44],[[],44],[[],44],[[],44],[[1125,130],11],[690,67],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1124,1126,-1],11,[]],[[1124,1126,[186,[70]]],[[53,[1073,789]]]],[[1124,537,563],[[53,[[665,[703]],789]]]],[[1125,1110],11],[[1124,1124,1126],[[53,[11,1047]]]],[[1125,-1],11,[]],[[1125,1126,[186,[65]]],11],[[1125,1126,65,1126,[162,[65]]],11],[[1125,[15,[12]]],11],[[1125,1126],11],[[1125,[1079,[703]],614],11],[[1125,1126,540,65,[162,[65]]],11],[[1125,1126],11],[[1125,[1090,[65]]],11],[[1125,65],11],[[1125,65,[1079,[703]]],11],[[1125,[1090,[12]],[186,[12]]],11],[1124,35],[1124,11],[[1124,[162,[1126]],[67,[[11,[1126,70]]]]],[[53,[11,789]]]],[[1124,1124],[[67,[853]]]],[[1124,533],1051],[-1,-2,[],[]],[[1125,-1],11,[[187,[],[[16,[[1091,[703]]]]]]]],[[1125,-1],11,[[187,[],[[16,[[1092,[703]]]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1124,1124],11],[[1124,1126],[[53,[11,789]]]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1124,1126,70,65],[[53,[35,789]]]],[[1125,1126,65],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[1127,1128],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[1129,[1063,[1130]]],11],[[1129,130],11],[[1129,[67,[130]]],[[53,[11,789]]]],[[1129,1131,65],11],[[1129,[1064,[1130]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1129,65,-1],11,[[17,[],[[16,[[1065,[1130]]]]]]]],[[1129,1132,[186,[70]]],11],[1130,1130],[1133,1133],[1132,1132],[1134,1134],[1135,1135],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1136,1128],[[1129,1132,1132,-1],11,[[187,[],[[16,[1093]]]]]],[[1129,1132,1137,-1],11,[[187,[],[[16,[1067]]]]]],[[1129,1131,[186,[65]],1132,70,699],11],0,[[1129,1137,1058,1132,-1],11,[[187,[],[[16,[1067]]]]]],[[1129,1137,1058,1137,-1],11,[[187,[],[[16,[1066]]]]]],[[1136,1100],[[53,[11,789]]]],[[1136,[1082,[1130]]],[[53,[1138,789]]]],[[1136,1077],[[53,[1139,789]]]],[[1136,1074],[[53,[1132,789]]]],[[1136,[1083,[1130]]],[[53,[1129,789]]]],[[1136,[1086,[1130]]],[[53,[1140,1069]]]],[1136,[[53,[1141,789]]]],[130,690],[[1136,[1078,[1130]]],[[53,[1142,789]]]],[[1136,[669,[[67,[130]]]]],[[53,[1131,789]]]],[[1136,[1088,[1130]]],[[53,[1143,1069]]]],[[1136,1076],[[53,[1144,789]]]],[[1136,1112,1113],[[53,[1145,1068]]]],[[1136,1060],[[53,[1137,789]]]],[[1136,1137,1075],[[53,[1135,789]]]],0,[[],1146],[533,1137],[44,-1,[]],[44,-1,[]],[1147],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[1136,11],11],[[1136,1138],11],[[1136,1139],11],[[1136,1132],11],[[1136,1129],11],[[1136,1140],11],[[1136,1141],11],[[1136,1142],11],[[1136,1131],11],[[1136,1143],11],[[1136,1144],11],[[1136,1145],11],[[1136,1137],11],[[1136,1135],11],[1129,11],[[1129,[15,[65]]],11],[[1129,1132,70],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1129,65,65,65,65],11],[[1129,65,65,219,65,65],11],[[1129,1132,70,65],11],[[1129,1132,70,1132,70,65],11],[[1129,1132,70,65],11],[[1129,1132,70,1132,70,65],11],[44,11],[1147,11],[44,11],[44,11],[44,11],[44,11],[44,11],[1129,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],0,[1128,[[67,[[1151,[[1150,[1148,1149]]]]]]]],[1128,[[67,[[11,[219,219]]]]]],[1129,11],[1129,11],[1129,[[53,[1146,789]]]],[[1129,1131,65],11],[1129,11],[[1136,1152],11],0,[[1136,1132,-1],11,[[187,[],[[16,[[186,[70]]]]]]]],[[1129,51],[[53,[11,52]]]],[[1130,51],[[53,[11,52]]]],[[1133,51],[[53,[11,52]]]],[[1132,51],[[53,[11,52]]]],[[1134,51],[[53,[11,52]]]],[[1137,51],[[53,[11,52]]]],[[1135,51],[[53,[11,52]]]],[[1144,51],[[53,[11,52]]]],[[1139,51],[[53,[11,52]]]],[[1142,51],[[53,[11,52]]]],[[1138,51],[[53,[11,52]]]],[[1145,51],[[53,[11,52]]]],[[1143,51],[[53,[11,52]]]],[[1140,51],[[53,[11,52]]]],[[1131,51],[[53,[11,52]]]],[[1141,51],[[53,[11,52]]]],[[1146,51],[[53,[11,52]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1136,[1104,[1130]]],1103],[[1136,11],70],[[1136,1141],[[53,[70,789]]]],[1127,630],[813,[[67,[[701,[1130]]]]]],[1152,12],[1128,[[1155,[1153,1154]]]],[[[806,[-1]]],[[845,[1130]]],811],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[1129,130],11],[690,67],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1136,1132,-1],11,[]],[1128,35],[1128,1147],[[1136,1132,[186,[70]]],[[53,[1073,789]]]],0,[-1,[[67,[[657,[1130]]]]],[[202,[130],[[8,[1156]]]]]],[[],-1,[]],[[1127,537,563],[[53,[[665,[1130]],789]]]],[[1129,1110],11],[[1152,1157,1137],[[53,[11,1047]]]],[1128,1156],[1128,[[67,[1158]]]],[[1129,-1],11,[]],[[1129,1131,[186,[65]]],11],[[1129,1142,65,1138,[162,[65]]],11],[[1129,[15,[12]]],11],[[1129,1140],11],[[1129,[1079,[1130]],614],11],[[1129,1142,540,65,[162,[65]]],11],[[1129,1143],11],[[1129,[1090,[65]]],11],[[1129,65],11],[[1129,65,[1079,[1130]]],11],[[1129,[1090,[12]],[186,[12]]],11],[1136,35],[1136,11],[[1152,[162,[1146]],[67,[[11,[1141,70]]]]],[[53,[11,789]]]],[[1127,1157],[[67,[853]]]],[[1127,533],1051],[[1136,1159,1060,[67,[[41,[13]]]]],1137],[[1136,1159,1060,[67,[[41,[13]]]]],1137],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1129,-1],11,[[187,[],[[16,[[1091,[1130]]]]]]]],[[1129,-1],11,[[187,[],[[16,[[1092,[1130]]]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1136,1132],[[53,[11,789]]]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1136,1141,70,65],[[53,[35,789]]]],[[1129,1131,65],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1160,[67,[254]]],[[53,[[67,[[1046,[1161]]]],1047]]]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],1162],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[1163,[1063,[1161]]],11],[[1163,130],11],[[1163,[67,[130]]],[[53,[11,789]]]],[[1163,1164,65],11],[[1163,[1064,[1161]]],11],[[1162,1162],1162],[[1162,1162],11],[[1162,1162],1162],[[1162,1162],11],[1162,65],[1162,65],[[1162,1162],1162],[[1162,1162],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1165,1166],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1167,1168],[[1163,65,-1],11,[[17,[],[[16,[[1065,[1161]]]]]]]],[[1163,1168,[186,[70]]],11],[1161,1161],[1162,1162],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[1162,1162],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1160,1169,1089],[[53,[11,1047]]]],[[1162,1162],35],[[1163,1168,1168,-1],11,[[187,[],[[16,[1093]]]]]],[[1163,1168,1166,-1],11,[[187,[],[[16,[1067]]]]]],[[1163,1164,[186,[65]],1168,70,699],11],[[1163,1166,1058,1168,-1],11,[[187,[],[[16,[1067]]]]]],[[1163,1166,1058,1166,-1],11,[[187,[],[[16,[1066]]]]]],[[1169,1100],[[53,[1170,789]]]],[[1169,[1082,[1161]]],[[53,[1171,789]]]],[[1169,1077],[[53,[1172,789]]]],[[1169,1074],[[53,[1168,789]]]],[[1169,[1083,[1161]]],[[53,[1163,789]]]],[[1169,[1086,[1161]]],[[53,[1173,1069]]]],[1169,[[53,[1174,789]]]],[130,690],[[1169,[1078,[1161]]],[[53,[1175,789]]]],[[1169,[669,[[67,[130]]]]],[[53,[1164,789]]]],[[1169,[1088,[1161]]],[[53,[1176,1069]]]],[[1169,1076],[[53,[1177,789]]]],[[1169,1112,1113],[[53,[1178,1068]]]],[[1179,833,834],[[53,[1160,689]]]],[[1169,1060],[[53,[1166,789]]]],[[1169,1166,1075],[[53,[1180,789]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[[1181,65,538],[[53,[[3,[1182]],689]]]],[[1169,1170],11],[[1169,1171],11],[[1169,1172],11],[[1169,1168],11],[[1169,1163],11],[[1169,1173],11],[[1169,1174],11],[[1169,1175],11],[[1169,1164],11],[[1169,1176],11],[[1169,1177],11],[[1169,1178],11],[[1179,1160],11],[[1169,1166],11],[[1169,1180],11],[[1183,1184,35,[162,[1182]],537,65,65],[[53,[[665,[1161]],789]]]],[[1162,1162],1162],[1163,11],[[1160,1165],11],[[1163,[15,[65]]],11],[[1163,1168,70],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1163,65,65,65,65],11],[[1163,65,65,219,65,65],11],[[1163,1168,70,65],11],[[1163,1168,70,1168,70,65],11],[[1163,1168,70,65],11],[[1163,1168,70,1168,70,65],11],[44,11],[44,11],[1185,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[],1162],[1169,[[162,[1182]]]],[1163,11],[1163,11],[1163,[[53,[1186,789]]]],[[1163,1164,65],11],[1163,11],[1185,1181],[1179,[[3,[[657,[1161]]]]]],[[1162,1162],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[1169,1187],11],[[1179,1188],[[67,[[657,[1161]]]]]],[[1162,-1],11,[[17,[],[[16,[1162]]]]]],[1185,[[162,[1182]]]],[[1169,1168,-1],11,[[187,[],[[16,[[186,[70]]]]]]]],[[1163,51],[[53,[11,52]]]],[[1161,51],[[53,[11,52]]]],[[1189,51],[[53,[11,52]]]],[[1165,51],[[53,[11,52]]]],[[1162,51],[[53,[11,52]]]],[[1162,51],[[53,[11,52]]]],[[1162,51],[[53,[11,52]]]],[[1162,51],[[53,[11,52]]]],[[1162,51],[[53,[11,52]]]],[[1168,51],[[53,[11,52]]]],[[1170,51],[[53,[11,52]]]],[[1166,51],[[53,[11,52]]]],[[1180,51],[[53,[11,52]]]],[[1177,51],[[53,[11,52]]]],[[1172,51],[[53,[11,52]]]],[[1175,51],[[53,[11,52]]]],[[1171,51],[[53,[11,52]]]],[[1186,51],[[53,[11,52]]]],[[1178,51],[[53,[11,52]]]],[[1176,51],[[53,[11,52]]]],[[1173,51],[[53,[11,52]]]],[[1164,51],[[53,[11,52]]]],[[1174,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,[[67,[1162]]]],[65,1162],[65,1162],[65,1162],[-1,1162,[[17,[],[[16,[1162]]]]]],[130,[[67,[1162]]]],[[1181,1190,65,65,[67,[1191]],[3,[1182]],538,35,[67,[[41,[13]]]]],[[53,[1179,689]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1169,[1104,[1161]]],1103],[[1169,1170],70],[[1169,1174],[[53,[70,789]]]],[[-1,-2],70,[71,72],73],[1183,630],[813,[[67,[[701,[1161]]]]]],[1187,12],[[1162,-1],11,74],[[[806,[-1]]],[[845,[1161]]],811],[[],44],[[],44],[1070,[[53,[1179,689]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[1162,1162],11],[[1163,130],11],[1185,65],[690,67],[[1162,1162],1162],[[1162,1162],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1162],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1169,1168,-1],11,[[187,[],[[16,[[186,[70]]]]]]]],[1162,35],[1162,35],[1162,[[234,[1162]]]],[1162,[[235,[1162]]]],[[1169,1168,[186,[70]]],[[53,[1073,789]]]],[1162,1162],[[1183,537,563],[[53,[[665,[1161]],789]]]],[1183,1192],[[1183,[162,[1182]],537],1193],[[1163,1110],11],[[1187,1160,1165],[[53,[11,1047]]]],[1169,65],[1169,65],[1169,1184],[1166,1194],[1185,1190],[1183,1188],[1169,1188],[1169,1195],[[1162,1162],11],[[1183,537],[[3,[1182]]]],[[1163,-1],11,[[187,[],[[16,[1186]]]]]],[[1163,1164,[186,[65]]],11],[[1162,1162,35],11],[[1163,1175,65,1171,[162,[65]]],11],[[1163,[15,[12]]],11],[[1163,1173],11],[[1163,[1079,[1161]],614],11],[[1163,1175,540,65,[162,[65]]],11],[[1163,1176],11],[[1163,[1090,[65]]],11],[[1163,65],11],[[1163,65,[1079,[1161]]],11],[[1163,[1090,[12]],[186,[12]]],11],[1179,1185],[1183,1185],[1169,1185],[1169,35],[1169,11],[[1162,1162],1162],[[1162,1162],11],[[1187,[162,[1186]],[67,[[11,[1174,70]]]]],[[53,[11,789]]]],[[1183,1160],[[67,[853]]]],[[1162,1162],1162],[[1183,533],1051],[[1194,1060,[67,[[41,[13]]]]],1166],[-1,-2,[],[]],[-1,-2,[],[]],[[1162,1162],11],[[1163,-1],11,[[187,[],[[16,[[1091,[1161]]]]]]]],[[1163,-1],11,[[187,[],[[16,[[1092,[1161]]]]]]]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1160,1169],11],[[1162,1162],1162],[[1169,1168],[[53,[11,789]]]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1169,1174,70,65],[[53,[35,789]]]],[[1163,1164,65],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[],1196],[[],1196],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[1196,833],[1197,834],[1196,833],[1197,834],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1196,833],[-1,-2,[],[]],[1197,834],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[833,1196],[834,1197],[1198,1198],[1199,1199],[1200,1200],[1201,1201],[1196,1196],[1197,1197],[1202,1202],[1203,1203],[1204,1204],[1205,1205],[1206,1206],[1207,1207],[1208,1208],[1209,1209],[1210,1210],[1211,1211],[1212,1212],[1213,1213],[1214,1214],[1215,1215],[1216,1216],[1217,1217],[1218,1218],[1219,1219],[1220,1220],[1221,1221],[1222,1222],[1223,1223],[1224,1224],[834,834],[833,833],[691,691],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],0,0,[692,[[53,[1196,691]]]],[1196,[[53,[1196,691]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[1198,1198],35],[[1199,1199],35],[[1200,1200],35],[[1201,1201],35],[[1196,1196],35],[[1197,1197],35],[[1202,1202],35],[[1203,1203],35],[[1204,1204],35],[[1205,1205],35],[[1206,1206],35],[[1207,1207],35],[[1208,1208],35],[[1209,1209],35],[[1210,1210],35],[[1211,1211],35],[[1212,1212],35],[[1213,1213],35],[[1214,1214],35],[[1215,1215],35],[[1216,1216],35],[[1217,1217],35],[[1218,1218],35],[[1219,1219],35],[[1220,1220],35],[[1221,1221],35],[[1222,1222],35],[[1223,1223],35],[[1224,1224],35],[[834,834],35],[[833,833],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[1198,51],[[53,[11,52]]]],[[1199,51],[[53,[11,52]]]],[[1200,51],[[53,[11,52]]]],[[1201,51],[[53,[11,52]]]],[[1196,51],[[53,[11,52]]]],[[1197,51],[[53,[11,52]]]],[[1202,51],[[53,[11,52]]]],[[1203,51],[[53,[11,52]]]],[[1204,51],[[53,[11,52]]]],[[1205,51],[[53,[11,52]]]],[[1206,51],[[53,[11,52]]]],[[1207,51],[[53,[11,52]]]],[[1208,51],[[53,[11,52]]]],[[1209,51],[[53,[11,52]]]],[[1210,51],[[53,[11,52]]]],[[1211,51],[[53,[11,52]]]],[[1212,51],[[53,[11,52]]]],[[1213,51],[[53,[11,52]]]],[[1214,51],[[53,[11,52]]]],[[1215,51],[[53,[11,52]]]],[[1216,51],[[53,[11,52]]]],[[1217,51],[[53,[11,52]]]],[[1218,51],[[53,[11,52]]]],[[1219,51],[[53,[11,52]]]],[[1220,51],[[53,[11,52]]]],[[1221,51],[[53,[11,52]]]],[[1222,51],[[53,[11,52]]]],[[1223,51],[[53,[11,52]]]],[[1224,51],[[53,[11,52]]]],[[834,51],[[53,[11,52]]]],[[833,51],[[53,[11,52]]]],[[691,51],[[53,[11,52]]]],[[691,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1219,834],[1217,834],[1203,834],[1197,834],[-1,-1,[]],[1209,834],[1220,834],[1199,834],[1221,834],[1201,834],[1207,834],[1223,834],[1224,834],[1215,834],[1211,834],[1205,834],[1213,834],[1210,833],[1198,833],[1206,833],[1212,833],[1222,833],[1200,833],[-1,-1,[]],[1214,833],[1218,833],[1208,833],[1202,833],[1216,833],[1196,833],[1204,833],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[],1196],[[1198,-1],11,74],[[1199,-1],11,74],[[1200,-1],11,74],[[1201,-1],11,74],[[1196,-1],11,74],[[1197,-1],11,74],[[1202,-1],11,74],[[1203,-1],11,74],[[1204,-1],11,74],[[1205,-1],11,74],[[1206,-1],11,74],[[1207,-1],11,74],[[1208,-1],11,74],[[1209,-1],11,74],[[1210,-1],11,74],[[1211,-1],11,74],[[1212,-1],11,74],[[1213,-1],11,74],[[1214,-1],11,74],[[1215,-1],11,74],[[1216,-1],11,74],[[1217,-1],11,74],[[1218,-1],11,74],[[1219,-1],11,74],[[1220,-1],11,74],[[1221,-1],11,74],[[1222,-1],11,74],[[1223,-1],11,74],[[1224,-1],11,74],[[834,-1],11,74],[[833,-1],11,74],0,0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1198],[[[1225,[1156]]],1199],[[],1200],[[[1225,[1156]]],1201],[[],1202],[[[1225,[1156]]],1203],[[],1204],[[[1225,[1156]]],1205],[[],1206],[[[1225,[1156]]],1207],[[[67,[[1225,[1156]]]],219],1208],[70,1209],[[[67,[[1225,[1156]]]],219],1210],[1159,1211],[[[1225,[1156]]],1212],[[[1225,[1156]]],1213],[219,1214],[65,1215],[[[1225,[1156]]],1216],[[[1225,[1156]]],1217],[[],1218],[65,1219],[[[1225,[1156]]],1220],[[[1225,[1156]]],1221],[[],1222],[1226,1223],[[[1225,[1156]]],1224],0,0,0,[[],1196],0,[1227,[[53,[833,691]]]],[-1,[[53,[833,691]]],[]],[1228,[[53,[834,691]]]],[-1,[[53,[834,691]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],0,0,[[],1196],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1196],0,0,0,[693,[[53,[1197,691]]]],[1197,[[53,[1197,691]]]],[[],1196],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-1],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[1229,[[162,[62]]]],[1230,[[162,[62]]]],[1231,[[162,[62]]]],[[],[[67,[536]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[662,662],[678,678],[1229,1229],[1230,1230],[1231,1231],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[1232,662],546],[[1232,532,[677,[[67,[130]],[162,[533]]]],678,[162,[62]]],552],[[],678],[[],1229],[[],1230],[[],1231],[44,-1,[]],[1233,[[162,[62]]]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1234,[186,[65]],[186,[65]]],11],[[1234,[186,[65]],219,[186,[65]]],11],[[1234,546,70],11],[[1234,546,70],11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[],[[67,[653]]]],[[662,662],35],[[678,678],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[1235,11],0,0,0,0,[[1235,51],[[53,[11,52]]]],[[662,51],[[53,[11,52]]]],[[678,51],[[53,[11,52]]]],[[1229,51],[[53,[11,52]]]],[[1230,51],[[53,[11,52]]]],[[1231,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[],[[67,[654]]]],[[662,-1],11,74],[[678,-1],11,74],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[550,[67,[549]]],[[67,[551]]]],[[550,[67,[549]]],[[67,[551]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[162,[62]]],[[210,[[162,[65]]]]]],[70,1235],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[130,536],[[],[[67,[566]]]],[[531,532,587,-1],11,[[39,[[53,[1233,625]]]],90]],[1235,11],[[1234,65,659,[162,[65]]],11],[[1234,587,614],11],[[1234,671],11],[[1234,540,65,[162,[62]]],11],[[1234,65,587],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1235,534,546,70,699,531],555],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1236,1236],[[-1,-2],11,[],[]],0,0,[-1,-2,[],[]],[[24,105],106],[[],-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[1236,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[306,[],[[218,[-1]]]],-1,105],106,[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[115,115],[116,116],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,177],[[],-1,[]],[[],116],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[[179,179],35],[[115,115],35],[[116,116],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[179,51],[[53,[11,52]]]],[[115,51],[[53,[11,52]]]],[[116,51],[[53,[11,52]]]],[-1,179,[[49,[329]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,179,[[49,[[210,[[162,[62]]]]]]]],[-1,179,[[49,[329]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[179,-1],11,74],[179,70],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[[315,[],[[218,[-1]]]],-1,115],116,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[212,212],[196,196],[104,104],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],212],[[],196],[[],[[217,[-1]]],[42,190]],[[],104],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,139,132,217,104,10],11,149],[44,11],[44,11],[44,11],[44,11],[[212,212],35],[[196,196],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[212,51],[[53,[11,52]]]],[[196,51],[[53,[11,52]]]],[[[217,[-1]],51],[[53,[11,52]]],[57,190]],[[104,51],[[53,[11,52]]]],[-1,-1,[]],[12,196],[31,196],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[-1,-2],70,[71,72],73],[[212,-1],11,74],[[196,-1],11,74],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,[[210,[130]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[217,-1,143,29,29,130,196,[67,[31]],67,60,59,212],142,149],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[200,[],[[218,[-1]]]],-1],104,[]],[[196,31],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,195],[1237,1237],[1238,1238],[109,109],[110,110],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[339,[-1]]],[[11,[44,44]]],149],[[24,109],110],[[],-1,[]],[[],[[339,[-1]]],149],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[1238,197],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[195,195],35],[[1237,1237],35],[[1238,1238],35],[[109,109],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[[339,[-1]],51],[[53,[11,52]]],149],[[195,51],[[53,[11,52]]]],[[1237,51],[[53,[11,52]]]],[[1238,51],[[53,[11,52]]]],[[[1239,[-1]],51],[[53,[11,52]]],[57,185]],[[109,51],[[53,[11,52]]]],[[110,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,35],[[[1239,[-1]]],35,185],[[[339,[-1]],44],[[67,[[0,[[1241,[],[[1240,[130]]]]]]]]],149],[[[339,[-1]]],44,149],[[[339,[-1]]],[[0,[[187,[],[[16,[[0,[[1241,[],[[1240,[130]]]]]]]]]]]]],149],[[],[[339,[-1]]],149],[[],-1,[]],[[[339,[-1]],195],11,149],0,[[[339,[-1]]],[[67,[36]]],149],0,[[[308,[],[[218,[-1]]]],-1,109],110,[]],[[[339,[-1]]],36,149],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1238,1238],[130,[[339,[-1]]],149],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[320,320],[1242,1242],[[[332,[-1]]],[[332,[-1]]],32],[1243,1243],[208,208],[[[1244,[-1]]],[[1244,[-1]]],[32,190]],[102,102],[103,103],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1244,[-1]]],1242,190],[[24,102],103],[[],-1,[]],[[],1242],[[],[[1244,[-1]]],[42,190]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[[208,208],35],[[102,102],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[320,51],[[53,[11,52]]]],[[320,51],[[53,[11,52]]]],[[1242,51],[[53,[11,52]]]],[[[332,[-1]],51],[[53,[11,52]]],57],[[1243,51],[[53,[11,52]]]],[[208,51],[[53,[11,52]]]],[[[1244,[-1]],51],[[53,[11,52]]],[57,190]],[[102,51],[[53,[11,52]]]],[[103,51],[[53,[11,52]]]],[208,[[1,[-1]]],[]],[[[1244,[-1]]],11,190],[[[1244,[-1]]],11,190],[[],[[1244,[-1]]],190],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],70,[71,72],73],[[208,-1],11,74],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[320,44,167],11],[[320,44,320],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[320,35],[[[1244,[-1]]],35,190],[[[1244,[-1]]],35,190],[320,44],[[208,44],[[1,[-1]]],[]],[[[1244,[-1]],44],11,190],[[[1244,[-1]],44],11,190],[208,[[1,[-1]]],[]],[[[1244,[-1]]],11,190],[[[1244,[-1]]],11,190],[208,[[1,[-1]]],[]],[[[1244,[-1]]],11,190],[[[1244,[-1]]],11,190],[130,320],[-1,208,[[49,[[210,[130]]]]]],[[],[[1244,[-1]]],190],[[320,44],44],[[],-1,[]],[[],-1,[]],0,[[320,44],44],[[320,44],11],[[320,44,44],11],[320,320],[[320,44,44],320],[208,[[1,[-1]]],[]],[[[1244,[-1]]],11,190],[[[1244,[-1]]],11,190],[[1242,320],[[67,[[11,[44,44]]]]]],0,0,0,0,[[1242,320],1245],[[[310,[],[[218,[-1]]]],-1,102],103,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1244,[-1]]],11,190],[[[1244,[-1]]],11,190],[[],208],[[320,44],320],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[1245,1245],[[-1,-2],11,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[1245,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,112],[113,113],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,112],113],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[[112,112],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[112,51],[[53,[11,52]]]],[[113,51],[[53,[11,52]]]],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[312,[],[[218,[-1]]]],-1,112],113,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[340,340],[[-1,-2],11,[],[]],[-1,-2,[],[]],[[],340],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[340,340],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[340,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[106,106],[1246,1246],[1247,1247],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,105],106],[[],-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,11],[44,11],[44,11],[44,11],[[105,105],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[105,51],[[53,[11,52]]]],[[106,51],[[53,[11,52]]]],[[1246,51],[[53,[11,52]]]],[[1247,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[306,[],[[218,[-1]]]],-1,105],106,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[106,-1],106,[[49,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[1248,[[162,[62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[242,1249],[[1,[-1]]],[]],[[242,1250],[[1,[-1]]],[]],[[242,1251],[[1,[-1]]],[]],[1248,1248],[1249,1249],[1252,1252],[1253,1253],[242,242],[1250,1250],[1251,1251],[1254,1254],[155,155],[1255,1255],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[242,[[1,[-1]]],[]],[[242,242],82],[[155,155],82],[[-1,-2],82,[],[]],[[-1,-2],82,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1248,[10,[65]]],[[53,[1248,1256]]]],0,[[],1252],[[],1250],[[],1254],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[242,[[1,[-1]]],[]],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[44,11],[-1,-2,[],[[168,[167]]]],[-1,-2,[],[[168,[167]]]],[[1253,1253],35],[[242,242],35],[[1250,1250],35],[[1251,1251],35],[[1254,1254],35],[[155,155],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[242,-2],[[1,[-1]]],[],[[39,[70],[[8,[-1]]]]]],[[242,-2],[[1,[-1]]],[],[[39,[35],[[8,[-1]]]]]],[[242,-2],[[1,[-1]]],[],[[39,[[67,[35]]],[[8,[-1]]]]]],[[242,-2],[[1,[-1]]],[],[[39,[1251],[[8,[-1]]]]]],[[242,-2],[[1,[-1]]],[],[[39,[[67,[6]]],[[8,[-1]]]]]],[[242,-2],[[1,[-1]]],[],[[39,[34],[[8,[-1]]]]]],[[[1257,[-1]],51],[[53,[11,52]]],[]],[[1248,51],[[53,[11,52]]]],[[1249,51],[[53,[11,52]]]],[[1252,51],[[53,[11,52]]]],[[1253,51],[[53,[11,52]]]],[[242,51],[[53,[11,52]]]],[[1250,51],[[53,[11,52]]]],[[1251,51],[[53,[11,52]]]],[[1254,51],[[53,[11,52]]]],[[155,51],[[53,[11,52]]]],[[1255,51],[[53,[11,52]]]],[[],[[18,[255]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[242,[[1,[-1]]],[]],[[-1,-2],70,[71,72],73],[[242,-1],11,74],0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1249,[[11,[[3,[62]],[34,[65]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1257,[-1]],-3],[[1257,[-2]]],[],[],[[40,[-1],[[8,[-2]]]],77,78]],0,[[242,35],[[1,[-1]]],[]],0,[[242,35],[[1,[-1]]],[]],[[242,6],[[1,[-1]]],[]],[[[3,[62]],[34,[65]]],1248],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[242,242],[[67,[82]]]],[[155,155],[[67,[82]]]],0,0,[[242,[67,[1255]]],[[1,[-1]]],[]],0,[[242,34],[[1,[-1]]],[]],[[242,-2],[[1,[-1]]],[],[[39,[1197],[[8,[-1]]]]]],0,[[242,-2],[[1,[-1]]],[],[[39,[1248],[[8,[-1]]]],90]],0,[242,[[1,[-1]]],[]],0,0,[1252,[[11,[242,[1,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[242,[[1,[-1]]],[]],[242,[[1,[-1]]],[]],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],242],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[1258,51],55],[[1258,51],55],[1259,1258],[1260,1258],[-1,-1,[]],[81,1258],[-1,-1,[]],[-1,[[53,[1249,1258]]],[[169,[667]]]],[[[162,[62]],[67,[1261]]],[[53,[1249,1258]]]],[[[3,[62]],65,65],[[53,[1249,1260]]]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1258,[[67,[698]]]],[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[692,[[53,[1196,691]]]],0,0,0,0,0,0,0,0,0,0,[1227,[[53,[833,691]]]],[1228,[[53,[834,691]]]],0,0,0,0,0,0,0,0,0,0,[693,[[53,[1197,691]]]],0,0,0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[1256,51],[[53,[11,52]]]],[[1256,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,126,[]],[-1,36,[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[4,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[1262,1262],[[-1,-2],11,[],[]],[-1,-2,[],[]],0,[[],1262],[44,-1,[]],[44,-1,[]],[-1,-2,[],[]],[44,11],[[1262,1262],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],0,[[1262,51],[[53,[11,52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],44],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[13]]],[]],[[[75,[-1]]],[[75,[13]]],[]],[[[76,[-1]]],[[76,[13]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],-1,[]],0,0,0,0,[-1,-2,[],[]],0,[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2]]],[],[]],[-1,[[53,[-2,[127,[-2]]]]],[],[]],[-1,128,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[67,[-2]]],[],[]],0,[-1,-2,[],[]]],"c":[18042,46888,46889,48050,48052,50900,50901,50960,50961],"p":[[5,"Command",0],[6,"Action",51074],[5,"Vec",51075],[10,"TransformMatrix",51076],[5,"Radians",0],[5,"Point",0],[5,"Vector",0],[17,"Output"],[10,"Add",51077],[5,"Rectangle",0],[1,"tuple"],[1,"f32"],[10,"Any",51078],[5,"Transformation",0],[1,"array"],[17,"Item"],[10,"IntoIterator",51079],[5,"Subscription",0],[6,"Alignment",0],[5,"Border",0],[6,"Event",0],[5,"Font",0],[6,"Gradient",0],[6,"Theme",0],[5,"Degrees",0],[6,"Background",0],[5,"Color",0],[6,"ContentFit",0],[6,"Length",0],[5,"Padding",0],[5,"Pixels",0],[10,"Clone",51080],[5,"Shadow",0],[5,"Size",0],[1,"bool"],[5,"String",51081],[5,"Palette",4668],[5,"Extended",4803],[10,"FnOnce",51082],[10,"Fn",51082],[5,"Box",51083],[10,"Default",51084],[5,"Appearance",4417],[1,"usize"],[10,"Float",51085],[10,"Num",51086],[10,"Executor",0],[10,"PartialEq",51087],[10,"Into",51088],[1,"u16"],[5,"Formatter",51089],[5,"Error",51089],[6,"Result",51090],[6,"Error",0],[8,"Result",51089],[10,"Display",51089],[10,"Debug",51089],[6,"Error",51091],[6,"Vertical",2954],[6,"Horizontal",2954],[5,"Linear",3470],[1,"u8"],[5,"Rgb",51092],[5,"Alpha",51093],[1,"u32"],[1,"f64"],[6,"Option",51094],[1,"i64"],[10,"Recipe",2109],[1,"u64"],[10,"Hash",51095],[10,"Sized",51096],[10,"BuildHasher",51095],[10,"Hasher",51095],[5,"Arc",51097],[5,"Rc",51098],[10,"MaybeSend",51099],[10,"Sync",51096],[10,"Mul",51077],[10,"Copy",51096],[5,"Error",51100],[6,"Ordering",51087],[10,"Future",51101],[17,"State"],[17,"Message"],[17,"Theme"],[10,"Definition",4491],[5,"Program",4491],[10,"Title",4491],[10,"Send",51096],[10,"Update",4491],[10,"DefaultStyle",4417],[10,"Renderer",4491],[10,"View",4491],[5,"Radius",3052],[8,"Result",0],[10,"Stream",51102],[5,"Style",15462],[6,"Status",15739],[5,"Style",15739],[5,"Style",15513],[6,"Status",49435],[5,"Style",49435],[5,"Style",48925],[6,"Status",50100],[5,"Style",50100],[6,"Status",6963],[5,"Style",6963],[6,"Status",49112],[5,"Style",49112],[5,"Style",13885],[6,"Status",49953],[5,"Style",49953],[5,"Style",14378],[6,"Status",48784],[5,"Style",48784],[6,"Status",15927],[5,"Style",15927],[6,"Status",15274],[5,"Style",15274],[5,"Style",14250],[5,"Style",15835],[6,"Status",13698],[5,"Style",13698],[10,"Sub",51077],[5,"SmolStr",51103],[5,"OutOfBounds",51104],[5,"TypeId",51078],[10,"Operation",2536],[1,"str"],[5,"Shell",1249],[5,"Layout",1249],[10,"Widget",1249],[5,"Tree",2536],[10,"DoubleEndedIterator",51105],[10,"Renderer",1249],[5,"Text",1249],[10,"Overlay",1249],[5,"Style",2013],[6,"Cursor",4168],[5,"Quad",2013],[5,"Node",1643],[5,"Limits",1643],[6,"Interaction",4168],[17,"Executor"],[17,"Renderer"],[17,"Flags"],[10,"Application",1249],[10,"Renderer",2165],[10,"Default",51106],[10,"Clipboard",1249],[6,"Status",7525],[5,"Element",1915],[6,"Kind",1449],[6,"RedrawRequest",50278],[5,"Settings",4566],[6,"State",2861],[5,"Tag",2861],[8,"Element",0],[5,"Null",1449],[5,"Bytes",1536],[1,"slice"],[6,"Data",1536],[17,"Handle"],[10,"Renderer",1536],[6,"FilterMethod",13992],[1,"char"],[10,"FromIterator",51079],[10,"AsRef",51088],[6,"Axis",1754],[5,"Element",51107],[5,"Click",1792],[6,"Kind",1873],[5,"Group",1915],[5,"FxHasher",51108],[5,"Pin",51109],[6,"Data",2115],[10,"Renderer",2115],[5,"Handle",48784],[17,"Font"],[10,"Editor",2165],[17,"Settings"],[17,"Highlight"],[17,"Iterator"],[10,"Highlighter",2165],[5,"Range",51110],[10,"Iterator",51111],[6,"Hit",2165],[6,"Difference",2165],[10,"Paragraph",2165],[6,"Cursor",2315],[17,"Paragraph"],[17,"Editor"],[5,"Format",2441],[6,"Action",49112],[6,"LineHeight",48925],[6,"Direction",2315],[5,"PlainText",2441],[5,"Text",2536],[10,"Catalog",48925],[5,"Id",2536],[10,"FnMut",51082],[10,"Borrow",51112],[6,"Outcome",2703],[10,"Focusable",2703],[5,"Id",13885],[5,"Id",15927],[5,"Id",49435],[10,"IntoFragment",48925],[6,"Cow",51113],[10,"Scrollable",2703],[6,"Shaping",48925],[10,"TextInput",2703],[5,"AbsoluteOffset",15927],[5,"RelativeOffset",15927],[5,"Count",2764],[5,"State",48925],[17,"Class"],[1,"i32"],[5,"Sender",51114],[6,"PlatformSpecific",3108],[6,"MacOS",3108],[6,"Error",3211],[6,"Family",3211],[6,"Weight",3211],[6,"Stretch",3211],[6,"Style",3211],[5,"ColorStop",3470],[5,"Modifiers",3560],[6,"Key",3560],[6,"Event",3560],[6,"Location",3560],[10,"Ord",51087],[5,"Iter",51115],[5,"IterNames",51115],[10,"PartialOrd",51087],[6,"Named",3811],[6,"Button",4168],[6,"Event",4168],[6,"ScrollDelta",4168],[10,"Application",4417],[5,"Id",50278],[8,"Renderer",0],[10,"Catalog",14250],[6,"Infallible",51088],[5,"Information",4619],[5,"Custom",4668],[5,"Pair",4803],[5,"Background",4803],[5,"Primary",4803],[5,"Secondary",4803],[5,"Success",4803],[5,"Danger",4803],[5,"Duration",5134],[5,"Instant",5134],[5,"Duration",51116],[1,"u128"],[10,"Deserializer",51117],[6,"Error",51118],[5,"Signature",51119],[10,"TryInto",51088],[5,"Instant",51120],[5,"Instant",51121],[5,"TimeSpec",51122],[5,"Delay",51123],[10,"Serializer",51124],[5,"ConversionRange",51125],[5,"TryFromFloatSecsError",51126],[6,"Event",5320],[5,"Finger",5320],[5,"Column",5415],[5,"Row",5415],[5,"Container",5415],[10,"Catalog",13885],[5,"Themer",5415],[5,"Button",5415],[10,"Catalog",6963],[5,"Canvas",5415],[10,"Renderer",51127],[10,"Program",7066],[5,"QRCode",5415],[10,"Catalog",15513],[5,"Checkbox",5415],[10,"Catalog",13698],[5,"MouseArea",5415],[5,"Stack",5415],[5,"ComboBox",5415],[10,"Catalog",13842],[5,"PaneGrid",5415],[10,"Catalog",14378],[5,"Scrollable",5415],[10,"Catalog",15927],[5,"Tooltip",5415],[5,"Lazy",5415],[5,"PickList",5415],[10,"ToString",51081],[10,"Catalog",15274],[5,"ProgressBar",5415],[10,"Catalog",15462],[5,"Radio",5415],[10,"Catalog",15739],[5,"Rule",5415],[10,"Catalog",15835],[5,"Slider",5415],[10,"From",51088],[10,"Catalog",50100],[5,"TextEditor",5415],[10,"Catalog",49112],[5,"TextInput",5415],[10,"Catalog",49435],[5,"Toggler",5415],[10,"Catalog",49953],[5,"VerticalSlider",5415],[5,"Svg",5415],[10,"Catalog",48784],[5,"State",13842],[10,"Component",5415],[5,"Image",5415],[10,"FromPrimitive",51128],[5,"Value",49435],[5,"Responsive",5415],[5,"Shader",5415],[10,"Program",16425],[10,"Renderer",51129],[5,"Renderer",51130],[5,"Renderer",51131],[6,"Renderer",51132],[5,"Space",5415],[5,"PathBuf",51133],[6,"Handle",15274],[5,"Icon",13698],[5,"Icon",49435],[5,"Column",14188],[5,"State",14378],[5,"Pane",14378],[5,"Content",14378],[5,"RangeInclusive",51110],[10,"Eq",51087],[5,"Content",49112],[6,"Position",50050],[5,"Data",15513],[6,"DragEvent",14378],[5,"ResizeEvent",14378],[5,"Viewport",15927],[17,"Event"],[6,"Direction",15927],[5,"Path",7066],[6,"Gradient",7066],[5,"Fill",7066],[5,"Stroke",7066],[6,"LineCap",7066],[6,"LineJoin",7066],[5,"LineDash",7066],[6,"Style",7066],[5,"Text",7066],[6,"Event",7066],[5,"Linear",7624],[5,"Builder",7713],[5,"Packed",7624],[5,"Path",7854],[5,"UnknownUnit",10626],[5,"Transform2D",10626],[6,"Rule",7574],[5,"Arc",7713],[5,"Elliptical",7805],[5,"PathCommands",7854],[5,"PathCommandsSlice",7854],[5,"PathSlice",7854],[5,"PathBuffer",7854],[5,"PathBufferSlice",7854],[5,"EndpointId",7854],[5,"PathCommandsBuilder",9138],[5,"BuilderImpl",13058],[5,"NoAttributes",8808],[5,"Builder",13322],[5,"BuilderWithAttributes",13058],[5,"ArcFlags",7854],[6,"Event",7854],[5,"Polygon",7854],[5,"IdPolygon",7854],[6,"LineCap",7854],[6,"LineJoin",7854],[6,"Side",7854],[6,"FillRule",7854],[6,"Winding",7854],[5,"ControlPointId",7854],[5,"EventId",7854],[5,"Events",9138],[5,"Point2D",10626],[10,"AttributeStore",7854],[5,"AttributeSlice",7854],[10,"PositionStore",7854],[10,"Position",7854],[5,"IdIter",13058],[5,"PolygonIdIter",13465],[5,"Iter",9138],[5,"Iter",13058],[1,"i16"],[5,"Iter",13322],[5,"PolygonIter",13465],[5,"IdPolygonIter",13465],[5,"IterWithAttributes",13058],[5,"PathEvents",13465],[5,"CommandsPathSlice",9138],[5,"Reversed",13058],[5,"NoAttributes",12874],[5,"WithSvg",8808],[10,"Transformation",12848],[10,"PathBuilder",13629],[5,"Vector2D",10626],[5,"Angle",9347],[5,"LineSegment",9347],[10,"SvgPathBuilder",13629],[5,"Box2D",10626],[5,"BorderRadii",8808],[5,"Flattened",8808],[5,"Transformed",8808],[17,"PathType"],[10,"Build",13629],[5,"PointEvents",9138],[5,"LineEquation",9347],[10,"Scalar",9347],[5,"Triangle",9347],[10,"AddAssign",51077],[17,"Scalar"],[10,"Segment",9347],[5,"Arc",9347],[5,"CubicBezierSegment",9347],[5,"QuadraticBezierSegment",9347],[10,"Rem",51077],[10,"One",51134],[10,"FloatConst",51085],[10,"ApproxEq",12636],[10,"NumCast",51128],[5,"SvgArc",9347],[5,"Line",9347],[5,"ArrayVec",10190],[10,"Trig",10626],[10,"Div",51077],[10,"DivAssign",51077],[5,"Flattened",10139],[5,"Flattened",10583],[5,"Flattened",12735],[5,"FlattenedT",12735],[10,"MulAssign",51077],[10,"Neg",51077],[10,"Zero",51134],[10,"Real",51135],[5,"Size2D",10626],[10,"SubAssign",51077],[5,"ArrayString",10190],[5,"IntoIter",10190],[5,"CapacityError",10190],[5,"Drain",10190],[10,"RangeBounds",51110],[5,"Utf8Error",51136],[5,"Arguments",51089],[1,"i8"],[1,"i128"],[6,"Endian",51137],[10,"Signed",51138],[5,"Size3D",10626],[5,"Vector3D",10626],[5,"Length",10626],[5,"Point3D",10626],[5,"Scale",10626],[5,"SideOffsets2D",10626],[5,"Translation2D",10626],[5,"Translation3D",10626],[5,"BoolVector2D",10626],[5,"BoolVector3D",10626],[5,"Transform3D",10626],[5,"Rotation3D",10626],[5,"Rect",10626],[5,"Box3D",10626],[5,"Rotation2D",10626],[5,"RigidTransform3D",10626],[10,"Ceil",12725],[10,"One",12725],[5,"HomogeneousVector",10626],[10,"Zero",12725],[10,"Euclid",51139],[10,"Floor",12725],[10,"Round",12725],[10,"Saturating",51140],[5,"FlatteningParameters",12735],[5,"FromPolyline",12874],[10,"PathIterator",13629],[5,"Flattened",12874],[5,"Transformed",12874],[5,"BuilderWithAttributes",13322],[5,"IterBridge",51141],[5,"Handle",13992],[5,"Viewer",13992],[5,"State",14144],[5,"State",14250],[5,"Menu",14250],[6,"Direction",14378],[5,"TitleBar",14378],[10,"Draggable",14378],[6,"Axis",14378],[6,"Configuration",14378],[6,"Node",14378],[5,"Split",14378],[6,"Target",14378],[6,"Region",14378],[6,"Edge",14378],[5,"Highlight",14378],[5,"Line",14378],[6,"Contents",14378],[5,"BTreeMap",51142],[5,"Internal",15183],[6,"Action",15183],[5,"BuildHasherDefault",51095],[5,"HashMap",51143],[5,"Icon",15274],[6,"Version",15513],[6,"ErrorCorrection",15513],[6,"Error",15513],[6,"QrError",51144],[6,"FillMode",15835],[5,"Properties",15927],[6,"Alignment",15927],[5,"Scrollbar",15927],[5,"Scroller",15927],[5,"Viewport",16425],[6,"Event",16425],[5,"Storage",16425],[17,"Primitive"],[10,"Primitive",16425],[5,"Device",16563],[5,"Queue",16563],[6,"TextureFormat",16563],[5,"CommandEncoder",16563],[5,"TextureView",16563],[5,"Backends",16563],[5,"Features",16563],[5,"InstanceFlags",16563],[5,"DownlevelFlags",16563],[5,"ShaderStages",16563],[5,"TextureFormatFeatureFlags",16563],[5,"ColorWrites",16563],[5,"BufferUsages",16563],[5,"TextureUsages",16563],[5,"PipelineStatisticsTypes",16563],[5,"Buffer",16563],[6,"BindingResource",16563],[5,"BufferBinding",16563],[5,"Surface",16563],[5,"Instance",16563],[5,"Adapter",16563],[5,"Texture",16563],[5,"ImageCopyTextureBase",16563],[5,"QueueWriteBufferView",16563],[5,"BufferViewMut",16563],[5,"BufferView",16563],[6,"TextureAspect",16563],[5,"ComputePassDescriptor",16563],[5,"ComputePass",16563],[5,"RenderPass",16563],[5,"QuerySet",16563],[5,"RenderPassDescriptor",16563],[5,"Limits",16563],[5,"ImageSubresourceRange",16563],[6,"Backend",16563],[6,"PowerPreference",16563],[5,"RequestAdapterOptionsBase",16563],[5,"DownlevelCapabilities",16563],[6,"ShaderModel",16563],[6,"DeviceType",16563],[5,"AdapterInfo",16563],[6,"TextureViewDimension",16563],[6,"BlendFactor",16563],[5,"Id",16563],[6,"BlendOperation",16563],[5,"BlendComponent",16563],[5,"BlendState",16563],[5,"ColorTargetState",16563],[6,"PrimitiveTopology",16563],[6,"FrontFace",16563],[6,"Face",16563],[6,"PolygonMode",16563],[6,"ErrorFilter",16563],[5,"PrimitiveState",16563],[5,"MultisampleState",16563],[5,"SubmissionIndex",16563],[5,"BufferSlice",16563],[6,"ShaderSource",16563],[5,"ShaderModuleDescriptor",16563],[5,"TextureFormatFeatures",16563],[6,"AstcBlock",16563],[6,"AstcChannel",16563],[6,"LoadOp",16563],[6,"StoreOp",16563],[5,"Operations",16563],[5,"RenderPassTimestampWrites",16563],[5,"RenderPassColorAttachment",16563],[5,"RenderPassDepthStencilAttachment",16563],[5,"TextureViewDescriptor",16563],[5,"PipelineLayoutDescriptor",16563],[5,"SamplerDescriptor",16563],[5,"BindGroupEntry",16563],[5,"BindGroupDescriptor",16563],[5,"VertexBufferLayout",16563],[5,"VertexState",16563],[5,"FragmentState",16563],[6,"MaintainBase",16563],[5,"RenderPipelineDescriptor",16563],[5,"StencilState",16563],[5,"ComputePassTimestampWrites",16563],[5,"DepthBiasState",16563],[5,"DepthStencilState",16563],[5,"ComputePipelineDescriptor",16563],[6,"IndexFormat",16563],[6,"StencilOperation",16563],[5,"BindGroupLayoutDescriptor",16563],[5,"RenderBundleEncoderDescriptor",16563],[5,"StencilFaceState",16563],[6,"CompareFunction",16563],[6,"SurfaceError",16563],[5,"RequestDeviceError",16563],[6,"VertexStepMode",16563],[5,"CreateSurfaceError",16563],[5,"VertexAttribute",16563],[5,"BufferAsyncError",16563],[6,"VertexFormat",16563],[6,"MapMode",16563],[6,"PresentMode",16563],[6,"CompositeAlphaMode",16563],[5,"PresentationTimestamp",16563],[5,"Color",16563],[6,"TextureDimension",16563],[5,"Origin2d",16563],[5,"Origin3d",16563],[5,"Extent3d",16563],[6,"AddressMode",16563],[6,"FilterMode",16563],[5,"PushConstantRange",16563],[5,"CommandBufferDescriptor",16563],[5,"RenderBundleDepthStencil",16563],[5,"ImageDataLayout",16563],[6,"BufferBindingType",16563],[6,"TextureSampleType",16563],[6,"StorageTextureAccess",16563],[6,"SamplerBindingType",16563],[6,"BindingType",16563],[5,"BindGroupLayoutEntry",16563],[5,"ImageCopyBufferBase",16563],[6,"PredefinedColorSpace",16563],[5,"ImageCopyTextureTaggedBase",16563],[6,"SamplerBorderColor",16563],[6,"QueryType",16563],[6,"Dx12Compiler",16563],[6,"Gles3MinorVersion",16563],[6,"DeviceLostReason",16563],[5,"SurfaceConfiguration",51145],[5,"ExposedAdapter",40812],[10,"HalApi",28662],[5,"BindGroup",16563],[5,"BindGroupLayout",16563],[5,"BufferDescriptor",51145],[5,"BufferInitDescriptor",48391],[5,"CommandEncoderDescriptor",51145],[5,"ComputePipeline",16563],[5,"OpenDevice",40812],[5,"DeviceDescriptor",51145],[5,"Path",51133],[5,"PipelineLayout",16563],[5,"QuerySetDescriptor",51145],[5,"RenderBundleEncoder",16563],[5,"RenderPipeline",16563],[5,"Sampler",16563],[5,"ShaderModule",16563],[5,"ShaderModuleDescriptorSpirV",16563],[6,"SurfaceTarget",16563],[6,"SurfaceTargetUnsafe",16563],[5,"TextureDescriptor",51145],[6,"TextureDataOrder",48391],[5,"SurfaceCapabilities",16563],[5,"InstanceDescriptor",16563],[5,"CommandBuffer",16563],[5,"RenderBundle",16563],[5,"SurfaceTexture",16563],[5,"RenderBundleDescriptor",51145],[6,"Error",16563],[6,"SurfaceStatus",16563],[10,"WindowHandle",16563],[6,"RequestDeviceError",28975],[5,"InstanceError",40812],[5,"Instance",28975],[6,"HandleError",46865],[10,"HasDisplayHandle",46865],[10,"HasWindowHandle",46865],[5,"GlobalReport",28461],[6,"MaintainResult",16563],[10,"WasmNotSend",16563],[10,"UncapturedErrorHandler",16563],[10,"Error",51146],[5,"NonZeroU64",51147],[5,"AnySurface",24002],[5,"HalSurface",28975],[5,"BindGroupLayout",24044],[5,"Api",44622],[5,"Id",28811],[5,"ResourceInfo",39014],[5,"PipelineLayout",24044],[5,"BindGroup",24044],[6,"BindGroupLayoutEntryError",24044],[6,"CreateBindGroupLayoutError",24044],[6,"CreateBindGroupError",24044],[6,"BindingZone",24044],[5,"BindingTypeMaxCountError",24044],[6,"BindingTypeMaxCountErrorKind",24044],[5,"BindGroupEntry",24044],[5,"BindGroupDescriptor",24044],[5,"BindGroupLayoutDescriptor",24044],[6,"CreatePipelineLayoutError",24044],[6,"PushConstantUploadError",24044],[5,"PipelineLayoutDescriptor",24044],[5,"BufferBinding",24044],[6,"BindingResource",24044],[6,"BindError",24044],[6,"GetBindGroupLayoutError",24044],[5,"LateMinBufferBindingSizeMismatch",24044],[5,"BindGroupDynamicBindingData",24044],[5,"ErrorFormatter",28365],[5,"MissingFeatures",27284],[5,"MissingDownlevelFlags",27284],[6,"DeviceError",27284],[5,"MissingBufferUsageError",40357],[5,"MissingTextureUsageError",40357],[6,"UsageConflict",51148],[5,"CommandBuffer",25082],[5,"RenderBundle",25082],[5,"RenderBundleEncoderDescriptor",25082],[6,"CreateRenderBundleError",25082],[6,"ExecutionError",25082],[5,"RenderBundleError",25082],[6,"ClearError",25082],[5,"ComputePassTimestampWrites",25082],[5,"ComputePassDescriptor",25082],[6,"DispatchError",25082],[6,"ComputePassErrorInner",25082],[5,"ComputePassError",25082],[6,"DrawError",25082],[6,"RenderCommandError",25082],[5,"Rect",25082],[6,"SimplifiedQueryType",25082],[6,"QueryError",25082],[6,"QueryUseError",25082],[6,"ResolveError",25082],[6,"LoadOp",25082],[6,"StoreOp",25082],[5,"PassChannel",25082],[5,"RenderPassColorAttachment",25082],[5,"RenderPassDepthStencilAttachment",25082],[6,"RenderPassTimestampLocation",25082],[5,"RenderPassTimestampWrites",25082],[5,"RenderPassDescriptor",25082],[6,"AttachmentErrorLocation",25082],[6,"ColorAttachmentError",25082],[6,"RenderPassErrorInner",25082],[5,"RenderPassError",25082],[6,"CopySide",25082],[6,"TransferError",25082],[6,"CopyError",25082],[5,"BasePassRef",25082],[6,"CommandEncoderError",25082],[6,"PassErrorScope",25082],[5,"Device",27284],[5,"RenderBundleEncoder",25082],[5,"ComputePass",25082],[5,"RenderPass",25082],[6,"RenderPassCompatibilityError",27284],[6,"RenderCommand",51149],[5,"BasePass",51150],[5,"Buffer",39014],[5,"RenderPipeline",37812],[5,"QuerySet",39014],[5,"ComputePipeline",37812],[6,"WaitIdleError",27284],[6,"HostMap",27284],[6,"RenderPassCompatibilityCheckType",27284],[5,"InvalidDevice",27284],[5,"ImplicitPipelineContext",27284],[5,"UserClosures",27284],[5,"DeviceLostClosureRust",27284],[5,"DeviceLostClosureC",27284],[6,"DeviceError",40812],[5,"DeviceLostClosure",27284],[5,"AnyDevice",27948],[5,"Queue",27986],[5,"WrappedSubmissionIndex",27986],[5,"InvalidQueue",27986],[6,"QueueWriteError",27986],[6,"QueueSubmitError",27986],[6,"TempResource",27986],[6,"BufferAccessError",39014],[5,"SubmittedWorkDoneClosureC",27986],[5,"SubmittedWorkDoneClosure",27986],[6,"CreateDeviceError",28319],[5,"ContextError",28365],[10,"PrettyError",28365],[10,"Write",51089],[5,"IdentityManagerFactory",28891],[5,"Global",28461],[5,"Sampler",39014],[5,"Texture",39014],[5,"TextureView",39014],[5,"Adapter",28975],[10,"GlobalIdentityHandlerFactory",28891],[5,"InvalidAdapter",28975],[5,"Surface",28975],[6,"IsSurfaceSupportedError",28975],[6,"DestroyError",39014],[5,"BufferMapOperation",39014],[6,"CreateBufferError",39014],[6,"CreateTextureError",39014],[5,"ComputePipelineDescriptor",37812],[5,"ImplicitPipelineIds",27284],[6,"CreateComputePipelineError",37812],[6,"CreateQuerySetError",39014],[5,"RenderPipelineDescriptor",37812],[6,"CreateRenderPipelineError",37812],[5,"SamplerDescriptor",39014],[6,"CreateSamplerError",39014],[5,"ShaderModuleDescriptor",37812],[6,"ShaderModuleSource",37812],[5,"ShaderModule",37812],[6,"CreateShaderModuleError",37812],[6,"AdapterInputs",28975],[5,"HubReport",28668],[6,"RawDisplayHandle",46865],[6,"RawWindowHandle",46865],[5,"StagingBuffer",39014],[6,"RequestAdapterError",28975],[6,"ConfigureSurfaceError",38772],[6,"GetSurfaceSupportError",28975],[5,"SurfaceOutput",38772],[6,"SurfaceError",38772],[5,"RegistryReport",38924],[5,"TextureViewDescriptor",39014],[6,"CreateTextureViewError",39014],[6,"TextureViewDestroyError",39014],[5,"Hub",28668],[10,"WasmNotSendSync",16563],[5,"ObjectId",51151],[10,"TypedId",28811],[5,"IdentityManager",28891],[17,"Input"],[10,"IdentityHandlerFactory",28891],[5,"FailedLimit",28975],[5,"SurfaceCapabilities",40812],[6,"AddressSpace",29434],[5,"StorageAccess",29434],[5,"Barrier",29434],[5,"WithSpan",29434],[5,"Arena",29434],[5,"Span",29434],[5,"Handle",29434],[5,"Block",29434],[6,"Binding",29434],[6,"TypeInner",29434],[6,"MathFunction",29434],[5,"Scalar",29434],[5,"Type",29434],[5,"UniqueArena",29434],[5,"BadHandle",51152],[5,"Range",29434],[5,"BadRangeError",51152],[5,"SourceLocation",29434],[5,"EarlyDepthTest",29434],[6,"ConservativeDepth",29434],[6,"ShaderStage",29434],[6,"BuiltIn",29434],[6,"VectorSize",29434],[6,"ScalarKind",29434],[6,"ArraySize",29434],[6,"Interpolation",29434],[6,"Sampling",29434],[5,"StructMember",29434],[6,"ImageDimension",29434],[6,"StorageFormat",29434],[6,"ImageClass",29434],[6,"Literal",29434],[6,"Override",29434],[5,"Constant",29434],[5,"ResourceBinding",29434],[5,"GlobalVariable",29434],[5,"LocalVariable",29434],[6,"UnaryOperator",29434],[6,"BinaryOperator",29434],[6,"AtomicFunction",29434],[6,"DerivativeControl",29434],[6,"DerivativeAxis",29434],[6,"RelationalFunction",29434],[6,"SampleLevel",29434],[6,"ImageQuery",29434],[6,"SwizzleComponent",29434],[6,"Expression",29434],[6,"SwitchValue",29434],[5,"SwitchCase",29434],[6,"RayQueryFunction",29434],[6,"Statement",29434],[5,"FunctionArgument",29434],[5,"FunctionResult",29434],[5,"Function",29434],[5,"EntryPoint",29434],[6,"PredeclaredType",29434],[5,"SpecialTypes",29434],[5,"Module",29434],[6,"TypeResolution",35256],[6,"IndexableLength",35256],[6,"IndexableLengthError",35256],[5,"Iter",51153],[5,"GlobalCtx",35256],[10,"ExactSizeIterator",51154],[5,"RayFlag",32571],[5,"Features",32669],[5,"WriterFlags",32669],[6,"Version",32669],[5,"Options",32669],[5,"PipelineOptions",32669],[5,"TextureMapping",32669],[5,"PushConstantItem",32669],[5,"VaryingLocation",32669],[5,"ReflectionInfo",32669],[6,"Error",32669],[5,"ModuleInfo",36221],[5,"BoundsCheckPolicies",35256],[5,"Writer",32669],[5,"BindTarget",33246],[6,"ShaderModel",33246],[6,"EntryPointError",33246],[5,"Options",33246],[5,"ReflectionInfo",33246],[6,"Error",33246],[5,"Writer",33246],[6,"BindSamplerTarget",33557],[5,"BindTarget",33557],[5,"EntryPointResources",33557],[6,"EntryPointError",33557],[5,"Options",33557],[5,"PipelineOptions",33557],[5,"Writer",33557],[6,"Error",33557],[5,"TranslationInfo",33557],[6,"Coord",33984],[6,"Address",33984],[6,"BorderColor",33984],[6,"Filter",33984],[6,"CompareFunc",33984],[5,"InlineSampler",33984],[5,"ImageTypeFlags",34294],[5,"WriterFlags",34294],[6,"Capability",34294],[6,"Error",34294],[5,"DebugInfo",34294],[5,"BindingInfo",34294],[6,"ZeroInitializeWorkgroupMemoryMode",34294],[5,"Options",34294],[5,"PipelineOptions",34294],[5,"Writer",34294],[5,"IndexSet",51155],[5,"SymbolTable",35081],[5,"Typifier",35081],[5,"ResolveContext",35256],[6,"ResolveError",35256],[5,"ParseError",35168],[5,"Frontend",35168],[5,"Namer",35256],[5,"ConstantEvaluator",35256],[6,"ConstantEvaluatorError",35256],[5,"FunctionInfo",36221],[6,"BoundsCheckPolicy",35256],[5,"Layouter",35256],[5,"Alignment",35256],[5,"TypeLayout",35256],[6,"LayoutErrorInner",35256],[5,"LayoutError",35256],[5,"Emitter",35256],[6,"NameKey",35256],[5,"ExpressionConstnessTracker",35256],[6,"LiteralError",36221],[6,"GuardedIndex",36163],[5,"BitSet",51156],[5,"UniformityRequirements",36221],[5,"GlobalUse",36221],[5,"TypeFlags",36221],[5,"ValidationFlags",36221],[5,"Capabilities",36221],[5,"ShaderStages",36221],[5,"Uniformity",36221],[5,"ExpressionInfo",36221],[6,"ComposeError",36221],[6,"ExpressionError",36221],[6,"ConstExpressionError",36221],[6,"CallError",36221],[6,"LocalVariableError",36221],[6,"FunctionError",36221],[6,"GlobalVariableError",36221],[6,"VaryingError",36221],[6,"EntryPointError",36221],[6,"Disalignment",36221],[6,"TypeError",36221],[6,"ConstantError",36221],[6,"ValidationError",36221],[5,"Validator",36221],[6,"WidthError",51157],[6,"AtomicError",51158],[5,"FwdDepError",51159],[6,"InvalidHandleError",51159],[5,"PipelineFlags",37812],[5,"ShaderError",37812],[5,"ProgrammableStageDescriptor",37812],[6,"ImplicitLayoutError",37812],[5,"VertexBufferLayout",37812],[5,"VertexState",37812],[5,"FragmentState",37812],[6,"ColorStateError",37812],[6,"DepthStencilStateError",37812],[5,"VertexStep",37812],[6,"StageError",40357],[5,"Registry",38924],[10,"Resource",39014],[5,"Storage",40320],[5,"TextureSelector",51160],[6,"TextureErrorDimension",39014],[6,"TextureDimensionError",39014],[6,"TextureViewNotRenderableReason",39014],[6,"SamplerFilterErrorType",39014],[5,"DestroyedBuffer",39014],[5,"DestroyedTexture",39014],[6,"BufferMapAsyncStatus",39014],[5,"BufferMapCallback",39014],[6,"TextureClearMode",39014],[5,"BufferMapCallbackC",39014],[5,"Interface",40357],[6,"BindingLayoutSource",40357],[5,"InterfaceVar",40357],[5,"NumericType",40357],[6,"BindingError",40357],[6,"FilteringError",40357],[6,"InputError",40357],[10,"Surface",40812],[5,"AcquiredSurfaceTexture",40812],[6,"SurfaceError",40812],[10,"Api",40812],[5,"PipelineLayoutFlags",40812],[5,"BindGroupLayoutFlags",40812],[5,"TextureFormatCapabilities",40812],[5,"FormatAspects",40812],[5,"MemoryFlags",40812],[5,"AccelerationStructureBuildFlags",40812],[5,"AttachmentOps",40812],[5,"AccelerationStructureGeometryFlags",40812],[5,"BufferUses",40812],[5,"TextureUses",40812],[5,"AccelerationStructureUses",40812],[5,"TextureDescriptor",40812],[5,"CopyExtent",40812],[10,"CommandEncoder",40812],[5,"ComputePassDescriptor",40812],[5,"RenderPassDescriptor",40812],[5,"BuildAccelerationStructureDescriptor",40812],[5,"TextureCopy",40812],[5,"BufferTextureCopy",40812],[6,"ShaderError",40812],[6,"PipelineError",40812],[5,"InstanceDescriptor",40812],[5,"Alignments",40812],[5,"Capabilities",40812],[5,"BufferMapping",40812],[5,"BufferDescriptor",40812],[5,"TextureViewDescriptor",40812],[5,"SamplerDescriptor",40812],[5,"BindGroupLayoutDescriptor",40812],[5,"PipelineLayoutDescriptor",40812],[5,"BufferBinding",40812],[5,"TextureBinding",40812],[5,"BindGroupEntry",40812],[5,"BindGroupDescriptor",40812],[5,"CommandEncoderDescriptor",40812],[5,"DebugSource",40812],[5,"ProgrammableStage",40812],[5,"ComputePipelineDescriptor",40812],[5,"VertexBufferLayout",40812],[5,"RenderPipelineDescriptor",40812],[5,"SurfaceConfiguration",40812],[5,"Rect",40812],[5,"BufferBarrier",40812],[5,"TextureBarrier",40812],[5,"BufferCopy",40812],[5,"TextureCopyBase",40812],[5,"Attachment",40812],[5,"ColorAttachment",40812],[5,"DepthStencilAttachment",40812],[5,"RenderPassTimestampWrites",40812],[5,"ComputePassTimestampWrites",40812],[5,"AccelerationStructureDescriptor",40812],[6,"AccelerationStructureFormat",40812],[6,"AccelerationStructureBuildMode",40812],[5,"AccelerationStructureBuildSizes",40812],[5,"GetAccelerationStructureBuildSizesDescriptor",40812],[5,"AccelerationStructureTriangles",40812],[5,"AccelerationStructureAABBs",40812],[5,"AccelerationStructureInstances",40812],[5,"AccelerationStructureTriangleIndices",40812],[5,"AccelerationStructureTriangleTransform",40812],[5,"AccelerationStructureBarrier",40812],[10,"Device",40812],[5,"ShaderModuleDescriptor",40812],[6,"ShaderInput",40812],[10,"Instance",40812],[5,"NagaShader",40812],[6,"AccelerationStructureEntries",40812],[6,"AllocationError",51161],[6,"AllocationError",51162],[5,"Result",51163],[6,"MapError",51161],[5,"ValidationCanary",40812],[10,"Adapter",40812],[10,"Queue",40812],[5,"Context",44622],[5,"Encoder",44622],[5,"Resource",44622],[5,"Adapter",44865],[5,"AdapterContext",44865],[5,"CommandEncoder",44865],[5,"Api",44865],[5,"QuerySet",44865],[5,"Buffer",44865],[5,"TextureFormatDesc",44865],[6,"TextureInner",44865],[5,"TextureView",44865],[5,"Device",44865],[5,"Texture",44865],[5,"BindGroup",44865],[5,"BindGroupLayout",44865],[5,"ComputePipeline",44865],[5,"Fence",44865],[5,"PipelineLayout",44865],[5,"RenderPipeline",44865],[5,"Sampler",44865],[5,"ShaderModule",44865],[5,"CommandBuffer",44865],[5,"AdapterContextLock",44865],[5,"Library",51164],[5,"EGL1_4",51165],[5,"Dynamic",51165],[5,"Instance",51165],[5,"Queue",44865],[5,"RawMutex",51166],[5,"Context",51167],[5,"MutexGuard",51168],[6,"c_void",51169],[5,"Surface",51170],[5,"Display",51171],[5,"NonZeroU32",51147],[5,"Surface",45771],[5,"Api",45771],[5,"Workarounds",45771],[5,"CommandEncoder",45771],[5,"QuerySet",45771],[5,"SurfaceTexture",45771],[5,"Texture",45771],[5,"Buffer",51172],[5,"Buffer",45771],[5,"Device",45771],[5,"AccelerationStructure",45771],[5,"BindGroup",45771],[5,"BindGroupLayout",45771],[5,"ComputePipeline",45771],[6,"Fence",45771],[5,"PipelineLayout",45771],[5,"RenderPipeline",45771],[5,"Sampler",45771],[6,"ShaderModule",45771],[5,"Instance",45771],[5,"TextureView",45771],[5,"Entry",51173],[5,"CStr",51174],[5,"Adapter",45771],[5,"Device",51175],[5,"InstanceShared",45771],[5,"CommandBuffer",45771],[5,"Queue",45771],[5,"PhysicalDevice",51172],[5,"DebugUtilsMessengerUserData",45771],[5,"Instance",51176],[5,"DebugUtilsCreateInfo",45771],[5,"PhysicalDeviceCapabilities",51177],[5,"PhysicalDeviceFeatures",51177],[5,"Image",51172],[5,"Queue",51172],[5,"DisplayHandle",46865],[5,"WindowHandle",46865],[5,"AndroidDisplayHandle",46865],[5,"AndroidNdkWindowHandle",46865],[5,"AppKitDisplayHandle",46865],[5,"AppKitWindowHandle",46865],[5,"HaikuDisplayHandle",46865],[5,"HaikuWindowHandle",46865],[5,"OrbitalDisplayHandle",46865],[5,"OrbitalWindowHandle",46865],[5,"UiKitDisplayHandle",46865],[5,"UiKitWindowHandle",46865],[5,"XlibDisplayHandle",46865],[5,"XlibWindowHandle",46865],[5,"XcbDisplayHandle",46865],[5,"XcbWindowHandle",46865],[5,"WaylandDisplayHandle",46865],[5,"WaylandWindowHandle",46865],[5,"DrmDisplayHandle",46865],[5,"DrmWindowHandle",46865],[5,"GbmDisplayHandle",46865],[5,"GbmWindowHandle",46865],[5,"WebDisplayHandle",46865],[5,"WebWindowHandle",46865],[5,"WebCanvasWindowHandle",46865],[5,"WebOffscreenCanvasWindowHandle",46865],[5,"WindowsDisplayHandle",46865],[5,"Win32WindowHandle",46865],[5,"WinRtWindowHandle",46865],[5,"NonNull",51178],[5,"NonZeroIsize",51147],[10,"HasRawDisplayHandle",46865],[10,"HasRawWindowHandle",46865],[5,"DrawIndirectArgs",48391],[5,"DrawIndexedIndirectArgs",48391],[5,"DispatchIndirectArgs",48391],[10,"DeviceExt",48391],[5,"DownloadBuffer",48391],[10,"RenderEncoder",48391],[5,"StagingBelt",48391],[5,"Rail",48718],[6,"Edit",49112],[6,"Motion",49112],[5,"State",49112],[17,"Target"],[10,"Deref",51179],[5,"Cursor",49435],[6,"Side",49435],[5,"State",49435],[6,"State",49820],[5,"Handle",50100],[6,"HandleShape",50100],[5,"Screenshot",50278],[5,"Icon",50278],[6,"Level",50278],[6,"Mode",50278],[5,"Settings",50278],[6,"Event",50278],[6,"Position",50278],[6,"UserAttention",50278],[6,"CropError",50973],[6,"Action",50278],[6,"Error",50828],[6,"ImageError",51180],[6,"Error",51181],[6,"ImageFormat",51182],[5,"PlatformSpecific",51016],[15,"Rgba",1640],[15,"WheelScrolled",1867],[15,"CursorMoved",1867],[15,"Lines",1869],[15,"Pixels",1869],[15,"Scroll",2440],[8,"Fragment",48925],[15,"KeyPressed",3804],[15,"KeyReleased",3804],[15,"FingerPressed",5407],[15,"FingerMoved",5407],[15,"FingerLifted",5407],[15,"FingerLost",5407],[8,"PathEvent",7854],[8,"IdEvent",7854],[15,"Begin",8769],[15,"End",8769],[15,"Quadratic",8769],[15,"Cubic",8769],[15,"Line",8769],[8,"Rotation",9347],[8,"Size",9347],[8,"Transform",9347],[8,"Box2D",9347],[8,"Translation",9347],[8,"Point",9347],[8,"Vector",9347],[8,"Rotation2D",12642],[8,"SideOffsets2D",12642],[8,"Size3D",12642],[8,"Rotation3D",12642],[8,"Transform2D",12642],[8,"Transform3D",12642],[8,"Box3D",12642],[8,"Rect",12642],[8,"RigidTransform3D",12642],[8,"HomogeneousVector",12642],[8,"Point3D",12642],[8,"Vector3D",12642],[8,"Translation2D",12642],[8,"Translation3D",12642],[8,"Rotation",13028],[8,"Size",13028],[8,"Transform",13028],[8,"Box2D",13028],[8,"Angle",13028],[8,"Point",13028],[8,"Vector",13028],[8,"Translation",13028],[15,"Active",13839],[15,"Hovered",13839],[15,"Disabled",13839],[15,"Split",15170],[15,"Picked",15174],[15,"Dropped",15174],[15,"Canceled",15174],[15,"Split",15178],[15,"Resizing",15270],[15,"Dragging",15270],[15,"Dynamic",15459],[15,"Arrow",15459],[15,"Active",15833],[15,"Hovered",15833],[15,"Both",16419],[15,"Dragged",16421],[15,"Hovered",16421],[8,"Label",16563],[8,"Maintain",16563],[8,"SurfaceConfiguration",16563],[8,"ImageCopyTexture",16563],[8,"ImageCopyTextureTagged",16563],[8,"ImageCopyBuffer",16563],[8,"RequestAdapterOptions",16563],[8,"QuerySetDescriptor",16563],[8,"TextureDescriptor",16563],[8,"DeviceDescriptor",16563],[8,"BufferDescriptor",16563],[8,"CommandEncoderDescriptor",16563],[8,"RenderBundleDescriptor",16563],[15,"StorageTexture",23945],[15,"Buffer",23945],[15,"Texture",23945],[15,"Storage",23954],[15,"Dxc",23955],[15,"Validation",23957],[15,"OutOfMemory",23957],[15,"RawHandle",23960],[15,"Astc",23962],[15,"Float",23964],[8,"Label",23965],[15,"MismatchedDynamicOffsetCount",25002],[15,"UnalignedDynamicBinding",25002],[15,"DynamicBindingOutOfBounds",25002],[15,"BindingArrayPartialLengthMismatch",25018],[15,"BindingArrayLengthMismatch",25018],[15,"BindingSizeTooSmall",25018],[15,"BindingsNumMismatch",25018],[15,"WrongBindingType",25018],[15,"BufferRangeTooLarge",25018],[15,"InvalidTextureMultisample",25018],[15,"InvalidTextureSampleType",25018],[15,"InvalidTextureDimension",25018],[15,"InvalidStorageTextureFormat",25018],[15,"InvalidStorageTextureMipLevelCount",25018],[15,"WrongSamplerComparison",25018],[15,"WrongSamplerFiltering",25018],[15,"BindingRangeTooLarge",25018],[15,"Entry",25056],[15,"InvalidBindingIndex",25056],[15,"TooManyGroups",25060],[15,"MisalignedPushConstantRange",25060],[15,"MoreThanOnePushConstantRangePerStage",25060],[15,"PushConstantRangeTooLarge",25060],[15,"PartialRangeMatch",25070],[15,"MissingStages",25070],[15,"UnmatchedStages",25070],[15,"TooLarge",25070],[5,"BakedCommands",25082],[5,"CommandBufferMutable",25082],[8,"ImageCopyTexture",25082],[8,"ImageCopyTextureTagged",25082],[8,"ImageCopyBuffer",25082],[8,"RenderBundleDescriptor",25082],[15,"Color",27118],[15,"BufferOverrun",27120],[15,"OffsetPlusSizeExceeds64BitBounds",27120],[15,"InvalidTextureLayerRange",27120],[15,"InvalidTextureLevelRange",27120],[15,"MissingTextureAspect",27120],[15,"TooMany",27133],[15,"IndirectBufferOverrun",27135],[15,"BindGroupIndexOutOfRange",27135],[15,"InvalidGroupSize",27140],[15,"IncompatibleBindGroup",27140],[15,"UnmatchedIndexFormats",27144],[15,"IncompatibleBindGroup",27144],[15,"MissingVertexBuffer",27144],[15,"IndexBeyondLimit",27144],[15,"InstanceBeyondLimit",27144],[15,"VertexBeyondLimit",27144],[15,"Draw",27157],[15,"Dispatch",27157],[15,"AlreadyStarted",27162],[15,"OutOfBounds",27162],[15,"UsedTwiceInsideRenderpass",27162],[15,"IncompatibleType",27162],[15,"InvalidDynamicOffsetCount",27169],[15,"BindGroupIndexOutOfRange",27169],[15,"VertexBufferIndexOutOfRange",27169],[15,"AttachmentsDimensionMismatch",27175],[15,"AttachmentSampleCountMismatch",27175],[15,"IndirectCountBufferOverrun",27175],[15,"IndirectBufferOverrun",27175],[15,"IncompatibleBundleReadOnlyDepthStencil",27175],[15,"InvalidResolveSampleCounts",27175],[15,"MismatchedResolveTextureFormat",27175],[15,"UnsupportedResolveTargetFormat",27175],[15,"TextureViewIsNotRenderable",27175],[15,"BufferOverrun",27204],[15,"QueryOverrun",27204],[15,"InvalidTextureAspect",27213],[15,"CopyFromForbiddenTextureFormat",27213],[15,"CopyToForbiddenTextureFormat",27213],[15,"BufferOverrun",27213],[15,"InvalidMipLevel",27213],[15,"TextureOverrun",27213],[15,"TextureFormatsNotCopyCompatible",27213],[15,"InvalidTextureMipLevel",27213],[15,"InvalidSampleCount",27213],[5,"DeviceLostInvocation",27284],[8,"DeviceDescriptor",27284],[15,"IncompatibleColorAttachment",27935],[15,"IncompatibleDepthStencilAttachment",27935],[15,"IncompatibleSampleCount",27935],[15,"IncompatibleMultiview",27935],[5,"Hubs",28668],[8,"RequestAdapterOptions",28975],[15,"Storage",32449],[15,"Exchange",32450],[15,"Location",32451],[15,"Position",32455],[15,"Select",32456],[15,"Math",32456],[15,"Relational",32456],[15,"ImageSample",32456],[15,"ImageLoad",32456],[15,"Derivative",32456],[15,"Access",32456],[15,"AccessIndex",32456],[15,"RayQueryGetIntersection",32456],[15,"AtomicResult",32456],[15,"Compose",32456],[15,"As",32456],[15,"Unary",32456],[15,"ImageQuery",32456],[15,"Binary",32456],[15,"Swizzle",32456],[15,"Load",32456],[15,"Splat",32456],[15,"WorkGroupUniformLoadResult",32456],[15,"Storage",32509],[15,"Sampled",32509],[15,"Depth",32509],[15,"Size",32514],[15,"ModfResult",32515],[15,"FrexpResult",32515],[15,"Initialize",32519],[15,"Proceed",32519],[15,"Gradient",32522],[15,"If",32524],[15,"Call",32524],[15,"ImageStore",32524],[15,"Loop",32524],[15,"Switch",32524],[15,"Atomic",32524],[15,"RayQuery",32524],[15,"Store",32524],[15,"WorkGroupUniformLoad",32524],[15,"Return",32524],[15,"Image",32550],[15,"Pointer",32550],[15,"Array",32550],[15,"BindingArray",32550],[15,"Matrix",32550],[15,"Sampler",32550],[15,"Struct",32550],[15,"Vector",32550],[15,"ValuePointer",32550],[15,"Embedded",33244],[15,"InvalidCastArg",36151],[15,"AutomaticConversionLossy",36151],[15,"AutomaticConversionFloatToInt",36151],[15,"OutOfBoundsIndex",36156],[15,"InvalidAccess",36156],[15,"InvalidSubAccess",36156],[15,"FunctionNotDefined",36156],[15,"Argument",37736],[15,"ArgumentType",37736],[15,"ArgumentCount",37736],[15,"ComponentCount",37743],[15,"ComponentType",37743],[15,"ArrayStride",37746],[15,"StructSpan",37746],[15,"MemberOffset",37746],[15,"MemberOffsetAfterStruct",37746],[15,"UnsizedMember",37746],[15,"InvalidIntegerInterpolation",37757],[15,"InvalidLocationsWhileDualSourceBlending",37757],[15,"ComparisonSamplingMismatch",37759],[15,"InvalidCall",37762],[15,"Expression",37762],[15,"LocalVariable",37762],[15,"InvalidArgumentType",37762],[15,"InvalidArgumentPointerSpace",37762],[15,"PipelineInputRegularFunction",37762],[15,"InvalidStoreTypes",37762],[15,"MissingTypeFlags",37777],[15,"UnsupportedImageType",37779],[15,"InvalidPointerToUnsized",37779],[15,"InvalidArrayStride",37779],[15,"MemberOverlap",37779],[15,"MemberOutOfBounds",37779],[15,"Type",37792],[15,"ConstExpression",37792],[15,"Constant",37792],[15,"GlobalVariable",37792],[15,"Function",37792],[15,"EntryPoint",37792],[15,"InvalidLocationAttributeCombination",37809],[15,"BindingCollision",37809],[15,"IncompatibleFormat",38745],[15,"UnalignedShader",38747],[15,"Stage",38747],[15,"Internal",38747],[15,"BlendFactorOnUnsupportedTarget",38747],[15,"TooManyVertexBuffers",38747],[15,"TooManyVertexAttributes",38747],[15,"VertexStrideTooLarge",38747],[15,"UnalignedVertexStride",38747],[15,"InvalidVertexAttributeOffset",38747],[15,"StripIndexFormatForNonStripTopology",38747],[15,"InvalidGroupIndex",38769],[15,"UnsupportedFormat",38915],[15,"UnsupportedPresentMode",38915],[15,"UnsupportedAlphaMode",38915],[15,"TooLarge",38915],[8,"BufferAccessResult",39014],[8,"QuerySetDescriptor",39014],[8,"TextureDescriptor",39014],[8,"BufferDescriptor",39014],[15,"NegativeRange",40269],[15,"OutOfBoundsUnderrun",40269],[15,"OutOfBoundsOverrun",40269],[15,"UnalignedOffset",40269],[15,"UnalignedRangeSize",40269],[15,"MaxBufferSize",40277],[15,"TooManyQueries",40279],[15,"InvalidFilterModeWithAnisotropy",40281],[15,"InvalidLodMaxClamp",40281],[15,"InvalidMipLevelCount",40286],[15,"InvalidCubemapTextureDepth",40288],[15,"InvalidCubemapArrayTextureDepth",40288],[15,"InvalidArrayLayerCount",40288],[15,"TooManyMipLevels",40288],[15,"TooManyArrayLayers",40288],[15,"InvalidAspect",40288],[15,"InvalidTextureViewDimension",40288],[15,"FormatReinterpretation",40288],[15,"Surface",40302],[15,"RenderPass",40302],[15,"NotMultipleOfBlockHeight",40305],[15,"NotMultipleOfBlockWidth",40305],[15,"LimitExceeded",40305],[15,"WidthNotMultipleOf",40305],[15,"HeightNotMultipleOf",40305],[15,"WrongAddressSpace",40792],[15,"WrongTextureViewDimension",40792],[15,"WrongTextureClass",40792],[15,"InvalidWorkgroupSize",40799],[15,"Filtering",40799],[15,"Input",40799],[15,"TooManyVaryings",40799],[15,"InputNotConsumed",40799],[8,"Label",40812],[8,"MemoryRange",40812],[15,"Renderbuffer",45768],[15,"Texture",45768],[15,"FencePool",46860],[15,"Intermediate",46863],[15,"Rectangle",48781],[15,"Circle",48781],[15,"Selection",49861],[15,"Active",50048],[15,"Hovered",50048],[15,"Resized",50822],[15,"Opened",50822],[15,"Moved",50822]],"b":[[349,"impl-Catalog-for-Theme"],[350,"impl-Catalog-for-Theme"],[351,"impl-Catalog-for-Theme"],[352,"impl-Catalog-for-Theme"],[353,"impl-Catalog-for-Theme"],[354,"impl-Default-for-Theme"],[355,"impl-Catalog-for-Theme"],[356,"impl-Catalog-for-Theme"],[357,"impl-Catalog-for-Theme"],[358,"impl-Catalog-for-Theme"],[359,"impl-Catalog-for-Theme"],[360,"impl-Catalog-for-Theme"],[361,"impl-Catalog-for-Theme"],[362,"impl-Catalog-for-Theme"],[363,"impl-Catalog-for-Theme"],[364,"impl-Catalog-for-Theme"],[365,"impl-Catalog-for-Theme"],[366,"impl-Catalog-for-Theme"],[422,"impl-Div%3Cf32%3E-for-Radians"],[423,"impl-Div-for-Radians"],[478,"impl-PartialEq-for-Degrees"],[479,"impl-PartialEq%3Cf32%3E-for-Degrees"],[480,"impl-PartialEq%3Cf32%3E-for-Radians"],[481,"impl-PartialEq-for-Radians"],[526,"impl-Debug-for-Error"],[527,"impl-Display-for-Error"],[533,"impl-Debug-for-Theme"],[534,"impl-Display-for-Theme"],[543,"impl-Display-for-Point%3CT%3E"],[544,"impl-Debug-for-Point%3CT%3E"],[556,"impl-From%3CVertical%3E-for-Alignment"],[558,"impl-From%3CHorizontal%3E-for-Alignment"],[566,"impl-From%3CDegrees%3E-for-Radians"],[568,"impl-From%3Cu8%3E-for-Radians"],[569,"impl-From%3Cf32%3E-for-Radians"],[570,"impl-From%3CGradient%3E-for-Background"],[571,"impl-From%3CColor%3E-for-Background"],[572,"impl-From%3CLinear%3E-for-Background"],[575,"impl-From%3C%5Bf32;+4%5D%3E-for-Color"],[576,"impl-From%3CAlpha%3CRgb,+f32%3E%3E-for-Color"],[577,"impl-From%3CRgb%3E-for-Color"],[578,"impl-From%3C%5Bf32;+3%5D%3E-for-Color"],[580,"impl-From%3Cu16%3E-for-Length"],[581,"impl-From%3CPixels%3E-for-Length"],[583,"impl-From%3Cf32%3E-for-Length"],[584,"impl-From%3C%5Bu16;+2%5D%3E-for-Padding"],[585,"impl-From%3C%5Bf32;+2%5D%3E-for-Padding"],[586,"impl-From%3C%5Bf32;+4%5D%3E-for-Padding"],[587,"impl-From%3C%5Bu16;+4%5D%3E-for-Padding"],[588,"impl-From%3Cu16%3E-for-Padding"],[589,"impl-From%3Cf32%3E-for-Padding"],[591,"impl-From%3Cu16%3E-for-Pixels"],[592,"impl-From%3Cf32%3E-for-Pixels"],[594,"impl-From%3C(T,+T)%3E-for-Point%3CT%3E"],[596,"impl-From%3C%5BT;+2%5D%3E-for-Point%3CT%3E"],[600,"impl-From%3CVector%3CT%3E%3E-for-Size%3CT%3E"],[601,"impl-From%3C(T,+T)%3E-for-Size%3CT%3E"],[603,"impl-From%3CPadding%3E-for-Size"],[604,"impl-From%3C%5BT;+2%5D%3E-for-Size%3CT%3E"],[606,"impl-From%3CSize%3CT%3E%3E-for-Vector%3CT%3E"],[607,"impl-From%3C%5BT;+2%5D%3E-for-Vector%3CT%3E"],[900,"impl-Mul%3Cf32%3E-for-Radians"],[901,"impl-Mul-for-Radians"],[904,"impl-Mul%3Cf32%3E-for-Rectangle"],[905,"impl-Mul%3CTransformation%3E-for-Rectangle"],[906,"impl-Mul%3CTransformation%3E-for-Size"],[907,"impl-Mul%3CT%3E-for-Size%3CT%3E"],[909,"impl-Mul%3CTransformation%3E-for-Vector"],[910,"impl-Mul%3CT%3E-for-Vector%3CT%3E"],[935,"impl-PartialOrd-for-Degrees"],[936,"impl-PartialOrd%3Cf32%3E-for-Degrees"],[937,"impl-PartialOrd-for-Radians"],[938,"impl-PartialOrd%3Cf32%3E-for-Radians"],[961,"impl-Catalog-for-Theme"],[962,"impl-Catalog-for-Theme"],[963,"impl-Catalog-for-Theme"],[964,"impl-Catalog-for-Theme"],[965,"impl-Catalog-for-Theme"],[966,"impl-Catalog-for-Theme"],[967,"impl-Catalog-for-Theme"],[968,"impl-Catalog-for-Theme"],[969,"impl-Catalog-for-Theme"],[970,"impl-Catalog-for-Theme"],[971,"impl-Catalog-for-Theme"],[972,"impl-Catalog-for-Theme"],[973,"impl-Catalog-for-Theme"],[974,"impl-Catalog-for-Theme"],[975,"impl-Catalog-for-Theme"],[976,"impl-Catalog-for-Theme"],[977,"impl-Catalog-for-Theme"],[980,"impl-Sub-for-Point%3CT%3E"],[981,"impl-Sub%3CVector%3CT%3E%3E-for-Point%3CT%3E"],[1990,"impl-Group%3C\'a,+Message,+Theme,+Renderer%3E"],[1991,"impl-Overlay%3CMessage,+Theme,+Renderer%3E-for-Group%3C\'a,+Message,+Theme,+Renderer%3E"],[2605,"impl-From%3CId%3E-for-Id"],[2607,"impl-From%3CId%3E-for-Id"],[2608,"impl-From%3CId%3E-for-Id"],[2659,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Text%3C\'a,+Theme,+Renderer%3E"],[2660,"impl-Text%3C\'a,+Theme,+Renderer%3E"],[3072,"impl-From%3Ci32%3E-for-Radius"],[3073,"impl-From%3Cf32%3E-for-Radius"],[3075,"impl-From%3Cu16%3E-for-Radius"],[3076,"impl-From%3Cu8%3E-for-Radius"],[3077,"impl-From%3C%5Bf32;+4%5D%3E-for-Radius"],[3606,"impl-Flags-for-Modifiers"],[3607,"impl-Modifiers"],[3677,"impl-Octal-for-Modifiers"],[3678,"impl-UpperHex-for-Modifiers"],[3679,"impl-Debug-for-Modifiers"],[3680,"impl-Binary-for-Modifiers"],[3681,"impl-LowerHex-for-Modifiers"],[3691,"impl-Modifiers"],[3692,"impl-Flags-for-Modifiers"],[4749,"impl-Display-for-Custom"],[4750,"impl-Debug-for-Custom"],[5145,"impl-Add%3CDuration%3E-for-Instant"],[5146,"impl-Add%3CDuration%3E-for-Instant"],[5147,"impl-Add%3CDuration%3E-for-Duration"],[5148,"impl-Add-for-Duration"],[5149,"impl-AddAssign%3CDuration%3E-for-Instant"],[5150,"impl-AddAssign%3CDuration%3E-for-Instant"],[5151,"impl-AddAssign-for-Duration"],[5152,"impl-AddAssign%3CDuration%3E-for-Duration"],[5198,"impl-Div%3Cu32%3E-for-Duration"],[5199,"impl-Div%3CDuration%3E-for-Duration"],[5212,"impl-PartialEq%3CInstant%3E-for-Instant"],[5213,"impl-PartialEq-for-Instant"],[5214,"impl-PartialEq%3CDuration%3E-for-Duration"],[5215,"impl-PartialEq-for-Duration"],[5225,"impl-From%3CInstant%3E-for-Instant"],[5227,"impl-From%3CInstant%3E-for-Instant"],[5229,"impl-From%3CTimeSpec%3E-for-Duration"],[5230,"impl-From%3CDelay%3E-for-Duration"],[5271,"impl-PartialOrd%3CInstant%3E-for-Instant"],[5272,"impl-PartialOrd-for-Instant"],[5273,"impl-PartialOrd-for-Duration"],[5274,"impl-PartialOrd%3CDuration%3E-for-Duration"],[5282,"impl-Sub%3CDuration%3E-for-Instant"],[5283,"impl-Sub%3CInstant%3E-for-Instant"],[5284,"impl-Sub-for-Instant"],[5285,"impl-Sub%3CDuration%3E-for-Instant"],[5286,"impl-Sub-for-Duration"],[5287,"impl-Sub%3CDuration%3E-for-Duration"],[5288,"impl-SubAssign%3CDuration%3E-for-Instant"],[5289,"impl-SubAssign%3CDuration%3E-for-Instant"],[5290,"impl-SubAssign-for-Duration"],[5291,"impl-SubAssign%3CDuration%3E-for-Duration"],[5295,"impl-Sum-for-Duration"],[5296,"impl-Sum%3C%26Duration%3E-for-Duration"],[5890,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[5891,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[6333,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[6334,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[6532,"impl-Checkbox%3C\'a,+Message,+Theme,+Renderer%3E"],[6533,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Checkbox%3C\'a,+Message,+Theme,+Renderer%3E"],[6534,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-ComboBox%3C\'a,+T,+Message,+Theme,+Renderer%3E"],[6535,"impl-ComboBox%3C\'a,+T,+Message,+Theme,+Renderer%3E"],[6540,"impl-Radio%3C\'a,+Message,+Theme,+Renderer%3E"],[6541,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Radio%3C\'a,+Message,+Theme,+Renderer%3E"],[6545,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextEditor%3C\'a,+Highlighter,+Message,+Theme,+Renderer%3E"],[6546,"impl-TextEditor%3C\'a,+Highlighter,+Message,+Theme,+Renderer%3E"],[6547,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[6548,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[6549,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Toggler%3C\'a,+Message,+Theme,+Renderer%3E"],[6550,"impl-Toggler%3C\'a,+Message,+Theme,+Renderer%3E"],[7263,"impl-From%3CGradient%3E-for-Fill"],[7265,"impl-From%3CLinear%3E-for-Fill"],[7266,"impl-From%3CColor%3E-for-Fill"],[7273,"impl-From%3CGradient%3E-for-Style"],[7274,"impl-From%3CColor%3E-for-Style"],[7276,"impl-From%3C%26str%3E-for-Text"],[7277,"impl-From%3CString%3E-for-Text"],[8332,"impl-Index%3CControlPointId%3E-for-Path"],[8333,"impl-Index%3CEndpointId%3E-for-Path"],[8334,"impl-Index%3CEndpointId%3E-for-PathSlice%3C\'l%3E"],[8335,"impl-Index%3CControlPointId%3E-for-PathSlice%3C\'l%3E"],[8493,"impl-IntoIterator-for-PathSlice%3C\'l%3E"],[8494,"impl-IntoIterator-for-%26PathSlice%3C\'l%3E"],[8863,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[8864,"impl-NoAttributes%3CB%3E"],[8878,"impl-Flattened%3CBuilder%3E"],[8879,"impl-Build-for-Flattened%3CBuilder%3E"],[8881,"impl-Build-for-WithSvg%3CBuilder%3E"],[8882,"impl-WithSvg%3CBuilder%3E"],[8883,"impl-Build-for-NoAttributes%3CB%3E"],[8884,"impl-NoAttributes%3CB%3E"],[8891,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[8892,"impl-WithSvg%3CBuilder%3E"],[8903,"impl-WithSvg%3CBuilder%3E"],[8904,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[8905,"impl-NoAttributes%3CB%3E"],[8906,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[8933,"impl-NoAttributes%3CB%3E"],[8934,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[8942,"impl-Display-for-BorderRadii"],[8943,"impl-Debug-for-BorderRadii"],[9016,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[9017,"impl-WithSvg%3CBuilder%3E"],[9018,"impl-NoAttributes%3CB%3E"],[9019,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[9021,"impl-WithSvg%3CBuilder%3E"],[9022,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[9041,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[9042,"impl-WithSvg%3CBuilder%3E"],[9043,"impl-NoAttributes%3CB%3E"],[9044,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[9063,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[9064,"impl-WithSvg%3CBuilder%3E"],[9065,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[9066,"impl-NoAttributes%3CB%3E"],[9240,"impl-Index%3CEndpointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[9241,"impl-Index%3CControlPointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[9397,"impl-Add-for-Angle%3CT%3E"],[9398,"impl-Add%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[9401,"impl-Arc%3CS%3E"],[9402,"impl-Segment-for-Arc%3CS%3E"],[9403,"impl-CubicBezierSegment%3CS%3E"],[9404,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9405,"impl-LineSegment%3CS%3E"],[9406,"impl-Segment-for-LineSegment%3CS%3E"],[9407,"impl-QuadraticBezierSegment%3CS%3E"],[9408,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9414,"impl-Arc%3CS%3E"],[9415,"impl-Segment-for-Arc%3CS%3E"],[9416,"impl-CubicBezierSegment%3CS%3E"],[9417,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9464,"impl-Segment-for-Arc%3CS%3E"],[9465,"impl-Arc%3CS%3E"],[9466,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9467,"impl-CubicBezierSegment%3CS%3E"],[9468,"impl-LineSegment%3CS%3E"],[9469,"impl-Segment-for-LineSegment%3CS%3E"],[9470,"impl-QuadraticBezierSegment%3CS%3E"],[9471,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9573,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9574,"impl-CubicBezierSegment%3CS%3E"],[9576,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9577,"impl-QuadraticBezierSegment%3CS%3E"],[9582,"impl-Div%3CT%3E-for-Angle%3CT%3E"],[9583,"impl-Div-for-Angle%3CT%3E"],[9607,"impl-CubicBezierSegment%3CS%3E"],[9608,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9610,"impl-QuadraticBezierSegment%3CS%3E"],[9611,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9613,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9614,"impl-CubicBezierSegment%3CS%3E"],[9616,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9617,"impl-QuadraticBezierSegment%3CS%3E"],[9653,"impl-Arc%3CS%3E"],[9654,"impl-Segment-for-Arc%3CS%3E"],[9655,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9656,"impl-CubicBezierSegment%3CS%3E"],[9657,"impl-Segment-for-LineSegment%3CS%3E"],[9658,"impl-LineSegment%3CS%3E"],[9659,"impl-QuadraticBezierSegment%3CS%3E"],[9660,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9677,"impl-Segment-for-Arc%3CS%3E"],[9678,"impl-Arc%3CS%3E"],[9680,"impl-CubicBezierSegment%3CS%3E"],[9681,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9683,"impl-QuadraticBezierSegment%3CS%3E"],[9684,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9712,"impl-Arc%3CS%3E"],[9714,"impl-From%3CSvgArc%3CS%3E%3E-for-Arc%3CS%3E"],[9715,"impl-Segment-for-Arc%3CS%3E"],[9717,"impl-CubicBezierSegment%3CS%3E"],[9718,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9720,"impl-LineSegment%3CS%3E"],[9721,"impl-Segment-for-LineSegment%3CS%3E"],[9726,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9727,"impl-QuadraticBezierSegment%3CS%3E"],[9914,"impl-Arc%3CS%3E"],[9915,"impl-Segment-for-Arc%3CS%3E"],[9916,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9917,"impl-CubicBezierSegment%3CS%3E"],[9918,"impl-LineSegment%3CS%3E"],[9919,"impl-Segment-for-LineSegment%3CS%3E"],[9920,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9921,"impl-QuadraticBezierSegment%3CS%3E"],[9938,"impl-Segment-for-Arc%3CS%3E"],[9939,"impl-Arc%3CS%3E"],[9940,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9941,"impl-CubicBezierSegment%3CS%3E"],[9942,"impl-Segment-for-LineSegment%3CS%3E"],[9943,"impl-LineSegment%3CS%3E"],[9944,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9945,"impl-QuadraticBezierSegment%3CS%3E"],[9948,"impl-Segment-for-Arc%3CS%3E"],[9949,"impl-Arc%3CS%3E"],[9950,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9951,"impl-CubicBezierSegment%3CS%3E"],[9952,"impl-LineSegment%3CS%3E"],[9953,"impl-Segment-for-LineSegment%3CS%3E"],[9954,"impl-QuadraticBezierSegment%3CS%3E"],[9955,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9963,"impl-Sum%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[9964,"impl-Sum-for-Angle%3CT%3E"],[9969,"impl-Segment-for-Arc%3CS%3E"],[9970,"impl-Arc%3CS%3E"],[9971,"impl-CubicBezierSegment%3CS%3E"],[9972,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[9973,"impl-LineSegment%3CS%3E"],[9974,"impl-Segment-for-LineSegment%3CS%3E"],[9975,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[9976,"impl-QuadraticBezierSegment%3CS%3E"],[10105,"impl-Arc%3CS%3E"],[10106,"impl-Segment-for-Arc%3CS%3E"],[10107,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[10108,"impl-CubicBezierSegment%3CS%3E"],[10109,"impl-Segment-for-LineSegment%3CS%3E"],[10110,"impl-LineSegment%3CS%3E"],[10111,"impl-QuadraticBezierSegment%3CS%3E"],[10112,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[10123,"impl-Arc%3CS%3E"],[10124,"impl-Segment-for-Arc%3CS%3E"],[10125,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[10126,"impl-CubicBezierSegment%3CS%3E"],[10127,"impl-Segment-for-LineSegment%3CS%3E"],[10128,"impl-LineSegment%3CS%3E"],[10129,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[10130,"impl-QuadraticBezierSegment%3CS%3E"],[10301,"impl-PartialEq%3C%5BT%5D%3E-for-ArrayVec%3CT,+CAP%3E"],[10302,"impl-PartialEq-for-ArrayVec%3CT,+CAP%3E"],[10303,"impl-PartialEq-for-ArrayString%3CCAP%3E"],[10304,"impl-PartialEq%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10319,"impl-Display-for-ArrayString%3CCAP%3E"],[10320,"impl-Debug-for-ArrayString%3CCAP%3E"],[10321,"impl-Display-for-CapacityError%3CT%3E"],[10322,"impl-Debug-for-CapacityError%3CT%3E"],[10344,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[10345,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10349,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10350,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[10396,"impl-IntoIterator-for-%26mut+ArrayVec%3CT,+CAP%3E"],[10397,"impl-IntoIterator-for-%26ArrayVec%3CT,+CAP%3E"],[10398,"impl-IntoIterator-for-ArrayVec%3CT,+CAP%3E"],[10411,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[10412,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10418,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[10419,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10432,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[10433,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[10477,"impl-TryFrom%3C%26str%3E-for-ArrayString%3CCAP%3E"],[10478,"impl-TryFrom%3CArguments%3C\'a%3E%3E-for-ArrayString%3CCAP%3E"],[10678,"impl-Add-for-Length%3CT,+U%3E"],[10679,"impl-Add%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[10680,"impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[10681,"impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[10682,"impl-Add%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[10683,"impl-Add%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[10686,"impl-Add-for-Size2D%3CT,+U%3E"],[10687,"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[10688,"impl-Add-for-Size3D%3CT,+U%3E"],[10689,"impl-Add%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[10692,"impl-Add%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[10693,"impl-Add-for-Vector2D%3CT,+U%3E"],[10694,"impl-Add%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[10695,"impl-Add-for-Vector3D%3CT,+U%3E"],[10697,"impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[10698,"impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[10699,"impl-AddAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[10700,"impl-AddAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[10734,"impl-Transform2D%3CT,+Src,+Dst%3E"],[10735,"impl-ApproxEq%3CT%3E-for-Transform2D%3CT,+Src,+Dst%3E"],[10736,"impl-ApproxEq%3CT%3E-for-Transform3D%3CT,+Src,+Dst%3E"],[10737,"impl-Transform3D%3CT,+Src,+Dst%3E"],[10917,"impl-Ceil-for-Point2D%3CT,+U%3E"],[10918,"impl-Point2D%3CT,+U%3E"],[10919,"impl-Ceil-for-Point3D%3CT,+U%3E"],[10920,"impl-Point3D%3CT,+U%3E"],[10921,"impl-Size2D%3CT,+U%3E"],[10922,"impl-Ceil-for-Size2D%3CT,+U%3E"],[10923,"impl-Size3D%3CT,+U%3E"],[10924,"impl-Ceil-for-Size3D%3CT,+U%3E"],[10925,"impl-Vector2D%3CT,+U%3E"],[10926,"impl-Ceil-for-Vector2D%3CT,+U%3E"],[10927,"impl-Ceil-for-Vector3D%3CT,+U%3E"],[10928,"impl-Vector3D%3CT,+U%3E"],[11103,"impl-Div%3CT%3E-for-Box2D%3CT,+U%3E"],[11104,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U2%3E"],[11105,"impl-Div%3CT%3E-for-Box3D%3CT,+U%3E"],[11106,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U2%3E"],[11107,"impl-Div%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Dst%3E"],[11108,"impl-Div%3CLength%3CT,+Src%3E%3E-for-Length%3CT,+Dst%3E"],[11109,"impl-Div%3CT%3E-for-Length%3CT,+U%3E"],[11110,"impl-Div%3CT%3E-for-Point2D%3CT,+U%3E"],[11111,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E"],[11112,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U2%3E"],[11113,"impl-Div%3CT%3E-for-Point3D%3CT,+U%3E"],[11114,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U2%3E"],[11115,"impl-Div%3CT%3E-for-Rect%3CT,+U%3E"],[11116,"impl-Div%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[11117,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U2%3E"],[11118,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E"],[11119,"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E"],[11120,"impl-Div%3CT%3E-for-Size3D%3CT,+U%3E"],[11121,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U2%3E"],[11122,"impl-Div%3CT%3E-for-Vector2D%3CT,+U%3E"],[11123,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U2%3E"],[11124,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U2%3E"],[11125,"impl-Div%3CT%3E-for-Vector3D%3CT,+U%3E"],[11126,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[11127,"impl-DivAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[11128,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[11129,"impl-DivAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[11131,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[11132,"impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[11133,"impl-DivAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[11134,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[11135,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[11136,"impl-DivAssign%3CT%3E-for-Rect%3CT,+U%3E"],[11137,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[11138,"impl-DivAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[11139,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[11140,"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[11141,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[11142,"impl-DivAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[11143,"impl-DivAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[11144,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[11145,"impl-DivAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[11146,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[11297,"impl-Point2D%3CT,+U%3E"],[11298,"impl-Floor-for-Point2D%3CT,+U%3E"],[11299,"impl-Floor-for-Point3D%3CT,+U%3E"],[11300,"impl-Point3D%3CT,+U%3E"],[11301,"impl-Floor-for-Size2D%3CT,+U%3E"],[11302,"impl-Size2D%3CT,+U%3E"],[11303,"impl-Floor-for-Size3D%3CT,+U%3E"],[11304,"impl-Size3D%3CT,+U%3E"],[11305,"impl-Vector2D%3CT,+U%3E"],[11306,"impl-Floor-for-Vector2D%3CT,+U%3E"],[11307,"impl-Floor-for-Vector3D%3CT,+U%3E"],[11308,"impl-Vector3D%3CT,+U%3E"],[11335,"impl-From%3CPoint3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[11336,"impl-From%3CVector2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[11337,"impl-From%3CPoint2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[11338,"impl-From%3CVector3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[11341,"impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[11342,"impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[11344,"impl-From%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[11346,"impl-From%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[11353,"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[11354,"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[11355,"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[11357,"impl-From%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[11359,"impl-From%3CVector3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[11360,"impl-From%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[11367,"impl-From%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[11369,"impl-From%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[11370,"impl-From%3CSize2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[11371,"impl-From%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[11373,"impl-From%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[11374,"impl-From%3CRotation3D%3CT,+Src,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[11376,"impl-From%3CVector3D%3CT,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[11575,"impl-Into%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[11577,"impl-Into%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[11579,"impl-Into%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[11580,"impl-Into%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[11587,"impl-Into%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[11588,"impl-Into%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[11590,"impl-Into%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[11591,"impl-Into%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[11594,"impl-Into%3CTransform2D%3CT,+Src,+Dst%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[11595,"impl-Into%3CVector2D%3CT,+Src%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[11597,"impl-Into%3CVector3D%3CT,+Src%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[11599,"impl-Into%3CTransform3D%3CT,+Src,+Dst%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[11600,"impl-Into%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[11601,"impl-Into%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[11603,"impl-Into%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[11605,"impl-Into%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[11874,"impl-Mul%3CT%3E-for-Box2D%3CT,+U%3E"],[11875,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U1%3E"],[11876,"impl-Mul%3CT%3E-for-Box3D%3CT,+U%3E"],[11877,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U1%3E"],[11878,"impl-Mul%3CT%3E-for-Length%3CT,+U%3E"],[11879,"impl-Mul%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Src%3E"],[11880,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E"],[11881,"impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E"],[11882,"impl-Mul%3CT%3E-for-Point3D%3CT,+U%3E"],[11883,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U1%3E"],[11884,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U1%3E"],[11885,"impl-Mul%3CT%3E-for-Rect%3CT,+U%3E"],[11887,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U1%3E"],[11888,"impl-Mul%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[11889,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E"],[11890,"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E"],[11891,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U1%3E"],[11892,"impl-Mul%3CT%3E-for-Size3D%3CT,+U%3E"],[11893,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U1%3E"],[11894,"impl-Mul%3CT%3E-for-Vector2D%3CT,+U%3E"],[11895,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U1%3E"],[11896,"impl-Mul%3CT%3E-for-Vector3D%3CT,+U%3E"],[11897,"impl-MulAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[11898,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[11899,"impl-MulAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[11900,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[11902,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[11903,"impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[11904,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[11905,"impl-MulAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[11906,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[11907,"impl-MulAssign%3CT%3E-for-Rect%3CT,+U%3E"],[11908,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[11909,"impl-MulAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[11910,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[11911,"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[11912,"impl-MulAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[11913,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[11914,"impl-MulAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[11915,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[11916,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[11917,"impl-MulAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[12029,"impl-Round-for-Point2D%3CT,+U%3E"],[12030,"impl-Point2D%3CT,+U%3E"],[12031,"impl-Point3D%3CT,+U%3E"],[12032,"impl-Round-for-Point3D%3CT,+U%3E"],[12034,"impl-Round-for-Size2D%3CT,+U%3E"],[12035,"impl-Size2D%3CT,+U%3E"],[12036,"impl-Round-for-Size3D%3CT,+U%3E"],[12037,"impl-Size3D%3CT,+U%3E"],[12038,"impl-Vector2D%3CT,+U%3E"],[12039,"impl-Round-for-Vector2D%3CT,+U%3E"],[12040,"impl-Round-for-Vector3D%3CT,+U%3E"],[12041,"impl-Vector3D%3CT,+U%3E"],[12082,"impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[12083,"impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[12084,"impl-Sub-for-Point2D%3CT,+U%3E"],[12085,"impl-Sub-for-Point3D%3CT,+U%3E"],[12086,"impl-Sub%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[12087,"impl-Sub%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[12097,"impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[12098,"impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[12099,"impl-SubAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[12100,"impl-SubAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[12108,"impl-Sum-for-Length%3CT,+U%3E"],[12109,"impl-Sum%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[12110,"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[12111,"impl-Sum-for-Size2D%3CT,+U%3E"],[12112,"impl-Sum-for-Size3D%3CT,+U%3E"],[12113,"impl-Sum%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[12114,"impl-Sum%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[12115,"impl-Sum-for-Vector2D%3CT,+U%3E"],[12116,"impl-Sum%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[12117,"impl-Sum-for-Vector3D%3CT,+U%3E"],[12288,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[12289,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[12290,"impl-Scale%3CT,+Src,+Dst%3E"],[12291,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[12292,"impl-Transform2D%3CT,+Src,+Dst%3E"],[12293,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[12294,"impl-Transformation%3CS%3E-for-Translation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[12295,"impl-Translation2D%3CT,+Src,+Dst%3E"],[12311,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[12312,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[12313,"impl-Scale%3CT,+Src,+Dst%3E"],[12314,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[12315,"impl-Transform2D%3CT,+Src,+Dst%3E"],[12316,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[12622,"impl-Point2D%3CT,+U%3E"],[12623,"impl-Zero-for-Point2D%3CT,+U%3E"],[12624,"impl-Zero-for-Point3D%3CT,+U%3E"],[12625,"impl-Point3D%3CT,+U%3E"],[12628,"impl-Zero-for-Size2D%3CT,+U%3E"],[12629,"impl-Size2D%3CT,+U%3E"],[12630,"impl-Size3D%3CT,+U%3E"],[12631,"impl-Zero-for-Size3D%3CT,+U%3E"],[12632,"impl-Vector2D%3CT,+U%3E"],[12633,"impl-Zero-for-Vector2D%3CT,+U%3E"],[12634,"impl-Zero-for-Vector3D%3CT,+U%3E"],[12635,"impl-Vector3D%3CT,+U%3E"],[13098,"impl-PathBuilder-for-BuilderWithAttributes"],[13099,"impl-BuilderWithAttributes"],[13113,"impl-BuilderWithAttributes"],[13114,"impl-Build-for-BuilderWithAttributes"],[13132,"impl-BuilderWithAttributes"],[13133,"impl-PathBuilder-for-BuilderWithAttributes"],[13160,"impl-PathBuilder-for-BuilderWithAttributes"],[13161,"impl-BuilderWithAttributes"],[13242,"impl-PathBuilder-for-BuilderWithAttributes"],[13243,"impl-BuilderWithAttributes"],[13252,"impl-PathBuilder-for-BuilderWithAttributes"],[13253,"impl-BuilderWithAttributes"],[13256,"impl-BuilderWithAttributes"],[13257,"impl-PathBuilder-for-BuilderWithAttributes"],[13259,"impl-PathBuilder-for-BuilderWithAttributes"],[13260,"impl-BuilderWithAttributes"],[13342,"impl-Builder%3C\'l%3E"],[13343,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13344,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13345,"impl-BuilderWithAttributes%3C\'l%3E"],[13352,"impl-Build-for-Builder%3C\'l%3E"],[13353,"impl-Builder%3C\'l%3E"],[13354,"impl-Build-for-BuilderWithAttributes%3C\'l%3E"],[13355,"impl-BuilderWithAttributes%3C\'l%3E"],[13361,"impl-Builder%3C\'l%3E"],[13362,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13363,"impl-BuilderWithAttributes%3C\'l%3E"],[13364,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13377,"impl-Builder%3C\'l%3E"],[13378,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13379,"impl-BuilderWithAttributes%3C\'l%3E"],[13380,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13418,"impl-Builder%3C\'l%3E"],[13419,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13420,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13421,"impl-BuilderWithAttributes%3C\'l%3E"],[13427,"impl-Builder%3C\'l%3E"],[13428,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13429,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13430,"impl-BuilderWithAttributes%3C\'l%3E"],[13431,"impl-Builder%3C\'l%3E"],[13432,"impl-PathBuilder-for-Builder%3C\'l%3E"],[13433,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[13434,"impl-BuilderWithAttributes%3C\'l%3E"],[13932,"impl-From%3CGradient%3E-for-Style"],[13933,"impl-From%3CColor%3E-for-Style"],[13935,"impl-From%3CLinear%3E-for-Style"],[15621,"impl-Display-for-Error"],[15622,"impl-Debug-for-Error"],[17999,"impl-Flags-for-Backends"],[18000,"impl-Backends"],[18001,"impl-Features"],[18002,"impl-Flags-for-Features"],[18003,"impl-Flags-for-InstanceFlags"],[18004,"impl-InstanceFlags"],[18005,"impl-DownlevelFlags"],[18006,"impl-Flags-for-DownlevelFlags"],[18007,"impl-Flags-for-ShaderStages"],[18008,"impl-ShaderStages"],[18009,"impl-TextureFormatFeatureFlags"],[18010,"impl-Flags-for-TextureFormatFeatureFlags"],[18011,"impl-ColorWrites"],[18012,"impl-Flags-for-ColorWrites"],[18013,"impl-BufferUsages"],[18014,"impl-Flags-for-BufferUsages"],[18015,"impl-TextureUsages"],[18016,"impl-Flags-for-TextureUsages"],[18017,"impl-PipelineStatisticsTypes"],[18018,"impl-Flags-for-PipelineStatisticsTypes"],[19312,"impl-RenderPass%3C\'a%3E"],[19313,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[19314,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[19315,"impl-RenderBundleEncoder%3C\'a%3E"],[19316,"impl-RenderPass%3C\'a%3E"],[19317,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[19318,"impl-RenderBundleEncoder%3C\'a%3E"],[19319,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[19320,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[19321,"impl-RenderPass%3C\'a%3E"],[19322,"impl-RenderBundleEncoder%3C\'a%3E"],[19323,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[19324,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[19325,"impl-RenderPass%3C\'a%3E"],[19326,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[19327,"impl-RenderBundleEncoder%3C\'a%3E"],[19858,"impl-Debug-for-Backends"],[19859,"impl-UpperHex-for-Backends"],[19860,"impl-Octal-for-Backends"],[19861,"impl-Binary-for-Backends"],[19862,"impl-LowerHex-for-Backends"],[19864,"impl-LowerHex-for-Features"],[19865,"impl-Debug-for-Features"],[19866,"impl-Octal-for-Features"],[19867,"impl-Binary-for-Features"],[19868,"impl-UpperHex-for-Features"],[19869,"impl-Binary-for-InstanceFlags"],[19870,"impl-Octal-for-InstanceFlags"],[19871,"impl-UpperHex-for-InstanceFlags"],[19872,"impl-LowerHex-for-InstanceFlags"],[19873,"impl-Debug-for-InstanceFlags"],[19876,"impl-Debug-for-DownlevelFlags"],[19877,"impl-LowerHex-for-DownlevelFlags"],[19878,"impl-Binary-for-DownlevelFlags"],[19879,"impl-UpperHex-for-DownlevelFlags"],[19880,"impl-Octal-for-DownlevelFlags"],[19885,"impl-LowerHex-for-ShaderStages"],[19886,"impl-UpperHex-for-ShaderStages"],[19887,"impl-Debug-for-ShaderStages"],[19888,"impl-Octal-for-ShaderStages"],[19889,"impl-Binary-for-ShaderStages"],[19908,"impl-LowerHex-for-TextureFormatFeatureFlags"],[19909,"impl-Binary-for-TextureFormatFeatureFlags"],[19910,"impl-Debug-for-TextureFormatFeatureFlags"],[19911,"impl-UpperHex-for-TextureFormatFeatureFlags"],[19912,"impl-Octal-for-TextureFormatFeatureFlags"],[19947,"impl-Octal-for-ColorWrites"],[19948,"impl-Binary-for-ColorWrites"],[19949,"impl-Debug-for-ColorWrites"],[19950,"impl-UpperHex-for-ColorWrites"],[19951,"impl-LowerHex-for-ColorWrites"],[19975,"impl-Display-for-SurfaceError"],[19976,"impl-Debug-for-SurfaceError"],[19977,"impl-Debug-for-RequestDeviceError"],[19978,"impl-Display-for-RequestDeviceError"],[19980,"impl-Display-for-CreateSurfaceError"],[19981,"impl-Debug-for-CreateSurfaceError"],[19983,"impl-Display-for-BufferAsyncError"],[19984,"impl-Debug-for-BufferAsyncError"],[19989,"impl-Display-for-Error"],[19990,"impl-Debug-for-Error"],[19991,"impl-Octal-for-BufferUsages"],[19992,"impl-LowerHex-for-BufferUsages"],[19993,"impl-Binary-for-BufferUsages"],[19994,"impl-Debug-for-BufferUsages"],[19995,"impl-UpperHex-for-BufferUsages"],[19998,"impl-Binary-for-TextureUsages"],[19999,"impl-Octal-for-TextureUsages"],[20000,"impl-Debug-for-TextureUsages"],[20001,"impl-LowerHex-for-TextureUsages"],[20002,"impl-UpperHex-for-TextureUsages"],[20031,"impl-LowerHex-for-PipelineStatisticsTypes"],[20032,"impl-Debug-for-PipelineStatisticsTypes"],[20033,"impl-Octal-for-PipelineStatisticsTypes"],[20034,"impl-UpperHex-for-PipelineStatisticsTypes"],[20035,"impl-Binary-for-PipelineStatisticsTypes"],[20355,"impl-Backends"],[20356,"impl-Flags-for-Backends"],[20357,"impl-Features"],[20358,"impl-Flags-for-Features"],[20359,"impl-Flags-for-InstanceFlags"],[20360,"impl-InstanceFlags"],[20361,"impl-DownlevelFlags"],[20362,"impl-Flags-for-DownlevelFlags"],[20363,"impl-Flags-for-ShaderStages"],[20364,"impl-ShaderStages"],[20365,"impl-Flags-for-TextureFormatFeatureFlags"],[20366,"impl-TextureFormatFeatureFlags"],[20367,"impl-Flags-for-ColorWrites"],[20368,"impl-ColorWrites"],[20369,"impl-BufferUsages"],[20370,"impl-Flags-for-BufferUsages"],[20371,"impl-Flags-for-TextureUsages"],[20372,"impl-TextureUsages"],[20373,"impl-Flags-for-PipelineStatisticsTypes"],[20374,"impl-PipelineStatisticsTypes"],[22367,"impl-RenderPass%3C\'a%3E"],[22368,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[22370,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[22371,"impl-RenderBundleEncoder%3C\'a%3E"],[22374,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[22375,"impl-RenderPass%3C\'a%3E"],[22376,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[22377,"impl-RenderBundleEncoder%3C\'a%3E"],[22378,"impl-RenderPass%3C\'a%3E"],[22379,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[22381,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[22382,"impl-RenderBundleEncoder%3C\'a%3E"],[22383,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[22384,"impl-RenderPass%3C\'a%3E"],[22386,"impl-RenderBundleEncoder%3C\'a%3E"],[22387,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[22390,"impl-RenderEncoder%3C\'a%3E-for-RenderPass%3C\'a%3E"],[22391,"impl-RenderPass%3C\'a%3E"],[22392,"impl-RenderBundleEncoder%3C\'a%3E"],[22393,"impl-RenderEncoder%3C\'a%3E-for-RenderBundleEncoder%3C\'a%3E"],[24460,"impl-Debug-for-BindGroupLayoutEntryError"],[24461,"impl-Display-for-BindGroupLayoutEntryError"],[24462,"impl-Display-for-CreateBindGroupLayoutError"],[24463,"impl-Debug-for-CreateBindGroupLayoutError"],[24464,"impl-Display-for-CreateBindGroupError"],[24465,"impl-Debug-for-CreateBindGroupError"],[24466,"impl-Display-for-BindingZone"],[24467,"impl-Debug-for-BindingZone"],[24468,"impl-Display-for-BindingTypeMaxCountError"],[24469,"impl-Debug-for-BindingTypeMaxCountError"],[24475,"impl-Debug-for-CreatePipelineLayoutError"],[24476,"impl-Display-for-CreatePipelineLayoutError"],[24477,"impl-Display-for-PushConstantUploadError"],[24478,"impl-Debug-for-PushConstantUploadError"],[24483,"impl-Debug-for-BindError"],[24484,"impl-Display-for-BindError"],[24487,"impl-Display-for-GetBindGroupLayoutError"],[24488,"impl-Debug-for-GetBindGroupLayoutError"],[24489,"impl-Display-for-LateMinBufferBindingSizeMismatch"],[24490,"impl-Debug-for-LateMinBufferBindingSizeMismatch"],[24493,"impl-From%3CMissingFeatures%3E-for-BindGroupLayoutEntryError"],[24494,"impl-From%3CMissingDownlevelFlags%3E-for-BindGroupLayoutEntryError"],[24498,"impl-From%3CDeviceError%3E-for-CreateBindGroupError"],[24499,"impl-From%3CMissingBufferUsageError%3E-for-CreateBindGroupError"],[24500,"impl-From%3CMissingTextureUsageError%3E-for-CreateBindGroupError"],[24502,"impl-From%3CUsageConflict%3E-for-CreateBindGroupError"],[24510,"impl-From%3CDeviceError%3E-for-CreatePipelineLayoutError"],[24512,"impl-From%3CMissingFeatures%3E-for-CreatePipelineLayoutError"],[25980,"impl-Debug-for-CreateRenderBundleError"],[25981,"impl-Display-for-CreateRenderBundleError"],[25982,"impl-Display-for-ExecutionError"],[25983,"impl-Debug-for-ExecutionError"],[25985,"impl-Debug-for-RenderBundleError"],[25986,"impl-Display-for-RenderBundleError"],[25987,"impl-Debug-for-ClearError"],[25988,"impl-Display-for-ClearError"],[25991,"impl-Debug-for-DispatchError"],[25992,"impl-Display-for-DispatchError"],[25993,"impl-Debug-for-ComputePassErrorInner"],[25994,"impl-Display-for-ComputePassErrorInner"],[25995,"impl-Debug-for-ComputePassError"],[25996,"impl-Display-for-ComputePassError"],[25997,"impl-Display-for-DrawError"],[25998,"impl-Debug-for-DrawError"],[25999,"impl-Debug-for-RenderCommandError"],[26000,"impl-Display-for-RenderCommandError"],[26003,"impl-Display-for-QueryError"],[26004,"impl-Debug-for-QueryError"],[26005,"impl-Display-for-QueryUseError"],[26006,"impl-Debug-for-QueryUseError"],[26007,"impl-Debug-for-ResolveError"],[26008,"impl-Display-for-ResolveError"],[26017,"impl-Display-for-AttachmentErrorLocation"],[26018,"impl-Debug-for-AttachmentErrorLocation"],[26019,"impl-Debug-for-ColorAttachmentError"],[26020,"impl-Display-for-ColorAttachmentError"],[26021,"impl-Display-for-RenderPassErrorInner"],[26022,"impl-Debug-for-RenderPassErrorInner"],[26023,"impl-Display-for-RenderPassError"],[26024,"impl-Debug-for-RenderPassError"],[26026,"impl-Debug-for-TransferError"],[26027,"impl-Display-for-TransferError"],[26028,"impl-Display-for-CopyError"],[26029,"impl-Debug-for-CopyError"],[26031,"impl-Display-for-CommandEncoderError"],[26032,"impl-Debug-for-CommandEncoderError"],[26033,"impl-Display-for-PassErrorScope"],[26034,"impl-Debug-for-PassErrorScope"],[26063,"impl-From%3CDispatchError%3E-for-ComputePassErrorInner"],[26064,"impl-From%3CDeviceError%3E-for-ComputePassErrorInner"],[26065,"impl-From%3CQueryUseError%3E-for-ComputePassErrorInner"],[26066,"impl-From%3CMissingFeatures%3E-for-ComputePassErrorInner"],[26067,"impl-From%3CUsageConflict%3E-for-ComputePassErrorInner"],[26068,"impl-From%3CBindError%3E-for-ComputePassErrorInner"],[26070,"impl-From%3CMissingBufferUsageError%3E-for-ComputePassErrorInner"],[26071,"impl-From%3CCommandEncoderError%3E-for-ComputePassErrorInner"],[26072,"impl-From%3CMissingDownlevelFlags%3E-for-ComputePassErrorInner"],[26073,"impl-From%3CPushConstantUploadError%3E-for-ComputePassErrorInner"],[26077,"impl-From%3CPushConstantUploadError%3E-for-RenderCommandError"],[26078,"impl-From%3CMissingBufferUsageError%3E-for-RenderCommandError"],[26079,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderCommandError"],[26080,"impl-From%3CMissingTextureUsageError%3E-for-RenderCommandError"],[26081,"impl-From%3CUsageConflict%3E-for-RenderCommandError"],[26086,"impl-From%3CCommandEncoderError%3E-for-QueryError"],[26087,"impl-From%3CQueryUseError%3E-for-QueryError"],[26089,"impl-From%3CDeviceError%3E-for-QueryError"],[26090,"impl-From%3CResolveError%3E-for-QueryError"],[26103,"impl-From%3CDrawError%3E-for-RenderPassErrorInner"],[26104,"impl-From%3CMissingBufferUsageError%3E-for-RenderPassErrorInner"],[26105,"impl-From%3CRenderCommandError%3E-for-RenderPassErrorInner"],[26106,"impl-From%3CRenderPassCompatibilityError%3E-for-RenderPassErrorInner"],[26107,"impl-From%3CDeviceError%3E-for-RenderPassErrorInner"],[26108,"impl-From%3CQueryUseError%3E-for-RenderPassErrorInner"],[26109,"impl-From%3CCommandEncoderError%3E-for-RenderPassErrorInner"],[26110,"impl-From%3CMissingDownlevelFlags%3E-for-RenderPassErrorInner"],[26111,"impl-From%3CColorAttachmentError%3E-for-RenderPassErrorInner"],[26112,"impl-From%3CBindError%3E-for-RenderPassErrorInner"],[26113,"impl-From%3CUsageConflict%3E-for-RenderPassErrorInner"],[26114,"impl-From%3CMissingTextureUsageError%3E-for-RenderPassErrorInner"],[26115,"impl-From%3CMissingFeatures%3E-for-RenderPassErrorInner"],[26119,"impl-From%3CClearError%3E-for-TransferError"],[26120,"impl-From%3CMissingDownlevelFlags%3E-for-TransferError"],[26123,"impl-From%3CTransferError%3E-for-CopyError"],[26124,"impl-From%3CCommandEncoderError%3E-for-CopyError"],[26125,"impl-From%3CDeviceError%3E-for-CopyError"],[27548,"impl-Display-for-WaitIdleError"],[27549,"impl-Debug-for-WaitIdleError"],[27552,"impl-Debug-for-RenderPassCompatibilityError"],[27553,"impl-Display-for-RenderPassCompatibilityError"],[27554,"impl-Display-for-InvalidDevice"],[27555,"impl-Debug-for-InvalidDevice"],[27556,"impl-Display-for-DeviceError"],[27557,"impl-Debug-for-DeviceError"],[27558,"impl-Debug-for-MissingFeatures"],[27559,"impl-Display-for-MissingFeatures"],[27560,"impl-Debug-for-MissingDownlevelFlags"],[27561,"impl-Display-for-MissingDownlevelFlags"],[28123,"impl-Display-for-InvalidQueue"],[28124,"impl-Debug-for-InvalidQueue"],[28125,"impl-Display-for-QueueWriteError"],[28126,"impl-Debug-for-QueueWriteError"],[28127,"impl-Debug-for-QueueSubmitError"],[28128,"impl-Display-for-QueueSubmitError"],[28135,"impl-From%3CDeviceError%3E-for-QueueWriteError"],[28136,"impl-From%3CTransferError%3E-for-QueueWriteError"],[28138,"impl-From%3CClearError%3E-for-QueueWriteError"],[28139,"impl-From%3CBufferAccessError%3E-for-QueueSubmitError"],[28141,"impl-From%3CDeviceError%3E-for-QueueSubmitError"],[28337,"impl-Display-for-CreateDeviceError"],[28338,"impl-Debug-for-CreateDeviceError"],[28400,"impl-Display-for-ContextError"],[28401,"impl-Debug-for-ContextError"],[29158,"impl-Debug-for-FailedLimit"],[29159,"impl-Display-for-FailedLimit"],[29160,"impl-Debug-for-IsSurfaceSupportedError"],[29161,"impl-Display-for-IsSurfaceSupportedError"],[29162,"impl-Display-for-GetSurfaceSupportError"],[29163,"impl-Debug-for-GetSurfaceSupportError"],[29164,"impl-Debug-for-RequestDeviceError"],[29165,"impl-Display-for-RequestDeviceError"],[29166,"impl-Display-for-InvalidAdapter"],[29167,"impl-Debug-for-InvalidAdapter"],[29168,"impl-Display-for-RequestAdapterError"],[29169,"impl-Debug-for-RequestAdapterError"],[30117,"impl-Flags-for-StorageAccess"],[30118,"impl-StorageAccess"],[30119,"impl-Flags-for-Barrier"],[30120,"impl-Barrier"],[30874,"impl-Debug-for-WithSpan%3CE%3E"],[30875,"impl-Display-for-WithSpan%3CE%3E"],[30889,"impl-Octal-for-StorageAccess"],[30890,"impl-LowerHex-for-StorageAccess"],[30891,"impl-Binary-for-StorageAccess"],[30892,"impl-Debug-for-StorageAccess"],[30893,"impl-UpperHex-for-StorageAccess"],[30915,"impl-Octal-for-Barrier"],[30916,"impl-UpperHex-for-Barrier"],[30917,"impl-LowerHex-for-Barrier"],[30918,"impl-Binary-for-Barrier"],[30919,"impl-Debug-for-Barrier"],[31049,"impl-StorageAccess"],[31050,"impl-Flags-for-StorageAccess"],[31051,"impl-Flags-for-Barrier"],[31052,"impl-Barrier"],[31195,"impl-Index%3CHandle%3CT%3E%3E-for-Arena%3CT%3E"],[31196,"impl-Index%3CRange%3CT%3E%3E-for-Arena%3CT%3E"],[32592,"impl-RayFlag"],[32593,"impl-Flags-for-RayFlag"],[32615,"impl-UpperHex-for-RayFlag"],[32616,"impl-Debug-for-RayFlag"],[32617,"impl-Binary-for-RayFlag"],[32618,"impl-Octal-for-RayFlag"],[32619,"impl-LowerHex-for-RayFlag"],[32623,"impl-Flags-for-RayFlag"],[32624,"impl-RayFlag"],[32790,"impl-Flags-for-Features"],[32791,"impl-Features"],[32792,"impl-WriterFlags"],[32793,"impl-Flags-for-WriterFlags"],[32914,"impl-Debug-for-Features"],[32915,"impl-LowerHex-for-Features"],[32916,"impl-Octal-for-Features"],[32917,"impl-Binary-for-Features"],[32918,"impl-UpperHex-for-Features"],[32919,"impl-Display-for-Version"],[32920,"impl-Debug-for-Version"],[32921,"impl-LowerHex-for-WriterFlags"],[32922,"impl-Debug-for-WriterFlags"],[32923,"impl-Binary-for-WriterFlags"],[32924,"impl-UpperHex-for-WriterFlags"],[32925,"impl-Octal-for-WriterFlags"],[32932,"impl-Debug-for-Error"],[32933,"impl-Display-for-Error"],[32959,"impl-Flags-for-Features"],[32960,"impl-Features"],[32961,"impl-Flags-for-WriterFlags"],[32962,"impl-WriterFlags"],[33376,"impl-Display-for-EntryPointError"],[33377,"impl-Debug-for-EntryPointError"],[33379,"impl-Debug-for-Error"],[33380,"impl-Display-for-Error"],[33748,"impl-Display-for-Error"],[33749,"impl-Debug-for-Error"],[33750,"impl-Debug-for-EntryPointError"],[33751,"impl-Display-for-EntryPointError"],[34635,"impl-ImageTypeFlags"],[34636,"impl-Flags-for-ImageTypeFlags"],[34637,"impl-Flags-for-WriterFlags"],[34638,"impl-WriterFlags"],[34777,"impl-Display-for-Error"],[34778,"impl-Debug-for-Error"],[34780,"impl-Octal-for-ImageTypeFlags"],[34781,"impl-LowerHex-for-ImageTypeFlags"],[34782,"impl-UpperHex-for-ImageTypeFlags"],[34783,"impl-Binary-for-ImageTypeFlags"],[34784,"impl-Debug-for-ImageTypeFlags"],[34785,"impl-Debug-for-WriterFlags"],[34786,"impl-Octal-for-WriterFlags"],[34787,"impl-LowerHex-for-WriterFlags"],[34788,"impl-UpperHex-for-WriterFlags"],[34789,"impl-Binary-for-WriterFlags"],[34816,"impl-Flags-for-ImageTypeFlags"],[34817,"impl-ImageTypeFlags"],[34818,"impl-WriterFlags"],[34819,"impl-Flags-for-WriterFlags"],[35200,"impl-Display-for-ParseError"],[35201,"impl-Debug-for-ParseError"],[35650,"impl-Display-for-ConstantEvaluatorError"],[35651,"impl-Debug-for-ConstantEvaluatorError"],[35655,"impl-Display-for-IndexableLengthError"],[35656,"impl-Debug-for-IndexableLengthError"],[35658,"impl-Debug-for-Alignment"],[35659,"impl-Display-for-Alignment"],[35662,"impl-Debug-for-LayoutErrorInner"],[35663,"impl-Display-for-LayoutErrorInner"],[35664,"impl-Debug-for-LayoutError"],[35665,"impl-Display-for-LayoutError"],[35668,"impl-Debug-for-ResolveError"],[35669,"impl-Display-for-ResolveError"],[35931,"impl-Mul%3Cu32%3E-for-Alignment"],[35932,"impl-Mul-for-Alignment"],[36615,"impl-Flags-for-UniformityRequirements"],[36616,"impl-UniformityRequirements"],[36617,"impl-Flags-for-GlobalUse"],[36618,"impl-GlobalUse"],[36619,"impl-Flags-for-TypeFlags"],[36620,"impl-TypeFlags"],[36621,"impl-ValidationFlags"],[36622,"impl-Flags-for-ValidationFlags"],[36623,"impl-Flags-for-Capabilities"],[36624,"impl-Capabilities"],[36625,"impl-ShaderStages"],[36626,"impl-Flags-for-ShaderStages"],[36918,"impl-LowerHex-for-UniformityRequirements"],[36919,"impl-Debug-for-UniformityRequirements"],[36920,"impl-UpperHex-for-UniformityRequirements"],[36921,"impl-Octal-for-UniformityRequirements"],[36922,"impl-Binary-for-UniformityRequirements"],[36924,"impl-Octal-for-GlobalUse"],[36925,"impl-Debug-for-GlobalUse"],[36926,"impl-Binary-for-GlobalUse"],[36927,"impl-UpperHex-for-GlobalUse"],[36928,"impl-LowerHex-for-GlobalUse"],[36931,"impl-Debug-for-ComposeError"],[36932,"impl-Display-for-ComposeError"],[36933,"impl-Display-for-ExpressionError"],[36934,"impl-Debug-for-ExpressionError"],[36935,"impl-Display-for-ConstExpressionError"],[36936,"impl-Debug-for-ConstExpressionError"],[36937,"impl-Debug-for-LiteralError"],[36938,"impl-Display-for-LiteralError"],[36939,"impl-Display-for-CallError"],[36940,"impl-Debug-for-CallError"],[36941,"impl-Debug-for-LocalVariableError"],[36942,"impl-Display-for-LocalVariableError"],[36943,"impl-Display-for-FunctionError"],[36944,"impl-Debug-for-FunctionError"],[36945,"impl-Display-for-GlobalVariableError"],[36946,"impl-Debug-for-GlobalVariableError"],[36947,"impl-Display-for-VaryingError"],[36948,"impl-Debug-for-VaryingError"],[36949,"impl-Display-for-EntryPointError"],[36950,"impl-Debug-for-EntryPointError"],[36951,"impl-UpperHex-for-TypeFlags"],[36952,"impl-Octal-for-TypeFlags"],[36953,"impl-Binary-for-TypeFlags"],[36954,"impl-Debug-for-TypeFlags"],[36955,"impl-LowerHex-for-TypeFlags"],[36956,"impl-Debug-for-Disalignment"],[36957,"impl-Display-for-Disalignment"],[36958,"impl-Debug-for-TypeError"],[36959,"impl-Display-for-TypeError"],[36960,"impl-Octal-for-ValidationFlags"],[36961,"impl-Debug-for-ValidationFlags"],[36962,"impl-UpperHex-for-ValidationFlags"],[36963,"impl-Binary-for-ValidationFlags"],[36964,"impl-LowerHex-for-ValidationFlags"],[36965,"impl-Octal-for-Capabilities"],[36966,"impl-Debug-for-Capabilities"],[36967,"impl-LowerHex-for-Capabilities"],[36968,"impl-UpperHex-for-Capabilities"],[36969,"impl-Binary-for-Capabilities"],[36970,"impl-Debug-for-ShaderStages"],[36971,"impl-UpperHex-for-ShaderStages"],[36972,"impl-LowerHex-for-ShaderStages"],[36973,"impl-Binary-for-ShaderStages"],[36974,"impl-Octal-for-ShaderStages"],[36977,"impl-Debug-for-ConstantError"],[36978,"impl-Display-for-ConstantError"],[36979,"impl-Debug-for-ValidationError"],[36980,"impl-Display-for-ValidationError"],[36987,"impl-From%3CComposeError%3E-for-ExpressionError"],[36989,"impl-From%3CIndexableLengthError%3E-for-ExpressionError"],[36990,"impl-From%3CResolveError%3E-for-ExpressionError"],[36991,"impl-From%3CLiteralError%3E-for-ExpressionError"],[36993,"impl-From%3CWidthError%3E-for-ConstExpressionError"],[36994,"impl-From%3CLiteralError%3E-for-ConstExpressionError"],[36995,"impl-From%3CComposeError%3E-for-ConstExpressionError"],[36996,"impl-From%3CResolveError%3E-for-ConstExpressionError"],[37005,"impl-From%3CFunctionError%3E-for-EntryPointError"],[37006,"impl-From%3CVaryingError%3E-for-EntryPointError"],[37018,"impl-From%3CFwdDepError%3E-for-ValidationError"],[37019,"impl-From%3CBadRangeError%3E-for-ValidationError"],[37021,"impl-From%3CInvalidHandleError%3E-for-ValidationError"],[37022,"impl-From%3CLayoutError%3E-for-ValidationError"],[37023,"impl-From%3CBadHandle%3E-for-ValidationError"],[37055,"impl-UniformityRequirements"],[37056,"impl-Flags-for-UniformityRequirements"],[37057,"impl-GlobalUse"],[37058,"impl-Flags-for-GlobalUse"],[37059,"impl-Flags-for-TypeFlags"],[37060,"impl-TypeFlags"],[37061,"impl-Flags-for-ValidationFlags"],[37062,"impl-ValidationFlags"],[37063,"impl-Flags-for-Capabilities"],[37064,"impl-Capabilities"],[37065,"impl-Flags-for-ShaderStages"],[37066,"impl-ShaderStages"],[37112,"impl-Index%3CHandle%3CGlobalVariable%3E%3E-for-FunctionInfo"],[37113,"impl-Index%3CHandle%3CExpression%3E%3E-for-FunctionInfo"],[37114,"impl-Index%3CHandle%3CFunction%3E%3E-for-ModuleInfo"],[37115,"impl-Index%3CHandle%3CExpression%3E%3E-for-ModuleInfo"],[37116,"impl-Index%3CHandle%3CType%3E%3E-for-ModuleInfo"],[38002,"impl-PipelineFlags"],[38003,"impl-Flags-for-PipelineFlags"],[38197,"impl-Debug-for-ShaderError%3CE%3E"],[38198,"impl-Display-for-ShaderError%3CWithSpan%3CValidationError%3E%3E"],[38199,"impl-Display-for-ShaderError%3CParseError%3E"],[38200,"impl-Debug-for-CreateShaderModuleError"],[38201,"impl-Display-for-CreateShaderModuleError"],[38203,"impl-Display-for-ImplicitLayoutError"],[38204,"impl-Debug-for-ImplicitLayoutError"],[38206,"impl-Display-for-CreateComputePipelineError"],[38207,"impl-Debug-for-CreateComputePipelineError"],[38213,"impl-Debug-for-ColorStateError"],[38214,"impl-Display-for-ColorStateError"],[38215,"impl-Display-for-DepthStencilStateError"],[38216,"impl-Debug-for-DepthStencilStateError"],[38217,"impl-Display-for-CreateRenderPipelineError"],[38218,"impl-Debug-for-CreateRenderPipelineError"],[38219,"impl-UpperHex-for-PipelineFlags"],[38220,"impl-Debug-for-PipelineFlags"],[38221,"impl-LowerHex-for-PipelineFlags"],[38222,"impl-Octal-for-PipelineFlags"],[38223,"impl-Binary-for-PipelineFlags"],[38231,"impl-From%3CShaderError%3CParseError%3E%3E-for-CreateShaderModuleError"],[38232,"impl-From%3CShaderError%3CWithSpan%3CValidationError%3E%3E%3E-for-CreateShaderModuleError"],[38234,"impl-From%3CDeviceError%3E-for-CreateShaderModuleError"],[38235,"impl-From%3CMissingFeatures%3E-for-CreateShaderModuleError"],[38237,"impl-From%3CCreatePipelineLayoutError%3E-for-ImplicitLayoutError"],[38239,"impl-From%3CCreateBindGroupLayoutError%3E-for-ImplicitLayoutError"],[38241,"impl-From%3CDeviceError%3E-for-CreateComputePipelineError"],[38242,"impl-From%3CStageError%3E-for-CreateComputePipelineError"],[38244,"impl-From%3CMissingDownlevelFlags%3E-for-CreateComputePipelineError"],[38245,"impl-From%3CImplicitLayoutError%3E-for-CreateComputePipelineError"],[38253,"impl-From%3CMissingFeatures%3E-for-CreateRenderPipelineError"],[38254,"impl-From%3CMissingDownlevelFlags%3E-for-CreateRenderPipelineError"],[38255,"impl-From%3CDeviceError%3E-for-CreateRenderPipelineError"],[38256,"impl-From%3CImplicitLayoutError%3E-for-CreateRenderPipelineError"],[38258,"impl-From%3CDepthStencilStateError%3E-for-CreateRenderPipelineError"],[38259,"impl-From%3CColorAttachmentError%3E-for-CreateRenderPipelineError"],[38284,"impl-PipelineFlags"],[38285,"impl-Flags-for-PipelineFlags"],[38833,"impl-Debug-for-SurfaceError"],[38834,"impl-Display-for-SurfaceError"],[38835,"impl-Debug-for-ConfigureSurfaceError"],[38836,"impl-Display-for-ConfigureSurfaceError"],[38840,"impl-From%3CMissingDownlevelFlags%3E-for-ConfigureSurfaceError"],[38842,"impl-From%3CDeviceError%3E-for-ConfigureSurfaceError"],[38843,"impl-From%3CWaitIdleError%3E-for-ConfigureSurfaceError"],[39565,"impl-Debug-for-BufferAccessError"],[39566,"impl-Display-for-BufferAccessError"],[39568,"impl-Debug-for-CreateBufferError"],[39569,"impl-Display-for-CreateBufferError"],[39576,"impl-Debug-for-TextureDimensionError"],[39577,"impl-Display-for-TextureDimensionError"],[39578,"impl-Display-for-CreateTextureError"],[39579,"impl-Debug-for-CreateTextureError"],[39581,"impl-Display-for-TextureViewNotRenderableReason"],[39582,"impl-Debug-for-TextureViewNotRenderableReason"],[39584,"impl-Debug-for-CreateTextureViewError"],[39585,"impl-Display-for-CreateTextureViewError"],[39586,"impl-Debug-for-TextureViewDestroyError"],[39587,"impl-Display-for-TextureViewDestroyError"],[39591,"impl-Display-for-CreateSamplerError"],[39592,"impl-Debug-for-CreateSamplerError"],[39593,"impl-Display-for-CreateQuerySetError"],[39594,"impl-Debug-for-CreateQuerySetError"],[39596,"impl-Display-for-DestroyError"],[39597,"impl-Debug-for-DestroyError"],[39606,"impl-From%3CMissingBufferUsageError%3E-for-BufferAccessError"],[39607,"impl-From%3CDeviceError%3E-for-BufferAccessError"],[39609,"impl-From%3CMissingDownlevelFlags%3E-for-CreateBufferError"],[39610,"impl-From%3CDeviceError%3E-for-CreateBufferError"],[39612,"impl-From%3CBufferAccessError%3E-for-CreateBufferError"],[39621,"impl-From%3CCreateTextureViewError%3E-for-CreateTextureError"],[39622,"impl-From%3CTextureDimensionError%3E-for-CreateTextureError"],[39623,"impl-From%3CMissingDownlevelFlags%3E-for-CreateTextureError"],[39624,"impl-From%3CDeviceError%3E-for-CreateTextureError"],[39633,"impl-From%3CDeviceError%3E-for-CreateSamplerError"],[39634,"impl-From%3CMissingFeatures%3E-for-CreateSamplerError"],[39636,"impl-From%3CMissingFeatures%3E-for-CreateQuerySetError"],[39637,"impl-From%3CDeviceError%3E-for-CreateQuerySetError"],[40535,"impl-Display-for-NumericType"],[40536,"impl-Debug-for-NumericType"],[40537,"impl-Display-for-InterfaceVar"],[40538,"impl-Debug-for-InterfaceVar"],[40540,"impl-Debug-for-MissingBufferUsageError"],[40541,"impl-Display-for-MissingBufferUsageError"],[40542,"impl-Debug-for-MissingTextureUsageError"],[40543,"impl-Display-for-MissingTextureUsageError"],[40544,"impl-Display-for-BindingError"],[40545,"impl-Debug-for-BindingError"],[40546,"impl-Display-for-FilteringError"],[40547,"impl-Debug-for-FilteringError"],[40548,"impl-Display-for-InputError"],[40549,"impl-Debug-for-InputError"],[40550,"impl-Display-for-StageError"],[40551,"impl-Debug-for-StageError"],[41463,"impl-PipelineLayoutFlags"],[41464,"impl-Flags-for-PipelineLayoutFlags"],[41465,"impl-BindGroupLayoutFlags"],[41466,"impl-Flags-for-BindGroupLayoutFlags"],[41467,"impl-TextureFormatCapabilities"],[41468,"impl-Flags-for-TextureFormatCapabilities"],[41469,"impl-Flags-for-FormatAspects"],[41470,"impl-FormatAspects"],[41471,"impl-MemoryFlags"],[41472,"impl-Flags-for-MemoryFlags"],[41473,"impl-AccelerationStructureBuildFlags"],[41474,"impl-Flags-for-AccelerationStructureBuildFlags"],[41475,"impl-AttachmentOps"],[41476,"impl-Flags-for-AttachmentOps"],[41477,"impl-Flags-for-AccelerationStructureGeometryFlags"],[41478,"impl-AccelerationStructureGeometryFlags"],[41479,"impl-Flags-for-BufferUses"],[41480,"impl-BufferUses"],[41481,"impl-Flags-for-TextureUses"],[41482,"impl-TextureUses"],[41483,"impl-Flags-for-AccelerationStructureUses"],[41484,"impl-AccelerationStructureUses"],[42425,"impl-Debug-for-DeviceError"],[42426,"impl-Display-for-DeviceError"],[42427,"impl-Display-for-ShaderError"],[42428,"impl-Debug-for-ShaderError"],[42429,"impl-Debug-for-PipelineError"],[42430,"impl-Display-for-PipelineError"],[42431,"impl-Debug-for-SurfaceError"],[42432,"impl-Display-for-SurfaceError"],[42433,"impl-Display-for-InstanceError"],[42434,"impl-Debug-for-InstanceError"],[42435,"impl-UpperHex-for-PipelineLayoutFlags"],[42436,"impl-Debug-for-PipelineLayoutFlags"],[42437,"impl-LowerHex-for-PipelineLayoutFlags"],[42438,"impl-Binary-for-PipelineLayoutFlags"],[42439,"impl-Octal-for-PipelineLayoutFlags"],[42440,"impl-Debug-for-BindGroupLayoutFlags"],[42441,"impl-Binary-for-BindGroupLayoutFlags"],[42442,"impl-LowerHex-for-BindGroupLayoutFlags"],[42443,"impl-Octal-for-BindGroupLayoutFlags"],[42444,"impl-UpperHex-for-BindGroupLayoutFlags"],[42445,"impl-Binary-for-TextureFormatCapabilities"],[42446,"impl-UpperHex-for-TextureFormatCapabilities"],[42447,"impl-LowerHex-for-TextureFormatCapabilities"],[42448,"impl-Debug-for-TextureFormatCapabilities"],[42449,"impl-Octal-for-TextureFormatCapabilities"],[42450,"impl-LowerHex-for-FormatAspects"],[42451,"impl-Binary-for-FormatAspects"],[42452,"impl-Octal-for-FormatAspects"],[42453,"impl-Debug-for-FormatAspects"],[42454,"impl-UpperHex-for-FormatAspects"],[42455,"impl-Octal-for-MemoryFlags"],[42456,"impl-Binary-for-MemoryFlags"],[42457,"impl-UpperHex-for-MemoryFlags"],[42458,"impl-Debug-for-MemoryFlags"],[42459,"impl-LowerHex-for-MemoryFlags"],[42460,"impl-LowerHex-for-AccelerationStructureBuildFlags"],[42461,"impl-Debug-for-AccelerationStructureBuildFlags"],[42462,"impl-Octal-for-AccelerationStructureBuildFlags"],[42463,"impl-Binary-for-AccelerationStructureBuildFlags"],[42464,"impl-UpperHex-for-AccelerationStructureBuildFlags"],[42465,"impl-LowerHex-for-AttachmentOps"],[42466,"impl-UpperHex-for-AttachmentOps"],[42467,"impl-Debug-for-AttachmentOps"],[42468,"impl-Octal-for-AttachmentOps"],[42469,"impl-Binary-for-AttachmentOps"],[42470,"impl-Binary-for-AccelerationStructureGeometryFlags"],[42471,"impl-UpperHex-for-AccelerationStructureGeometryFlags"],[42472,"impl-LowerHex-for-AccelerationStructureGeometryFlags"],[42473,"impl-Octal-for-AccelerationStructureGeometryFlags"],[42474,"impl-Debug-for-AccelerationStructureGeometryFlags"],[42475,"impl-Octal-for-BufferUses"],[42476,"impl-Binary-for-BufferUses"],[42477,"impl-UpperHex-for-BufferUses"],[42478,"impl-Debug-for-BufferUses"],[42479,"impl-LowerHex-for-BufferUses"],[42480,"impl-Debug-for-TextureUses"],[42481,"impl-UpperHex-for-TextureUses"],[42482,"impl-Binary-for-TextureUses"],[42483,"impl-Octal-for-TextureUses"],[42484,"impl-LowerHex-for-TextureUses"],[42537,"impl-UpperHex-for-AccelerationStructureUses"],[42538,"impl-Octal-for-AccelerationStructureUses"],[42539,"impl-Debug-for-AccelerationStructureUses"],[42540,"impl-Binary-for-AccelerationStructureUses"],[42541,"impl-LowerHex-for-AccelerationStructureUses"],[42554,"impl-From%3CAllocationError%3E-for-DeviceError"],[42555,"impl-From%3CAllocationError%3E-for-DeviceError"],[42556,"impl-From%3CResult%3E-for-DeviceError"],[42557,"impl-From%3CMapError%3E-for-DeviceError"],[42715,"impl-Flags-for-PipelineLayoutFlags"],[42716,"impl-PipelineLayoutFlags"],[42717,"impl-Flags-for-BindGroupLayoutFlags"],[42718,"impl-BindGroupLayoutFlags"],[42719,"impl-Flags-for-TextureFormatCapabilities"],[42720,"impl-TextureFormatCapabilities"],[42721,"impl-FormatAspects"],[42722,"impl-Flags-for-FormatAspects"],[42723,"impl-MemoryFlags"],[42724,"impl-Flags-for-MemoryFlags"],[42725,"impl-AccelerationStructureBuildFlags"],[42726,"impl-Flags-for-AccelerationStructureBuildFlags"],[42727,"impl-AttachmentOps"],[42728,"impl-Flags-for-AttachmentOps"],[42729,"impl-AccelerationStructureGeometryFlags"],[42730,"impl-Flags-for-AccelerationStructureGeometryFlags"],[42731,"impl-BufferUses"],[42732,"impl-Flags-for-BufferUses"],[42733,"impl-TextureUses"],[42734,"impl-Flags-for-TextureUses"],[42735,"impl-AccelerationStructureUses"],[42736,"impl-Flags-for-AccelerationStructureUses"],[45945,"impl-Workarounds"],[45946,"impl-Flags-for-Workarounds"],[46214,"impl-LowerHex-for-Workarounds"],[46215,"impl-UpperHex-for-Workarounds"],[46216,"impl-Binary-for-Workarounds"],[46217,"impl-Octal-for-Workarounds"],[46218,"impl-Debug-for-Workarounds"],[46286,"impl-Workarounds"],[46287,"impl-Flags-for-Workarounds"],[47553,"impl-Display-for-HandleError"],[47554,"impl-Debug-for-HandleError"],[47584,"impl-From%3CWebWindowHandle%3E-for-RawWindowHandle"],[47585,"impl-From%3CGbmWindowHandle%3E-for-RawWindowHandle"],[47586,"impl-From%3CHaikuWindowHandle%3E-for-RawWindowHandle"],[47587,"impl-From%3CWindowHandle%3C\'_%3E%3E-for-RawWindowHandle"],[47589,"impl-From%3CXlibWindowHandle%3E-for-RawWindowHandle"],[47590,"impl-From%3CWebCanvasWindowHandle%3E-for-RawWindowHandle"],[47591,"impl-From%3CAndroidNdkWindowHandle%3E-for-RawWindowHandle"],[47592,"impl-From%3CWebOffscreenCanvasWindowHandle%3E-for-RawWindowHandle"],[47593,"impl-From%3CAppKitWindowHandle%3E-for-RawWindowHandle"],[47594,"impl-From%3CUiKitWindowHandle%3E-for-RawWindowHandle"],[47595,"impl-From%3CWin32WindowHandle%3E-for-RawWindowHandle"],[47596,"impl-From%3CWinRtWindowHandle%3E-for-RawWindowHandle"],[47597,"impl-From%3CDrmWindowHandle%3E-for-RawWindowHandle"],[47598,"impl-From%3CXcbWindowHandle%3E-for-RawWindowHandle"],[47599,"impl-From%3COrbitalWindowHandle%3E-for-RawWindowHandle"],[47600,"impl-From%3CWaylandWindowHandle%3E-for-RawWindowHandle"],[47601,"impl-From%3CXcbDisplayHandle%3E-for-RawDisplayHandle"],[47602,"impl-From%3CAndroidDisplayHandle%3E-for-RawDisplayHandle"],[47603,"impl-From%3CUiKitDisplayHandle%3E-for-RawDisplayHandle"],[47604,"impl-From%3CWaylandDisplayHandle%3E-for-RawDisplayHandle"],[47605,"impl-From%3CWindowsDisplayHandle%3E-for-RawDisplayHandle"],[47606,"impl-From%3CAppKitDisplayHandle%3E-for-RawDisplayHandle"],[47608,"impl-From%3CDrmDisplayHandle%3E-for-RawDisplayHandle"],[47609,"impl-From%3CWebDisplayHandle%3E-for-RawDisplayHandle"],[47610,"impl-From%3CXlibDisplayHandle%3E-for-RawDisplayHandle"],[47611,"impl-From%3CHaikuDisplayHandle%3E-for-RawDisplayHandle"],[47612,"impl-From%3CGbmDisplayHandle%3E-for-RawDisplayHandle"],[47613,"impl-From%3CDisplayHandle%3C\'_%3E%3E-for-RawDisplayHandle"],[47614,"impl-From%3COrbitalDisplayHandle%3E-for-RawDisplayHandle"],[49012,"impl-From%3Cf32%3E-for-LineHeight"],[49013,"impl-From%3CPixels%3E-for-LineHeight"],[49583,"impl-Display-for-Value"],[49584,"impl-Debug-for-Value"],[49593,"impl-State%3CP%3E"],[49594,"impl-Focusable-for-State%3CP%3E"],[49699,"impl-Focusable-for-State%3CP%3E"],[49700,"impl-State%3CP%3E"],[49703,"impl-State%3CP%3E"],[49704,"impl-TextInput-for-State%3CP%3E"],[49706,"impl-State%3CP%3E"],[49707,"impl-TextInput-for-State%3CP%3E"],[49709,"impl-TextInput-for-State%3CP%3E"],[49710,"impl-State%3CP%3E"],[49724,"impl-TextInput-for-State%3CP%3E"],[49725,"impl-State%3CP%3E"],[49799,"impl-State%3CP%3E"],[49800,"impl-Focusable-for-State%3CP%3E"],[50845,"impl-Debug-for-Error"],[50846,"impl-Display-for-Error"],[50847,"impl-From%3CImageError%3E-for-Error"],[50848,"impl-From%3CError%3E-for-Error"],[50850,"impl-From%3CError%3E-for-Error"],[50990,"impl-Debug-for-CropError"],[50991,"impl-Display-for-CropError"]]},\
"iced_core":{"doc":"The core library of Iced.","t":"ETGEEFPPGPFFEPPPPEEPTTTEGPTETFFFTFFEPFFPFFTEEFTFTETTTONNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNCNNNOONCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCONNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNONCNNONNNNNNNNNNNNNCCCCNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOCNOOOOOOGPPPPPGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNKGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNPGPPGPPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPTPPPPPGPFPPTPPPPPPPPPPPPGGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONFGFPNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNFPGGFRPPPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOTTTGEPPTPGFPPPTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFTFNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNHNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPNNNNNNNNNNNNNNNHNNNNNNNNPPGPPEPGPPPGPPPPGPPPPPPPPPPPGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKNNNNNNNNNNNNNMNNNNNNNHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNONNNNOMNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNOMMONNNNNNNNNNNNNNNNNNNNNPGFPKNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNTPPPPTPGERRREGTGPKRPKPGFNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNMNNNNNONNNMMCNNNNNNMMMNNNNNONNNNNNNNNNNNNNNNNNNMNNCMMONNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNMGPPPGPGPPPPGPKPPRPPPPGPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMOFRKRFRNNNNNNNNNNMNNNNNONNMNNNNNONNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNTPPPPFPPPPPPPPPPPPPPEPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNFTTTTTTFJJJJJJJJJJJJJJJJJJJJJJFTTTTTTTTTTTFFFTTFFTTTNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOFEEEKNNNNNNNNNNMNNNNNNNNNNNNNMNNNNCNMNNNCNCNNNNNNNNNPEPKGEPENNNNNNMNNNCNNNNNNNNNHHCNCNNNNNNNNNFKNNNNNNNNHNNNHNHMHHONNNNNNNNMNNONNNNNNNMNFTFTKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMHMNNNNNNNNNNNNNNNNNNOOOOKHMHMHMHMPKRIKEPEFFIFNNNNNNNNNNNNNNNNNNNONNNNMNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNHNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFNNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPGPPPPPPEFPGTGPPPPGGPPEPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPPGFNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOFFNNONNNNNNNNNNNNNNONNNNONNNNNNNNONNNNNNNNNNOOONNOOOONNONNNNNNNNNNNNNNONN","n":["Alignment","BLACK","Background","Border","Clipboard","Color","Color","Contain","ContentFit","Cover","Degrees","Element","Event","Fill","Fill","FillPortion","Fixed","Font","Gradient","Gradient","IDENTITY","INFINITE","INFINITY","Layout","Length","None","ORIGIN","Overlay","PI","Padding","Pixels","Point","RANGE","Radians","Rectangle","Renderer","ScaleDown","Shadow","Shell","Shrink","Size","SmolStr","TRANSPARENT","Text","Theme","Transformation","UNIT","Vector","WHITE","Widget","ZERO","ZERO","ZERO","a","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add_assign","alignment","are_widgets_invalid","area","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_ref","as_ref","as_str","as_widget","as_widget_mut","b","blur_radius","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","center","center_x","center_y","clipboard","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","default","default","default","default","default","default","default","default","deref","distance","div","div","enclose","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","expand","expand","explain","fill_factor","fit","fit","fluid","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_f64","from_i64","from_iter","from_iter","from_iter","from_iter","from_linear_rgba","from_rgb","from_rgb8","from_rgba","from_rgba8","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_str","from_u64","g","get_hash","get_hash","get_hash","gradient","hash","hash","hash","height","height","horizontal","image","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_linear","into_rgba8","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invalidate_layout","invalidate_widgets","inverse","invert","is_empty","is_empty","is_fill","is_heap_allocated","is_layout_invalid","is_within","keyboard","layout","left","len","map","max","merge","min","mouse","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","new","new","new","new","new","new","new","new","new","new_inline","new_inline_from_ascii","new_static","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","orthographic","overlay","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","publish","r","redraw_request","renderer","request_redraw","revalidate_layout","right","scale","scale_alpha","scale_alpha","scale_factor","size","snap","sub","sub","sub","sub","sub","sub","sub_assign","svg","text","theme","time","to_distance","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","to_string","top","touch","translate","translation","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","vertical","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widget","width","width","window","with_size","x","x","x","y","y","y","Alignment","Bottom","Center","Center","Center","End","Horizontal","Left","Right","Start","Top","Vertical","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","components_from","components_from","components_from","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","hash","hash","hash","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","Border","Radius","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","components_from","components_from","default","default","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","null_value","radius","rounded","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","width","with_color","with_radius","with_width","Clipboard","Kind","Null","Primary","Standard","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","eq","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","read","read","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","write","write","Captured","Event","Ignored","Keyboard","MacOS","MacOS","Mouse","PlatformSpecific","PlatformSpecific","ReceivedUrl","Status","Touch","Window","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","merge","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","Black","Bold","Condensed","Cursive","DEFAULT","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Family","Fantasy","Font","Italic","Light","MONOSPACE","Medium","Monospace","Name","Normal","Normal","Normal","Oblique","SansSerif","SemiCondensed","SemiExpanded","Semibold","Serif","Stretch","Style","Thin","UltraCondensed","UltraExpanded","Weight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","default","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","family","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","null_value","null_value","null_value","null_value","null_value","stretch","style","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","vzip","weight","with_name","ColorStop","Gradient","Linear","Linear","adapt_into_using","adapt_into_using","adapt_into_using","add_stop","add_stops","angle","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","new","null_value","offset","scale_alpha","scale_alpha","stops","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","Bytes","Bytes","Data","FilterMethod","Handle","Handle","Linear","Nearest","Path","Renderer","Rgba","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","data","default","deref","draw_image","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_memory","from_path","from_pixels","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","id","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","measure_image","new","null_value","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","height","pixels","width","ALT","COMMAND","CTRL","Event","Key","KeyPressed","KeyReleased","LOGO","Left","Location","Modifiers","ModifiersChanged","Numpad","Right","SHIFT","Standard","adapt_into_using","adapt_into_using","adapt_into_using","all","alt","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","command","complement","components_from","components_from","components_from","contains","control","default","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","insert","intersection","intersects","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","is_all","is_empty","iter","iter_names","key","logo","not","null_value","partial_cmp","remove","set","shift","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","union","vzip","vzip","vzip","key","key","location","location","modifiers","modifiers","text","AVRInput","AVRPower","Accept","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AppSwitch","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeMute","AudioVolumeUp","Backspace","BrightnessDown","BrightnessUp","BrowserBack","BrowserFavorites","BrowserForward","BrowserHome","BrowserRefresh","BrowserSearch","BrowserStop","Call","Camera","CameraFocus","Cancel","CapsLock","ChannelDown","ChannelUp","Character","Clear","Close","ClosedCaptionToggle","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Compose","ContextMenu","Control","Convert","Copy","CrSel","Cut","DVR","Delete","Dimmer","DisplaySwap","Eisu","Eject","End","EndCall","Enter","EraseEof","Escape","ExSel","Execute","Exit","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F25","F26","F27","F28","F29","F3","F30","F31","F32","F33","F34","F35","F4","F5","F6","F7","F8","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Fn","FnLock","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Hibernate","Hiragana","HiraganaKatakana","Home","Hyper","Info","Insert","InstantReplay","JunjaMode","KanaMode","KanjiMode","Katakana","Key","Key11","Key12","LastNumberRedial","LaunchApplication1","LaunchApplication2","LaunchCalendar","LaunchContacts","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailReply","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaLast","MediaPause","MediaPlay","MediaPlayPause","MediaRecord","MediaRewind","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackPrevious","Meta","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","ModeChange","Named","Named","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","Notification","NumLock","OnDemand","Open","PageDown","PageUp","Pairing","Paste","Pause","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","PowerOff","PreviousCandidate","Print","PrintScreen","Process","Props","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RfBypass","Romaji","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","Select","Settings","Shift","SingleCandidate","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Teletext","Undo","Unidentified","VideoModeNext","VoiceDial","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","components_from","components_from","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","partial_cmp","partial_cmp","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Layout","Limits","NONE","Node","adapt_into_using","adapt_into_using","adapt_into_using","align","align_mut","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","atomic","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","children","children","clone","clone","clone","clone_into","clone_into","clone_into","components_from","components_from","components_from","contained","container","default","eq","flex","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","height","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","loose","max","max_height","max_width","min","min_height","min_width","move_to","move_to_mut","new","new","new","next_to_each_other","null_value","padded","position","positioned","resolve","shrink","size","sized","to_owned","to_owned","to_owned","translate","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","width","with_children","with_offset","Axis","Horizontal","Vertical","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","fmt","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","resolve","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","Available","Back","Button","ButtonPressed","ButtonReleased","Click","Crosshair","Cursor","CursorEntered","CursorLeft","CursorMoved","Event","Forward","Grab","Grabbing","Idle","Interaction","Left","Lines","Middle","None","NotAllowed","Other","Pixels","Pointer","ResizingHorizontally","ResizingVertically","Right","ScrollDelta","Text","Unavailable","WheelScrolled","Working","ZoomIn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","click","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","components_from","components_from","components_from","components_from","components_from","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_over","null_value","null_value","partial_cmp","position","position_from","position_in","position_over","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","vzip","delta","position","x","x","y","y","Click","Double","Kind","Single","Triple","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","kind","new","position","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Element","Group","Overlay","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","components_from","components_from","default","draw","draw","draw","from","from","from","from_angle","from_angle","from_children","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_over","is_over","is_over","layout","layout","layout","map","mouse_interaction","mouse_interaction","mouse_interaction","new","new","null_value","on_event","on_event","on_event","operate","operate","operate","overlay","overlay","overlay","overlay","push","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","with_children","Quad","Renderer","Style","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","border","borrow","borrow","borrow_mut","borrow_mut","bounds","clear","clone","clone","clone_into","clone_into","components_from","components_from","default","default","end_layer","end_transformation","eq","eq","fill_quad","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","null_value","shadow","start_layer","start_transformation","text_color","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","with_layer","with_transformation","with_translation","Bytes","Data","Handle","Path","Renderer","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","data","draw_svg","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_angle","from_angle","from_memory","from_path","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","id","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","measure_svg","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","ARROW_DOWN_ICON","Absolute","Advanced","Basic","Bounds","CHECKMARK_ICON","CharOffset","Difference","Editor","Editor","Font","Font","Highlighter","Hit","ICON_FONT","LineHeight","None","Paragraph","Paragraph","Relative","Renderer","Shape","Shaping","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compare","components_from","components_from","components_from","components_from","components_from","content","cursor","default","default","default_font","default_size","editor","eq","eq","eq","eq","equivalent","equivalent","fill_editor","fill_paragraph","fill_text","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","grapheme_position","hash","hash","highlighter","hit_test","horizontal_alignment","horizontal_alignment","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_height","min_bounds","min_height","min_height","min_width","min_width","null_value","null_value","resize","shaping","size","to_absolute","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","update","update","vertical_alignment","vertical_alignment","vzip","vzip","vzip","vzip","vzip","with_text","Action","Backspace","Caret","Click","Cursor","Delete","Direction","DocumentEnd","DocumentStart","Down","Drag","Edit","Edit","Editor","End","Enter","Font","Home","Insert","Left","Left","Motion","Move","PageDown","PageUp","Paste","Right","Right","Scroll","Select","SelectLine","SelectWord","Selection","Up","WordLeft","WordRight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","cursor","cursor_position","direction","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","highlight","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edit","line","line_count","min_bounds","perform","selection","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","update","vzip","vzip","vzip","vzip","vzip","widen","with_text","lines","Format","Highlight","Highlighter","Iterator","PlainText","Settings","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","change_line","change_line","clone","clone","clone_into","clone_into","color","components_from","components_from","current_line","current_line","default","eq","fmt","fmt","font","from","from","from_angle","from_angle","from_stimulus","from_stimulus","highlight_line","highlight_line","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","new","null_value","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","update","update","vzip","vzip","ALL","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Custom","Custom","Dark","Dracula","Ferra","GruvboxDark","GruvboxLight","KanagawaDragon","KanagawaLotus","KanagawaWave","Light","Moonfly","Nightfly","Nord","Oxocarbon","Palette","SolarizedDark","SolarizedLight","Theme","TokyoNight","TokyoNightLight","TokyoNightStorm","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","custom","custom_with_fn","default","default","eq","eq","extended_palette","fmt","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","null_value","palette","palette","style","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","with_fn","Background","CATPPUCCIN_FRAPPE","CATPPUCCIN_LATTE","CATPPUCCIN_MACCHIATO","CATPPUCCIN_MOCHA","DARK","DRACULA","Danger","EXTENDED_CATPPUCCIN_FRAPPE","EXTENDED_CATPPUCCIN_LATTE","EXTENDED_CATPPUCCIN_MACCHIATO","EXTENDED_CATPPUCCIN_MOCHA","EXTENDED_DARK","EXTENDED_DRACULA","EXTENDED_FERRA","EXTENDED_GRUVBOX_DARK","EXTENDED_GRUVBOX_LIGHT","EXTENDED_KANAGAWA_DRAGON","EXTENDED_KANAGAWA_LOTUS","EXTENDED_KANAGAWA_WAVE","EXTENDED_LIGHT","EXTENDED_MOONFLY","EXTENDED_NIGHTFLY","EXTENDED_NORD","EXTENDED_OXOCARBON","EXTENDED_SOLARIZED_DARK","EXTENDED_SOLARIZED_LIGHT","EXTENDED_TOKYO_NIGHT","EXTENDED_TOKYO_NIGHT_LIGHT","EXTENDED_TOKYO_NIGHT_STORM","Extended","FERRA","GRUVBOX_DARK","GRUVBOX_LIGHT","KANAGAWA_DRAGON","KANAGAWA_LOTUS","KANAGAWA_WAVE","LIGHT","MOONFLY","NIGHTFLY","NORD","OXOCARBON","Pair","Palette","Primary","SOLARIZED_DARK","SOLARIZED_LIGHT","Secondary","Success","TOKYO_NIGHT","TOKYO_NIGHT_LIGHT","TOKYO_NIGHT_STORM","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","background","background","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","danger","danger","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","generate","generate","generate","generate","generate","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_dark","new","new","primary","primary","secondary","strong","strong","strong","strong","strong","success","success","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak","weak","weak","weak","weak","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","adapt_into_using","adapt_into_using","add","add","add_assign","add_assign","arrays_from","arrays_from","arrays_into","arrays_into","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_duration_since","checked_mul","checked_sub","checked_sub","clone","clone","clone_into","clone_into","cmp","cmp","components_from","components_from","default","deserialize","deserializer_for_signature","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","dynamic_signature","elapsed","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_angle","from_angle","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","null_value","partial_cmp","partial_cmp","saturating_add","saturating_duration_since","saturating_mul","saturating_sub","serialize","signature","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Event","Finger","FingerLifted","FingerLost","FingerMoved","FingerPressed","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","eq","eq","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get_hash","hash","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","id","id","id","id","position","position","position","position","Id","Operation","Text","Tree","Widget","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","children","clone","clone_into","components_from","diff","draw","eq","equivalent","fmt","from","from_angle","from_stimulus","get_hash","hash","into","into_angle","into_color","into_color_unclamped","into_stimulus","layout","mouse_interaction","new","on_event","operate","operation","overlay","size","size_hint","state","tag","text","to_owned","tree","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unique","vzip","Chain","Focusable","None","Operation","Outcome","Scrollable","Some","TextInput","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","container","custom","finish","fmt","focusable","focusable","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","map","scope","scrollable","scrollable","text_input","text_input","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","Count","Focusable","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","clone","clone_into","components_from","count","default","eq","equivalent","find_focused","fmt","focus","focus","focus_next","focus_previous","focused","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","is_focused","null_value","to_owned","total","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unfocus","vzip","AbsoluteOffset","END","RelativeOffset","START","Scrollable","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","default","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","null_value","scroll_to","scroll_to","snap_to","snap_to","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","x","x","y","y","TextInput","move_cursor_to","move_cursor_to","move_cursor_to_end","move_cursor_to_end","move_cursor_to_front","move_cursor_to_front","select_all","select_all","Borrowed","Catalog","Class","Fragment","IntoFragment","LineHeight","Owned","Shaping","State","Style","StyleFn","Text","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone_into","color","color","color_maybe","components_from","components_from","components_from","default","default","default","draw","draw","fmt","fmt","font","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","height","horizontal_alignment","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_fragment","into_fragment","into_fragment","into_stimulus","into_stimulus","into_stimulus","layout","layout","line_height","new","null_value","null_value","shaping","size","size","state","style","style","tag","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vertical_alignment","vzip","vzip","vzip","width","None","Some","State","Tag","Tree","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","cmp","components_from","components_from","components_from","diff","diff_children","diff_children_custom","diff_children_custom_with_search","downcast_mut","downcast_ref","empty","eq","equivalent","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","new","new","of","partial_cmp","state","stateless","tag","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","AlwaysOnBottom","AlwaysOnTop","At","Centered","CloseRequested","Closed","Critical","Default","Event","FileDropped","FileHovered","FilesHoveredLeft","Focused","Fullscreen","Hidden","Icon","Id","Informational","Level","MAIN","Mode","Moved","NextFrame","Normal","Opened","Position","RedrawRequest","RedrawRequested","Resized","Settings","Specific","Unfocused","UserAttention","Windowed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","icon","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","null_value","null_value","partial_cmp","partial_cmp","settings","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unique","vzip","vzip","vzip","vzip","vzip","vzip","vzip","height","position","size","width","x","y","ByteCountNotDivisibleBy4","DimensionsVsPixelCount","Error","Icon","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","fmt","fmt","fmt","from","from","from_angle","from_angle","from_rgba","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_raw","into_stimulus","into_stimulus","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","byte_count","height","pixel_count","width","width_x_height","PlatformSpecific","Settings","adapt_into_using","adapt_into_using","application_id","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","decorations","default","default","eq","equivalent","exit_on_close_request","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","icon","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","level","max_size","min_size","null_value","null_value","platform_specific","position","resizable","size","to_owned","to_owned","transparent","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","visible","vzip","vzip"],"q":[[0,"iced_core"],[742,"iced_core::alignment"],[846,"iced_core::border"],[918,"iced_core::clipboard"],[981,"iced_core::event"],[1106,"iced_core::font"],[1305,"iced_core::gradient"],[1402,"iced_core::image"],[1548,"iced_core::image::Data"],[1551,"iced_core::keyboard"],[1703,"iced_core::keyboard::Event"],[1710,"iced_core::keyboard::key"],[2086,"iced_core::layout"],[2206,"iced_core::layout::flex"],[2233,"iced_core::mouse"],[2418,"iced_core::mouse::Event"],[2420,"iced_core::mouse::ScrollDelta"],[2424,"iced_core::mouse::click"],[2484,"iced_core::overlay"],[2562,"iced_core::renderer"],[2636,"iced_core::svg"],[2708,"iced_core::text"],[2909,"iced_core::text::editor"],[3094,"iced_core::text::editor::Action"],[3095,"iced_core::text::highlighter"],[3168,"iced_core::theme"],[3266,"iced_core::theme::palette"],[3569,"iced_core::time"],[3705,"iced_core::touch"],[3768,"iced_core::touch::Event"],[3776,"iced_core::widget"],[3828,"iced_core::widget::operation"],[3870,"iced_core::widget::operation::focusable"],[3912,"iced_core::widget::operation::scrollable"],[3983,"iced_core::widget::operation::text_input"],[3992,"iced_core::widget::text"],[4106,"iced_core::widget::tree"],[4203,"iced_core::window"],[4442,"iced_core::window::Event"],[4448,"iced_core::window::icon"],[4506,"iced_core::window::icon::Error"],[4511,"iced_core::window::settings"],[4584,"palette::chromatic_adaptation"],[4585,"core::ops::arith"],[4586,"core::clone"],[4587,"core::cmp"],[4588,"core::default"],[4589,"num_traits::float"],[4590,"num_traits"],[4591,"alloc::string"],[4592,"core::cmp"],[4593,"core::fmt"],[4594,"core::fmt"],[4595,"core::fmt"],[4596,"alloc::borrow"],[4597,"alloc::sync"],[4598,"palette::rgb"],[4599,"palette::rgb"],[4600,"core::iter::traits::collect"],[4601,"core::hash"],[4602,"core::marker"],[4603,"core::hash"],[4604,"core::ops::arith"],[4605,"core::ops::function"],[4606,"core::any"],[4607,"core::iter::traits::collect"],[4608,"core::marker"],[4609,"bitflags::iter"],[4610,"core::ops::range"],[4611,"core::iter::traits::iterator"],[4612,"serde::de"],[4613,"zvariant::error"],[4614,"zvariant::signature"],[4615,"core::convert"],[4616,"serde::ser"],[4617,"core::time"],[4618,"core::ops::function"]],"d":["","The black color.","The background of some element.","","","A color in the <code>sRGB</code> color space.","A solid color.","Scale as big as it can be without needing to crop or hide …","The strategy used to fit the contents of a widget to its …","Scale the image to cover all of the bounding box, cropping …","Degrees","A generic <code>Widget</code>.","","Distort the image so the widget is 100% covered without …","Fill all the remaining space","Fill a portion of the remaining space relative to other …","Fill a fixed amount of space","","","Linearly interpolate between several colors.","A <code>Transformation</code> that preserves whatever is transformed.","A rectangle starting at <code>Point::ORIGIN</code> with infinite width …","A <code>Size</code> with infinite width and height.","","The strategy used to fill space in a specific dimension.","Don’t resize or scale the image at all.","The origin (i.e. a <code>Point</code> at (0, 0)).","","The amount of radians in half a circle.","An amount of space to pad for each side of a box","An amount of logical pixels.","A 2D point.","The range of radians of a circle.","Radians","A rectangle.","","Scale the image down if it’s too big for the space, but …","A shadow.","A connection to the state of a shell.","Fill the least amount of space","An amount of space in 2 dimensions.","A <code>SmolStr</code> is a string type that has the following …","A color with no opacity.","","","A 2D transformation matrix.","A <code>Size</code> with a width and height of 1 unit.","A 2D vector.","The white color.","","Padding of zero","A <code>Size</code> with zero width and height.","The zero <code>Vector</code>.","Transparency, 0.0 - 1.0","","","","","","","","","","","","","","","","","","","","","","","Align and position widgets.","Returns whether the widgets of the current application …","Returns the area of the <code>Rectangle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>Widget</code> of the <code>Element</code>,","Returns a mutable reference to the <code>Widget</code> of the <code>Element</code>,","Blue component, 0.0 - 1.0","The blur radius of the shadow.","Draw lines around containers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bottom padding","Returns the <code>Point</code> at the center of the <code>Rectangle</code>.","Returns the X coordinate of the <code>Point</code> at the center of the …","Returns the Y coordinate of the <code>Point</code> at the center of the …","Access the clipboard.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color of the shadow.","Creates a <code>Color</code> with shorter and cleaner syntax.","","","","","","","","","","","","","","","","","","Returns true if the given <code>Point</code> is contained in the …","","","","","","","","","","Computes the distance to another <code>Point</code>.","","","Adapts the <code>Length</code> so it can contain the other <code>Length</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle events of a user interface.","Expands the <code>Rectangle</code> a given amount.","Expands this <code>Size</code> by the given amount.","Marks the <code>Element</code> as <em>to-be-explained</em>.","Returns the <em>fill factor</em> of the <code>Length</code>.","Attempt to apply the given fit for a content size within …","Fits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.","Returns the “fluid” variant of the <code>Length</code>.","","","","","","","","","","","","","","","","","","","Load and use fonts.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Color</code> from its linear RGBA components.","Creates a <code>Color</code> from its RGB components.","Creates a <code>Color</code> from its RGB8 components.","Creates a <code>Color</code> from its RGBA components.","Creates a <code>Color</code> from its RGB8 components and an alpha …","","","","","","","","","","","","","","","","","","","","Green component, 0.0 - 1.0","","","","Colors that transition progressively.","","","","Height of the rectangle.","The height.","Returns the total amount of horizontal <code>Padding</code>.","Load and draw raster graphics.","Computes the intersection with the given <code>Rectangle</code>.","Returns whether the <code>Rectangle</code> intersects with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the <code>Color</code> into its linear values.","Converts the <code>Color</code> into its RGBA8 equivalent.","","","","","","","","","","","","","","","","","","Invalidates the current application layout.","Invalidates the current application widgets.","Returns the inverted <code>Color</code>.","Inverts the <code>Color</code> in-place.","","Returns true if the <code>Shell</code> contains no published messages","Returns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or","","Returns whether the current layout is invalid or not.","Returns true if the current <code>Rectangle</code> is completely within …","Listen to keyboard events.","Position your widgets properly.","Left padding","","Applies a transformation to the produced message of the …","Returns the maximum of each component of this size and …","Merges the current <code>Shell</code> with another one by applying the …","Returns the minimum of each component of this size and …","Handle mouse events.","","","","","","","","","","","","","Creates a new <code>Element</code> containing the given <code>Widget</code>.","Creates a new <code>Color</code>.","Create a Padding that is equal on all sides","Creates a new <code>Point</code> with the given coordinates.","Creates a new <code>Rectangle</code> with its top-left corner in the …","Creates a new <code>Shell</code> with the provided buffer of messages.","Creates a new  <code>Size</code> with the given width and height.","Creates a new <code>Vector</code> with the given components.","Constructs inline variant of <code>SmolStr</code>.","","Constructs a <code>SmolStr</code> from a statically allocated string.","","","","","","","","","The offset of the shadow.","Creates an orthographic projection.","Display interactive elements on top of other widgets.","","","","","","","Returns the position of the top left corner of the …","Publish the given <code>Message</code> for an application to process it.","Red component, 0.0 - 1.0","Returns the request a redraw should happen, if any.","Write your own renderer.","Requests a new frame to be drawn.","Triggers the given function if the layout is invalid, …","Right padding","Creates a uniform scaling transformation.","Scales the alpha channel of the <code>Background</code> by the given …","Scales the alpha channel of the <code>Color</code> by the given factor.","Returns the scale factor of the <code>Transformation</code>.","Returns the <code>Size</code> of the <code>Rectangle</code>.","Snaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.","","","","","","","","Load and draw vector graphics.","Draw and interact with text.","Use the built-in theme and styles.","Keep track of time, both in native and web platforms!","Calculates the line in which the angle intercepts the …","","","","","","","","","","","","","","","","","","","","","Top padding","Build touch events.","Creates a translate transformation.","Returns the translation of the <code>Transformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union with the given <code>Rectangle</code>.","Returns the total amount of vertical <code>Padding</code>.","","","","","","","","","","","","","","","","","","Create custom widgets and operate on them.","Width of the rectangle.","The width.","Build window-based GUI applications.","Creates a new <code>Rectangle</code> with its top-left corner at the …","The X coordinate.","X coordinate of the top-left corner.","The X component of the <code>Vector</code>","The Y coordinate.","Y coordinate of the top-left corner.","The Y component of the <code>Vector</code>","Alignment on the axis of a container.","Align bottom","Align at the center of the axis.","Horizontally centered","Vertically centered","Align at the end of the axis.","The horizontal <code>Alignment</code> of some resource.","Align left","Align right","Align at the start of the axis.","Align top","The vertical <code>Alignment</code> of some resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A border.","The border radii for the corners of a graphics primitive …","","","","","","","","","","","","","","","The color of the border.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The radius of the border.","Creates a new default rounded <code>Border</code> with the given <code>Radius</code>.","","","","","","","","","","","","","","","","","","","The width of the border.","Updates the <code>Color</code> of the <code>Border</code>.","Updates the <code>Radius</code> of the <code>Border</code>.","Updates the width of the <code>Border</code>.","A buffer for short-term storage and transfer within and …","The kind of <code>Clipboard</code>.","A null implementation of the <code>Clipboard</code> trait.","The primary clipboard.","The standard clipboard.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Reads the current content of the <code>Clipboard</code> as text.","","","","","","","","","","","","","","","","","","","","Writes the given text contents to the <code>Clipboard</code>.","","The <code>Event</code> was handled and processed by a widget.","A user interface event.","The <code>Event</code> was <strong>NOT</strong> handled by any widget.","A keyboard event","Describes an event specific to MacOS","A MacOS specific event","A mouse event","A platform specific event","A platform specific event","Triggered when the app receives an URL from the system","The status of an <code>Event</code> after being processed.","A touch event","A window event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Merges two <code>Status</code> into one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyphs in cursive fonts generally use a more informal …","A non-monospaced sans-serif font with normal <code>Weight</code>.","","","","","","A font family.","Fantasy fonts are primarily decorative or expressive fonts …","A font.","","","A monospaced font with normal <code>Weight</code>.","","The sole criterion of a monospace font is that all glyphs …","The name of a font family of choice.","","","","","Glyphs in sans-serif fonts, as the term is used in CSS, …","","","","Serif fonts represent the formal text style for a script.","The width of some text.","The style of some text.","","","","The weight of some text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Family</code> of the <code>Font</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Stretch</code> of the <code>Font</code>.","The <code>Style</code> of the <code>Font</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Weight</code> of the <code>Font</code>.","Creates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …","A point along the gradient vector where the specified <code>color</code>…","A fill which transitions colors progressively along a …","A linear gradient.","A linear gradient interpolates colors along a direction at …","","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","How the <code>Gradient</code> is angled within its bounds.","","","","","","","","","","","","","","","","","","","The color of the gradient at the specified <code>offset</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a new <code>Linear</code> gradient with the given angle in …","","Offset along the gradient vector.","Scales the alpha channel of the <code>Gradient</code> by the given …","Scales the alpha channel of the <code>Linear</code> gradient by the …","<code>ColorStop</code>s along the linear gradient path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around raw image data.","In-memory data","The data of a raster image.","Image filtering strategy.","A handle of some image data.","The image Handle to be displayed. Iced exposes its own …","Bilinear interpolation.","Nearest neighbor.","File data","A <code>Renderer</code> that can render raster graphics.","Decoded image pixels in RGBA format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the image <code>Data</code>.","","","Draws an image with the given <code>Handle</code> and inside the …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates an image <code>Handle</code> containing the image data directly.","Creates an image <code>Handle</code> pointing to the image of the given …","Creates an image <code>Handle</code> containing the image pixels …","","","","","","","","","","","","","Returns the unique identifier of the <code>Handle</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the dimensions of an image for the given <code>Handle</code>.","Creates new <code>Bytes</code> around <code>data</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The height of the image.","The pixels.","The width of the image.","The “alt” key.","The “command” key.","The “control” key.","A keyboard event.","","A keyboard key was pressed.","A keyboard key was released.","The “windows” key on Windows, “command” key on …","The left side of the keyboard.","The location of a key on the keyboard.","The current state of the keyboard modifiers.","The keyboard modifiers have changed.","The numpad of the keyboard.","The right side of the keyboard.","The “shift” key.","The standard group of keys on the keyboard.","","","","Get a flags value with all known bits set.","Returns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","Returns true if a “command key” is pressed in the …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Whether all set bits in a source flags value are also set …","Returns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Identify keyboard keys.","Returns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","The key pressed.","The key released.","The location of the key.","The location of the key.","The state of the modifier keys.","The state of the modifier keys.","The text produced by the key press, if any.","Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","The Accept (Commit, OK) key. Accept current option or …","Redo or repeat an action.","Initate the multi-candidate mode.","","The <code>Alt</code> (Alternative) key.","The Alternate Graphics (AltGr or AltGraph) key.","The Application switch key, which provides a list of …","Navigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)","Navigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)","Navigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)","Navigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)","The Attention (Attn) key.","Adjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)","Adjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (<code>VK_FADER_FRONT</code>)","Adjust audio fader towards rear. (<code>VK_FADER_REAR</code>)","Advance surround audio mode to next available mode. (…","Decrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)","Increase treble. (<code>APPCOMMAND_TREBLE_UP</code>)","Decrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …","Toggle between muted state and prior volume level. (…","Increase audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …","Used to remove the character to the left of the cursor. …","The Brightness Down key. Typically controls the display …","The Brightness Up key. Typically controls the display …","Navigate to previous content or page in current history. (…","Open the list of browser favorites. (…","Navigate to next content or page in current history. (…","Go to the user’s preferred home page. (…","Refresh the current page or content. (…","Call up the user’s preferred search page. (…","Stop loading the current page or content. (…","The Call key. (<code>KEYCODE_CALL</code>)","The Camera key. (<code>KEYCODE_CAMERA</code>)","The Camera focus key. (<code>KEYCODE_FOCUS</code>)","","The <code>Caps Lock</code> (Capital) key.","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","A key string that corresponds to the character typed by …","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (<code>VK_CC</code>, …","Initiate the Code Input mode to allow characters to be …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …","The Compose key, also known as “Multi_key” on the X …","Show the application’s context menu. This key is …","The <code>Control</code> or <code>Ctrl</code> key.","Convert the current input method sequence.","Copy the current selection. (<code>APPCOMMAND_COPY</code>)","The Cursor Select key.","Cut the current selection. (<code>APPCOMMAND_CUT</code>)","Select Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)","Used to delete the character to the right of the cursor. …","Adjust brightness of device, by toggling between or …","Swap video sources. (<code>VK_DISPLAY_SWAP</code>)","The Eisu key. This key may close the IME, but its purpose …","Toggle removable media to eject (open) and insert (close) …","The End key, used with keyboard entry to go to the end of …","The End Call key. (<code>KEYCODE_ENDCALL</code>)","The <code>Enter</code> or <code>↵</code> key. Used to activate current selection …","The Erase to End of Field key. This key deletes all …","The <code>Esc</code> key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","","Exit the current application. (<code>VK_EXIT</code>)","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode <code>Final</code> key used on some Asian keyboards, to …","Open the Find dialog. (<code>APPCOMMAND_FIND</code>)","The Function switch <code>Fn</code> key. Activating this key …","The Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …","The Back key. (<code>KEYCODE_BACK</code>)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (<code>VK_GUIDE</code>, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","Toggle between Hangul and English modes.","","The (Half-Width) Characters key.","The Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","The Home key, used with keyboard entry, to go to start of …","","Toggle display of information about currently selected …","Toggle between text modes for insertion or overtyping. (…","Toggle instant replay. (<code>VK_INSTANT_REPLAY</code>)","","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","The Katakana (Japanese Kana characters) key.","A key on the keyboard.","The <code>11</code> key found on media numpads that have buttons from <code>1</code> …","The <code>12</code> key found on media numpads that have buttons from <code>1</code> …","","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","The “Calendar” key. (<code>KEYCODE_CALENDAR</code>)","The “Contacts” key. (<code>KEYCODE_CONTACTS</code>)","The “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)","The “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…","","","","","","","","Launch linked content, if available and appropriate. (…","List the current program. (<code>VK_LIST</code>)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (<code>VK_LOCK</code>)","","Open an editor to forward the current message. (…","Open an editor to reply to the current message. (…","Send the current message. (<code>APPCOMMAND_SEND_MAIL</code>)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)","Close the current media, for example to close a CD or DVD …","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (<code>VK_LAST</code>, …","Pause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…","Initiate or continue media playback at normal speed, if …","Toggle media between play and pause states. (…","Initiate or resume recording of currently selected media. (…","Initiate or continue reverse playback at faster than …","Skip backward to next content or program. (…","Skip forward to next content or program. (<code>VK_SKIP</code>, …","Step backward to next content or program. (…","Step forward to next content or program. (…","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)","Seek to next media or program track. (…","Seek to previous media or program track. (…","","Toggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…","Decrease microphone volume. (…","Mute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …","Increase microphone volume. (…","Toggle between or cycle through input modes of IMEs.","A named key.","A key with an established name.","Navigate in. (<code>KEYCODE_NAVIGATE_IN</code>)","Navigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)","Navigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)","Navigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)","Open a new document or message. (<code>APPCOMMAND_NEW</code>)","","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Accept current input method sequence without conversion in …","The Notification key. (<code>KEYCODE_NOTIFICATION</code>)","The <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …","Access on-demand content or programs. (<code>VK_ON_DEMAND</code>)","Open an existing document or message. (<code>APPCOMMAND_OPEN</code>)","Scroll down or display next page of content.","Scroll up or display previous page of content.","Pairing key to pair devices. (<code>KEYCODE_PAIRING</code>)","The Paste key. (<code>APPCOMMAND_PASTE</code>)","Pause the current state or application (as appropriate).","Move picture-in-picture window down. (<code>VK_PINP_DOWN</code>)","Move picture-in-picture window. (<code>VK_PINP_MOVE</code>)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (<code>VK_PINP_UP</code>)","Play or resume the current state or application (as …","Decrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)","Reset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)","Increase media playback speed. (<code>VK_PLAY_SPEED_UP</code>)","Toggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …","The <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.","","Print the current document or message. (<code>APPCOMMAND_PRINT</code>)","Initiate print-screen function.","","The properties (Props) key.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (<code>APPCOMMAND_REDO</code>)","Toggle RF (radio frequency) input bypass mode (pass RF …","The Roman characters function key.","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (<code>APPCOMMAND_SAVE</code>)","Toggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)","Advance display screen mode to next available mode. (…","Toggle between scrolling and cursor movement modes.","","Toggle display of device settings screen. (<code>VK_SETTINGS</code>, …","Used to enable shift modifier function for interpreting …","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","Used in text to insert a space between words. Usually …","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)","Used to enable “super” modifier function for …","The Symbol modifier key (used on some virtual keyboards).","","Switch to viewing TV. (<code>KEYCODE_TV</code>)","TV 3D Mode. (<code>KEYCODE_3D_MODE</code>)","Toggle between antenna and cable input. (…","Audio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)","Contents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)","Switch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)","Switch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…","Switch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…","Switch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…","Switch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…","Switch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)","Switch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)","Switch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)","Switch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)","Switch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)","Media context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)","Toggle network. (<code>KEYCODE_TV_NETWORK</code>)","Number entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)","Toggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)","Radio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)","Satellite. (<code>KEYCODE_TV_SATELLITE</code>)","Broadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)","Communication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)","Toggle between available satellites. (…","Analog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)","Digital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)","Timer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)","The Horizontal Tabulation <code>Tab</code> key.","Toggle display of teletext, if available (<code>VK_TELETEXT</code>, …","Undo the last action. (<code>APPCOMMAND_UNDO</code>)","An unidentified key.","Advance video mode to next available mode. (…","","The WakeUp key. (<code>KEYCODE_WAKEUP</code>)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)","The ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)","Toggle between full-screen and scaled content, or alter …","","","","","","","Convert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounds of a <code>Node</code> and its children, using absolute …","A set of size constraints for layouting.","No limits","The bounds of an element and its children.","","","","Aligns the <code>Node</code> in the given space.","Mutable reference version of <code>Self::align</code>.","","","","","","","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","","","","","","","Returns the bounds of the <code>Node</code>.","Returns the bounds of the <code>Layout</code>.","Returns the children of the <code>Node</code>.","Returns an iterator over the <code>Layout</code> of the children of a …","","","","","","","","","","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","Creates a new <code>Node</code> that wraps a single child with some …","","","Distribute elements using a flex-based layout.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Applies a height constraint to the current <code>Limits</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Removes the minimum width constraint for the current <code>Limits</code>…","Returns the maximum <code>Size</code> of the <code>Limits</code>.","Applies a maximum height constraint to the current <code>Limits</code>.","Applies a maximum width constraint to the current <code>Limits</code>.","Returns the minimum <code>Size</code> of the <code>Limits</code>.","Applies a minimum height constraint to the current <code>Limits</code>.","Applies a minimum width constraint to the current <code>Limits</code>.","Moves the <code>Node</code> to the given position.","Mutable reference version of <code>Self::move_to</code>.","Creates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.","Creates a new <code>Node</code> with the given <code>Size</code>.","Creates a new <code>Layout</code> for the given <code>Node</code> at the origin.","Produces a <code>Node</code> with two children nodes one right next to …","","Computes the <code>Node</code> that fits the <code>Limits</code> given some width, …","Returns the position of the <code>Layout</code>.","Computes a <code>padded</code> <code>Node</code> with a positioning step.","Computes the resulting <code>Size</code> that fits the <code>Limits</code> given …","Shrinks the current <code>Limits</code> by the given <code>Size</code>.","Returns the <code>Size</code> of the <code>Node</code>.","Computes the resulting <code>Node</code> that fits the <code>Limits</code> given …","","","","Translates the <code>Node</code> by the given translation.","","","","","","","","","","","","","","","","","","","","","","","","","Applies a width constraint to the current <code>Limits</code>.","Creates a new <code>Node</code> with the given <code>Size</code> and children.","Creates a new <code>Layout</code> for the given <code>Node</code> with the provided …","The main axis of a flex layout.","The horizontal axis","The vertical axis","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Computes the flex layout with the given axis and limits, …","","","","","","","","","The cursor has a defined position.","The back mouse button.","The button of a mouse.","A mouse button was pressed.","A mouse button was released.","","","The mouse cursor state.","The mouse cursor entered the window.","The mouse cursor left the window.","The mouse cursor was moved","A mouse event.","The forward mouse button.","","","","The interaction of a mouse cursor.","The left mouse button.","A line-based scroll movement","The middle (wheel) button.","","","Some other button.","A pixel-based scroll movement","","","","The right mouse button.","A scroll movement.","","The cursor is currently unavailable (i.e. out of bounds or …","The mouse wheel was scrolled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Track mouse clicks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns true if the <code>Cursor</code> is over the given <code>bounds</code>.","","","","Returns the absolute position of the <code>Cursor</code>, if available.","Returns the relative position of the <code>Cursor</code> from the given …","Returns the relative position of the <code>Cursor</code> inside the …","Returns the absolute position of the <code>Cursor</code>, if available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The scroll movement.","The new position of the mouse cursor","The number of horizontal lines scrolled","The number of horizontal pixels scrolled","The number of vertical lines scrolled","The number of vertical pixels scrolled","A mouse click.","A double click","The kind of mouse click.","A single click","A triple click","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the <code>Kind</code> of <code>Click</code>.","Creates a new <code>Click</code> with the given position and previous …","Returns the position of the <code>Click</code>.","","","","","","","","","","","","","","","","","","","A generic <code>Overlay</code>.","An <code>Overlay</code> container that displays multiple overlay …","An interactive component that can be displayed on top of …","","","","","","","","","","","","","","Draws the <code>Overlay</code> using the associated <code>Renderer</code>.","Draws the <code>Element</code> and its children using the given <code>Layout</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns a <code>Group</code> of overlay <code>Element</code> children.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the cursor is over the <code>Element</code>.","","Returns true if the cursor is over the <code>Overlay</code>.","Returns the layout <code>Node</code> of the <code>Overlay</code>.","Computes the layout of the <code>Element</code> in the given bounds.","","Applies a transformation to the produced message of the …","Returns the current <code>mouse::Interaction</code> of the <code>Element</code>.","","Returns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.","Creates a new <code>Element</code> containing the given <code>Overlay</code>.","Creates an empty <code>Group</code>.","","Processes a runtime <code>Event</code>.","","Processes a runtime <code>Event</code>.","Applies a <code>widget::Operation</code> to the <code>Element</code>.","","Applies a <code>widget::Operation</code> to the <code>Overlay</code>.","Returns the nested overlay of the <code>Element</code>, if there is any.","Turns the <code>Group</code> into an overlay <code>overlay::Element</code>.","","Returns the nested overlay of the <code>Overlay</code>, if there is any.","Adds an <code>overlay::Element</code> to the <code>Group</code>.","","","","","","","","","","","","","","","","","Creates a <code>Group</code> with the given elements.","A polygon with four sides.","A component that can be used by widgets to draw themselves …","The styling attributes of a <code>Renderer</code>.","","","","","","","The <code>Border</code> of the <code>Quad</code>.","","","","","The bounds of the <code>Quad</code>.","Clears all of the recorded primitives in the <code>Renderer</code>.","","","","","","","","","Ends recording a new layer.","Ends recording a new layer.","","","Fills a <code>Quad</code> with the provided <code>Background</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The <code>Shadow</code> of the <code>Quad</code>.","Starts recording a new layer.","Starts recording with a new <code>Transformation</code>.","The text color","","","","","","","","","","","","","","","","","","","Draws the primitives recorded in the given closure in a …","Applies a <code>Transformation</code> to the primitives recorded in the …","Applies a translation to the primitives recorded in the …","In-memory data","The data of a vectorial image.","A handle of Svg data.","File data","A <code>Renderer</code> that can render vector graphics.","","","","","","","","","","","","","","","","","Returns a reference to the SVG <code>Data</code>.","Draws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Creates an SVG <code>Handle</code> from raw bytes containing either an …","Creates an SVG <code>Handle</code> pointing to the vector image of the …","","","","","","","Returns the unique identifier of the <code>Handle</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the default dimensions of an SVG for the given …","","","","","","","","","","","","","","","","","","","The <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.","An absolute height in logical pixels.","Advanced text shaping and font fallback.","No shaping and no font fallback.","A bounds difference.","The <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.","The point was within the bounds of the returned character …","The difference detected in some text.","","The <code>Editor</code> of this <code>Renderer</code>.","The font of this <code>Paragraph</code>.","The font type used.","","The result of hit testing on text.","The icon font of the backend.","The height of a line of text in a paragraph.","No difference.","A text paragraph.","The <code>Paragraph</code> of this <code>Renderer</code>.","A factor of the size of the text.","A renderer capable of measuring and drawing <code>Text</code>.","A shape difference.","The shaping strategy of some text.","A paragraph.","","","","","","","","","","","","","","","","","","","","","","","","","","The bounds of the paragraph.","","","","","","","","","","","Compares the <code>Paragraph</code> with some desired <code>Text</code> and returns …","","","","","","The content of the paragraph.","Computes the cursor position of the <code>Hit</code> .","","","Returns the default <code>Self::Font</code>.","Returns the default size of <code>Text</code>.","Edit text.","","","","","","","Draws the given <code>Editor</code> at the given position and with the …","Draws the given <code>Paragraph</code> at the given position and with …","Draws the given <code>Text</code> at the given position and with the …","","","","","","The font of the <code>Text</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the distance to the given grapheme index in the …","","","Highlight text.","Tests whether the provided point is within the boundaries …","Returns the horizontal alignment of the <code>Paragraph</code>.","The horizontal alignment of the <code>Text</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The line height of the <code>Text</code>.","Returns the minimum boundaries that can fit the contents …","Returns the minimum height that can fit the contents of …","Returns the minimum height that can fit the contents of …","Returns the minimum width that can fit the contents of the …","Returns the minimum width that can fit the contents of the …","","","Lays out the <code>Paragraph</code> with some new boundaries.","The <code>Shaping</code> strategy of the <code>Text</code>.","The size of the <code>Text</code> in logical pixels.","Returns the <code>LineHeight</code> in absolute logical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>Paragraph</code> to match the given <code>Text</code>, if needed.","Updates the <code>Paragraph</code> to match the given <code>Text</code>, if needed.","Returns the vertical alignment of the <code>Paragraph</code>.","The vertical alignment of the <code>Text</code>.","","","","","","Creates a new <code>Paragraph</code> laid out with the given <code>Text</code>.","An interaction with an <code>Editor</code>.","Delete the previous character.","Cursor without a selection","Click the <code>Editor</code> at the given <code>Point</code>.","The cursor of an <code>Editor</code>.","Delete the next character.","A direction in some text.","Move to the end of the text.","Move to the start of the text.","Move down.","Drag the mouse on the <code>Editor</code> to the given <code>Point</code>.","An action that edits text.","Perform an <code>Edit</code>.","A component that can be used by widgets to edit multi-line …","Move to the end of the line.","Break the current line.","The font of the <code>Editor</code>.","Move to the start of the line.","Insert the given character.","Move left.","&lt;-","A cursor movement.","Apply a <code>Motion</code>.","Move to the start of the next window.","Move to the start of the previous window.","Paste the given text.","Move right.","-&gt;","Scroll the <code>Editor</code> a certain amount of lines.","Select text with a given <code>Motion</code>.","Select the line at the current cursor.","Select the word at the current cursor.","Cursor selecting a range of text","Move up.","Move to the left boundary of a word.","Move to the right boundary of a word.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current boundaries of the <code>Editor</code>.","","","","","","","","","","","","","","","","Returns the current <code>Cursor</code> of the <code>Editor</code>.","Returns the current cursor position of the <code>Editor</code>.","Returns the <code>Direction</code> of the <code>Motion</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Runs a text <code>Highlighter</code> in the <code>Editor</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Action</code> is an editing action.","Returns the text of the given line in the <code>Editor</code>, if it …","Returns the amount of lines in the <code>Editor</code>.","Returns the minimum boundaries to fit the current contents …","Performs an <code>Action</code> on the <code>Editor</code>.","Returns the current selected text of the <code>Editor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>Editor</code> with some new attributes.","","","","","","Widens the <code>Motion</code>, if possible.","Creates a new <code>Editor</code> laid out with the given text.","The amount of lines to scroll.","The format of some text.","The output of the <code>Highlighter</code>.","A type capable of highlighting text.","The highlight iterator type.","A highlighter that highlights nothing.","The settings to configure the <code>Highlighter</code>.","","","","","","","","","","","Notifies the <code>Highlighter</code> that the line at the given index …","","","","","","The <code>Color</code> of the text.","","","Returns the current line of the <code>Highlighter</code>.","","","","","","The <code>Font</code> of the text.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Highlights the given line.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>Highlighter</code> from its <code>Self::Settings</code>.","","","","","","","","","","","","","","","","","","","Updates the <code>Highlighter</code> with some new <code>Self::Settings</code>.","","","","A list with all the defined themes.","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","A <code>Theme</code> with a customized <code>Palette</code>.","A <code>Theme</code> that uses a <code>Custom</code> palette.","The built-in dark variant.","The built-in Dracula variant.","The built-in Ferra variant:","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","The built-in light variant.","The built-in Moonfly variant.","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant.","","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","A built-in theme.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","","","","","","","","","","","","","","","","","Creates a new custom <code>Theme</code> from the given <code>Palette</code>.","Creates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …","","","","","Returns the <code>palette::Extended</code> of the <code>Theme</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code>.","","Define the colors of a theme.","Returns the <code>Palette</code> of the <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code> with a …","A set of background colors.","The built-in Catppuccin Frappé variant of a <code>Palette</code>.","The built-in Catppuccin Latte variant of a <code>Palette</code>.","The built-in Catppuccin Macchiato variant of a <code>Palette</code>.","The built-in Catppuccin Mocha variant of a <code>Palette</code>.","The built-in dark variant of a <code>Palette</code>.","The built-in Dracula variant of a <code>Palette</code>.","A set of danger colors.","The built-in Catppuccin Frappé variant of an <code>Extended</code> …","The built-in Catppuccin Latte variant of an <code>Extended</code> …","The built-in Catppuccin Macchiato variant of an <code>Extended</code> …","The built-in Catppuccin Mocha variant of an <code>Extended</code> …","The built-in dark variant of an <code>Extended</code> palette.","The built-in Dracula variant of an <code>Extended</code> palette.","The built-in Ferra variant of an <code>Extended</code> palette.","The built-in Gruvbox Dark variant of an <code>Extended</code> palette.","The built-in Gruvbox Light variant of an <code>Extended</code> palette.","The built-in Kanagawa Dragon variant of an <code>Extended</code> …","The built-in Kanagawa Lotus variant of an <code>Extended</code> palette.","The built-in Kanagawa Wave variant of an <code>Extended</code> palette.","The built-in light variant of an <code>Extended</code> palette.","The built-in Moonfly variant of an <code>Extended</code> palette.","The built-in Nightfly variant of an <code>Extended</code> palette.","The built-in Nord variant of an <code>Extended</code> palette.","The built-in Oxocarbon variant of an <code>Extended</code> palette.","The built-in Solarized Dark variant of an <code>Extended</code> palette.","The built-in Solarized Light variant of an <code>Extended</code> …","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night Storm variant of an <code>Extended</code> …","An extended set of colors generated from a <code>Palette</code>.","The built-in Ferra variant of a <code>Palette</code>.","The built-in Gruvbox Dark variant of a <code>Palette</code>.","The built-in Gruvbox Light variant of a <code>Palette</code>.","The built-in Kanagawa Dragon variant of a <code>Palette</code>.","The built-in Kanagawa Lotus variant of a <code>Palette</code>.","The built-in Kanagawa Wave variant of a <code>Palette</code>.","The built-in light variant of a <code>Palette</code>.","The built-in Moonfly variant of a <code>Palette</code>.","The built-in Nightfly variant of a <code>Palette</code>.","The built-in Nord variant of a <code>Palette</code>.","The built-in Oxocarbon variant of a <code>Palette</code>.","A pair of background and text colors.","A color palette.","A set of primary colors.","The built-in Solarized Dark variant of a <code>Palette</code>.","The built-in Solarized Light variant of a <code>Palette</code>.","A set of secondary colors.","A set of success colors.","The built-in Tokyo Night variant of a <code>Palette</code>.","The built-in Tokyo Night Light variant of a <code>Palette</code>.","The built-in Tokyo Night Storm variant of a <code>Palette</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The background <code>Color</code> of the <code>Palette</code>.","The set of background colors.","The base background color.","The base primary color.","The base secondary color.","The base success color.","The base danger color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background color.","","","","","","","","","The danger <code>Color</code> of the <code>Palette</code>.","The set of danger colors.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Generates an <code>Extended</code> palette from a simple <code>Palette</code>.","Generates a set of <code>Primary</code> colors from the base, …","Generates a set of <code>Secondary</code> colors from the base and text …","Generates a set of <code>Success</code> colors from the base, …","Generates a set of <code>Danger</code> colors from the base, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the palette is dark or not.","Creates a new <code>Pair</code> from a background <code>Color</code> and some text …","Generates a set of <code>Background</code> colors from the base and …","The primary <code>Color</code> of the <code>Palette</code>.","The set of primary colors.","The set of secondary colors.","A stronger version of the base background color.","A stronger version of the base primary color.","A stronger version of the base secondary color.","A stronger version of the base success color.","A stronger version of the base danger color.","The success <code>Color</code> of the <code>Palette</code>.","The set of success colors.","The text <code>Color</code> of the <code>Palette</code>.","The text color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A weaker version of the base background color.","A weaker version of the base primary color.","A weaker version of the base secondary color.","A weaker version of the base success color.","A weaker version of the base danger color.","A <code>Duration</code> type to represent a span of time, typically …","A measurement of a monotonically nondecreasing clock. …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A duration of zero time.","Computes the absolute difference between <code>self</code> and <code>other</code>.","","","Panics","","","","","","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Returns the amount of time elapsed from another instant to …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","Returns the amount of time elapsed from another instant to …","","Returns the amount of time elapsed since this instant.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","Returns an instant corresponding to “now”.","","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Returns the amount of time elapsed from another instant to …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the amount of time elapsed from another instant to …","","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","","","","A touch interaction.","A unique identifier representing a finger on a touch …","A touch interaction was ended.","A touch interaction was canceled.","An on-going touch interaction was moved.","A touch interaction was started.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier of a generic widget.","","","","A component that displays information and allows …","","","","","","Returns the state <code>Tree</code> of the children of the <code>Widget</code>.","","","","Reconciliates the <code>Widget</code> with the provided <code>Tree</code>.","Draws the <code>Widget</code> using the associated <code>Renderer</code>.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Returns the <code>layout::Node</code> of the <code>Widget</code>.","Returns the current <code>mouse::Interaction</code> of the <code>Widget</code>.","Creates a custom <code>Id</code>.","Processes a runtime <code>Event</code>.","Applies an <code>Operation</code> to the <code>Widget</code>.","Query or update internal widget state.","Returns the overlay of the <code>Widget</code>, if there is any.","Returns the <code>Size</code> of the <code>Widget</code> in lengths.","Returns a <code>Size</code> hint for laying out the <code>Widget</code>.","Returns the <code>State</code> of the <code>Widget</code>.","Returns the <code>Tag</code> of the <code>Widget</code>.","Write some text for your users to read.","","Store internal widget state in a state tree to ensure …","","","","","","","","Creates a unique <code>Id</code>.","","The <code>Operation</code> needs to be followed by another <code>Operation</code>.","","The <code>Operation</code> produced no result.","A piece of logic that can traverse the widget tree of an …","The result of an <code>Operation</code>.","","The <code>Operation</code> produced some result.","","","","","","","","Operates on a widget that contains other widgets.","Operates on a custom widget with some state.","Finishes the <code>Operation</code> and returns its <code>Outcome</code>.","","Operate on widgets that can be focused.","Operates on a widget that can be focused.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Maps the output of an <code>Operation</code> using the given function.","Produces an <code>Operation</code> that applies the given <code>Operation</code> to …","Operate on widgets that can be scrolled.","Operates on a widget that can be scrolled.","Operate on widgets that have text input.","Operates on a widget that has text input.","","","","","","","","","A summary of the focusable widgets present on a widget …","The internal state of a widget that can be focused.","","","","","","","","","Produces an <code>Operation</code> that generates a <code>Count</code> and chains it …","","","","Produces an <code>Operation</code> that searches for the current …","","Produces an <code>Operation</code> that focuses the widget with the …","Focuses the widget.","Produces an <code>Operation</code> that searches for the current …","Produces an <code>Operation</code> that searches for the current …","The index of the current focused widget, if any.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns whether the widget is focused or not.","","","The total amount of focusable widgets.","","","","","","","","Unfocuses the widget.","","The amount of absolute offset in each direction of a …","A relative offset that points to the bottom-right of a …","The amount of relative offset in each direction of a …","A relative offset that points to the top-left of a …","The internal state of a widget that can be scrolled.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Produces an <code>Operation</code> that scrolls the widget with the …","Scroll the widget to the given <code>AbsoluteOffset</code> along the …","Produces an <code>Operation</code> that snaps the widget with the given …","Snaps the scroll of the widget to the given <code>percentage</code> …","","","","","","","","","","","","","","","","","","","The amount of horizontal offset","The amount of horizontal offset","The amount of vertical offset","The amount of vertical offset","The internal state of a widget that has text input.","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to an arbitrary …","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to the end of the input …","Produces an <code>Operation</code> that moves the cursor of the widget …","Moves the cursor of the text input to the front of the …","Produces an <code>Operation</code> that selects all the content of the …","Selects all the content of the text input.","Borrowed data.","The theme catalog of a <code>Text</code>.","The item class of this <code>Catalog</code>.","A fragment of <code>Text</code>.","A trait for converting a value to some text <code>Fragment</code>.","","Owned data.","","The internal state of a <code>Text</code> widget.","The appearance of some text.","A styling function for a <code>Text</code>.","A paragraph of text.","","","","","","","","","","","","","","","","Sets the style class of the <code>Text</code>.","","","Sets the <code>Color</code> of the <code>Text</code>.","The <code>Color</code> of the text.","Sets the <code>Color</code> of the <code>Text</code>, if <code>Some</code>.","","","","The default class produced by this <code>Catalog</code>.","","","Draws text using the same logic as the <code>Text</code> widget.","","","","Sets the <code>Font</code> of the <code>Text</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Sets the height of the <code>Text</code> boundaries.","Sets the <code>alignment::Horizontal</code> of the <code>Text</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Converts the value to some text <code>Fragment</code>.","","","","","","Produces the <code>layout::Node</code> of a <code>Text</code> widget.","","Sets the <code>LineHeight</code> of the <code>Text</code>.","Create a new fragment of <code>Text</code> with the given contents.","","","Sets the <code>Shaping</code> strategy of the <code>Text</code>.","","Sets the size of the <code>Text</code>.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Text</code>.","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>alignment::Vertical</code> of the <code>Text</code>.","","","","Sets the width of the <code>Text</code> boundaries.","No meaningful internal state.","Some meaningful internal state.","The internal <code>State</code> of a widget.","The identifier of some widget state.","A persistent state widget tree.","","","","","","","","","","","","","","","","The children of the root widget of the <code>Tree</code>.","","","","","","","Reconciliates the current tree with the provided <code>Widget</code>.","Reconciles the children of the tree with the provided list …","Reconciliates the children of the tree with the provided …","Reconciliates the <code>current_children</code> with the provided list …","Downcasts the <code>State</code> to <code>T</code> and returns a mutable reference …","Downcasts the <code>State</code> to <code>T</code> and returns a reference to it.","Creates an empty, stateless <code>Tree</code> with no children.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a new <code>State</code>.","Creates a new <code>Tree</code> for the provided <code>Widget</code>.","Creates a <code>Tag</code> for a state of type <code>T</code>.","","The <code>State</code> of the <code>Tree</code>.","Creates a <code>Tag</code> for a stateless widget.","The tag of the <code>Tree</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The window will always be below normal windows.","The window will always be on top of normal windows.","Redraw at the given time.","The window is completely centered on the screen.","The user has requested for the window to close.","A window was closed.","Platform-specific","The platform-specific default position for a new window.","A window-related event.","A file has been dropped into the window.","A file is being hovered over the window.","A file was hovered, but has exited the window.","A window was focused.","The application takes the whole screen of its current …","The application is hidden","","The id of the window.","Platform-specific","A window level groups windows with respect to their …","The reserved window <code>Id</code> for the first window in an Iced …","The mode of a window-based application.","A window was moved.","Redraw the next frame.","The default behavior.","A window was opened.","The position of a window in a given screen.","A request to redraw a window.","A window redraw was requested.","A window was resized.","","The window is positioned with specific coordinates: <code>(X, Y)</code>.","A window was unfocused.","The type of user attention to request.","The application appears in its own window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Change the icon of a window.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure your windows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new unique window <code>Id</code>.","","","","","","","","The new logical height of the window","The position of the opened window. This is relative to the …","The size of the created window. This is its “inner” …","The new logical width of the window","The new logical x location of the window","The new logical y location of the window","Produced when the length of the <code>rgba</code> argument isn’t …","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","An error produced when using <code>from_rgba</code> with invalid …","An window icon normally used for the titlebar or taskbar.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Builds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the raw data of the <code>Icon</code>.","","","","","","","","","","","","","","","","","","","","","","The length of the provided RGBA data.","The provided height.","The amount of pixels of the provided RGBA data.","The provided width.","The product of <code>width</code> and <code>height</code>.","The platform specific window settings of an application.","The window settings of an application.","","","Sets the application id of the window.","","","","","","","","","","","","","","","Whether the window should have a border, a title bar, etc. …","","","","","Whether the window will close when the user requests it, …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The icon of the window.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The window <code>Level</code>.","The maximum size of the window.","The minimum size of the window.","","","Platform specific settings.","The initial position of the window.","Whether the window should be resizable or not.","The initial logical dimensions of the window.","","","Whether the window should be transparent.","","","","","","","","","","","","","","","Whether the window should be visible or not.","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[2,2],-1,[]],[[[3,[-1]],[4,[-1]]],[[3,[-1]]],[[6,[],[[5,[]]]]]],[[[7,[-1]],[4,[-1]]],[[7,[-1]]],[[6,[],[[5,[]]]]]],[[[4,[-1]],[4,[-1]]],[[4,[-1]]],[[6,[],[[5,[]]]]]],[[2,2],8],0,[[[9,[-1]]],10,[]],[[[7,[11]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,13],[14,[[15,[11]]]],[12,13],[[[16,[-1,-2,-3]]],17,[],[],[]],[[[16,[-1,-2,-3]]],17,[],[],[]],0,0,0,[-1,-2,[],[]],[12,13],[[[16,[-1,-2,-3]]],17,[],[],[]],[-1,-2,[],[]],[[[16,[-1,-2,-3]]],17,[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[7,[11]]],3],[[[7,[11]]],11],[[[7,[11]]],11],0,[12,12],[18,18],[2,2],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[[[3,[-1]]],[[3,[-1]]],25],[[[7,[-1]]],[[7,[-1]]],25],[26,26],[[[27,[-1]]],[[27,[-1]]],25],[14,14],[[[4,[-1]]],[[4,[-1]]],25],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[12,12],28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[11]],3],10],[[],12],[[],20],[[],[[3,[-1]]],29],[[],[[7,[-1]]],29],[[],26],[[],[[27,[-1]]],29],[[],14],[[],[[4,[-1]]],29],[12,13],[[[3,[-1]],[3,[-1]]],-1,[30,31]],[[2,2],-1,[]],[[2,11],-1,[]],[[22,22],22],[[12,32],10],[[12,13],10],[[12,12],10],[[12,32],10],[[12,13],10],[[18,11],10],[[18,18],10],[[2,11],10],[[2,2],10],[[19,19],10],[[20,20],10],[[21,21],10],[[22,22],10],[[24,24],10],[[[3,[-1]],[3,[-1]]],10,33],[[[7,[-1]],[7,[-1]]],10,33],[[26,26],10],[[[27,[-1]],[27,[-1]]],10,33],[[14,14],10],[[[4,[-1]],[4,[-1]]],10,33],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[[7,[11]],11],[[7,[11]]]],[[27,-1],27,[[34,[27]]]],[[[16,[-1,-2,-3]],-4],[[16,[-1,-2,-3]]],[],[],35,[[34,[20]]]],[22,36],[[21,27,27],27],[[23,27,27],23],[22,22],[[12,37],[[39,[8,38]]]],[[12,37],[[39,[8,38]]]],[[18,37],40],[[2,37],40],[[19,37],40],[[20,37],40],[[21,37],40],[[22,37],40],[[23,37],40],[[24,37],40],[[[3,[-1]],37],40,41],[[[3,[-1]],37],40,42],[[[7,[-1]],37],40,41],[[26,37],40],[[[9,[-1]],37],40,41],[[[27,[-1]],37],40,41],[[14,37],40],[[[4,[-1]],37],40,41],0,[13,12],[32,12],[32,12],[[[43,[13]]],12],[13,12],[[[44,[13]]],12],[[[45,[13]]],12],[-1,-1,[]],[[[46,[-1,-2]]],[[16,[-3,-1,-2]]],47,48,[]],[13,[[16,[-1,-2,-3]]],[],47,48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,2],[18,2],[11,2],[-1,-1,[]],[20,19],[50,19],[51,19],[52,20],[-1,-1,[]],[[[15,[11]]],20],[[[15,[11]]],20],[53,20],[-1,-1,[]],[24,22],[-1,-1,[]],[11,22],[36,22],[11,23],[36,23],[-1,-1,[]],[[[15,[11]]],23],[[[15,[11]]],23],[[[15,[36]]],23],[[[15,[36]]],23],[11,24],[-1,-1,[]],[36,24],[-1,-1,[]],[[[8,[-1,-1]]],[[3,[-1]]],31],[[[15,[-1]]],[[3,[-1]]],31],[[[7,[54]]],[[7,[11]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[15,[-1]]],[[27,[-1]]],[]],[[[4,[-1]]],[[27,[-1]]],[]],[-1,-1,[]],[23,27],[[[8,[-1,-1]]],[[27,[-1]]],[]],[-1,-1,[]],[[[15,[-1]]],[[4,[-1]]],[]],[-1,-1,[]],[[[27,[-1]]],[[4,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,[[56,[2]]]],[57,[[56,[2]]]],[-1,12,[[59,[],[[58,[13]]]]]],[-1,12,[[59,[],[[58,[32]]]]]],[-1,12,[[59,[],[[58,[32]]]]]],[-1,12,[[59,[],[[58,[60]]]]]],[[11,11,11,11],20],[[11,11,11],20],[[49,49,49],20],[[11,11,11,11],20],[[49,49,49,11],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,[[39,[12]]]],[61,[[56,[2]]]],0,[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],0,[[12,-1],8,65],[[21,-1],8,65],[[[27,[-1]],-2],8,62,65],0,0,[23,11],0,[[[7,[11]],[7,[11]]],[[56,[[7,[11]]]]]],[[[7,[11]],[7,[11]]],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[15,[11]]]],[20,[[15,[49]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],8,[]],[[[9,[-1]]],8,[]],[20,20],[20,8],[12,10],[[[9,[-1]]],10,[]],[22,10],[12,10],[[[9,[-1]]],10,[]],[[[7,[11]],7],10],0,0,0,[12,66],[[[16,[-1,-2,-3]],-5],[[16,[-4,-2,-3]]],[],[],35,[],[[67,[-1],[[5,[-4]]]]]],[[27,27],27],[[[9,[-1]],[9,[-2]],-3],8,[],[],[[67,[-2],[[5,[-1]]]]]],[[27,27],27],0,[[2,11],-1,[]],[[2,2],-1,[]],[[24,11],24],[[3,14],3],[[[7,[11]],11],[[7,[11]]]],[[7,14],7],[[27,14],27],[[[27,[-1]],-1],-2,[[68,[],[[5,[]]]],69],[]],[[14,14],14],[[4,14],4],[[[4,[-1]],-1],[[4,[-1]]],[[68,[],[[5,[]]]],69]],[-1,12,[[70,[13]]]],[-4,[[16,[-1,-2,-3]]],[],[],35,[[17,[-1,-2,-3]]]],[[11,11,11,11],20],[11,23],[[-1,-1],[[3,[-1]]],31],[[3,27],[[7,[11]]]],[[[71,[-1]]],[[9,[-1]]],[]],[[-1,-1],[[27,[-1]]],[]],[[-1,-1],[[4,[-1]]],[]],[13,12],[[66,[72,[49]]],12],[13,12],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[54,54],14],0,[[12,12],[[56,[28]]]],[[18,11],[[56,[28]]]],[[18,18],[[56,[28]]]],[[2,2],[[56,[28]]]],[[2,11],[[56,[28]]]],[[24,24],[[56,[28]]]],[[[7,[11]]],3],[[[9,[-1]],-1],8,[]],0,[[[9,[-1]]],[[56,[73]]],[]],0,[[[9,[-1]],73],8,[]],[[[9,[-1]],-2],8,[],74],0,[11,14],[[19,11],19],[[20,11],20],[14,11],[[[7,[11]]],27],[[[7,[11]]],[[56,[[7,[54]]]]]],[[2,2],-1,[]],[[[3,[-1]],[4,[-1]]],[[3,[-1]]],[[75,[],[[5,[]]]]]],[[[3,[-1]],[3,[-1]]],[[4,[-1]]],[[75,[],[[5,[]]]]]],[[[7,[-1]],[4,[-1]]],[[7,[-1]]],[[75,[],[[5,[]]]]]],[[[27,[-1]],[27,[-1]]],-2,[[75,[],[[5,[]]]]],[]],[[[4,[-1]],[4,[-1]]],[[4,[-1]]],[[75,[],[[5,[]]]]]],[[2,2],8],0,0,0,0,[[2,7],[[8,[3,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[12,32],[-1,32,[]],[-1,32,[]],0,0,[[11,11],14],[14,4],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[11]],[7,[11]]],[[7,[11]]]],[23,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[27,[-1]]],[[7,[-1]]],29],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,78],[79,79],[80,80],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[78,78],10],[[79,79],10],[[80,80],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[78,37],40],[[79,37],40],[[80,37],40],[80,78],[79,78],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[78,-1],8,65],[[79,-1],8,65],[[80,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[82,82],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],81],[[],82],[[81,81],10],[[82,82],10],[[81,37],40],[[82,37],40],[-1,-1,[]],[[[15,[11]]],82],[83,82],[-1,-1,[]],[11,82],[36,82],[49,82],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],0,[-1,81,[[34,[82]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[81,-1],81,[[34,[20]]]],[[81,-1],81,[[34,[82]]]],[[81,-1],81,[[34,[24]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[85,85],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[84,84],10],[[-1,-2],10,[],[]],[[84,37],40],[[85,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[86,84],[[56,[32]]]],[[85,84],[[56,[32]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[86,84,32],8],[[85,84,32],8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[88,88],[89,89],[90,90],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,87],10],[[88,88],10],[[89,89],10],[[90,90],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[87,37],40],[[88,37],40],[[89,37],40],[[90,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[90,90],90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[92,92],[93,93],[94,94],[95,95],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],91],[[],92],[[],93],[[],94],[[],95],[[91,91],10],[[92,92],10],[[93,93],10],[[94,94],10],[[95,95],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[91,37],40],[[92,37],40],[[93,37],40],[[94,37],40],[[95,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[91,-1],8,65],[[92,-1],8,65],[[93,-1],8,65],[[94,-1],8,65],[[95,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[13,91],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[50,11,20],50],[[50,-1],50,[[59,[],[[58,[96]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[96,96],[50,50],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],96],[[51,51],10],[[96,96],10],[[50,50],10],[[51,37],40],[[96,37],40],[[50,37],40],[50,51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,50,[[34,[2]]]],[[],-1,[]],0,[[51,11],51],[[50,11],50],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,[[72,[49]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[97,97],[99,99],[100,100],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,99],[[],100],[97,[[72,[49]]]],[[[102,[],[[101,[-1]]]],-1,100,7],8,[25,62]],[-1,-2,[],[[103,[60]]]],[-1,-2,[],[[103,[60]]]],[[98,98],10],[[97,97],10],[[99,99],10],[[100,100],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[98,37],40],[[97,37],40],[[99,37],40],[[100,37],40],[-1,-1,[]],[-1,98,[[34,[104]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,98,[[70,[[72,[49]]]],105,106]],[-1,98,[[34,[104]]]],[[54,54,-1],98,[[70,[[72,[49]]]],105,106]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[98,-1],8,65],[[97,-1],8,65],[[99,-1],8,65],[[100,-1],8,65],[98,61],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[102,[],[[101,[-1]]]],-1],[[27,[54]]],[25,62]],[-1,97,[[70,[[72,[49]]]],105,106]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[],107],[107,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,107],107],[[107,107],8],[[107,107],107],[[107,107],8],[107,54],[107,54],[[107,107],107],[[107,107],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108,108],[109,109],[107,107],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[107,107],28],[107,10],[107,107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,107],10],[107,10],[[],107],[[107,107],107],[[],107],[[108,108],10],[[109,109],10],[[107,107],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[107,-1],8,[[59,[],[[58,[107]]]]]],[[108,37],40],[[109,37],40],[[107,37],40],[[107,37],40],[[107,37],40],[[107,37],40],[[107,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[54,[[56,[107]]]],[54,107],[54,107],[54,107],[-1,107,[[59,[],[[58,[107]]]]]],[13,[[56,[107]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[107,-1],8,65],[[107,107],8],[[107,107],107],[[107,107],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,10],[107,10],[107,[[110,[107]]]],[107,[[111,[107]]]],0,[107,10],[107,107],[[],-1,[]],[[107,107],[[56,[28]]]],[[107,107],8],[[107,107,10],8],[107,10],[[107,107],107],[[107,107],8],[[107,107],107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,107],8],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,107],107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,[[112,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]]],[[112,[-1]]],25],[113,113],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[112,[-1]],[112,[-1]]],28,114],[[113,113],28],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]],[112,[-1]]],10,33],[[113,113],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[112,[-1]],37],40,41],[[113,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[[112,[-1]],-2],8,62,65],[[113,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]],[112,[-1]]],[[56,[28]]],115],[[113,113],[[56,[28]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[116,78,78,27],116],[[116,78,78,27],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[117,-1,-2],116,[[34,[22]]],[[34,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,7],[118,7],[116,[[72,[116]]]],[118,[[0,[[119,[],[[58,[118]]]]]]]],[117,117],[116,116],[118,118],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[117,-1,-2,-3],116,[[34,[22]]],[[34,[22]]],[[74,[117],[[5,[116]]]]]],[[116,23],116],[[],116],[[117,117],10],0,[[117,37],40],[[116,37],40],[[118,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[117,-1],117,[[34,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[117,27],[[117,11],117],[[117,11],117],[117,27],[[117,11],117],[[117,11],117],[[116,-1],116,[[34,[3]]]],[[116,-1],8,[[34,[3]]]],[[27,27],117],[27,116],[116,118],[[117,11,-1,-2],116,[[74,[117],[[5,[116]]]]],[[74,[117],[[5,[116]]]]]],[[],-1,[]],[[117,-1,-2,-3,-4],116,[[34,[22]]],[[34,[22]]],[[34,[23]]],[[74,[117],[[5,[116]]]]]],[118,3],[[117,-1,-2,-3,-4,-5],116,[[34,[22]]],[[34,[22]]],[[34,[23]]],[[74,[117],[[5,[116]]]]],[[74,[116,27],[[5,[116]]]]]],[[117,-1,-2,27],27,[[34,[22]]],[[34,[22]]]],[[117,-1],117,[[34,[27]]]],[116,27],[[117,-1,-2,-3],116,[[34,[22]]],[[34,[22]]],[[74,[117],[[5,[27]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[116,-1],116,[[34,[4]]]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[117,-1],117,[[34,[22]]]],[[27,[71,[116]]],116],[[4,116],118],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[120,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[120,-1,117,22,22,23,11,78,[72,[[16,[-2,-3,-1]]]],[72,[121]]],116,35,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[122,122],[123,123],[124,124],[125,125],[126,126],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[126,126],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],123],[[],126],[[122,122],10],[[123,123],10],[[124,124],10],[[125,125],10],[[126,126],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[122,37],40],[[123,37],40],[[124,37],40],[[125,37],40],[[126,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[122,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[123,7],10],[[],-1,[]],[[],-1,[]],[[126,126],[[56,[28]]]],[123,[[56,[3]]]],[[123,3],[[56,[3]]]],[[123,7],[[56,[3]]]],[[123,7],[[56,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[127,127],[128,128],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,37],40],[[128,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[127,128],[[3,[56,[127]]],127],[127,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[129,[-1,-2,-3]]],[],[],35],[[130,-1,-2,131,118,123],8,35,[]],[[[132,[-1,-2,-3]],-3,-2,131,118,123],8,[],[],35],[[[129,[-1,-2,-3]],-3,-2,131,118,123],8,[],[],35],[-1,-1,[]],[[[129,[-1,-2,-3]]],[[132,[-1,-2,-3]]],[],[],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[72,[[16,[-1,-2,-3]]]],121,118,-3,4],[[56,[[132,[-1,-2,-3]]]]],[],[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[132,[-1,-2,-3]],118,-3,3],10,[],[],35],[[[129,[-1,-2,-3]],118,-3,3],10,[],[],35],[[130,118,-1,3],10,35],[[130,-1,27],116,35],[[[132,[-1,-2,-3]],-3,27],116,[],[],35],[[[129,[-1,-2,-3]],-3,27],116,[],[],35],[[[132,[-1,-2,-3]],67],[[132,[-4,-2,-3]]],[],[],35,[]],[[[132,[-1,-2,-3]],118,123,7,-3],126,[],[],35],[[[129,[-1,-2,-3]],118,123,7,-3],126,[],[],35],[[130,118,123,7,-1],126,35],[[[43,[130]]],[[132,[-1,-2,-3]]],[],[],35],[[],[[129,[-1,-2,-3]]],[],[],35],[[],-1,[]],[[[132,[-1,-2,-3]],87,118,123,-3,86,[9,[-1]]],90,[],[],35],[[[129,[-1,-2,-3]],87,118,123,-3,86,[9,[-1]]],90,[],[],35],[[130,87,118,123,-1,86,[9,[-2]]],90,35,[]],[[[132,[-1,-2,-3]],118,-3,133],8,[],[],35],[[[129,[-1,-2,-3]],118,-3,133],8,[],[],35],[[130,118,-1,133],8,35],[[[132,[-1,-2,-3]],118,-3],[[56,[[132,[-1,-2,-3]]]]],[],[],35],[[[129,[-1,-2,-3]]],[[132,[-1,-2,-3]]],[],[],35],[[[129,[-1,-2,-3]],118,-3],[[56,[[132,[-1,-2,-3]]]]],[],[],35],[[130,118,-1],[[56,[[132,[-2,-3,-1]]]]],35,[],[]],[[[129,[-1,-2,-3]],-4],[[129,[-1,-2,-3]]],[],[],35,[[34,[[132,[-1,-2,-3]]]]]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[71,[[132,[-1,-2,-3]]]]],[[129,[-1,-2,-3]]],[],[],35],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[35,8],[134,134],[131,131],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],134],[[],131],[35,8],[35,8],[[134,134],10],[[131,131],10],[[35,134,-1],8,[[34,[19]]]],[[134,37],40],[[131,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],0,[[35,7],8],[[35,14],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[35,7,-1],8,[[74,[35]]]],[[35,14,-1],8,[[74,[35]]]],[[35,4,-1],8,[[74,[35]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,135],[136,136],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,136],[[137,135,[56,[20]],7],8],[[135,135],10],[[136,136],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[135,37],40],[[136,37],40],[-1,-1,[]],[-1,135,[[34,[104]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,135,[[34,[[44,[[72,[49]]]]]]]],[-1,135,[[34,[104]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[135,-1],8,65],[[136,-1],8,65],[135,61],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[137,135],[[27,[54]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[138,[-1,-2]]],[[138,[-1,-2]]],25,25],[139,139],[140,140],[141,141],[142,142],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[144,[],[[143,[-1]]]],[138,[13,-1]]],142,[69,33]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[141,66],[[],139],[[],140],[[[48,[],[[143,[-1]],[145,[-2]],[146,[-3]]]]],-1,[69,33],[[144,[],[[143,[-1]]]]],[[147,[],[[143,[-1]]]]]],[[[48,[],[[143,[-1]],[145,[-2]],[146,[-3]]]]],24,[69,33],[[144,[],[[143,[-1]]]]],[[147,[],[[143,[-1]]]]]],0,[[139,139],10],[[140,140],10],[[141,141],10],[[142,142],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[48,[],[[143,[-1]],[145,[-2]],[146,[-3]]]],-3,3,20,7],8,[69,33],[[144,[],[[143,[-1]]]]],[[147,[],[[143,[-1]]]]]],[[[48,[],[[143,[-1]],[145,[-2]],[146,[-3]]]],-2,3,20,7],8,[69,33],[[144,[],[[143,[-1]]]]],[[147,[],[[143,[-1]]]]]],[[[48,[],[[143,[-1]],[145,[-2]],[146,[-3]]]],[138,[32,-1]],3,20,7],8,[69,33],[[144,[],[[143,[-1]]]]],[[147,[],[[143,[-1]]]]]],[[[138,[-1,-2]],37],40,41,41],[[139,37],40],[[140,37],40],[[141,37],40],[[142,37],40],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,140],[11,140],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[[144,[],[[143,[-1]]]],66,66],[[56,[3]]],[69,33]],[[139,-1],8,65],[[140,-1],8,65],0,[[[144,[],[[143,[-1]]]],3],[[56,[141]]],[69,33]],[[[144,[],[[143,[-1]]]]],79,[69,33]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[144,[],[[143,[-1]]]]],27,[69,33]],[[[144,[],[[143,[-1]]]]],11,[69,33]],[[[144,[],[[143,[-1]]]]],11,[69,33]],[[[144,[],[[143,[-1]]]]],11,[69,33]],[[[144,[],[[143,[-1]]]]],11,[69,33]],[[],-1,[]],[[],-1,[]],[[[144,[],[[143,[-1]]]],27],8,[69,33]],0,0,[[140,24],24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[],[[143,[-1]]]],[138,[13,-1]]],8,[69,33]],[[[144,[],[[143,[-1]]]],[138,[13,-1]]],8,[69,33]],[[[144,[],[[143,[-1]]]]],80,[69,33]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[138,[13,-1]]],[[144,[],[[143,[-1]]]]],[69,33]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[],[[143,[-1]]]]],27,[69,33,29]],[148,148],[149,149],[150,150],[151,151],[152,152],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[],[[143,[-1]]]]],152,[69,33,29]],[[[147,[],[[143,[-1]]]]],[[8,[66,66]]],[69,33,29]],[150,151],[[148,148],10],[[149,149],10],[[150,150],10],[[151,151],10],[[-1,-2],10,[],[]],[[148,37],40],[[149,37],40],[[150,37],40],[[151,37],40],[[152,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[],[[143,[-1]]]],-1,-2,-3],8,[69,33,29],153,[[67,[],[[5,[[154,[-1]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[148,10],[[[147,[],[[143,[-1]]]],66],[[56,[13]]],[69,33,29]],[[[147,[],[[143,[-1]]]]],66,[69,33,29]],[[[147,[],[[143,[-1]]]]],27,[69,33,29]],[[[147,[],[[143,[-1]]]],148],8,[69,33,29]],[[[147,[],[[143,[-1]]]]],[[56,[32]]],[69,33,29]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[],[[143,[-1]]]],27,-1,24,140,-2],8,[69,33,29],153],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[150,150],[13,[[147,[],[[143,[-1]]]]],[69,33,29]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[153,[],[[155,[-1]],[156,[-2]],[157,[-3]]]],66],8,[33,25],[],[[159,[],[[58,[[8,[[158,[66]],-2]]]]]]]],[[160,66],8],[160,160],[[[154,[-1]]],[[154,[-1]]],25],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[153,[],[[155,[-1]],[156,[-2]],[157,[-3]]]]],66,[33,25],[],[[159,[],[[58,[[8,[[158,[66]],-2]]]]]]]],[160,66],[[],[[154,[-1]]],[]],[[[154,[-1]],[154,[-1]]],10,33],[[160,37],40],[[[154,[-1]],37],40,41],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[153,[],[[155,[-1]],[156,[-2]],[157,[-3]]]],13],-3,[33,25],[],[[159,[],[[58,[[8,[[158,[66]],-2]]]]]]]],[[160,13],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[153,[],[[155,[-1]],[156,[-2]],[157,[-3]]]]],[33,25],[],[[159,[],[[58,[[8,[[158,[66]],-2]]]]]]]],[-1,160,[]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[153,[],[[155,[-1]],[156,[-2]],[157,[-3]]]],-1],8,[33,25],[],[[159,[],[[58,[[8,[[158,[66]],-2]]]]]]]],[[160,-1],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,161],[162,162],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,163],161],[[32,163,-1],161,[[74,[163],[[5,[164]]]]]],[[],161],[[],-1,[]],[[161,161],10],[[162,162],10],[161,164],[[161,37],40],[[161,37],40],[[162,37],40],[[162,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,163],162],[[],-1,[]],0,[161,163],[[161,-1],165,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[-1,32,[]],[-1,32,[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,163,-1],162,[[74,[163],[[5,[164]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[163,163],[164,164],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[163,163],10],[[164,164],10],[[166,166],10],[[167,167],10],[[168,168],10],[[169,169],10],[[170,170],10],[[171,171],10],[[163,37],40],[[164,37],40],[[166,37],40],[[167,37],40],[[168,37],40],[[169,37],40],[[170,37],40],[[171,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[163,164],[[20,20,20],168],[[20,20],169],[[20,20,20],170],[[20,20,20],171],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[20,20],166],[[20,20],167],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[172,172],172],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[173,172],173],[[172,172],172],[[173,172],8],[[172,172],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,174],[172,174],[172,174],[172,61],[172,11],[172,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[173,172],[[56,[173]]]],[[172,172],[[56,[172]]]],[[172,54],[[56,[172]]]],[[173,173],[[56,[172]]]],[[172,54],[[56,[172]]]],[[173,172],[[56,[173]]]],[[172,172],[[56,[172]]]],[173,173],[172,172],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[173,173],28],[[172,172],28],[-1,-2,[],[]],[-1,-2,[],[]],[[],172],[-1,[[39,[172]]],175],[-1,[[39,[176]]],[[178,[177]]]],[[172,54],172],[[172,54],8],[[172,172],11],[[172,172],55],[[172,11],172],[[172,55],172],[[173,173],172],[-1,177,[]],[173,172],[[173,173],10],[[172,172],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[173,37],[[39,[8,38]]]],[[172,37],[[39,[8,38]]]],[-1,-1,[]],[179,172],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[61,172],[61,172],[61,172],[61,172],[11,172],[55,172],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[-1,-2],61,[62,63],64],[[173,-1],8,65],[[172,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,10],[[172,54],172],[[172,54],8],[[172,11],172],[[172,55],172],[[61,54],172],[[],173],[[],-1,[]],[[173,173],[[56,[28]]]],[[172,172],[[56,[28]]]],[[172,172],172],[[173,173],172],[[172,54],172],[[172,172],172],[[172,-1],39,180],[[],177],[[173,173],172],[[173,172],173],[[172,172],172],[[173,172],8],[[172,172],8],[172,54],[172,54],[172,54],[-1,172,[[159,[],[[58,[172]]]]]],[-1,172,[[159,[],[[58,[172]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[11,[[39,[172,181]]]],[55,[[39,[172,181]]]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[182,182],[183,183],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[182,182],10],[[183,183],10],[[-1,-2],10,[],[]],[[182,37],40],[[183,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[183,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[71,[121]]]],[184,184],[[-1,-2],8,[],[]],[-1,-2,[],[]],[[17,121],8],[[17,121,-1,-2,131,118,123,7],8,35,[]],[[184,184],10],[[-1,-2],10,[],[]],[[184,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[184,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,121,-1,117],116,35],[[17,121,118,123,7,-1],126,35],[-1,184,[[34,[[44,[13]]]]]],[[17,121,87,118,123,-1,86,[9,[-2]],7],90,35,[]],[[17,121,118,-1,133],8,35],0,[[17,121,118,-1,4],[[56,[[132,[-2,-3,-1]]]]],35,[],[]],[17,[[27,[22]]]],[17,[[27,[22]]]],[17,185],[17,186],0,[-1,-2,[],[]],0,[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],184],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[133,[56,[184]],7,187],8],[[133,188,[56,[184]]],8],[133,[[189,[-1]]],[]],[[[189,[-1]],37],40,41],0,[[133,190,[56,[184]]],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[133]],-3],[[0,[[133,[-2]]]]],[],[],[[67,[-1],[[5,[-2]]]]]],[[184,-2],[[0,[[133,[-1]]]]],[],[[133,[-1]]]],0,[[133,191,[56,[184]],7,4],8],0,[[133,192,[56,[184]]],8],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[193,193],[[-1,-2],8,[],[]],[-1,-2,[],[]],[[],[[0,[[133,[-1]]]]],[]],[[],193],[[193,193],10],[[-1,-2],10,[],[]],[[],[[0,[[133,[184]]]]]],[[193,37],40],[184,[[0,[[133,[-1]]]]],[]],[190,8],[[],[[0,[[133,[-1]]]]],[]],[[],[[0,[[133,[-1]]]]],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[190,10],[[],-1,[]],[-1,-2,[],[]],0,[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[190,8],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[194,194],[195,195],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],194],[[],195],[[194,194],10],[[195,195],10],[[194,37],40],[[195,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[[184,194],[[0,[[133,[-1]]]]],[]],[[191,194],8],[[184,195],[[0,[[133,[-1]]]]],[]],[[191,195],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[184,66],[[0,[[133,[-1]]]]],[]],[[192,66],8],[184,[[0,[[133,[-1]]]]],[]],[192,8],[184,[[0,[[133,[-1]]]]],[]],[192,8],[184,[[0,[[133,[-1]]]]],[]],[192,8],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,34],[165,165],[[-1,-2],8,[],[]],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[34,[20]]]],0,[[[46,[-1,-2]],[56,[-3]]],[[46,[-1,-2]]],47,48,[[34,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],[[196,[-1]]],[29,144]],[[],165],[[-1,131,118,196,165,7],8,48],[[[46,[-1,-2]],121,-2,-1,131,118,123,7],8,47,48],[[[196,[-1]],37],40,[41,144]],[[165,37],40],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,34],[13,[[46,[-1,-2]]],47,48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[34,[22]]]],[[[46,[-1,-2]],79],[[46,[-1,-2]]],47,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[197,198],[198,198],[198,198],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[196,-1,117,22,22,13,140,[56,[24]],56,79,80,139],116,48],[[[46,[-1,-2]],121,-2,117],116,47,48],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[34,[140]]]],[-1,[[46,[-2,-3]]],197,47,48],[[],-1,[]],[[],-1,[]],[[[46,[-1,-2]],139],[[46,[-1,-2]]],47,48],[[[46,[-1,-2]]],[[27,[22]]],47,48],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[34,[24]]]],[[[46,[-1,-2]]],185,47,48],[[[47,[],[[199,[-1]]]],-1],165,[]],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[67,[-1],[[5,[165]]]]]],[[[46,[-1,-2]]],186,47,48],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]],80],[[46,[-1,-2]]],47,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]],-3],[[46,[-1,-2]]],47,48,[[34,[22]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[186,186],[[-1,-2],8,[],[]],[[186,186],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[121,-1],8,[[200,[17]]]],[[121,[72,[-1]]],8,[[200,[17]]]],[[121,[72,[-1]],-2,-3],8,[],[[67,[121,-1]]],[[67,[-1],[[5,[121]]]]]],[[[71,[121]],[72,[-1]],-2,-3,-4],8,[],[[67,[121,-1]]],[[67,[66],[[5,[10]]]]],[[67,[-1],[[5,[121]]]]]],[185,-1,[]],[185,-1,[]],[[],121],[[186,186],10],[[-1,-2],10,[],[]],[[185,37],40],[[121,37],40],[[186,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[186,-1],8,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,185,[]],[-1,121,[[200,[17]]]],[[],186],[[186,186],[[56,[28]]]],0,[[],186],0,[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[201,201],[202,202],[203,203],[204,204],[205,205],[73,73],[206,206],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[202,202],28],[[73,73],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],203],[[],205],[[201,201],10],[[202,202],10],[[203,203],10],[[204,204],10],[[205,205],10],[[73,73],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[201,37],40],[[202,37],40],[[203,37],40],[[204,37],40],[[205,37],40],[[73,37],40],[[206,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],61,[62,63],64],[[202,-1],8,65],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[[202,202],[[56,[28]]]],[[73,73],[[56,[28]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],202],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,207],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[207,37],40],[[208,37],40],[[208,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[71,[49]],54,54],[[39,[207,208]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,[[8,[[71,[49]],[27,[54]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,32,[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,209],[210,210],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],209],[[],210],[[209,209],10],[[-1,-2],10,[],[]],0,[[209,37],40],[[210,37],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],-1,[]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,[[39,[-2,[76,[-2]]]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[524],"p":[[10,"TransformMatrix",4584],[5,"Radians",0],[5,"Point",0],[5,"Vector",0],[17,"Output"],[10,"Add",4585],[5,"Rectangle",0],[1,"tuple"],[5,"Shell",0],[1,"bool"],[1,"f32"],[5,"SmolStr",0],[1,"str"],[5,"Transformation",0],[1,"array"],[5,"Element",0],[10,"Widget",3776],[5,"Degrees",0],[6,"Background",0],[5,"Color",0],[6,"ContentFit",0],[6,"Length",0],[5,"Padding",0],[5,"Pixels",0],[10,"Clone",4586],[5,"Shadow",0],[5,"Size",0],[6,"Ordering",4587],[10,"Default",4588],[10,"Float",4589],[10,"Num",4590],[5,"String",4591],[10,"PartialEq",4587],[10,"Into",4592],[10,"Renderer",2562],[1,"u16"],[5,"Formatter",4593],[5,"Error",4593],[6,"Result",4594],[8,"Result",4593],[10,"Debug",4593],[10,"Display",4593],[5,"Box",4595],[6,"Cow",4596],[5,"Arc",4597],[5,"Text",3992],[10,"Catalog",3992],[10,"Renderer",2708],[1,"u8"],[5,"Linear",1305],[6,"Gradient",1305],[8,"Srgb",4598],[8,"Srgba",4598],[1,"u32"],[1,"f64"],[6,"Option",4599],[1,"i64"],[17,"Item"],[10,"IntoIterator",4600],[1,"char"],[1,"u64"],[10,"Hash",4601],[10,"Sized",4602],[10,"BuildHasher",4601],[10,"Hasher",4601],[1,"usize"],[10,"Fn",4603],[10,"Mul",4585],[10,"Copy",4602],[10,"AsRef",4592],[5,"Vec",4604],[1,"slice"],[6,"RedrawRequest",4203],[10,"FnOnce",4603],[10,"Sub",4585],[5,"OutOfBounds",4605],[5,"TypeId",4606],[6,"Alignment",742],[6,"Horizontal",742],[6,"Vertical",742],[5,"Border",846],[5,"Radius",846],[1,"i32"],[6,"Kind",918],[5,"Null",918],[10,"Clipboard",918],[6,"Event",981],[6,"PlatformSpecific",981],[6,"MacOS",981],[6,"Status",981],[5,"Font",1106],[6,"Family",1106],[6,"Weight",1106],[6,"Stretch",1106],[6,"Style",1106],[5,"ColorStop",1305],[5,"Bytes",1402],[5,"Handle",1402],[6,"Data",1402],[6,"FilterMethod",1402],[17,"Handle"],[10,"Renderer",1402],[10,"FromIterator",4600],[5,"PathBuf",4607],[10,"Send",4602],[10,"Sync",4602],[5,"Modifiers",1551],[6,"Event",1551],[6,"Location",1551],[5,"Iter",4608],[5,"IterNames",4608],[6,"Key",1710],[6,"Named",1710],[10,"Ord",4587],[10,"PartialOrd",4587],[5,"Node",2086],[5,"Limits",2086],[5,"Layout",2086],[10,"DoubleEndedIterator",4609],[6,"Axis",2206],[5,"Tree",4106],[6,"Button",2233],[6,"Cursor",2233],[6,"Event",2233],[6,"ScrollDelta",2233],[6,"Interaction",2233],[5,"Click",2424],[6,"Kind",2424],[5,"Group",2484],[10,"Overlay",2484],[5,"Style",2562],[5,"Element",2484],[10,"Operation",3828],[5,"Quad",2562],[5,"Handle",2636],[6,"Data",2636],[10,"Renderer",2636],[5,"Text",2708],[6,"Shaping",2708],[6,"LineHeight",2708],[6,"Hit",2708],[6,"Difference",2708],[17,"Font"],[10,"Paragraph",2708],[17,"Paragraph"],[17,"Editor"],[10,"Editor",2909],[6,"Action",2909],[6,"Edit",2909],[6,"Motion",2909],[6,"Direction",2909],[6,"Cursor",2909],[10,"Highlighter",3095],[5,"Format",3095],[17,"Settings"],[17,"Highlight"],[17,"Iterator"],[5,"Range",4610],[10,"Iterator",4611],[5,"PlainText",3095],[6,"Theme",3168],[5,"Custom",3168],[5,"Palette",3266],[5,"Extended",3266],[5,"Style",3992],[5,"Pair",3266],[5,"Background",3266],[5,"Primary",3266],[5,"Secondary",3266],[5,"Success",3266],[5,"Danger",3266],[5,"Duration",3569],[5,"Instant",3569],[1,"u128"],[10,"Deserializer",4612],[6,"Error",4613],[5,"Signature",4614],[10,"TryInto",4592],[5,"TimeSpec",4615],[10,"Serializer",4616],[5,"TryFromFloatSecsError",4617],[6,"Event",3705],[5,"Finger",3705],[5,"Id",3776],[6,"State",4106],[5,"Tag",4106],[10,"FnMut",4603],[10,"Any",4606],[6,"Outcome",3828],[10,"Focusable",3870],[10,"Scrollable",3912],[10,"TextInput",3983],[5,"Count",3870],[5,"AbsoluteOffset",3912],[5,"RelativeOffset",3912],[5,"State",3992],[10,"IntoFragment",3992],[8,"Fragment",3992],[17,"Class"],[10,"Borrow",4618],[6,"Event",4203],[5,"Id",4203],[6,"Level",4203],[6,"Mode",4203],[6,"Position",4203],[6,"UserAttention",4203],[5,"Icon",4448],[6,"Error",4448],[5,"PlatformSpecific",4511],[5,"Settings",4511],[15,"Rgba",1548],[15,"KeyPressed",1703],[15,"KeyReleased",1703],[15,"WheelScrolled",2418],[15,"CursorMoved",2418],[15,"Lines",2420],[15,"Pixels",2420],[15,"Scroll",3094],[15,"FingerPressed",3768],[15,"FingerMoved",3768],[15,"FingerLifted",3768],[15,"FingerLost",3768],[15,"Resized",4442],[15,"Opened",4442],[15,"Moved",4442],[15,"ByteCountNotDivisibleBy4",4506],[15,"DimensionsVsPixelCount",4506]],"b":[[123,"impl-Borrow%3Cdyn+Widget%3CMessage,+Theme,+Renderer%3E%3E-for-Element%3C\'a,+Message,+Theme,+Renderer%3E"],[125,"impl-Borrow%3Cdyn+Widget%3CMessage,+Theme,+Renderer%3E%3E-for-%26Element%3C\'a,+Message,+Theme,+Renderer%3E"],[224,"impl-Div-for-Radians"],[225,"impl-Div%3Cf32%3E-for-Radians"],[227,"impl-PartialEq%3CString%3E-for-SmolStr"],[228,"impl-PartialEq%3Cstr%3E-for-SmolStr"],[229,"impl-PartialEq-for-SmolStr"],[230,"impl-PartialEq%3C%26String%3E-for-SmolStr"],[231,"impl-PartialEq%3C%26str%3E-for-SmolStr"],[232,"impl-PartialEq%3Cf32%3E-for-Degrees"],[233,"impl-PartialEq-for-Degrees"],[234,"impl-PartialEq%3Cf32%3E-for-Radians"],[235,"impl-PartialEq-for-Radians"],[261,"impl-Display-for-SmolStr"],[262,"impl-Debug-for-SmolStr"],[271,"impl-Debug-for-Point%3CT%3E"],[272,"impl-Display-for-Point%3CT%3E"],[280,"impl-From%3C%26mut+str%3E-for-SmolStr"],[281,"impl-From%3C%26String%3E-for-SmolStr"],[282,"impl-From%3CString%3E-for-SmolStr"],[283,"impl-From%3CBox%3Cstr%3E%3E-for-SmolStr"],[284,"impl-From%3C%26str%3E-for-SmolStr"],[285,"impl-From%3CCow%3C\'a,+str%3E%3E-for-SmolStr"],[286,"impl-From%3CArc%3Cstr%3E%3E-for-SmolStr"],[288,"impl-From%3CText%3C\'a,+Theme,+Renderer%3E%3E-for-Element%3C\'a,+Message,+Theme,+Renderer%3E"],[289,"impl-From%3C%26str%3E-for-Element%3C\'a,+Message,+Theme,+Renderer%3E"],[293,"impl-From%3Cu8%3E-for-Radians"],[294,"impl-From%3CDegrees%3E-for-Radians"],[295,"impl-From%3Cf32%3E-for-Radians"],[297,"impl-From%3CColor%3E-for-Background"],[298,"impl-From%3CLinear%3E-for-Background"],[299,"impl-From%3CGradient%3E-for-Background"],[300,"impl-From%3CRgb%3E-for-Color"],[302,"impl-From%3C%5Bf32;+4%5D%3E-for-Color"],[303,"impl-From%3C%5Bf32;+3%5D%3E-for-Color"],[304,"impl-From%3CAlpha%3CRgb,+f32%3E%3E-for-Color"],[306,"impl-From%3CPixels%3E-for-Length"],[308,"impl-From%3Cf32%3E-for-Length"],[309,"impl-From%3Cu16%3E-for-Length"],[310,"impl-From%3Cf32%3E-for-Padding"],[311,"impl-From%3Cu16%3E-for-Padding"],[313,"impl-From%3C%5Bf32;+4%5D%3E-for-Padding"],[314,"impl-From%3C%5Bf32;+2%5D%3E-for-Padding"],[315,"impl-From%3C%5Bu16;+2%5D%3E-for-Padding"],[316,"impl-From%3C%5Bu16;+4%5D%3E-for-Padding"],[317,"impl-From%3Cf32%3E-for-Pixels"],[319,"impl-From%3Cu16%3E-for-Pixels"],[321,"impl-From%3C(T,+T)%3E-for-Point%3CT%3E"],[322,"impl-From%3C%5BT;+2%5D%3E-for-Point%3CT%3E"],[327,"impl-From%3C%5BT;+2%5D%3E-for-Size%3CT%3E"],[328,"impl-From%3CVector%3CT%3E%3E-for-Size%3CT%3E"],[330,"impl-From%3CPadding%3E-for-Size"],[331,"impl-From%3C(T,+T)%3E-for-Size%3CT%3E"],[333,"impl-From%3C%5BT;+2%5D%3E-for-Vector%3CT%3E"],[335,"impl-From%3CSize%3CT%3E%3E-for-Vector%3CT%3E"],[355,"impl-FromIterator%3C%26str%3E-for-SmolStr"],[356,"impl-FromIterator%3CString%3E-for-SmolStr"],[357,"impl-FromIterator%3C%26String%3E-for-SmolStr"],[358,"impl-FromIterator%3Cchar%3E-for-SmolStr"],[503,"impl-Mul%3Cf32%3E-for-Radians"],[504,"impl-Mul-for-Radians"],[507,"impl-Mul%3Cf32%3E-for-Rectangle"],[508,"impl-Mul%3CTransformation%3E-for-Rectangle"],[509,"impl-Mul%3CTransformation%3E-for-Size"],[510,"impl-Mul%3CT%3E-for-Size%3CT%3E"],[512,"impl-Mul%3CTransformation%3E-for-Vector"],[513,"impl-Mul%3CT%3E-for-Vector%3CT%3E"],[538,"impl-PartialOrd%3Cf32%3E-for-Degrees"],[539,"impl-PartialOrd-for-Degrees"],[540,"impl-PartialOrd-for-Radians"],[541,"impl-PartialOrd%3Cf32%3E-for-Radians"],[558,"impl-Sub%3CVector%3CT%3E%3E-for-Point%3CT%3E"],[559,"impl-Sub-for-Point%3CT%3E"],[787,"impl-From%3CVertical%3E-for-Alignment"],[788,"impl-From%3CHorizontal%3E-for-Alignment"],[872,"impl-From%3C%5Bf32;+4%5D%3E-for-Radius"],[873,"impl-From%3Ci32%3E-for-Radius"],[875,"impl-From%3Cf32%3E-for-Radius"],[876,"impl-From%3Cu16%3E-for-Radius"],[877,"impl-From%3Cu8%3E-for-Radius"],[1582,"impl-Modifiers"],[1583,"impl-Flags-for-Modifiers"],[1618,"impl-Debug-for-Modifiers"],[1619,"impl-LowerHex-for-Modifiers"],[1620,"impl-Binary-for-Modifiers"],[1621,"impl-UpperHex-for-Modifiers"],[1622,"impl-Octal-for-Modifiers"],[1630,"impl-Flags-for-Modifiers"],[1631,"impl-Modifiers"],[2541,"impl-Group%3C\'a,+Message,+Theme,+Renderer%3E"],[2542,"impl-Overlay%3CMessage,+Theme,+Renderer%3E-for-Group%3C\'a,+Message,+Theme,+Renderer%3E"],[2799,"impl-From%3CPixels%3E-for-LineHeight"],[2800,"impl-From%3Cf32%3E-for-LineHeight"],[3213,"impl-Default-for-Theme"],[3214,"impl-Catalog-for-Theme"],[3218,"impl-Debug-for-Theme"],[3219,"impl-Display-for-Theme"],[3220,"impl-Display-for-Custom"],[3221,"impl-Debug-for-Custom"],[3675,"impl-Sub-for-Instant"],[3676,"impl-Sub%3CDuration%3E-for-Instant"],[3683,"impl-Sum%3C%26Duration%3E-for-Duration"],[3684,"impl-Sum-for-Duration"],[4061,"impl-IntoFragment%3C\'a%3E-for-%26Cow%3C\'b,+str%3E"],[4062,"impl-IntoFragment%3C\'a%3E-for-Cow%3C\'a,+str%3E"],[4073,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Text%3C\'a,+Theme,+Renderer%3E"],[4074,"impl-Text%3C\'a,+Theme,+Renderer%3E"],[4467,"impl-Display-for-Error"],[4468,"impl-Debug-for-Error"]]},\
"iced_futures":{"doc":"Asynchronous tasks for GUI programming, inspired by Elm.","t":"IIEKKFENNNCNNHNNENCCNNNNENNNNNCNNNCNNNNNNNNNCCCCCCCFNNNNNNNNNNNNNNNNNCNNNNNNNNHFNNNNNNNNNNNNNNNNNCNNNNNNNNHINNCINNNCHFNNNNNNNNNNNNNNNNNCNNNNNNNNHHHKNMMHHIIRKFFNNNNNNNNNNNNHNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHMNNNNNNNNNNNNNNHNNNN","n":["BoxFuture","BoxStream","Executor","MaybeSend","MaybeSync","Runtime","Subscription","adapt_into_using","arrays_from","arrays_into","backend","borrow","borrow_mut","boxed_stream","broadcast","components_from","core","enter","event","executor","fmt","from","from_angle","from_stimulus","futures","into","into_angle","into_color","into_color_unclamped","into_stimulus","keyboard","new","run","spawn","subscription","track","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","default","native","null","async_std","smol","thread_pool","tokio","Executor","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","fmt","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","new","spawn","time","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","every","Executor","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","fmt","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","new","spawn","time","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","every","Executor","new","spawn","time","Executor","enter","new","spawn","time","every","Executor","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","fmt","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","new","spawn","time","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","listen","listen_raw","listen_with","Executor","enter","new","spawn","on_key_press","on_key_release","EventStream","Hasher","Output","Recipe","Subscription","Tracker","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","batch","borrow","borrow","borrow_mut","borrow_mut","broadcast","channel","components_from","components_from","default","fmt","fmt","from","from","from_angle","from_angle","from_recipe","from_stimulus","from_stimulus","hash","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_recipes","into_stimulus","into_stimulus","map","new","none","null_value","run","run_with_id","stream","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","unfold","update","vzip","vzip","with"],"q":[[0,"iced_futures"],[44,"iced_futures::backend"],[47,"iced_futures::backend::native"],[51,"iced_futures::backend::native::async_std"],[78,"iced_futures::backend::native::async_std::time"],[79,"iced_futures::backend::native::smol"],[106,"iced_futures::backend::native::smol::time"],[107,"iced_futures::backend::native::thread_pool"],[111,"iced_futures::backend::native::tokio"],[116,"iced_futures::backend::native::tokio::time"],[117,"iced_futures::backend::null"],[144,"iced_futures::event"],[147,"iced_futures::executor"],[151,"iced_futures::keyboard"],[153,"iced_futures::subscription"],[222,"palette::chromatic_adaptation"],[223,"futures_core::stream"],[224,"core::marker"],[225,"iced_core::event"],[226,"iced_core::event"],[227,"futures_sink"],[228,"core::marker"],[229,"core::ops::function"],[230,"core::fmt"],[231,"core::fmt"],[232,"core::iter::traits::collect"],[233,"core::result"],[234,"palette::convert::try_from_into_color"],[235,"core::any"],[236,"std::io::error"],[237,"core::future::future"],[238,"core::time"],[239,"std::time"],[240,"core::hash"],[241,"futures_util::never"],[242,"futures_channel::mpsc"],[243,"core::ops::function"]],"d":["A boxed static future.","A boxed static stream.","","An extension trait that enforces <code>Send</code> only on native …","An extension trait that enforces <code>Sync</code> only on native …","A batteries-included runtime of commands and subscriptions.","","","","","The underlying implementations of the <code>iced_futures</code> …","","","Boxes a stream.","Broadcasts an event to all the subscriptions currently …","","","Runs the given closure inside the <code>Executor</code> of the <code>Runtime</code>.","Listen to runtime events.","Choose your preferred executor to power a runtime.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Listen to keyboard events.","Creates a new empty <code>Runtime</code>.","Runs a <code>Stream</code> in the <code>Runtime</code> until completion.","Spawns a <code>Future</code> in the <code>Runtime</code>.","Listen to external events in your application.","Tracks a <code>Subscription</code> in the <code>Runtime</code>.","","","","","","","","","A default, cross-platform backend.","Backends that are only available in native platforms: …","A backend that does nothing!","An <code>async-std</code> backend.","A <code>smol</code> backend.","A <code>ThreadPool</code> backend.","A <code>tokio</code> backend.","An <code>async-std</code> executor.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Listen and react to time.","","","","","","","","","Returns a <code>Subscription</code> that produces messages at a set …","A <code>smol</code> executor.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Listen and react to time.","","","","","","","","","Returns a <code>Subscription</code> that produces messages at a set …","A thread pool executor for futures.","","","Listen and react to time.","A <code>tokio</code> executor.","","","","Listen and react to time.","Returns a <code>Subscription</code> that produces messages at a set …","An executor that drops all the futures, instead of …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Listen and react to time.","","","","","","","","","Returns a <code>Subscription</code> to all the ignored runtime events.","Creates a <code>Subscription</code> that produces a message for every …","Creates a <code>Subscription</code> that listens and filters all the …","A type that can run futures.","Runs the given closure inside the <code>Executor</code>.","Creates a new <code>Executor</code>.","Spawns a future in the <code>Executor</code>.","Listens to keyboard key presses and calls the given …","Listens to keyboard key releases and calls the given …","A stream of runtime events.","The hasher used for identifying subscriptions.","The events that will be produced by a <code>Subscription</code> with …","The description of a <code>Subscription</code>.","A request to listen to external events.","A registry of subscription streams.","","","","","","","Batches all the provided subscriptions and returns the …","","","","","Broadcasts an event to the subscriptions currently alive.","Creates a <code>Subscription</code> that publishes the events sent from …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a <code>Subscription</code> from a <code>Recipe</code> describing it.","","","Hashes the <code>Recipe</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the different recipes of the <code>Subscription</code>.","","","Transforms the <code>Subscription</code> output with the given function.","Creates a new empty <code>Tracker</code>.","Returns an empty <code>Subscription</code> that will not produce any …","","Returns a <code>Subscription</code> that will call the given function …","Returns a <code>Subscription</code> that will create and asynchronously …","Executes the <code>Recipe</code> and produces the stream of events of …","","","","","","","","","","","","","","","Returns a <code>Subscription</code> that will create and asynchronously …","Updates the <code>Tracker</code> with the given <code>Subscription</code>.","","","Adds a value to the <code>Subscription</code> context."],"i":[0,0,0,0,0,0,0,6,6,6,0,6,6,0,6,6,0,6,0,0,6,6,6,6,0,6,6,6,6,6,0,6,6,6,0,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,29,29,29,29,29,29,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,35,35,35,35,35,35,35,35,0,0,36,36,0,0,37,37,37,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,38,38,38,38,38,38,38,38,0,0,0,0,10,10,10,0,0,0,0,23,0,0,0,34,39,34,39,34,39,34,34,39,34,39,39,0,34,39,39,34,39,34,39,34,39,34,34,39,23,34,39,34,39,34,39,34,39,34,34,39,34,39,34,39,0,0,23,34,39,34,39,34,39,34,39,34,39,34,39,34,39,0,39,34,39,34],"f":[0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[2,[-1]]],[],[[4,[],[[3,[-1]]]],5]],[[[6,[-1,-3,-2]],7,8],9,10,11,[[14,[-2],[[12,[13]]]],15,11,16]],[-1,-2,[],[]],0,[[[6,[-1,-3,-2]],-5],-4,10,11,[[14,[-2],[[12,[13]]]],15,11,16],[],[[18,[],[[17,[-4]]]]]],0,0,[[[6,[-1,-2,-3]],19],20,21,21,21],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-3],[[6,[-1,-3,-2]]],10,11,[[14,[-2],[[12,[13]]]],15,11,16]],[[[6,[-1,-3,-2]],[2,[-2]]],9,10,11,[[14,[-2],[[12,[13]]]],15,11,16]],[[[6,[-1,-3,-2]],[22,[-2]]],9,10,11,[[14,[-2],[[12,[13]]]],15,11,16]],0,[[[6,[-1,-3,-2]],-4],9,10,11,[[14,[-2],[[12,[13]]]],15,11,16],[[25,[],[[3,[[24,[23]]]]]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[26,[29,30]]]],[[29,-1],9,[[31,[],[[17,[9]]]],5]],0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,[[34,[33]]]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[35,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[26,[35,30]]]],[[35,-1],9,[[31,[],[[17,[9]]]],5]],0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,[[34,[33]]]],0,[[],[[26,[36,30]]]],[[36,-1],9,[[31,[],[[17,[9]]]],5]],0,0,[[37,-2],-1,[],[[18,[],[[17,[-1]]]]]],[[],[[26,[37,30]]]],[[37,-1],9,[[31,[],[[17,[9]]]],5]],0,[32,[[34,[33]]]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[26,[38,30]]]],[[38,-1],9,[[31,[],[[17,[9]]]],5]],0,[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[34,[7]]]],[[],[[34,[-1]]],11],[[],[[34,[-1]]],11],0,[[10,-2],-1,[],[[18,[],[[17,[-1]]]]]],[[],[[26,[10,30]]]],[[10,-1],9,[[31,[],[[17,[9]]]],11]],[[],[[34,[-1]]],11],[[],[[34,[-1]]],11],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[34,[-1]]],[],[[25,[],[[3,[[34,[-1]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[39,7,8],9],[[-1,40,-4],[[34,[-2]]],41,11,[[31,[],[[17,[42]]]],11],[[18,[[43,[-2]]],[[17,[-3]]]],11]],[-1,-2,[],[]],[-1,-2,[],[]],[[],39],[[[34,[-1]],19],20,[]],[[39,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-2,[[34,[-1]]],[],[[23,[],[[17,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[],[[17,[-1]]]],44],9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],[[45,[[24,[23]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]],-3],[[34,[-2]]],[],[],[[46,[-1],[[17,[-2]]]],11,16]],[[],39],[[],[[34,[-1]]],[]],[[],-1,[]],[[],[[34,[-1]]],[]],[[-1,-3],[[34,[-2]]],41,[],[[4,[],[[3,[-2]]]],11]],[[[24,[[23,[],[[17,[-1]]]]]],47],[[2,[-1]]],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,[[26,[-2,[27,[-2]]]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-5],[[34,[-3]]],41,11,11,[[31,[],[[17,[[9,[-3,-2]]]]]],11],[[48,[-2],[[17,[-4]]]],11,49]],[[39,-1,-3],[[45,[[22,[9]]]]],[[50,[],[[3,[[24,[23]]]]]]],11,[[14,[-2],[[12,[13]]]],15,11,16]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]],-2],[[34,[[9,[-2,-1]]]]],[],[41,16,5,49]]],"c":[],"p":[[10,"TransformMatrix",222],[8,"BoxStream",0],[17,"Item"],[10,"Stream",223],[10,"Send",224],[5,"Runtime",0],[6,"Event",225],[6,"Status",225],[1,"tuple"],[10,"Executor",147],[10,"MaybeSend",0],[17,"Error"],[5,"SendError",226],[10,"Sink",227],[10,"Unpin",224],[10,"Clone",228],[17,"Output"],[10,"FnOnce",229],[5,"Formatter",230],[8,"Result",230],[10,"Debug",230],[8,"BoxFuture",0],[10,"Recipe",153],[5,"Box",231],[10,"IntoIterator",232],[6,"Result",233],[5,"OutOfBounds",234],[5,"TypeId",235],[5,"Executor",51],[5,"Error",236],[10,"Future",237],[5,"Duration",238],[5,"Instant",239],[5,"Subscription",153],[5,"Executor",79],[8,"Executor",107],[8,"Executor",111],[5,"Executor",117],[5,"Tracker",153],[1,"usize"],[10,"Hash",240],[8,"Never",241],[5,"Sender",226],[8,"Hasher",153],[5,"Vec",242],[10,"Fn",229],[8,"EventStream",153],[10,"FnMut",229],[10,"Sync",224],[10,"Iterator",243]],"b":[]},\
"iced_graphics":{"doc":"A bunch of backend-agnostic types that can be leveraged to …","t":"GRKEEEEEPPPPEFEFNNNONNNNNNNNNNNNMNNNNNNCNNNCECNOONNNNNNNNNNNNCNNNNNNNNNNNNECCCNNNNNNNNNNNNNNNNNNCMNCNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNKRKFPPPRRGPKNNONNNNONNNNNNNNMMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNMHHHPPGPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFEERREPEEEEKPEGFNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNMNNNNNCNNNOCNNNNNNNNNNNNNEONNNNNNNNNNNNNNNNNNONMNNCOOOCNNNNNNNNNNNNNNNNNNNNNNNONNNPFPGENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNKFRNNNNNMNNNNMNMNMNMNNNNMNNNNNNMNNNMMNMNMNMNMNMNMNMNNNNNNNNNMNNNEFFNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNOONNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNPPGFGPPPPFENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNGFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNGPPNNNNNNNNNNNNNNNNNENNNNNNHNNNNNNNNNOOOOOOKFNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNMFPFFGKPFNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOOOOOOEPEPFEPFPGFNNNNNNNNNNNNNNNNNNNNOCONNNNNNNONNNNENNNNNNNNNNNNNCNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNCNONHHNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOFFFINNNNNNNNNNNNNNNNOONNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNN","n":["Antialiasing","Cache","Cached","Compositor","Error","Gradient","Image","Layer","MSAAx16","MSAAx2","MSAAx4","MSAAx8","Mesh","Settings","Text","Viewport","adapt_into_using","adapt_into_using","adapt_into_using","antialiasing","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","compositor","core","damage","default","default_font","default_text_size","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","error","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","futures","geometry","gradient","image","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layer","load","logical_size","mesh","null_value","physical_height","physical_size","physical_width","projection","sample_count","scale_factor","text","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","with_physical_size","GAMMA_CORRECTION","Packed","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","clone","clone_into","components","components_from","deref","deref_mut","drop","eq","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","is_valid_bit_pattern","pack","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","Compositor","Compositor","Default","Information","Lost","OutOfMemory","Outdated","Renderer","Surface","SurfaceError","Timeout","Window","adapt_into_using","adapt_into_using","adapter","arrays_from","arrays_from","arrays_into","arrays_into","backend","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","configure_surface","create_renderer","create_surface","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fetch_information","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","load_font","new","present","screenshot","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","with_backend","diff","group","list","BackendError","DidNotMatch","Error","GraphicsAdapterNotFound","List","NoAvailablePixelFormat","Reason","RequestFailed","VersionNotSupported","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","backend","reason","preferred_backend","Cache","Fill","Frame","Frame","Geometry","Gradient","Gradient","LineCap","LineDash","LineJoin","Path","Renderer","Solid","Stroke","Style","Text","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","color","components_from","components_from","components_from","content","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","draw","draw_geometry","draw_with","drop","drop","drop","eq","fill","fmt","fmt","fmt","font","frame","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","gradient","horizontal_alignment","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","line_height","new","new_frame","null_value","null_value","path","position","shaping","size","stroke","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vertical_alignment","vzip","vzip","vzip","EvenOdd","Fill","NonZero","Rule","Style","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","rule","style","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Backend","Frame","Geometry","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","center","center","components_from","deref","deref_mut","draft","drop","fill","fill","fill_rectangle","fill_rectangle","fill_text","fill_text","from","from_angle","from_stimulus","height","height","init","into","into_angle","into_color","into_color_unclamped","into_geometry","into_geometry","into_stimulus","new","paste","pop_transform","pop_transform","push_transform","push_transform","rotate","rotate","scale","scale","scale_nonuniform","scale_nonuniform","size","size","stroke","stroke","translate","translate","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","width","width","with_clip","with_save","Arc","Builder","Path","adapt_into_using","adapt_into_using","arc","arc","arc_to","arrays_from","arrays_from","arrays_into","arrays_into","bezier_curve_to","borrow","borrow","borrow_mut","borrow_mut","build","circle","circle","clone","clone_into","close","components_from","components_from","default","deref","deref","deref_mut","deref_mut","drop","drop","ellipse","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line","line_to","lyon_path","move_to","new","new","null_value","quadratic_curve_to","raw","rectangle","rectangle","to_owned","transform","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Arc","Elliptical","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","center","center","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","drop","drop","end_angle","end_angle","fmt","fmt","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","radii","radius","rotation","start_angle","start_angle","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Bevel","Butt","LineCap","LineDash","LineJoin","Miter","Round","Round","Square","Stroke","Style","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_cap","line_dash","line_join","null_value","null_value","null_value","null_value","offset","segments","style","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","width","with_color","with_line_cap","with_line_join","with_width","Gradient","Linear","Linear","Packed","adapt_into_using","adapt_into_using","adapt_into_using","add_stop","add_stops","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","components_from","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","end","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","is_valid_bit_pattern","new","pack","pack","pack","start","stops","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","Image","Raster","Vector","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","bounds","clone","clone_into","components_from","deref","deref_mut","drop","eq","fmt","from","from_angle","from_stimulus","image_rs","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","load","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","bounds","bounds","color","filter_method","handle","handle","Layer","Stack","adapt_into_using","arrays_from","arrays_into","as_slice","borrow","borrow_mut","clear","components_from","current_mut","default","deref","deref_mut","drop","flush","flush","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","iter","iter_mut","new","null_value","pop_clip","pop_transformation","push_clip","push_transformation","reset","resize","transformation","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","with_bounds","AttributeCount","Gradient","GradientVertex2D","Indexed","Mesh","Renderer","Solid","SolidVertex2D","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","attribute_count_of","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_bounds","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw_mesh","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gradient","gradient_vertices","gradients","indices","indices","indices","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_valid_bit_pattern","is_valid_bit_pattern","null_value","position","position","solid_vertices","solids","to_owned","to_owned","to_owned","to_owned","to_owned","transformation","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","vertices","vzip","vzip","vzip","vzip","vzip","buffers","buffers","clip_bounds","clip_bounds","transformation","transformation","Cache","Cached","Editor","Editor","FontSystem","Paragraph","Paragraph","Raw","Raw","Text","Version","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","cache","clip_bounds","clone","clone","clone","clone_into","clone_into","clone_into","cmp","color","components_from","components_from","components_from","components_from","cosmic_text","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","editor","eq","eq","eq","equivalent","fmt","fmt","fmt","font_system","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","load_font","measure","null_value","paragraph","partial_cmp","position","raw","to_attributes","to_color","to_owned","to_owned","to_owned","to_shaping","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","version","visible_bounds","vzip","vzip","vzip","vzip","bounds","clip_bounds","clip_bounds","clip_bounds","color","color","color","content","editor","font","horizontal_alignment","line_height","paragraph","position","position","raw","shaping","size","transformation","transformation","transformation","vertical_alignment","Cache","Entry","Key","KeyHash","adapt_into_using","adapt_into_using","adapt_into_using","allocate","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","buffer","clone","clone_into","components_from","components_from","components_from","content","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","line_height","min_bounds","new","null_value","shaping","size","to_owned","trim","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","Editor","Weak","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","bounds","bounds","buffer","clone","clone_into","components_from","components_from","cursor","cursor_position","default","deref","deref","deref_mut","deref_mut","downgrade","drop","drop","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","highlight","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line","line_count","min_bounds","new","null_value","perform","selection","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","update","upgrade","vzip","vzip","with_text","Paragraph","Weak","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","buffer","clone","clone","clone_into","clone_into","compare","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downgrade","drop","drop","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","grapheme_position","hit_test","horizontal_alignment","horizontal_alignment","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","min_bounds","min_bounds","new","null_value","resize","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upgrade","vertical_alignment","vertical_alignment","vzip","vzip","with_text"],"q":[[0,"iced_graphics"],[136,"iced_graphics::color"],[172,"iced_graphics::compositor"],[257,"iced_graphics::damage"],[260,"iced_graphics::error"],[336,"iced_graphics::error::Error"],[338,"iced_graphics::error::Reason"],[339,"iced_graphics::geometry"],[471,"iced_graphics::geometry::fill"],[545,"iced_graphics::geometry::frame"],[609,"iced_graphics::geometry::path"],[690,"iced_graphics::geometry::path::arc"],[762,"iced_graphics::geometry::stroke"],[912,"iced_graphics::gradient"],[1020,"iced_graphics::image"],[1057,"iced_graphics::image::Image"],[1063,"iced_graphics::layer"],[1110,"iced_graphics::mesh"],[1293,"iced_graphics::mesh::Mesh"],[1299,"iced_graphics::text"],[1453,"iced_graphics::text::Text"],[1475,"iced_graphics::text::cache"],[1577,"iced_graphics::text::editor"],[1656,"iced_graphics::text::paragraph"],[1737,"palette::chromatic_adaptation"],[1738,"core::option"],[1739,"core::clone"],[1740,"core::fmt"],[1741,"core::fmt"],[1742,"iced_core::transformation"],[1743,"core::result"],[1744,"palette::convert::try_from_into_color"],[1745,"core::any"],[1746,"iced_core::color"],[1747,"core::convert"],[1748,"alloc::borrow"],[1749,"core::future::future"],[1750,"core::convert"],[1751,"smol_str"],[1752,"alloc::string"],[1753,"iced_core::rectangle"],[1754,"core::ops::function"],[1755,"core::ops::function"],[1756,"iced_core::angle"],[1757,"iced_core::vector"],[1758,"lyon_path::path"],[1759,"lyon_path::math"],[1760,"iced_core::gradient"],[1761,"core::iter::traits::collect"],[1762,"iced_core::gradient"],[1763,"image::dynimage"],[1764,"image::error"],[1765,"core::fmt"],[1766,"core::cmp"],[1767,"core::cmp"],[1768,"core::hash"],[1769,"core::marker"],[1770,"core::hash"],[1771,"cosmic_text::font::system"],[1772,"iced_core::font"],[1773,"cosmic_text::attrs"],[1774,"cosmic_text::attrs"],[1775,"cosmic_text::shape"],[1776,"iced_core::text::editor"],[1777,"iced_core::text::highlighter"],[1778,"iced_core::text::highlighter"],[1779,"iced_core::text"],[1780,"iced_core::alignment"]],"d":["An antialiasing strategy.","The type of cache produced.","A piece of data that can be cached.","","","","","","Multisample AA with 16 samples","Multisample AA with 2 samples","Multisample AA with 4 samples","Multisample AA with 8 samples","","The settings of a renderer.","","A viewing region for displaying computer graphics.","","","","The antialiasing strategy that will be used for triangle …","","","","","","","","","","","","","Caches this value, producing its corresponding <code>Cache</code>.","","","","","","","Manage colors for shaders.","","","","A compositor is responsible for initializing a renderer …","","Compute the damage between frames.","","The default <code>Font</code> to use.","The default size of text.","","","","","","","","","","","","","See what can go wrong when creating graphical backends.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Build and draw geometry.","A gradient that can be used as a fill for some geometry.","Load and operate on images.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Draw and stack layers of graphical primitives.","Loads the <code>Cache</code> into a proper instance.","Returns the logical size of the <code>Viewport</code>.","Draw triangles!","","Returns the physical height of the <code>Viewport</code>.","Returns the physical size of the <code>Viewport</code>.","Returns the physical width of the <code>Viewport</code>.","Returns the projection transformation of the <code>Viewport</code>.","Returns the amount of samples of the <code>Antialiasing</code>.","Returns the scale factor of the <code>Viewport</code>.","Draw text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Viewport</code> with the given physical dimensions …","A flag that indicates whether the renderer should perform …","A color packed as 4 floats representing RGBA channels.","","","","","","","","Returns the internal components of the <code>Packed</code> color.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Packs a <code>Color</code>.","","","","","","","","","","A graphics compositor that can draw to windows.","The compositor of the renderer.","Defines the default compositor of a renderer.","Contains information about the graphics (e.g. graphics …","The swap chain has been lost and needs to be recreated.","There is no more memory left to allocate a new frame.","The underlying surface has changed, and therefore the …","The iced renderer of the backend.","The surface of the backend.","Result of an unsuccessful call to <code>Compositor::present</code>.","A timeout was encountered while trying to acquire the next …","A window that can be used in a <code>Compositor</code>.","","","Contains the graphics adapter.","","","","","Contains the graphics backend.","","","","","","","","","Configures a new <code>Surface</code> with the given dimensions.","Creates a <code>Self::Renderer</code> for the <code>Compositor</code>.","Crates a new <code>Surface</code> for the given window.","","","","","","","","","Returns <code>Information</code> used by this <code>Compositor</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Loads a font from its bytes.","Creates a new <code>Compositor</code>.","Presents the <code>Renderer</code> primitives to the next frame of the …","Screenshots the current <code>Renderer</code> primitives to an …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Compositor</code> with a backend preference.","Diffs the damage regions given some previous and current …","Groups the given damage regions that are close together …","Computes the damage regions given some previous and …","An error occurred in the context’s internal backend","The backend did not match the preference","An error that occurred while creating an application’s …","A suitable graphics adapter or device could not be found.","Multiple errors occurred","Failed to find any pixel format that matches the criteria.","The reason why a graphics adapter could not be found","The request to create the backend failed","The requested backend version is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the backend where the error happened","The reason why this backend could not be used","The preferred backend","A simple cache that stores generated geometry to avoid …","","","The kind of <code>Frame</code> this renderer supports.","The kind of geometry this renderer can draw.","","A <code>Gradient</code> color.","","","","","A renderer capable of drawing some <code>Self::Geometry</code>.","A solid <code>Color</code>.","","The coloring style of some drawing.","A bunch of text that can be drawn to a canvas","","","","","","","","","","","","","","","","Clears the <code>Cache</code>, forcing a redraw the next time it is …","","","","","The color of the text","","","","The contents of the text","","","","","","","","","Draws geometry using the provided closure and stores it in …","Draws the given <code>Self::Geometry</code>.","Computes the <code>Path</code>s of the <code>Text</code> and draws them using the …","","","","","Fill <code>Geometry</code> with a certain style.","","","","The font of the text","Draw and generate geometry.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","The horizontal alignment of the text","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The line height of the text.","Creates a new empty <code>Cache</code>.","Creates a new <code>Self::Frame</code>.","","","Build different kinds of 2D shapes.","The position of the text relative to the alignment …","The shaping strategy of the text.","The size of the text","Create lines from a <code>Path</code> and assigns them various …","","","","","","","","","","","","","","","","","","","","","","","","The vertical alignment of the text","","","","","The style used to fill geometry.","","The fill rule defines how to determine what is inside and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The fill rule defines how to determine what is inside and …","The color or gradient of the fill.","","","","","","","","","","","","","","","","","","","The internal implementation of a <code>Frame</code>.","The region of a surface that can be used to draw geometry.","","","","","","","","Returns the coordinate of the center of the <code>Frame</code>.","","","","","","","Draws the given <code>Path</code> on the <code>Frame</code> by filling it with the …","","Draws an axis-aligned rectangle given its top-left corner …","","Draws the characters of the given <code>Text</code> on the <code>Frame</code>, …","Returns the argument unchanged.","","","","Returns the height of the <code>Frame</code>.","","Calls <code>U::from(self)</code>.","","","","","Turns the <code>Frame</code> into its underlying geometry.","","Creates a new <code>Frame</code> with the given dimensions.","","","Pops a transform from the transform stack and sets it as …","","Pushes the current transform in the transform stack.","","Applies a rotation in radians to the current transform of …","","Applies a uniform scaling to the current transform of the …","","Applies a non-uniform scaling to the current transform of …","","Returns the dimensions of the <code>Frame</code>.","","Draws the stroke of the given <code>Path</code> on the <code>Frame</code> with the …","","Applies a translation to the current transform of the <code>Frame</code>…","","","","","","","","","","Returns the width of the <code>Frame</code>.","Executes the given drawing operations within a <code>Rectangle</code> …","Stores the current transform of the <code>Frame</code> and executes the …","","A <code>Path</code> builder.","An immutable set of points that may or may not be …","","","Build and draw curves.","Adds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …","Adds a circular arc to the <code>Path</code> with the given control …","","","","","Adds a cubic Bézier curve to the <code>Path</code> given its two …","","","","","Builds the <code>Path</code> of this <code>Builder</code>.","Adds a circle to the <code>Path</code> given its center coordinate and …","Creates a new <code>Path</code> representing a circle given its center …","","","Closes the current sub-path in the <code>Path</code> with a straight …","","","","","","","","","","Adds an ellipse to the <code>Path</code> using a clockwise direction.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>Path</code> representing a line segment given its …","Connects the last point in the <code>Path</code> to the given <code>Point</code> …","","Moves the starting point of a new sub-path to the given …","Creates a new <code>Builder</code>.","Creates a new <code>Path</code> with the provided closure.","","Adds a quadratic Bézier curve to the <code>Path</code> given its …","Returns the internal <code>lyon_path::Path</code>.","Adds a rectangle to the <code>Path</code> given its top-left corner …","Creates a new <code>Path</code> representing a rectangle given its …","","Returns the current <code>Path</code> with the given transform applied …","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","An elliptical <code>Arc</code>.","","","","","","","","","","","The center of the arc.","The center of the arc.","","","","","","","","","","","","","The end of the segment’s angle, clockwise rotation from …","The end of the segment’s angle, clockwise rotation from …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The radii of the arc’s ellipse. The horizontal and …","The radius of the arc.","The clockwise rotation of the arc’s ellipse.","The start of the segment’s angle, clockwise rotation …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","","","","","","","","","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A sharp corner.","At the end of each sub-path, the shape representing the …","A round corner.","At the end of each sub-path, the shape representing the …","The style of a stroke.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The shape to be used at the corners of paths or basic …","","","","","The offset of <code>LineDash::segments</code> to start the pattern.","The alternating lengths of lines and gaps which describe …","The color or gradient of the stroke.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance between the two edges of the stroke.","Sets the color of the <code>Stroke</code>.","Sets the <code>LineCap</code> of the <code>Stroke</code>.","Sets the <code>LineJoin</code> of the <code>Stroke</code>.","Sets the width of the <code>Stroke</code>.","A fill which linearly interpolates colors along a …","A linear gradient.","A linear gradient interpolates colors along a direction …","Packed <code>Gradient</code> data for use in shader code.","","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The absolute ending position of the gradient.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a new <code>Linear</code> builder.","Creates a new <code>Packed</code> gradient for use in shader code.","Packs the <code>Gradient</code> for use in shader code.","Packs the <code>Gradient</code> for use in shader code.","The absolute starting position of the gradient.","<code>ColorStop</code>s along the linear gradient direction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A raster or vector image.","A raster image.","A vector image.","","","","","","Returns the bounds of the <code>Image</code>.","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Tries to load an image by its <code>Handle</code>.","","","","","","","","","","The bounds of the image.","The bounds of the image.","The <code>Color</code> filter","The filter method of a raster image.","The handle of a raster image.","The handle of a vector image.","A layer of graphical primitives.","A stack of layers used for drawing.","","","","Returns the slice of layers in the <code>Stack</code>.","","","Clears the layers of the <code>Stack</code>, allowing reuse.","","Returns a mutable reference to the current <code>Layer</code> of the …","","","","","Flushes and settles any pending group of primitives in the …","Flushes and settles any primitives in the current layer of …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Returns an iterator over immutable references to the …","Returns an iterator over mutable references to the layers …","Creates a new empty <code>Stack</code>.","","Pops the current clipping region from the <code>Stack</code> and …","Pops the current <code>Transformation</code> in the <code>Stack</code>.","Pushes a new clipping region in the <code>Stack</code>; creating a new …","Pushes a new <code>Transformation</code> in the <code>Stack</code>.","Clears all the layers contents and resets its bounds.","Resizes the <code>Layer</code> to the given bounds.","Returns the current <code>Transformation</code> of the <code>Stack</code>.","","","","","","","","","Creates a new <code>Layer</code> with the given bounds.","The result of counting the attributes of a set of meshes.","A mesh with a gradient.","A vertex which contains 2D position &amp; packed gradient data.","A set of vertices and indices representing a list of …","A low-level primitive to render a mesh of triangles.","A renderer capable of drawing a <code>Mesh</code>.","A mesh with a solid color.","A two-dimensional vertex with a color.","","","","","","","","","","","","","","","","Returns the number of total vertices &amp; total indices of …","","","","","","","","","","","Returns the clip bounds of the <code>Mesh</code>.","","","","","","","","","","","The color of the vertex in <strong>linear</strong> RGBA.","","","","","","","","","","","","","","","","","Draws the given <code>Mesh</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","The packed vertex data of the gradient.","The total amount of gradient vertices.","The total amount of gradient meshes.","Returns the indices of the <code>Mesh</code>.","The list of vertex indices that defines the triangles of …","The total amount of indices.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","The vertex position in 2D space.","The vertex position in 2D space.","The total amount of solid vertices.","The total amount of solid meshes.","","","","","","Returns the <code>Transformation</code> of the <code>Mesh</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vertices of the mesh","","","","","","The vertices and indices of the mesh.","The vertices and indices of the mesh.","The clip bounds of the <code>Mesh</code>.","The clip bounds of the <code>Mesh</code>.","The <code>Transformation</code> for the vertices of the <code>Mesh</code>.","The <code>Transformation</code> for the vertices of the <code>Mesh</code>.","","Some cached text.","","An editor.","A set of system fonts.","","A paragraph.","A weak reference to a [<code>cosmic-text::Buffer</code>] that can be …","Some raw text.","A text primitive.","A version number.","","","","","","","","","","","","","","","","","","","","","A weak reference to a <code>cosmic_text::Buffer</code>.","Cache text.","The clip bounds of the text.","","","","","","","","The color of the text.","","","","","","","","","","","","","","","","","","","Draw and edit text.","","","","","","","","Returns the global <code>FontSystem</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Loads a font from its bytes.","Measures the dimensions of the given <code>cosmic_text::Buffer</code>.","","Draw paragraphs.","","The position of the text.","Returns the raw <code>cosmic_text::FontSystem</code>.","Returns the attributes of the given <code>Font</code>.","Converts some <code>Color</code> to a <code>cosmic_text::Color</code>.","","","","Converts some <code>Shaping</code> strategy to a <code>cosmic_text::Shaping</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current <code>Version</code> of the <code>FontSystem</code>.","Returns the visible bounds of the <code>Text</code>.","","","","","The bounds of the text.","","","The clip bounds of the text.","","","The color of the text.","The contents of the text.","","The font of the text.","The horizontal alignment of the text.","The line height of the text.","","","","","The shaping strategy of the text.","The size of the text in logical pixels.","","","","The vertical alignment of the text.","A store of recently used sections of text.","A cache entry.","A cache key representing a section of text.","The hash of a <code>Key</code>.","","","","Allocates a text <code>Entry</code> if it is not already present in the …","","","","","","","","","","","","","The bounds of the text.","The buffer of text, ready for drawing.","","","","","","The content of the text.","","","","","","","","","","","","","","The <code>Font</code> of the text.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets the text <code>Entry</code> with the given <code>KeyHash</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The line height of the text.","The minimum bounds of the text.","Creates a new empty <code>Cache</code>.","","The shaping strategy of the text.","The size of the text.","","Trims the <code>Cache</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A multi-line text editor.","A weak reference to an <code>Editor</code>.","","","","","","","","","","","","The bounds of the <code>Editor</code>.","Returns the buffer of the <code>Editor</code>.","","","","","","","","","","","","Creates a <code>Weak</code> reference to the <code>Editor</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new empty <code>Editor</code>.","","","","","","","","","","","","","","","","","","","","Tries to update the reference into an <code>Editor</code>.","","","","A bunch of text.","A weak reference to a <code>Paragraph</code>.","","","","","","","","","","","Returns the buffer of the <code>Paragraph</code>.","","","","","","","","","","","","","Creates a <code>Weak</code> reference to the <code>Paragraph</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The horizontal alignment of the <code>Paragraph</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The minimum bounds of the <code>Paragraph</code>.","Creates a new empty <code>Paragraph</code>.","","","","","","","","","","","","","","","","","","","Tries to update the reference into a <code>Paragraph</code>.","","The vertical alignment of the <code>Paragraph</code>.","","",""],"i":[0,3,0,0,0,0,0,0,6,6,6,6,0,0,0,0,6,7,8,7,6,7,8,6,7,8,6,7,8,6,7,8,3,6,7,8,6,7,8,0,6,7,8,0,0,0,7,7,7,6,7,8,6,7,8,6,7,8,6,7,6,0,6,7,8,6,7,8,6,7,8,6,7,8,0,0,0,0,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,0,3,8,0,7,8,8,8,8,6,8,0,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,8,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,0,130,0,0,26,26,26,29,29,0,26,0,26,31,31,26,31,26,31,31,26,31,26,31,26,26,26,31,29,29,29,26,31,26,31,26,31,26,26,29,26,26,31,26,31,26,31,26,31,26,31,26,31,26,31,26,31,26,31,26,31,29,29,29,29,26,26,26,26,31,26,31,26,31,26,31,26,31,26,31,26,31,26,31,29,0,0,0,36,45,0,36,36,36,0,45,36,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,36,36,45,36,45,36,45,36,45,36,45,36,45,36,45,36,45,131,131,132,0,0,0,47,47,0,48,0,0,0,0,0,48,0,0,0,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,48,49,49,46,48,49,49,46,49,46,48,49,46,48,49,46,47,49,46,48,49,48,0,46,48,49,49,0,46,48,48,48,49,49,49,46,48,49,46,48,49,0,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,49,46,47,46,49,0,49,49,49,0,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,49,46,48,49,59,0,59,0,0,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,58,59,58,59,58,59,59,59,58,59,58,58,58,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,58,58,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,0,54,50,50,50,50,50,54,50,50,50,50,54,50,54,50,54,50,54,50,50,50,50,54,50,50,50,50,50,50,54,50,50,50,54,54,50,54,50,54,50,54,50,54,50,54,50,54,50,54,50,50,50,50,50,50,50,50,50,54,50,50,50,0,0,0,65,55,0,65,65,65,55,65,55,65,65,55,65,55,65,65,55,55,55,65,65,55,65,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,55,65,0,65,65,55,65,65,55,65,55,55,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,65,55,0,0,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,71,70,0,0,0,71,70,71,70,0,0,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,64,64,64,70,71,72,72,72,64,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,70,71,72,64,64,64,64,64,0,0,57,0,57,60,76,60,60,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,60,57,60,76,57,60,76,57,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,76,60,0,57,60,60,60,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,57,60,76,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,78,78,78,78,78,78,0,78,78,78,78,78,78,78,78,78,133,134,134,133,133,134,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,83,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,82,82,82,82,82,82,82,82,82,83,0,86,0,0,0,0,86,0,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,0,86,88,89,90,87,86,88,89,90,87,86,86,88,89,90,87,86,88,89,90,87,89,86,88,89,90,87,87,86,88,89,90,87,86,88,89,90,87,91,86,88,89,90,87,86,88,89,90,88,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,90,87,87,86,88,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,89,90,87,89,90,87,87,86,88,89,90,87,86,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,86,88,89,90,87,88,86,88,89,90,87,135,136,135,136,135,136,0,93,0,93,0,0,93,0,93,0,0,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,95,0,95,93,94,95,93,94,95,94,95,97,93,94,95,0,94,97,93,94,95,97,93,94,95,97,93,94,95,0,93,94,95,94,93,94,95,0,97,93,94,95,97,93,94,95,97,93,94,95,94,94,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,0,94,0,94,95,97,0,0,93,94,95,0,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,94,95,97,93,97,93,94,95,137,138,139,137,138,139,137,137,139,137,137,137,138,138,139,140,137,137,138,139,140,137,0,0,0,0,111,112,114,111,111,112,114,111,112,114,111,112,114,111,112,114,112,114,112,112,111,112,114,112,111,111,112,114,111,112,114,111,112,114,111,112,114,112,111,112,114,111,112,114,111,112,114,111,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,112,114,111,111,112,112,112,111,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,111,112,114,0,0,115,116,115,116,115,116,115,116,115,116,115,116,115,116,116,115,116,115,115,115,115,116,115,116,115,115,116,115,116,115,116,115,116,115,116,115,116,115,115,116,115,116,115,116,115,116,115,116,115,116,115,115,115,115,115,115,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,0,0,123,124,123,124,123,124,123,124,123,124,123,123,124,123,124,123,123,124,123,123,124,123,124,123,123,124,123,124,123,124,123,124,123,124,123,124,123,123,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,123,123,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,124,123,124,123,124,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[],[[2,[-1]]]],[4,[-1]]],-1,5],[6,6],[7,7],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],7],0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[10,9],[[6,6],11],[[7,7],11],[[-1,-2],11,[],[]],0,[[6,12],13],[[7,12],13],[[8,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[],[[2,[-1]]]]],5],[8,[[15,[14]]]],0,[[],-1,[]],[8,16],[8,[[15,[16]]]],[8,16],[8,17],[6,16],[8,18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[16]],18],8],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],9,[],[]],[22,[[23,[14]]]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,9],[[22,22],11],[[22,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,22,[[25,[24]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]],-2,16,16],9,[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]]],-1,[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]],-3,16,16],-2,[],[],[30,5]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[[26,26],11],[[-1,-2],11,[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]]],31,[],[]],[[26,12],13],[[26,12],13],[[31,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]],[34,[[33,[32]]]]],9,[],[]],[[7,-1],[[0,[[37,[],[[35,[[19,[[29,[],[[27,[-2]],[28,[-3]]]],36]]]]]]]]],[30,5],[],[]],[[[29,[],[[27,[-1]],[28,[-2]]]],-1,-2,8,24,[33,[-3]]],[[19,[9,26]]],[],[],[[39,[38]]]],[[[29,[],[[27,[-1]],[28,[-2]]]],-1,-2,8,24,[33,[-3]]],[[40,[32]]],[],[],[[39,[38]]]],[-1,-2,[],[]],[-1,41,[]],[-1,42,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,-1,[4,[38]]],[[0,[[37,[],[[35,[[19,[[29,[],[[27,[-2]],[28,[-3]]]],36]]]]]]]]],[30,5],[],[]],[[[33,[-1]],[33,[-1]],-2,-3],[[40,[43]]],[],[[44,[-1],[[35,[[40,[43]]]]]]],[[44,[-1,-1],[[35,[[40,[43]]]]]]]],[[[40,[43]],43],[[40,[43]]]],[[[33,[-1]],[33,[-1]],-2,-3],[[40,[43]]],[],[[44,[-1],[[35,[[40,[43]]]]]]],[[44,[-1,-1],[[35,[11]]]]]],0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[45,45],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[[36,36],11],[[45,45],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[36,12],13],[[36,12],13],[[45,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,42,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],9,47],[48,48],[49,49],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[46,[-1]]],47],[[],49],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[[[46,[-1]],-1,15,-2],[],47,[[51,[[50,[-1]]]]]],[[[47,[],[[52,[-1]],[53,[-2]]]],-1],9,3,[[54,[],[[52,[-1]]]]]],[[49,-1],9,[[56,[55,24]]]],[10,9],[10,9],[10,9],[[48,48],11],0,[[[46,[-1]],12],13,47],[[48,12],13],[[49,12],13],0,0,[-1,-1,[]],[57,48],[-1,-1,[]],[24,48],[-1,-1,[]],[42,49],[38,49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[46,[-1]]],47],[[[47,[],[[52,[-1]],[53,[-2]]]],15],-2,3,[[54,[],[[52,[-1]]]]]],[[],-1,[]],[[],-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],58],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[[59,59],11],[[-1,-2],11,[],[]],[[58,12],13],[[59,12],13],[-1,-1,[]],[24,58],[60,58],[57,58],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[],[[52,[-1]]]]],61,[]],[[[50,[-1]]],61,47],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[[[54,[],[[52,[-1]]]],43],[[54,[],[[52,[-1]]]]],[]],[10,9],[[[54,[],[[52,[-1]]]],55,-2],9,[],[[25,[58]]]],[[[50,[-1]],55,-2],9,47,[[25,[58]]]],[[[54,[],[[52,[-1]]]],61,15,-2],9,[],[[25,[58]]]],[[[50,[-1]],61,15,-2],9,47,[[25,[58]]]],[[[54,[],[[52,[-1]]]],-2],9,[],[[25,[49]]]],[[[50,[-1]],-2],9,47,[[25,[49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[54,[],[[52,[-1]]]]],14,[]],[[[50,[-1]]],14,47],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[],[[52,[-1]]]]],-1,[]],[[[50,[-1]]],[],47],[-1,-2,[],[]],[[-1,15],[[50,[-1]]],47],[[[54,[],[[52,[-1]]]],[54,[],[[52,[-1]]]],61],9,[]],[[[54,[],[[52,[-1]]]]],9,[]],[[[50,[-1]]],9,47],[[[54,[],[[52,[-1]]]]],9,[]],[[[50,[-1]]],9,47],[[[54,[],[[52,[-1]]]],-2],9,[],[[25,[62]]]],[[[50,[-1]],-2],9,47,[[25,[62]]]],[[[54,[],[[52,[-1]]]],-2],9,[],[[25,[14]]]],[[[50,[-1]],-2],9,47,[[25,[14]]]],[[[54,[],[[52,[-1]]]],-2],9,[],[[25,[63]]]],[[[50,[-1]],-2],9,47,[[25,[63]]]],[[[54,[],[[52,[-1]]]]],15,[]],[[[50,[-1]]],15,47],[[[54,[],[[52,[-1]]]],55,-2],9,[],[[25,[64]]]],[[[50,[-1]],55,-2],9,47,[[25,[64]]]],[[[54,[],[[52,[-1]]]],63],9,[]],[[[50,[-1]],63],9,47],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[],[[52,[-1]]]]],14,[]],[[[50,[-1]]],14,47],[[[50,[-1]],43,-3],-2,47,[],[[51,[[50,[-1]]],[[35,[-2]]]]]],[[[50,[-1]],-3],-2,47,[],[[51,[[50,[-1]]],[[35,[-2]]]]]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[[65,66],9],[[65,61,61,14],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,61,61,61],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,55],[[65,61,14],9],[[61,14],55],[55,55],[[-1,-2],9,[],[]],[65,9],[-1,-2,[],[]],[-1,-2,[],[]],[[],65],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[[65,67],9],[[55,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,61],55],[[65,61],9],0,[[65,61],9],[[],65],[-1,55,[[51,[65]]]],[[],-1,[]],[[65,61,61],9],[55,68],[[65,61,15],9],[[61,15],55],[-1,-2,[],[]],[[55,69],55],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[66,66],[67,67],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],0,0,[[66,12],13],[[67,12],13],[-1,-1,[]],[66,67],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[70,70],[71,71],[72,72],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],64],[[],70],[[],71],[[],72],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[10,9],[10,9],[[64,12],13],[[70,12],13],[[71,12],13],[[72,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[64,24],64],[[64,70],64],[[64,71],64],[[64,14],64],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[60,14,24],60],[[60,-1],60,[[75,[],[[73,[74]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[60,60],[76,76],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[10,9],0,[[57,57],11],[[60,60],11],[[76,76],11],[[57,12],13],[[60,12],13],[[76,12],13],[60,57],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[[61,61],60],[[77,43],76],[57,76],[60,76],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,43],[78,78],[[-1,-2],9,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,9],[[78,78],11],[[78,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,[[81,[80]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],[[33,[-1]]],83],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],9,83],[-1,-2,[],[]],[[[82,[-1]]],[[9,[-1,17]]],83],[[],[[82,[-1]]],83],[10,-1,[]],[10,-1,[]],[10,9],[83,9],[[[82,[-1]]],9,83],[[[82,[-1]],12],13,[84,83]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],[[0,[[85,[],[[73,[-1]]]]]]],83],[[[82,[-1]]],[[0,[[85,[],[[73,[-1]]]]]]],83],[[],[[82,[-1]]],83],[[],-1,[]],[[[82,[-1]]],9,83],[[[82,[-1]]],9,83],[[[82,[-1]],43],9,83],[[[82,[-1]],17],9,83],[83,9],[[83,43],9],[[[82,[-1]]],17,83],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,83],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[86]]],87],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,43],[86,86],[[[88,[-1]]],[[88,[-1]]],5],[89,89],[90,90],[87,87],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],87],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[[91,86],9],[10,9],[10,9],[10,9],[10,9],[10,9],[[86,86],11],[[[88,[-1]],[88,[-1]]],11,92],[[89,89],11],[[90,90],11],[[-1,-2],11,[],[]],[[86,12],13],[[[88,[-1]],12],13,84],[[89,12],13],[[90,12],13],[[87,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[86,[[33,[16]]]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,11,[]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,17],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[93,93],[94,94],[95,95],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[94,94],96],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],94],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[10,9],[10,9],0,[[93,93],11],[[94,94],11],[[95,95],11],[[-1,-2],11,[],[]],[[93,12],13],[[94,12],13],[[95,12],13],[[],[[98,[97]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],99,[100,101],102],[[94,-1],9,103],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[97,[34,[[33,[32]]]]],9],[104,15],[[],-1,[]],0,[[94,94],[[4,[96]]]],0,[97,105],[106,107],[24,108],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,110],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,94],[93,[[4,[43]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[111,105,112],[[9,[113,114]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[112,112],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],111],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,9],[10,9],[10,9],[[111,12],13],[[112,12],13],[[114,12],13],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,113],[[4,[114]]]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],111],[[],-1,[]],0,0,[-1,-2,[],[]],[111,9],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,15],0,[115,104],[116,116],[[-1,-2],9,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,117],[115,[[9,[10,10]]]],[[],115],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[115,116],[10,9],[10,9],[[115,115],11],[[116,116],11],[[115,12],13],[[116,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,-1,-2,-3],9,[],118,[[44,[],[[35,[[119,[-1]]]]]]]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,10],[[4,[38]]]],[115,10],[115,15],[[],115],[[],-1,[]],[[115,120],9],[115,[[4,[42]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,15,106,121,122,-1],9,118],[116,[[4,[115]]]],[-1,-2,[],[]],[-1,-2,[],[]],[38,115],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,104],[123,123],[124,124],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[123,[125,[38]]],126],[-1,-2,[],[]],[-1,-2,[],[]],[[],123],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[123,124],[10,9],[10,9],[[123,123],11],[[124,124],11],[[123,12],13],[[124,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[123,10,10],[[4,[61]]]],[[123,61],[[4,[127]]]],[123,128],0,[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,15],0,[[],123],[[],-1,[]],[[123,15],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,[[19,[-2,[20,[-2]]]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,[[4,[123]]]],[123,129],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[38]]],123]],"c":[],"p":[[10,"TransformMatrix",1737],[17,"Cache"],[10,"Cached",0],[6,"Option",1738],[10,"Clone",1739],[6,"Antialiasing",0],[5,"Settings",0],[5,"Viewport",0],[1,"tuple"],[1,"usize"],[1,"bool"],[5,"Formatter",1740],[8,"Result",1740],[1,"f32"],[5,"Size",1741],[1,"u32"],[5,"Transformation",1742],[1,"f64"],[6,"Result",1743],[5,"OutOfBounds",1744],[5,"TypeId",1745],[5,"Packed",136],[1,"array"],[5,"Color",1746],[10,"Into",1747],[6,"SurfaceError",172],[17,"Renderer"],[17,"Surface"],[10,"Compositor",172],[10,"Window",172],[5,"Information",172],[1,"u8"],[1,"slice"],[6,"Cow",1748],[17,"Output"],[6,"Error",260],[10,"Future",1749],[1,"str"],[10,"AsRef",1747],[5,"Vec",1750],[5,"SmolStr",1751],[5,"String",1752],[5,"Rectangle",1753],[10,"Fn",1754],[6,"Reason",260],[5,"Cache",339],[10,"Renderer",339],[6,"Style",339],[5,"Text",339],[5,"Frame",545],[10,"FnOnce",1754],[17,"Geometry"],[17,"Frame"],[10,"Backend",545],[5,"Path",609],[10,"FnMut",1754],[6,"Gradient",912],[5,"Fill",471],[6,"Rule",471],[5,"Linear",912],[5,"Point",1755],[5,"Radians",1756],[5,"Vector",1757],[5,"Stroke",762],[5,"Builder",609],[5,"Arc",690],[5,"Elliptical",690],[5,"Path",1758],[8,"Transform",1759],[6,"LineCap",762],[6,"LineJoin",762],[5,"LineDash",762],[17,"Item"],[5,"ColorStop",1760],[10,"IntoIterator",1761],[5,"Packed",912],[6,"Gradient",1760],[6,"Image",1020],[5,"Handle",1762],[6,"DynamicImage",1763],[8,"ImageResult",1764],[5,"Stack",1063],[10,"Layer",1063],[10,"Debug",1740],[10,"Iterator",1765],[6,"Mesh",1110],[5,"AttributeCount",1110],[5,"Indexed",1110],[5,"SolidVertex2D",1110],[5,"GradientVertex2D",1110],[10,"Renderer",1110],[10,"PartialEq",1766],[6,"Text",1299],[5,"Version",1299],[5,"Raw",1299],[6,"Ordering",1766],[5,"FontSystem",1299],[5,"RwLock",1767],[1,"u64"],[10,"Hash",1768],[10,"Sized",1769],[10,"BuildHasher",1768],[10,"Hasher",1768],[5,"Buffer",1770],[5,"FontSystem",1771],[5,"Font",1772],[5,"Attrs",1773],[5,"Color",1773],[6,"Shaping",1774],[6,"Shaping",1775],[5,"Cache",1475],[5,"Key",1475],[8,"KeyHash",1475],[5,"Entry",1475],[5,"Editor",1577],[5,"Weak",1577],[6,"Cursor",1776],[10,"Highlighter",1777],[5,"Format",1777],[6,"Action",1776],[5,"Pixels",1778],[6,"LineHeight",1774],[5,"Paragraph",1656],[5,"Weak",1656],[5,"Text",1774],[6,"Difference",1774],[6,"Hit",1774],[6,"Horizontal",1779],[6,"Vertical",1779],[10,"Default",172],[15,"GraphicsAdapterNotFound",336],[15,"DidNotMatch",338],[15,"Raster",1057],[15,"Vector",1057],[15,"Solid",1293],[15,"Gradient",1293],[15,"Cached",1453],[15,"Paragraph",1453],[15,"Editor",1453],[15,"Raw",1453]],"b":[[212,"impl-Display-for-SurfaceError"],[213,"impl-Debug-for-SurfaceError"],[295,"impl-Debug-for-Error"],[296,"impl-Display-for-Error"],[402,"impl-From%3CGradient%3E-for-Style"],[404,"impl-From%3CColor%3E-for-Style"],[406,"impl-From%3CString%3E-for-Text"],[407,"impl-From%3C%26str%3E-for-Text"],[504,"impl-From%3CColor%3E-for-Fill"],[505,"impl-From%3CLinear%3E-for-Fill"],[506,"impl-From%3CGradient%3E-for-Fill"]]},\
"iced_highlighter":{"doc":"A syntax highlighter for iced.","t":"TPPPFFPFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ALL","Base16Eighties","Base16Mocha","Base16Ocean","Highlight","Highlighter","InspiredGitHub","Settings","SolarizedDark","Theme","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_line","clone","clone","clone_into","clone_into","color","components_from","components_from","components_from","components_from","current_line","eq","eq","equivalent","equivalent","equivalent","extension","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","highlight_line","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_dark","new","theme","to_format","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","update","vzip","vzip","vzip","vzip"],"q":[[0,"iced_highlighter"],[127,"palette::chromatic_adaptation"],[128,"iced_core::color"],[129,"core::option"],[130,"core::fmt"],[131,"core::fmt"],[132,"iced_core::text::highlighter"],[133,"smol_str"],[134,"alloc::string"],[135,"core::result"],[136,"palette::convert::try_from_into_color"],[137,"core::any"]],"d":["A static slice containing all the available themes.","","","","A highlight produced by a <code>Highlighter</code>.","A syntax highlighter.","","The settings of a <code>Highlighter</code>.","","A highlighting theme.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the color of this <code>Highlight</code>.","","","","","","","","","","","The extension of the file to highlight.","","","","","","Returns the font of this <code>Highlight</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns <code>true</code> if the <code>Theme</code> is dark, and false otherwise.","","The <code>Theme</code> of the <code>Highlighter</code>.","Returns the <code>Format</code> of the <code>Highlight</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,6,6,6,0,0,6,0,6,0,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,6,5,6,7,2,5,7,6,2,5,6,6,6,6,5,2,5,7,6,6,7,2,5,7,6,2,5,7,6,2,5,7,6,2,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,6,2,5,7,5,6,6,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,5,7,6,2,2,5,7,6],"f":[0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,3],4],[5,5],[6,6],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[7,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,3],[[5,5],10],[[6,6],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[2,11],12],[[5,11],12],[[7,11],12],[[6,11],12],[[6,11],12],[7,[[9,[13]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,14],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,10],[-1,2,[]],0,[7,[[15,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,17,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2,[19,[-2]]]]],[],[]],[-1,[[18,[-2,[19,[-2]]]]],[],[]],[-1,[[18,[-2,[19,[-2]]]]],[],[]],[-1,[[18,[-2,[19,[-2]]]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,-1],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[10,"TransformMatrix",127],[5,"Highlighter",0],[1,"usize"],[1,"tuple"],[5,"Settings",0],[6,"Theme",0],[5,"Highlight",0],[5,"Color",128],[6,"Option",129],[1,"bool"],[5,"Formatter",130],[8,"Result",130],[5,"Font",131],[1,"str"],[5,"Format",132],[5,"SmolStr",133],[5,"String",134],[6,"Result",135],[5,"OutOfBounds",136],[5,"TypeId",137]],"b":[[50,"impl-Debug-for-Theme"],[51,"impl-Display-for-Theme"]]},\
"iced_renderer":{"doc":"The official renderer for iced.","t":"IPPIPPECCEEGPPPGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFFRRGPGFGPPFKPPPPFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNCNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNMNNNNNNNONCNONNNNONNOONOCNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNPFPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNKFRMMMMMMMMMMMMMMMMMGFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOONNNNNNNNNNNNNNNNNNNNFFFNNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNFFNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNOOOOONNNNNNNNNNFIFKIPPPPPFPPPPPPFPGFGTTTIFPPPGGPPSPPPFFFFFIFFKKPPPPPPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNCNNNNNNNNNNMNNNNNNCCNNOOCMNNNNONNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFKFFKRKFFNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOMNNNNNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNMNNNNNNNNNMNNNNNNMMNNNNNNMNMNMNMNMNMNMNNNNNNNNNNNNMNMNMNMNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFIFTTTTTTFFFTTTTIFITTKRIKIFTTTIIFITNONNNNNNNNNNNNNNMNNNNNNNNONNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOONONNNNNNNNNNNNNHONNCNNNOOOMNNNNNNNNNNNNNNHNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNONNNNOONMNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMHONNNNNNNNNNNONNNNNNNNNOOONNNNOONNNNNNNNNOOONNNNNFFFFNNNNNNNONNNNNONONNNNNNNNNNNNONOOOOOONNNNNNNNNOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNOONNNNNONNNNNNNNNNNNNNONNNNNNNNNFFFFFFFFFFFFFFFFFFFFFKFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNCNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNONNNNNNNNNNNNHHNNNNNNNNNNNONOMHNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNOOOOOOOOONNNNNNNNNNNOOOOOOOOONNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNKMNMHHIIIIIIIIIIIIIIIIIIIIOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKKKKMMMMMFFFFNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNRKKMMMMNNMMMMMMMMMNNHHHHHHFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIIOOOOOOOOOOHOHHOOOOOOOIFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKKRKNNNNNNNNMMMMNMMMNNNMMMMMNMMMMMMMMMNNMMMMNNMNPPPGFGPPPPPFGOOOOOOO","n":["Compositor","Primary","Primary","Renderer","Secondary","Secondary","core","fallback","geometry","graphics","wgpu","Compositor","Primary","Primary","Primary","Renderer","Secondary","Secondary","Secondary","Surface","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","components_from","components_from","components_from","configure_surface","create_renderer","create_surface","default_font","default_size","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw_geometry","draw_image","draw_mesh","draw_primitive","draw_svg","drop","drop","drop","end_layer","end_transformation","fetch_information","fill_editor","fill_paragraph","fill_quad","fill_text","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","load_font","measure_image","measure_svg","new_frame","present","screenshot","start_layer","start_transformation","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","with_backend","Bevel","Butt","Cache","Fill","Frame","Frame","Geometry","Gradient","Gradient","LineCap","LineDash","LineJoin","Linear","Miter","Path","Renderer","Round","Round","Solid","Square","Stroke","Style","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center","circle","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","content","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_geometry","draw_with","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","fill","fill","fill_rectangle","fill_text","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","frame","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gradient","height","horizontal_alignment","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_geometry","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line","line_cap","line_dash","line_height","line_join","new","new","new","new_frame","null_value","null_value","null_value","null_value","null_value","null_value","null_value","offset","pack","path","pop_transform","position","push_transform","raw","rectangle","rotate","rule","scale","scale_nonuniform","segments","shaping","size","size","stroke","stroke","style","style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transform","translate","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertical_alignment","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_clip","with_color","with_line_cap","with_line_join","with_save","with_width","EvenOdd","Fill","Gradient","NonZero","Rule","Solid","Style","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","rule","style","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Backend","Frame","Geometry","center","draft","fill","fill_rectangle","fill_text","height","into_geometry","paste","pop_transform","push_transform","rotate","scale","scale_nonuniform","size","stroke","translate","width","Gradient","Linear","Linear","Packed","adapt_into_using","adapt_into_using","add_stop","add_stops","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_valid_bit_pattern","new","pack","pack","start","stops","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Builder","Path","adapt_into_using","adapt_into_using","arc","arc","arc_to","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","bezier_curve_to","borrow","borrow","borrow_mut","borrow_mut","build","center","circle","clone","clone_into","close","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ellipse","end_angle","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line_to","move_to","new","null_value","quadratic_curve_to","radius","rectangle","start_angle","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Elliptical","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","center","clone","clone_into","components_from","deref","deref_mut","downcast","drop","end_angle","end_angle","fmt","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","radii","radius","rotation","start_angle","start_angle","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ArcFlags","AttributeIndex","AttributeSlice","AttributeStore","Attributes","Begin","Begin","Begin","Bevel","Butt","ControlPointId","Cubic","Cubic","Cubic","End","End","End","EndpointId","EvenOdd","Event","EventId","FillRule","INVALID","INVALID","INVALID","IdEvent","IdPolygon","Line","Line","Line","LineCap","LineJoin","Miter","MiterClip","NO_ATTRIBUTES","Negative","Negative","NonZero","Path","PathBuffer","PathBufferSlice","PathCommands","PathCommandsSlice","PathEvent","PathSlice","Polygon","Position","PositionStore","Positive","Positive","Quadratic","Quadratic","Quadratic","Round","Round","Side","Square","Winding","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_slice","as_slice","as_slice","attributes","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","builder","builder_with_attributes","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed","closed","commands","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event","event","event","events","first_endpoint","first_endpoint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_iter","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_usize","from_usize","get","get","get","get","get","get","get_control_point","get_control_point","get_control_point","get_control_point","get_endpoint","get_endpoint","get_endpoint","get_endpoint","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","id_iter","id_iter","id_iter","index","index","index","index","index","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edge","is_empty","is_empty","is_empty","is_in","is_negative","is_out","is_positive","iter","iter","iter","iter","iter","iter","iter","iter","iter_with_attributes","iter_with_attributes","iterator","large_arc","last_endpoint","last_endpoint","len","len","math","new","new","new","next_event_id_in_path","next_event_id_in_path","next_event_id_in_sub_path","next_event_id_in_sub_path","null_value","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","offset","offset","opposite","path","path_buffer","path_events","path_slice","points","points","polygon","position","reserve","reversed","reversed","svg_builder","sweep","to","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_usize","to_usize","to_usize","traits","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_attributes","with_capacity","with_points","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","BorderRadii","Build","Flattened","NoAttributes","PathBuilder","PathType","SvgPathBuilder","Transformed","WithSvg","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_circle","add_circle","add_ellipse","add_ellipse","add_line_segment","add_line_segment","add_point","add_point","add_polygon","add_polygon","add_polygon","add_rectangle","add_rectangle","add_rounded_rectangle","add_rounded_rectangle","arc","arc_to","arc_to","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","build","build","build","build","build","build","build","build","clone","clone","clone_into","clone_into","close","close","close","close","close","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","current_position","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","end","end","end","end","eq","eq","event","extend_from_paths","flattened","flattened","flattened","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","horizontal_line_to","horizontal_line_to","init","init","init","init","init","inner","inner_mut","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","line_to","line_to","line_to","line_to","move_to","move_to","move_to","new","new","new","new","new","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","partial_cmp","path_event","path_event","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_arc_to","relative_cubic_bezier_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_horizontal_line_to","relative_line_to","relative_line_to","relative_move_to","relative_move_to","relative_quadratic_bezier_to","relative_quadratic_bezier_to","relative_vertical_line_to","relative_vertical_line_to","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","set_tolerance","set_transform","set_transform","smooth_cubic_bezier_to","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","smooth_relative_quadratic_bezier_to","to_owned","to_owned","to_smolstr","to_string","top_left","top_right","transformed","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vertical_line_to","vertical_line_to","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","with_svg","wrap","CommandsPathSlice","Events","Iter","PathCommands","PathCommandsBuilder","PathCommandsSlice","PointEvents","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","events","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_control_point","get_endpoint","index","index","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","iter","line_to","new","next","next","next","null_value","points","quadratic_bezier_to","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","with_capacity","Angle","Arc","ArcFlags","Box2D","CubicBezierSegment","DIV_EPSILON","EIGHT","EPSILON","FIVE","FOUR","HALF","Line","LineEquation","LineSegment","MAX","MIN","NINE","ONE","Point","QuadraticBezierSegment","Rotation","SEVEN","SIX","Scalar","Scalar","Scale","Segment","Size","SvgArc","TEN","THREE","TWO","Transform","Translation","Triangle","Vector","ZERO","a","a","ab","ac","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add_assign","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","angle","angle_to","approx_epsilon","approx_eq_eps","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","arc","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","b","b","ba","baseline","baseline","bc","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_y","bounding_range_y","bounding_range_y","bounding_range_y","bounding_triangle","c","c","ca","cast","cb","center","circle","clipped","clipped_x","clipped_y","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_point","closest_point","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains_point","contains_segment","ctrl","ctrl1","ctrl2","cubic_bezier","cubic_intersections","cubic_intersections_t","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivative","derivative","derivative","derivative","derivative","derivative","derivative","distance_to_point","distance_to_point","distance_to_point","distance_to_point","div","div","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drag","drag_with_weight","drop","drop","drop","drop","drop","drop","drop","drop","drop","dx","dx","dx","dx","dx","dx","dy","dy","dy","dy","dy","dy","end_angle","epsilon_for","eq","eq","eq","eq","eq","eq","eq","eq","equation","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fast_bounding_box","fast_bounding_box","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_y","fast_bounding_range_y","fast_bounding_range_y","fat_line","fat_line","flags","flattened","flattened","flattened","flattened_t","flattening_step","flip","flip","flip","flip","flip","flip","flip","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_cubic_bezier","for_each_cubic_bezier","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_inflection_t","for_each_local_x_extremum_t","for_each_local_x_extremum_t","for_each_local_y_extremum_t","for_each_local_y_extremum_t","for_each_monotonic","for_each_monotonic","for_each_monotonic_range","for_each_monotonic_range","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_x_monotonic","for_each_x_monotonic","for_each_x_monotonic_range","for_each_x_monotonic_range","for_each_y_monotonic","for_each_y_monotonic","for_each_y_monotonic_range","for_each_y_monotonic_range","frac_pi_2","frac_pi_3","frac_pi_4","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_svg_arc","get","get_angle","get_hash","hash","height","horizontal_line_intersection","horizontal_line_intersection_t","init","init","init","init","init","init","init","init","init","intersection","intersection","intersection_t","intersects","intersects","intersects_box","intersects_line","intersects_line_segment","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invert","is_a_point","is_finite","is_horizontal","is_linear","is_linear","is_monotonic","is_monotonic","is_quadratic","is_straight_line","is_vertical","is_x_monotonic","is_x_monotonic","is_y_monotonic","is_y_monotonic","large_arc","length","length","lerp","line_intersection","line_intersection_t","line_intersections","line_intersections","line_intersections_t","line_intersections_t","line_segment_intersections","line_segment_intersections","line_segment_intersections_t","line_segment_intersections_t","local_x_extremum_t","local_y_extremum_t","m11","m12","m21","m22","m31","m32","max","mid_point","min","mul","mul_assign","neg","new","normal","null_value","num_quadratics","offset","overlaps_line","overlaps_segment","parallel_line","partial_cmp","pi","point","point","positive","project_point","quadratic_bezier","quadratic_intersections","quadratic_intersections_t","radians","radians","radii","radii","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_tangent","set_length","signed","signed_distance_to_point","signed_distance_to_point","sin_cos","size","solve_t_for_x","solve_t_for_x","solve_t_for_y","solve_t_for_y","solve_x_for_y","solve_x_for_y","solve_y_for_x","solve_y_for_x","split","split","split","split","split","split","split","split","split","split_at_x","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","square_distance_to_point","square_distance_to_point","square_distance_to_point","square_length","start_angle","sub","sub_assign","sum","sum","sweep","sweep_angle","tangent","to","to","to","to","to","to","to","to","to","to","to","to","to","to_arc","to_cubic","to_degrees","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_line","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_quadratic","to_quadratic_error","to_svg_arc","to_vector","traits","transform","transformed","transformed","transformed","translate","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utils","value","vector","vector","vertical_line_intersection","vertical_line_intersection_t","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","x","x","x","x","x","x","x","x","x","x","x","x","x_maximum_t","x_maximum_t","x_minimum_t","x_minimum_t","x_rotation","x_rotation","y","y","y","y","y","y","y","y","y","y","y","y","y_maximum_t","y_maximum_t","y_minimum_t","y_minimum_t","zero","Arc","ArcFlags","Flattened","SvgArc","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","components_from","deref","deref_mut","downcast","drop","flags","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","large_arc","next","radii","radii","start_angle","sweep","sweep_angle","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","x_rotation","x_rotation","ArrayString","ArrayVec","CapacityError","Drain","IntoIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","drop","drop","drop","element","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_byte_string","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_str","ge","ge","ge","get_hash","get_hash","gt","gt","gt","hash","hash","init","init","init","init","init","insert","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","null_value","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","truncate","truncate","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_char","write_f32","write_f64","write_i128","write_i16","write_i32","write_i64","write_i8","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","zero_filled","CubicBezierSegment","Flattened","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","components_into","ctrl1","ctrl2","deref","deref_mut","downcast","drop","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","next","size_hint","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Angle","BoolVector2D","BoolVector3D","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Trig","UnknownUnit","Vector2D","Vector3D","abs","abs","abs","abs","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_size","add_size","all","all","and","and","angle","angle_from_x_axis","angle_to","angle_to","any","any","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_eq","approx_eq","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approxeq","approxord","area","area","area","around_axis","around_x","around_y","around_z","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","box3d","bvec2","bvec3","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","center","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","component_div","component_div","component_mul","component_mul","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","contains","contains","contains","contains_box","contains_box","contains_rect","cos","cross","cross","decompose_reversed","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","degrees_to_radians","depth","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","distance_to","distance_to","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","dot","dot","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","equal","equal","equal","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler","extend","extend","fast_atan2","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_and_length","from_array","from_array","from_arrays","from_arrays","from_length_all_same","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_origin_and_size","from_points","from_points","from_points","from_rotation","from_scale","from_size","from_size","from_size","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_translation","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_vectors_inner","from_vectors_outer","get","get","get_angle","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","greater_than","greater_than","greater_than","greater_than","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","horizontal","i","identity","identity","identity","identity","identity","identity","identity","identity","inflate","inflate","inflate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_box","inner_rect","intersection","intersection","intersection","intersection_unchecked","intersection_unchecked","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_2d","is_backface_visible","is_empty","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_identity","is_identity","is_identity","is_invertible","is_invertible","is_negative","is_negative","is_normalized","is_positive","is_positive","is_zero","j","k","left","length","length","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lower_than","lower_than","lower_than","lower_than","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","max","max","max","max","max","max","max","max","max","max_x","max_y","min","min","min","min","min","min","min","min","min","min","min","min_x","min_y","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_s","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_2d","new_all_same","new_from_reversed","none","none","norm","normalize","normalize","normalize","not","not","not_equal","not_equal","not_equal","not_equal","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","num","one","one","one","or","or","origin","origin","origin","ortho","outer_box","outer_rect","outer_transformed_box","outer_transformed_box2d","outer_transformed_box3d","outer_transformed_rect","outer_transformed_rect","partial_cmp","partial_cmp","partial_cmp","perspective","point2","point3","position","pre_rotate","pre_rotate","pre_scale","pre_scale","pre_translate","pre_translate","project_onto_vector","project_onto_vector","project_to_2d","quaternion","r","radians","radians","radians_to_degrees","rect","reflect","reflect","rem_euclid","rem_euclid","right","robust_normalize","robust_normalize","rotation","rotation","rotation","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","saturating_add","saturating_sub","scale","scale","scale","scale","scale","select_point","select_point","select_size","select_size","select_vector","select_vector","set_size","sin","size","size","size","size2","size3","skew","slerp","splat","splat","splat","splat","splat","splat","splat","splat","square_length","square_length","square_norm","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","tan","then","then","then","then","then","then_rotate","then_rotate","then_scale","then_scale","then_translate","then_translate","to_2d","to_2d","to_2d","to_3d","to_3d","to_3d","to_3d","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array_4d","to_array_4d","to_array_transposed","to_array_transposed","to_arrays","to_arrays","to_arrays_transposed","to_box2d","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_non_empty","to_non_empty","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_point","to_point2d","to_point3d","to_rect","to_size","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple_4d","to_tuple_4d","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u64","to_u64","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_vector","to_vector","to_vector","to_vector","to_vector","to_vector","top","transform_box","transform_box2d","transform_box2d","transform_box3d","transform_box3d","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point2d","transform_point2d","transform_point2d","transform_point2d_homogeneous","transform_point3d","transform_point3d","transform_point3d","transform_point3d","transform_point3d_homogeneous","transform_rect","transform_rect","transform_rect","transform_size","transform_size","transform_size","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector2d","transform_vector2d","transform_vector3d","transform_vector3d","translate","translate","translate","translation","translation","translation","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","union","union","unit_quaternion","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vec2","vec3","vector_part","vertical","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","width","width","width","width","width","with_destination","with_destination","with_length","with_max_length","with_max_length","with_min_length","with_min_length","with_source","with_source","x","x","x","x","x","x","x","x","x","x_range","x_range","x_range","xy","xy","xy","xy_area","xz","xz","xz","xz_area","y","y","y","y","y","y","y","y","y","y_range","y_range","y_range","yx","yx","yz","yz","yz","yz_area","z","z","z","z","z","z_range","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","ApproxEq","approx_epsilon","approx_eq","approx_eq_eps","max","min","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Vector2D","Vector3D","angle","bottom","depth","height","height","i","j","k","left","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","min","min","origin","r","right","rotation","size","top","translation","w","width","width","x","x","x","x","x","x","x","y","y","y","y","y","y","y","z","z","z","z","Ceil","Floor","One","Round","Zero","ceil","floor","one","round","zero","Flattened","FlattenedT","FlatteningParameters","QuadraticBezierSegment","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","components_from","components_from","components_from","ctrl","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","new","next","next","size_hint","size_hint","to","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","Scalar","Segment","Transformation","after_split","approximate_length","before_split","derivative","dx","dy","flip","for_each_flattened_with_t","from","sample","split","split_range","to","transform_point","transform_vector","x","y","cubic_polynomial_roots","directed_angle","directed_angle2","min_max","normalized_tangent","tangent","Flattened","FromPolyline","NoAttributes","PathIterator","Transformed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","flattened","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","new","new","next","next","next","next","open","size_hint","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_attributes","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","angle","height","m11","m12","m21","m22","m31","m32","max","min","point","radians","size","vector","width","x","x","x","y","y","y","Builder","BuilderImpl","BuilderWithAttributes","IdIter","Iter","IterWithAttributes","Path","PathSlice","Reversed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","end","end","end","extend_from_paths","extend_from_paths","fmt","for_each_flattened","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_path","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","new","new","next","next","next","next","null_value","num_attributes","num_attributes","num_attributes","points","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","Builder","BuilderWithAttributes","Iter","PathBuffer","PathBufferSlice","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","clone","clone_into","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end","end","end","end","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","new","next","next_back","num_attributes","num_attributes","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reserve","size_hint","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","with_attributes","IdPolygon","IdPolygonIter","PathEvents","Polygon","PolygonIdIter","PolygonIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","next","next","next","next","par_bridge","points","points","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Build","PathBuilder","PathIterator","PathType","SvgPathBuilder","add_circle","add_ellipse","add_line_segment","add_point","add_polygon","add_polygon","add_rectangle","add_rounded_rectangle","arc_to","begin","build","close","close","cubic_bezier_to","cubic_bezier_to","end","event","flattened","flattened","horizontal_line_to","line_to","line_to","move_to","num_attributes","path_event","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_line_to","relative_move_to","relative_quadratic_bezier_to","relative_vertical_line_to","reserve","reserve","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","transformed","transformed","vertical_line_to","with_svg","Bevel","Butt","Gradient","LineCap","LineDash","LineJoin","Miter","Round","Round","Solid","Square","Stroke","Style","line_cap","line_dash","line_join","offset","segments","style","width"],"q":[[0,"iced_renderer"],[11,"iced_renderer::fallback"],[149,"iced_renderer::geometry"],[653,"iced_renderer::geometry::fill"],[703,"iced_renderer::geometry::frame"],[723,"iced_renderer::geometry::gradient"],[812,"iced_renderer::geometry::path"],[904,"iced_renderer::geometry::path::arc"],[953,"iced_renderer::geometry::path::lyon_path"],[1868,"iced_renderer::geometry::path::lyon_path::Event"],[1881,"iced_renderer::geometry::path::lyon_path::IdEvent"],[1894,"iced_renderer::geometry::path::lyon_path::PathEvent"],[1907,"iced_renderer::geometry::path::lyon_path::builder"],[2237,"iced_renderer::geometry::path::lyon_path::commands"],[2446,"iced_renderer::geometry::path::lyon_path::geom"],[3238,"iced_renderer::geometry::path::lyon_path::geom::arc"],[3289,"iced_renderer::geometry::path::lyon_path::geom::arrayvec"],[3679,"iced_renderer::geometry::path::lyon_path::geom::cubic_bezier"],[3722,"iced_renderer::geometry::path::lyon_path::geom::euclid"],[5732,"iced_renderer::geometry::path::lyon_path::geom::euclid::approxeq"],[5736,"iced_renderer::geometry::path::lyon_path::geom::euclid::approxord"],[5738,"iced_renderer::geometry::path::lyon_path::geom::euclid::default"],[5821,"iced_renderer::geometry::path::lyon_path::geom::euclid::num"],[5831,"iced_renderer::geometry::path::lyon_path::geom::quadratic_bezier"],[5944,"iced_renderer::geometry::path::lyon_path::geom::traits"],[5964,"iced_renderer::geometry::path::lyon_path::geom::utils"],[5970,"iced_renderer::geometry::path::lyon_path::iterator"],[6124,"iced_renderer::geometry::path::lyon_path::math"],[6154,"iced_renderer::geometry::path::lyon_path::path"],[6418,"iced_renderer::geometry::path::lyon_path::path_buffer"],[6561,"iced_renderer::geometry::path::lyon_path::polygon"],[6725,"iced_renderer::geometry::path::lyon_path::traits"],[6774,"iced_renderer::geometry::stroke"],[6794,"palette::chromatic_adaptation"],[6795,"core::any"],[6796,"iced_core::renderer"],[6797,"iced_graphics::compositor"],[6798,"iced_graphics::compositor"],[6799,"iced_core::text"],[6800,"iced_core::pixels"],[6801,"iced_core::image"],[6802,"iced_core::rectangle"],[6803,"iced_core::image"],[6804,"iced_graphics::mesh"],[6805,"iced_wgpu::primitive"],[6806,"iced_core::color"],[6807,"core::option"],[6808,"iced_core::svg"],[6809,"iced_core::renderer"],[6810,"core::convert"],[6811,"alloc::string"],[6812,"iced_core::text"],[6813,"core::fmt"],[6814,"alloc::sync"],[6815,"alloc::rc"],[6816,"alloc::borrow"],[6817,"iced_core::size"],[6818,"iced_graphics::viewport"],[6819,"iced_graphics::compositor"],[6820,"core::convert"],[6821,"iced_core::transformation"],[6822,"palette::convert::try_from_into_color"],[6823,"core::any"],[6824,"iced_graphics::error"],[6825,"core::ops::function"],[6826,"iced_graphics::cached"],[6827,"core::ops::function"],[6828,"iced_core::vector"],[6829,"iced_core::gradient"],[6830,"core::iter::traits::collect"],[6831,"iced_core::gradient"],[6832,"core::hash"],[6833,"core::marker"],[6834,"core::hash"],[6835,"core::default"],[6836,"core::cmp"],[6837,"core::ops::arith"],[6838,"core::marker"],[6839,"num_traits::float"],[6840,"num_traits::cast"],[6841,"core::ops::arith"],[6842,"core::ops::arith"],[6843,"core::cmp"],[6844,"core::str::error"],[6845,"core::fmt"],[6846,"num_traits::sign"],[6847,"num_traits::ops::euclid"],[6848,"num_traits::ops::saturating"],[6849,"rayon::iter::par_bridge"]],"d":["The default graphics compositor for <code>iced</code>.","The primary rendering option.","The primary compositing option.","The default graphics renderer for <code>iced</code>.","The secondary (or fallback) rendering option.","The secondary (or fallback) compositing option.","","Compose existing renderers and create type-safe fallback …","Build and draw geometry.","","","A compositor <code>A</code> with a fallback strategy <code>B</code>.","The primary rendering option.","The primary compositing option.","The primary surface option.","A renderer <code>A</code> with a fallback strategy <code>B</code>.","The secondary (or fallback) rendering option.","The secondary (or fallback) compositing option.","The secondary (or fallback) surface option.","A surface <code>A</code> with a fallback strategy <code>B</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A simple cache that stores generated geometry to avoid …","The style used to fill geometry.","The region of a surface that can be used to draw geometry.","The kind of <code>Frame</code> this renderer supports.","The kind of geometry this renderer can draw.","A fill which linearly interpolates colors along a …","A <code>Gradient</code> color.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A linear gradient interpolates colors along a direction …","A sharp corner.","An immutable set of points that may or may not be …","A renderer capable of drawing some <code>Self::Geometry</code>.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The style of a stroke.","The coloring style of some drawing.","A bunch of text that can be drawn to a canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the coordinate of the center of the <code>Frame</code>.","Creates a new <code>Path</code> representing a circle given its center …","Clears the <code>Cache</code>, forcing a redraw the next time it is …","","","","","","","","","","","","","","","","","","","The color of the text","","","","","","","","","","","","The contents of the text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws geometry using the provided closure and stores it in …","Draws the given <code>Self::Geometry</code>.","Computes the <code>Path</code>s of the <code>Text</code> and draws them using the …","","","","","","","","","","","","","","Fill <code>Geometry</code> with a certain style.","Draws the given <code>Path</code> on the <code>Frame</code> by filling it with the …","Draws an axis-aligned rectangle given its top-left corner …","Draws the characters of the given <code>Text</code> on the <code>Frame</code>, …","","","","","","","","","","","The font of the text","Draw and generate geometry.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","A gradient that can be used as a fill for some geometry.","Returns the height of the <code>Frame</code>.","The horizontal alignment of the text","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns the <code>Frame</code> into its underlying geometry.","","","","","","","","","","","","Creates a new <code>Path</code> representing a line segment given its …","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The line height of the text.","The shape to be used at the corners of paths or basic …","Creates a new <code>Frame</code> with the given dimensions.","Creates a new empty <code>Cache</code>.","Creates a new <code>Path</code> with the provided closure.","Creates a new <code>Self::Frame</code>.","","","","","","","","The offset of <code>LineDash::segments</code> to start the pattern.","Packs the <code>Gradient</code> for use in shader code.","Build different kinds of 2D shapes.","Pops a transform from the transform stack and sets it as …","The position of the text relative to the alignment …","Pushes the current transform in the transform stack.","Returns the internal <code>lyon_path::Path</code>.","Creates a new <code>Path</code> representing a rectangle given its …","Applies a rotation in radians to the current transform of …","The fill rule defines how to determine what is inside and …","Applies a uniform scaling to the current transform of the …","Applies a non-uniform scaling to the current transform of …","The alternating lengths of lines and gaps which describe …","The shaping strategy of the text.","Returns the dimensions of the <code>Frame</code>.","The size of the text","Create lines from a <code>Path</code> and assigns them various …","Draws the stroke of the given <code>Path</code> on the <code>Frame</code> with the …","The color or gradient of the fill.","The color or gradient of the stroke.","","","","","","","","","","Returns the current <code>Path</code> with the given transform applied …","Applies a translation to the current transform of the <code>Frame</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vertical alignment of the text","","","","","","","","","","","","Returns the width of the <code>Frame</code>.","The distance between the two edges of the stroke.","Executes the given drawing operations within a <code>Rectangle</code> …","Sets the color of the <code>Stroke</code>.","Sets the <code>LineCap</code> of the <code>Stroke</code>.","Sets the <code>LineJoin</code> of the <code>Stroke</code>.","Stores the current transform of the <code>Frame</code> and executes the …","Sets the width of the <code>Stroke</code>.","","The style used to fill geometry.","A <code>Gradient</code> color.","","The fill rule defines how to determine what is inside and …","A solid <code>Color</code>.","The coloring style of some drawing.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The fill rule defines how to determine what is inside and …","The color or gradient of the fill.","","","","","","","","","","","The internal implementation of a <code>Frame</code>.","The region of a surface that can be used to draw geometry.","","","","","","","","","","","","","","","","","","","A fill which linearly interpolates colors along a …","A linear gradient.","A linear gradient interpolates colors along a direction …","Packed <code>Gradient</code> data for use in shader code.","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","","","","","","","","","","","","","","","","","","","","","","","","","","","The absolute ending position of the gradient.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>Linear</code> builder.","Creates a new <code>Packed</code> gradient for use in shader code.","Packs the <code>Gradient</code> for use in shader code.","The absolute starting position of the gradient.","<code>ColorStop</code>s along the linear gradient direction.","","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","A <code>Path</code> builder.","An immutable set of points that may or may not be …","","","Build and draw curves.","Adds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …","Adds a circular arc to the <code>Path</code> with the given control …","","","","","","","","","Adds a cubic Bézier curve to the <code>Path</code> given its two …","","","","","Builds the <code>Path</code> of this <code>Builder</code>.","The center of the arc.","Adds a circle to the <code>Path</code> given its center coordinate and …","","","Closes the current sub-path in the <code>Path</code> with a straight …","","","","","","","","","","","","Adds an ellipse to the <code>Path</code> using a clockwise direction.","The end of the segment’s angle, clockwise rotation from …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Connects the last point in the <code>Path</code> to the given <code>Point</code> …","Moves the starting point of a new sub-path to the given …","Creates a new <code>Builder</code>.","","Adds a quadratic Bézier curve to the <code>Path</code> given its …","The radius of the arc.","Adds a rectangle to the <code>Path</code> given its top-left corner …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","An elliptical <code>Arc</code>.","","","","","","","","The center of the arc.","The center of the arc.","","","","","","","","The end of the segment’s angle, clockwise rotation from …","The end of the segment’s angle, clockwise rotation from …","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","The radii of the arc’s ellipse. The horizontal and …","The radius of the arc.","The clockwise rotation of the arc’s ellipse.","The start of the segment’s angle, clockwise rotation …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","Flag parameters for arcs as described by the SVG …","An alias for <code>usize</code>.","A view over a contiguous storage of custom attributes.","Interface for objects storing custom attributes associated …","An alias for a slice of <code>f32</code> values.","","","","A beveled corner is to be used to join path segments. The …","The stroke for each sub-path does not extend beyond its …","ID of a control point in a path.","","","","","","","ID of an endpoint point in a path.","","Represents an event or edge of path.","Refers to an event in a path.","The fill rule defines how to determine what is inside and …","","","","A path event representing endpoints and control points as …","A view over a sequence of endpoint IDs forming a polygon.","","","","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","An empty attribute slice.","","","","A simple path data structure.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","The commands of a path encoded in a single array using IDs …","A view over <code>PathCommands</code>.","A path event representing endpoints and control points as …","A view on a <code>Path</code>.","A view over a sequence of endpoints forming a polygon.","Interface for types types (typically endpoints and control …","Interface for objects storing endpoints and control points …","","","","","","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","The positive or negative side of a vector or segment.","At the end of each sub-path, the shape representing the …","The two possible orientations for the edges of a shape to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a view on the path commands.","Returns a view on this <code>Path</code>.","","Returns a slice over an endpoint’s custom attributes.","Returns a slice over an endpoint’s custom attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path building utilities.","Creates a PathCommandsBuilder to create path commands.","Creates a Builder to build a path.","","Creates a BuilderWithAttributes to build a path with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic representation for paths that allow more control …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns an iterator over the path, with endpoints and …","Returns the first endpoint and its custom attributes if …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the endpoint’s custom attributes as a slice of …","","","","","","","","","","","","","","","","","","","","","","","","Iterates over the endpoint and control point ids of the …","Iterates over the endpoint and control point ids of the …","Returns an iterator of <code>IdEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the path buffer is empty.","Returns whether the path buffer is empty.","","","","","Returns an iterator over the path commands.","Returns an iterator over the path commands.","Iterates over the entire <code>Path</code>, ignoring custom attributes.","Iterates over the path.","","","Returns an iterator of <code>Event&lt;&amp;T&gt;</code>.","","Iterates over the entire <code>Path</code> with custom attributes.","Iterates over the entire <code>Path</code> with custom attributes.","Tools to iterate over paths.","Of the four candidate arc sweeps, two will represent an …","Returns the last endpoint and its custom attributes if any.","","Returns the number of paths in the path buffer.","Returns the number of paths in the path buffer.","f32 version of the lyon_geom types used everywhere. Most …","","Creates an Empty <code>Path</code>.","","Returns the next event id within the path.","Returns the next event id within the path.","Returns the next event id within the sub-path.","Returns the next event id within the path.","","","","Returns the number of float attributes per endpoint.","","","","","","","The default path data structure.","A container to store multiple paths contiguously.","Returns an iterator of <code>PathEvent</code>.","Returns a view on a path made of these commands with …","","","Specific path types for polygons.","","","Returns a reversed version of this path in the form of an …","Returns a reversed version of this path in the form of an …","Creates an WithSvg to build a path with a rich set of …","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","","","","","","","","","","","<code>lyon_path</code> traits reexported here for convenience.","","Applies a transform to all endpoints and control points of …he radius of each corner of a rounded rectangle.","Builds a path.","A Builder that approximates curves with successions of …","A convenience wrapper for <code>PathBuilder</code> without custom …","The base path building interface.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Builds a path with a transformation applied.","Implements an SVG-like building interface on top of a …","","","","","","Adds a sub-path containing a circle.","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","","Adds an elliptical arc.","","","","","","","","","","","","","","","","","","","","","","Starts a new sub-path at a given position.","","","","Starts a new sub-path at a given position.","","","","","","","","","","","","","Builds a path object, consuming the builder.","","","","","","Builds a path object, consuming the builder.","","","","","","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","","","Closes the current sub path.","","","","","","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","","","","","Adds a cubic bézier curve to the current sub-path.","","","","","","","","","","","","","","","","","","","","","","","","","Ends the current sub path.","","","Ends the current sub path.","","","","","","Returns a builder that approximates all curves with …","","Returns a builder that approximates all curves with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Adds an horizontal line segment.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","","","","","","Adds a line segment to the current sub-path.","Start a new sub-path at the given position.","","","","","","","","","","","","","","","Applies the provided path event.","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","","","","","","Adds a quadratic bézier curve to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","","Adds an horizontal line segment in relative coordinates.","","Equivalent to <code>line_to</code> in relative coordinates.","","Equivalent to <code>move_to</code> in relative coordinates.","","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","","Adds a vertical line segment in relative coordinates.","","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","","","","","Hints at the builder that a certain number of endpoints …","","","","","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","","","","","","","","Returns a builder that applies the given transformation to …","","Returns a builder that applies the given transformation to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a vertical line segment.","","","","","","","","Returns a builder that support SVG commands.","Returns a builder that support SVG commands.","","A view on a <code>PathCommands</code> buffer and two slices for …","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","The commands of a path encoded in a single array using IDs …","Builds path commands.","A view over <code>PathCommands</code>.","An iterator of <code>PathEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns path commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using IDs.","","Creates a builder without allocating memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a pre-allocated builder.","An angle in radians","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","","A 2d curve segment defined by four points: the beginning …","","","","","","","An infinite line defined by a point and a vector.","A line defined by the equation …","A linear segment.","","","","","","A 2d curve segment defined by three points: the beginning …","Alias for <code>euclid::default::Rotation2D</code>","","","","","","Common APIs to segment types.","","An elliptic arc curve segment using the SVG’s end-point …","","","","Alias for <code>euclid::default::Transform2D</code>","Alias for <code>euclid::default::Translation2D</code>","A 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.","","","","","","","","","","","","","","","","","","","Return the curve after the split point.","","Return the curve after the split point.","","Return the curve after the split point.","","Return the segment after the split point.","","Return the curve after the split point.","Angle in radians","Returns the shortest signed angle between two angles.","","","Compute the length of the segment using a flattened …","","","Compute the length of the segment using a flattened …","","","","Elliptic arc related maths and tools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the curve before the split point.","Return the curve before the split point.","","Return the curve before the split point.","","","Return the segment before the split point.","Return the curve before the split point.","","","","","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle that contains the curve.","Return the smallest rectangle containing this segment.","Returns the smallest rectangle the curve is contained in","Returns the smallest rectangle that contains this triangle.","","Returns the smallest range of x that contains this curve.","Returns the smallest range of x that contains this curve.","Returns a conservative range of x that contains this …","","Returns the smallest range of y that contains this curve.","Returns the smallest range of y that contains this curve.","Returns a conservative range of y that contains this …","Returns a triangle containing this curve segment.","","","","Cast from one numeric representation to another.","","","Create simple circle.","Clip this segment against a rectangle.","Horizontally clip this segment against a range of the x …","Vertically clip this segment against a range of the y axis.","","","","","","","","","","","","","","","","","","","Computes the closest point on this segment to <code>p</code>.","Analytic solution to finding the closest point on the …","","","","","","","","","","","","","","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","","","","","","","","","","","","","","","","","","","","","Sample the derivative at t (expecting t between 0 and 1).","","Sample the curve’s derivative at t (expecting t between …","","","","Sample the curve’s derivative at t (expecting t between …","Computes the distance between this segment and a point.","","","Returns the shortest distance between this segment and a …","","","","","","","","","","","","","","","","","","","","","","","","","Sample x derivative at t (expecting t between 0 and 1).","","Sample the x coordinate of the curve’s derivative at t …","","Sample the x coordinate of the curve’s derivative at t …","","Sample y derivative at t (expecting t between 0 and 1).","","Sample the y coordinate of the curve’s derivative at t …","","","Sample the y coordinate of the curve’s derivative at t …","","Epsilon constants are usually not a good way to deal with …","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle the curve is contained in.","Returns a conservative rectangle that contains the curve.","","Returns a conservative range of x that contains this curve.","Returns a conservative range of x that contains this curve.","","Returns a conservative range of y that contains this curve.","Returns a conservative range of y that contains this curve.","Computes a “fat line” of this segment.","Computes a “fat line” of this segment.","","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Find the interval of the beginning of the curve that can …","Swap the direction of the segment.","Swap the direction of the segment.","","Swap the beginning and the end of the segment.","","Returns an inverted version of this segment where the …","","","Swap the beginning and the end of the segment.","","","","","","","","","","Approximate the arc with a sequence of cubic bézier …","Approximates the arc with a sequence of cubic bézier …","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","","","Compute a flattened approximation of the curve, invoking a …","Invokes a callback at each inflection point if any.","","Return local x extrema or None if this curve is monotonic.","","Return local y extrema or None if this curve is monotonic.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","","","","Start of the curve.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Convert from the SVG arc notation.","","Sample the curve’s angle at t (expecting t between 0 and …","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","","","","","","Computes the intersection (if any) between this segment …","","Test for triangle-triangle intersection.","","","Test for triangle-segment intersection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the curve can be approximated with a …","Returns true if the angle is a finite number.","","Returns true if the curve can be approximated with a …","Returns true if the curve can be approximated with a …","Returns whether this segment is fully monotonic.","Returns whether this segment is fully monotonic.","Returns true if the curve can be safely approximated with …","Per SVG spec, this arc should be rendered as a line_to …","","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the y axis.","Returns whether this segment is monotonic on the y axis.","Of the four candidate arc sweeps, two will represent an …","Computes the length of this segment.","Computes the length of this segment.","Linear interpolation between two angles, using the …","","","Computes the intersection points (if any) between this …","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment a …","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment …","Return the x inflection point or None if this curve is …","Return the y inflection point or None if this curve is …","","","","","","","","Computes third mid-point of this segment.","","","","","","","","Computes the number of quadratic bézier segments required …","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Returns this angle in the [0..2*PI[ range.","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","","","","","Sample the curve at t (expecting t between 0 and 1).","Sample the curve at t (expecting t between 0 and 1).","","Sample the curve at t (expecting t between 0 and 1).","","","Sample the segment at t (expecting t between 0 and 1).","Sample the curve at t (expecting t between 0 and 1).","","Sample the curve’s tangent at t (expecting t between 0 …","Changes the segment’s length, moving destination point.","Returns this angle in the ]-PI..PI] range.","","","Returns (sin(self), cos(self)).","Shorthand for <code>Size::new(x, y)</code>.","Return the parameter values corresponding to a given x …","","Return the parameter values corresponding to a given y …","","","","","","Split this curve into two sub-curves.","Split this curve into two sub-curves.","","","Split this curve into two sub-curves.","","Split this curve into two sub-segments.","Split this curve into two sub-curves.","","","Return the curve inside a given range of t.","","Return the sub-curve inside a given range of t.","Return the sub-curve inside a given range of t.","","","Return the sub-segment inside a given range of t.","","Return the sub-curve inside a given range of t.","Computes the squared distance between this segment and a …","Returned the squared distance to a point.","Returns the shortest squared distance between this segment …","Computes the squared length of this segment.","","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","End of the curve.","","","","","","","","","","","","","Converts this arc from endpoints to center notation.","Elevate this curve to a third order bézier.","","","","","","Cast angle to <code>f32</code>.","","","","","Cast angle <code>f64</code>.","Returns the line containing this segment.","","","","","","","","","","Approximate the curve with a single quadratic bézier …","Evaluates an upper bound on the maximum distance between …","Convert to the SVG arc notation.","Returns the vector between this segment’s <code>from</code> and <code>to</code> …","","[Not implemented] Applies the transform to this triangle …","Applies the transform to this curve and returns the …","Applies the transform to this segment and returns the …","Applies the transform to this curve and returns the …","","Fallible cast from one numeric representation to another.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for <code>Vector::new(x, y)</code>.","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","Sample x at t (expecting t between 0 and 1).","","","Sample the x coordinate of the curve at t (expecting t …","","","Sample the x coordinate of the segment at t (expecting t …","Sample the x coordinate of the curve at t (expecting t …","","","","The <code>x</code> (traditionally, horizontal) coordinate.","Find the advancement of the x-most position in the curve.","Find the advancement of the x-most position in the curve.","Find the x-least position in the curve.","Find the advancement of the x-least position in the curve.","","","Sample y at t (expecting t between 0 and 1).","","","Sample the y coordinate of the curve at t (expecting t …","","","Sample the y coordinate of the segment at t (expecting t …","Sample the y coordinate of the curve at t (expecting t …","","","","The <code>y</code> (traditionally, vertical) coordinate.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-least position in the curve.","Find the advancement of the y-least position in the curve.","","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","Flattening iterator for arcs.","An elliptic arc curve segment using the SVG’s end-point …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Of the four candidate arc sweeps, two will represent an …","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","","","","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","","","","","","","","","","","","","","","","Create a draining iterator that removes the specified …","","","","","","","","","Extract the overflowing element","","","","","","","","","","","","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","","","","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","","","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","","","","","","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …","A 2d curve segment defined by four points: the beginning …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","An angle in radians","A 2d vector of booleans, useful for component-wise logic …","A 3d vector of booleans, useful for component-wise logic …","A 2d axis aligned rectangle represented by its minimum and …","An axis aligned 3D box represented by its minimum and …","Homogeneous vector in 3D space.","A one-dimensional distance, with value represented by <code>T</code> …","A 2d Point tagged with a unit.","A 3d Point tagged with a unit.","A 2d Rectangle optionally tagged with a unit.","A rigid transformation. All lengths are preserved under …","A transform that can represent rotations in 2d, …","A transform that can represent rotations in 3d, …","A scaling factor between two different units of …","A group of 2D side offsets, which correspond to …","A 2d size tagged with a unit.","A 3d size tagged with a unit.","A 2d transform represented by a column-major 3 by 3 …","A 3d transform stored as a column-major 4 by 4 matrix.","A 2d transformation from a space to another that can only …","A 3d transformation from a space to another that can only …","Trait for basic trigonometry functions, so they can be …","The default unit.","A 2d Vector tagged with a unit.","A 3d Vector tagged with a unit.","Computes the absolute value of each component.","Computes the absolute value of each component.","Computes the vector with absolute values of each component.","Computes the vector with absolute values of each component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns new vector with by-component AND operation applied.","Returns new vector with by-component AND operation applied.","Angle in radians","Returns the signed angle between this vector and the x …","Returns the signed angle between this vector and another …","Returns the positive angle between this vector and another …","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","","","","","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","Returns true is this transform is approximately equal to …","","","","Utilities for testing approximate ordering - especially …","","","Returns result of multiplication of both components","Creates a rotation around a given axis.","Creates a rotation around the x axis.","Creates a rotation around the y axis.","Creates a rotation around the z axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for …","Shorthand for <code>BoolVector2D { x, y }</code>.","Shorthand for <code>BoolVector3D { x, y, z }</code>.","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast the unit","Cast the unit","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit","Cast the unit.","Cast the unit.","","Rounds each component to the smallest integer equal or …","See Point2D::ceil()","See Point3D::ceil()","Rounds each component to the smallest integer equal or …","See <code>Size2D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Size3D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Vector2D::ceil()</code>","Rounds each component to the smallest integer equal or …","See <code>Vector3D::ceil()</code>","Rounds each component to the smallest integer equal or …","","","","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the size each component of which clamped by …","Returns the size each component of which clamped by …","Returns the vector each component of which is clamped by …","Returns the vector each component of which is clamped by …","Return this vector with minimum and maximum lengths …","Return this vector with minimum and maximum lengths …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the component-wise division of the two vectors.","Returns the component-wise division of the two vectors.","Returns the component-wise multiplication of the two …","Returns the component-wise multiplication of the two …","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this box contains the point. Points are …","Returns <code>true</code> if this box3d contains the point. Points are …","Returns true if this rectangle contains the point. Points …","","","Returns <code>true</code> if this box contains the interior of the …","Returns <code>true</code> if this box3d contains the interior of the …","Returns true if this rectangle contains the interior of …","","Returns the norm of the cross product [self.x, self.y, 0] …","Cross product.","Decompose this into a translation and an rotation to be …","A set of aliases for all types, tagged with the default …","","","","","","","","","","","Returns the identity transform.","Returns the identity transform.","","","","","","","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes and returns the determinant of this transform.","Compute the determinant of the transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates Euclidean division, the matching method for …","Calculates Euclidean division, the matching method for …","Dot product.","Dot product.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a rotation from Euler angles.","Create a 3d point from this one, using the specified z …","Create a 3d vector from this one, using the specified z …","","See Point2D::floor()","Rounds each component to the biggest integer equal or …","See Point3D::floor()","Rounds each component to the biggest integer equal or …","Rounds each component to the biggest integer equal or …","See <code>Size2D::floor()</code>.","Rounds each component to the biggest integer equal or …","See <code>Size3D::floor()</code>.","Rounds each component to the biggest integer equal or …","See <code>Vector2D::floor()</code>","Rounds each component to the biggest integer equal or …","See <code>Vector3D::floor()</code>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Constructor taking angle and length","Create a transform providing its components via an array …","Create a transform providing its components via an array …","Equivalent to <code>from_array</code> with elements packed two at a time","Equivalent to <code>from_array</code> with elements packed four at a …","Constructor setting the same value to all sides, taking a …","Constructor taking properly Lengths instead of scalar …","Constructor taking properly Lengths instead of scalar …","Constructor taking a typed Length for each side.","Constructor taking scalar strongly typed lengths.","Constructor taking scalar strongly typed lengths.","Constructor taking properly  Lengths instead of scalar …","Constructor taking properly  Lengths instead of scalar …","Constructor.","Returns the smallest box containing all of the provided …","Returns the smallest box containing all of the provided …","Returns the smallest rectangle defined by the …","","Convenience function to create a scale transform from a …","Creates a Box2D of the given size, at offset zero.","Creates a Box3D of the given size, at offset zero.","Creates a rect of the given size, at offset zero.","","","","","","","","","","","","","","","","","","","","","","","","","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unit-less value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Construct side offsets from min and a max vector offsets.","Construct side offsets from min and a max vector offsets.","Unpack the underlying value from the wrapper.","Returns the underlying scalar scale factor.","Returns self.angle as a strongly typed <code>Angle&lt;T&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “greater then” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","","Component multiplied by the imaginary number <code>i</code>.","Creates the identity rotation.","Creates the identity rotation.","Creates an identity scale (1.0).","Create an identity matrix:","Creates an identity matrix:","Creates no-op translation (both <code>x</code> and <code>y</code> is <code>zero()</code>).","Creates no-op translation (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Construct an identity transform","Inflates the box by the specified sizes on each side …","Inflates the box by the specified sizes on each side …","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the size and position of an inner box.","Calculate the size and position of an inner rectangle.","Computes the intersection of two boxes, returning <code>None</code> if …","","","Computes the intersection of two boxes without check …","","Returns <code>true</code> if the two boxes intersect.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of this rotation.","Returns the inverse of this rotation.","The inverse Scale (1.0 / self).","Returns the inverse transform if possible.","Returns the inverse transform if possible.","Return the inverse transformation.","Return the inverse transformation.","Inverts the transformation","Returns <code>true</code> if this transform can be represented with a …","Check whether shapes on the XY plane with Z pointing …","Returns true if the size is zero, negative or NaN.","Returns true if the size is zero, negative or NaN.","","Returns <code>true</code> if any component of size is zero, negative, …","Returns <code>true</code> if any component of size is zero, negative or …","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns <code>true</code> if this scale has no effect.","Check if translation does nothing (both x and y is <code>zero()</code>).","Check if translation does nothing (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Returns whether it is possible to compute the inverse …","Returns whether it is possible to compute the inverse …","Returns true if the box has a negative area.","Returns true if the box has a negative volume.","Returns <code>true</code> if norm of this quaternion is (approximately) …","Returns <code>true</code> if both components is positive and <code>false</code> any …","Returns <code>true</code> if all components is positive and <code>false</code> any …","Returns <code>true</code> if all side offsets are zero.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","Returns the vector length.","Returns the vector length.","Linearly interpolate between this box and another box.","Linearly interpolate between this box3d and another box3d.","Linearly interpolate between this length and another …","Linearly interpolate between this point and another point.","Linearly interpolate between this point and another point.","Linearly interpolate between this rectangle and another …","Basic Linear interpolation between this rotation and …","Linearly interpolate each component between this size and …","Linearly interpolate between this size and another size.","Linearly interpolate each component between this vector …","Linearly interpolate each component between this vector …","Returns vector with results of “lower then” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","","","","","","","","","","","","","","","","","","","","","","","Returns maximum between this length and another length.","","","","","Returns the size each component of which are maximum of …","Returns the size each component of which are maximum of …","Returns the vector each component of which are maximum of …","Returns the vector each component of which are maximum of …","","","","","Returns minimum between this length and another length.","","","","","Returns the size each component of which are minimum of …","Returns the size each component of which are minimum of …","Returns the vector each component of which are minimum of …","Returns the vector each component of which are minimum of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies all of the transform’s component by a scalar …","","","","","","","","","Constructor.","Constructor.","Constructor taking scalar values directly.","Associate a value with a unit of measure.","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Constructor.","Creates a rotation from an angle in radians.","","Constructor taking a scalar for each side.","Constructor taking scalar values.","Constructor taking scalar values.","Create a transform specifying its components in using the …","Create a transform specifying all of it’s component as a …","","","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Construct a new rigid transformation, where the <code>rotation</code> …","Create a transform representing a 2d transformation from …","Constructor setting the same value to all sides, taking a …","Construct a new rigid transformation, where the <code>translation</code>…","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Computes the norm of this quaternion.","Returns a unit quaternion from this one.","Returns the vector with length of one unit.","Returns the vector with length of one unit","Returns new vector with results of negation operation on …","Returns new vector with results of negation operation on …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","","","","","","","","","","","","","","","","","","A one-dimensional length, tagged with its units.","","Constructor, setting all components to one.","Constructor, setting all components to one.","Returns new vector with by-component OR operation applied.","Returns new vector with by-component OR operation applied.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","","Create an orthogonal projection transform.","Calculate the b and position of an outer box.","Calculate the size and position of an outer rectangle.","Returns a box that encompasses the result of transforming …","Returns a 2d box that encompasses the result of …","Returns a 3d box that encompasses the result of …","Returns a rectangle that encompasses the result of …","Returns a rectangle that encompasses the result of …","","","","Create a simple perspective transform, projecting to the …","Shorthand for <code>Point2D::new(x, y)</code>.","Shorthand for <code>Point3D::new(x, y)</code>.","","Applies a rotation before self’s transformation and …","Returns a transform with a rotation applied before self’…","Applies a scale before self’s transformation and returns …","Returns a transform with a scale applied before self’s …","Applies a translation before self’s transformation and …","Returns a transform with a translation applied before self…","Returns this vector projected onto another one.","Returns this vector projected onto another one.","Returns a projection of this transform in 2d space.","Creates a rotation around from a quaternion representation.","The real part.","Creates a rotation from an angle in radians.","","","Shorthand for …","Returns a reflection vector using an incident ray and a …","Returns a reflection vector using an incident ray and a …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","","Return the normalized vector even if the length is larger …","Return the normalized vector even if the length is larger …","Returns a rotation transform.","Create a 3d rotation transform from an angle / axis. The …","","Return a box with edges rounded to integer coordinates, …","Return a box3d with edges rounded to integer coordinates, …","See Point2D::round()","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See Point3D::round()","Return a rectangle with edges rounded to integer …","Rounds each component to the nearest integer value.","See <code>Size2D::round()</code>.","Rounds each component to the nearest integer value.","See <code>Size3D::round()</code>.","Rounds each component to the nearest integer value.","See <code>Vector2D::round()</code>","Rounds each component to the nearest integer value.","See <code>Vector3D::round()</code>","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","","","","","","Create a 2d scale transform:","Create a 3d scale transform:","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns vector, each component of which or from <code>a</code>, or from …","Returns vector, each component of which or from <code>a</code>, or from …","Change the size of the box by adjusting the max endpoint …","","","","","Shorthand for <code>Size2D::new(w, h)</code>.","Shorthand for <code>Size3D::new(w, h, d)</code>.","Create a 2d skew transform.","Spherical linear interpolation between this rotation and …","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","","","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Returns the vector’s length squared.","Returns the vector’s length squared.","Computes the squared norm of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a rotation representing the other rotation …","Returns a rotation representing this rotation followed by …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two transforms such that …","Applies a rotation after self’s transformation and …","Returns a transform with a rotation applied after self’s …","Applies a scale after self’s transformation and returns …","Returns a transform with a scale applied after self’s …","Applies a translation after self’s transformation and …","Returns a transform with a translation applied after self…","Convert into a 2d point.","Create a 2D transform picking the relevant terms from this …","Convert into a 2d vector.","Convert into a 3d point with z-coordinate equals to zero.","Creates a 3d rotation (around the z axis) from this 2d …","Create a 3D transform from the current transform","Convert into a 3d vector with <code>z</code> coordinate equals to …","Cast into an array with x and y.","Cast into an array with x, y and z.","Return this size as an array of two elements (width, then …","Return this size as an array of three elements (width, …","Returns an array containing this transform’s terms.","Returns an array containing this transform’s terms.","Cast into an array with x and y.","Cast into an array with x, y and z.","Cast into an array with x and y.","Cast into an array with x, y and z.","","Cast into an array with x, y, z and 0.","Returns an array containing this transform’s terms …","Returns an array containing this transform’s terms …","Equivalent to <code>to_array</code> with elements packed two at a time …","Equivalent to <code>to_array</code> with elements packed four at a time …","Equivalent to <code>to_array_transposed</code> with elements packed …","","Cast into an <code>f32</code> box.","Cast into an <code>f32</code> box3d.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> rectangle.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> vector.","Cast into an <code>f32</code> vector.","Cast into an <code>f64</code> box.","Cast into an <code>f64</code> box3d.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> rectangle.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> vector.","Cast into an <code>f64</code> vector.","Cast into an <code>i32</code> box, truncating decimals if any.","Cast into an <code>i32</code> box3d, truncating decimals if any.","Cast into an i32 point, truncating decimals if any.","Cast into an <code>i32</code> point, truncating decimals if any.","Cast into an <code>i32</code> rectangle, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an i32 vector, truncating decimals if any.","Cast into an <code>i32</code> vector, truncating decimals if any.","Cast into an <code>i64</code> box, truncating decimals if any.","Cast into an <code>i64</code> box3d, truncating decimals if any.","Cast into an i64 point, truncating decimals if any.","Cast into an <code>i64</code> point, truncating decimals if any.","Cast into an <code>i64</code> rectangle, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an i64 vector, truncating decimals if any.","Cast into an <code>i64</code> vector, truncating decimals if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast this vector into a point.","Cast this vector into a point.","Convert into Cartesian 2D point.","Convert into Cartesian 3D point.","","Cast this vector into a size.","Returns the matrix representation of this rotation.","Returns the matrix representation of this rotation.","Returns the matrix representation of this translation.","Returns the matrix representation of this translation.","Creates translation by this vector in vector units.","Creates translation by this vector in vector units","","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Return this size as a tuple of two elements (width, then …","Return this size as an array of three elements (width, …","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","","Cast into a tuple with x, y, z and 0.","Cast into an <code>u32</code> box, truncating decimals if any.","Cast into an <code>u32</code> box3d, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> rectangle, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u64</code> rectangle, truncating decimals if any.","Cast into an <code>u64</code> size, truncating decimals if any.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Cast into an <code>usize</code> box, truncating decimals if any.","Cast into an <code>usize</code> box3d, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> rectangle, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast this point into a vector.","Cast this point into a vector.","Return this size as a vector with width and height.","Return this size as a vector with width, height and depth.","Cast into a 2D vector.","Cast into a 3D vector.","","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 3D box and cast its unit.","Returns the given 2d point transformed by this rotation.","","","Returns the given point transformed by this scale.","","Returns the given point transformed by this transform.","Translate a point and cast its unit.","","Returns the given 2d point transformed by this rotation …","Returns the given 2d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given 3d point transformed by this rotation.","Returns the given point transformed by this scale.","Returns the given 3d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given rect transformed by this scale.","Translate a rectangle and cast its unit.","Translate a rectangle and cast its unit.","Returns the given size transformed by this scale.","No-op, just cast the unit.","No-op, just cast the unit.","Returns the given 2d vector transformed by this rotation.","","","Returns the given vector transformed by this scale.","Returns the given vector transformed by this matrix.","","","Returns the given 2d vector transformed by this rotation …","Returns the given 2d vector transformed by this matrix.","Returns the given 3d vector transformed by this rotation.","Returns the given 3d vector transformed by this matrix.","Returns the same box, translated by a vector.","Returns the same box3d, translated by a vector.","Returns the same rectangle, translated by a vector.","Create a 2d translation transform:","Create a 3d translation transform:","","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector with length of one unit.","Returns the vector with length of one unit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union of two boxes.","Computes the union of two boxes.","","Creates a rotation around from a quaternion representation …","","","","","","","","","","","","","","","","","","","","","","","","Convenience constructor.","Convenience constructor.","Returns the vector part (i, j, k) of this quaternion.","","","Returns result of multiplication of all components","","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","Returns the same transform with a different destination …","Returns the same transform with a different destination …","Return this vector scaled to fit the provided length.","Return this vector capped to a maximum length.","Return this vector capped to a maximum length.","Return this vector with a minimum length applied.","Return this vector with a minimum length applied.","Returns the same transform with a different source unit.","Returns the same transform with a different source unit.","","","","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","Returns a 2d point using this point’s x and y coordinates","Returns a 2d vector using this vector’s x and y …","Returns a 2d vector using this vector’s x and y …","","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s x and z …","","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","","Swap x and y.","Swap x and y.","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s y and z …","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","","The same as <code>origin()</code>.","The same as <code>origin()</code>.","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>Zero::zero()</code> but available without importing …","The same as <code>Zero::zero()</code> but available without importing …","","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Trait for testing approximate equality","Default epsilon value","Returns <code>true</code> is this object is approximately equal to the …","Returns <code>true</code> is this object is approximately equal to the …","","","","","","","","","","","","","","","","","","","","","","","Angle in radians","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","Component multiplied by the imaginary number <code>i</code>.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The real part.","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Defines the smallest integer equal or greater than the …","Defines the biggest integer equal or lower than the …","","Defines the nearest integer value to the original value.","","Rounds to the smallest integer equal or greater than the …","Rounds to the biggest integer equal or lower than the …","","Rounds to the nearest integer value.","","A flattening iterator for quadratic bézier segments.","A flattening iterator for quadratic bézier segments.","","A 2d curve segment defined by three points: the beginning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common APIs to segment types.","","Return the curve after the split point.","Compute the length of the segment using a flattened …","Return the curve before the split point.","Sample the derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Swap the direction of the segment.","Approximates the curve with sequence of line segments.","Start of the curve.","Sample the curve at t (expecting t between 0 and 1).","Split this curve into two sub-curves.","Return the curve inside a given range of t.","End of the curve.","","","Sample x at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","","Angle between vectors v1 and v2 (oriented clockwise …","","","","","An iterator that consumes <code>Event</code> iterator and yields …","An iterator that consumes an iterator of <code>Point</code>s and …","","An extension trait for <code>PathEvent</code> iterators.","Applies a 2D transform to a path iterator and yields the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that turns curves into line segments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create the iterator.","Creates a new transformed path iterator from a path …","","","","","","","","Returns an iterator applying a 2D transform to all of its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Angle in radians","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>.","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","","The <code>x</code> (traditionally, horizontal) coordinate.","","","The <code>y</code> (traditionally, vertical) coordinate.","","","The default builder for <code>Path</code>.","A builder for <code>Path</code> with custom attributes.","An iterator of endpoint and control point ids for <code>Path</code> and …","An iterator for <code>Path</code> and <code>PathSlice</code>.","An iterator for <code>Path</code> and <code>PathSlice</code>.","A simple path data structure.","A view on a <code>Path</code>.","An iterator of over a <code>Path</code> traversing the path in reverse.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate on a flattened approximation of the path with …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>Path</code> from This iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Builder that appends a path to an existing PathBuffer.","A Builder that appends a path to an existing PathBuffer, …","Iterator over the paths in a <code>PathBufferSlice</code>.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A view over a sequence of endpoint IDs forming a polygon.","An iterator of <code>Event&lt;EndpointId, ()&gt;</code>.","An iterator of <code>PathEvent</code>.","A view over a sequence of endpoints forming a polygon.","An iterator of <code>IdEvent</code> for <code>Polygon</code>.","An iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a path.","The base path building interface.","An extension trait for <code>PathEvent</code> iterators.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds an elliptical arc.","Starts a new sub-path at a given position.","Builds a path object, consuming the builder.","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","Ends the current sub path.","","Returns a builder that approximates all curves with …","Returns an iterator that turns curves into line segments.","Adds an horizontal line segment.","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","Start a new sub-path at the given position.","","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","Adds an horizontal line segment in relative coordinates.","Equivalent to <code>line_to</code> in relative coordinates.","Equivalent to <code>move_to</code> in relative coordinates.","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","Adds a vertical line segment in relative coordinates.","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","Returns a builder that applies the given transformation to …","Returns an iterator applying a 2D transform to all of its …","Adds a vertical line segment.","Returns a builder that support SVG commands.","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A <code>Gradient</code> color.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A sharp corner.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The style of a stroke.","The coloring style of some drawing.","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The shape to be used at the corners of paths or basic …","The offset of <code>LineDash::segments</code> to start the pattern.","The alternating lengths of lines and gaps which describe …","The color or gradient of the stroke.","The distance between the two edges of the stroke."],"i":[0,249,250,0,249,250,0,0,0,0,0,0,3,6,40,0,3,6,40,0,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,3,6,40,6,6,6,3,3,3,6,40,3,6,40,3,6,40,3,3,3,3,3,3,6,40,3,3,6,3,3,3,3,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,6,3,3,3,6,6,3,3,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,3,6,40,6,67,66,0,0,0,17,17,0,69,0,0,0,63,67,0,0,66,67,69,66,0,0,0,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,61,62,63,64,61,65,66,67,68,69,70,63,64,61,65,66,67,68,69,70,70,59,62,63,64,61,65,66,67,68,69,70,70,62,64,65,66,67,68,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,62,17,70,59,62,63,64,61,65,66,67,68,69,70,63,69,0,59,59,59,62,63,64,61,65,66,67,68,69,70,70,0,59,62,63,63,64,64,64,64,61,65,66,67,68,69,69,69,70,70,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,0,59,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,59,62,63,64,61,65,66,67,68,69,70,61,65,65,70,65,59,62,61,17,62,64,65,66,67,68,70,68,63,0,59,70,59,61,61,59,64,59,59,68,70,59,70,0,59,64,65,63,64,61,65,66,67,68,69,70,61,59,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,59,62,63,64,61,65,66,67,68,69,70,70,59,62,63,64,61,65,66,67,68,69,70,59,65,59,65,65,65,59,65,88,0,69,88,0,69,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,64,64,88,88,88,88,88,88,88,88,88,88,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,63,0,79,81,79,79,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,81,79,0,79,79,79,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,79,81,0,0,0,80,93,0,80,80,80,93,80,93,80,93,80,93,80,80,93,80,93,80,93,80,93,93,80,80,93,80,80,93,80,93,80,93,80,93,80,93,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,80,80,80,80,93,80,93,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,80,93,0,0,94,94,94,94,94,94,94,93,94,94,94,94,94,94,94,94,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,93,94,93,94,94,94,94,94,94,94,94,94,94,94,0,0,0,0,0,251,252,107,111,110,0,251,252,107,251,252,107,0,113,0,0,0,115,100,116,0,0,251,252,107,0,0,111,111,0,112,114,113,0,0,0,0,0,0,0,0,0,0,112,114,251,252,107,110,111,0,110,0,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,95,82,98,82,97,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,0,95,82,98,82,98,106,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,108,109,0,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,82,98,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,107,110,111,112,113,114,115,100,116,107,107,107,114,114,114,115,115,115,100,100,100,116,116,116,95,96,108,109,95,82,97,106,95,96,107,82,97,98,99,110,111,112,113,114,115,100,116,106,121,95,96,96,107,107,82,97,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,82,98,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,115,100,120,121,82,97,98,99,122,82,97,108,122,82,97,108,107,114,115,100,116,107,114,115,100,116,82,97,108,82,82,97,97,108,98,99,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,95,82,97,97,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,107,97,98,99,113,112,113,112,95,96,82,97,98,99,108,109,82,97,0,106,82,97,98,99,0,121,82,98,95,96,95,96,106,82,98,120,121,82,97,115,100,112,0,0,108,95,108,109,0,123,98,82,97,82,106,107,112,106,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,115,100,116,0,107,82,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,106,121,95,96,107,82,97,98,99,108,109,110,111,112,113,114,115,100,116,82,98,107,253,254,255,256,256,254,257,255,256,254,257,255,256,253,254,255,256,256,254,257,255,256,254,257,255,256,253,254,255,256,256,254,257,255,256,254,257,255,256,0,0,0,0,0,155,0,0,0,152,153,143,151,103,145,103,145,103,145,103,145,103,145,149,103,145,103,145,103,143,149,143,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,145,152,153,103,103,152,153,143,151,103,152,153,143,151,103,151,151,155,152,152,153,143,143,103,103,151,103,151,103,149,145,143,143,103,152,153,143,151,103,145,149,152,153,143,143,103,103,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,145,152,153,103,103,151,103,145,103,145,143,103,151,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,103,103,149,143,152,153,143,151,103,103,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,103,152,153,143,151,103,145,149,152,153,143,143,103,103,149,143,143,152,153,143,151,103,151,103,145,152,153,103,151,145,103,145,149,152,153,143,143,103,103,149,143,149,143,149,143,149,143,149,143,149,143,149,143,145,149,152,153,143,143,103,103,152,153,143,149,143,149,143,149,143,149,143,151,103,151,151,151,151,145,143,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,152,153,143,151,103,149,143,152,153,143,151,103,103,145,103,103,0,0,0,0,0,0,0,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,101,140,101,118,132,159,140,101,118,132,159,101,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,101,101,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,101,140,140,101,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,140,140,140,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,118,132,159,140,101,118,132,159,140,101,101,118,132,159,101,118,101,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,140,101,118,132,159,101,0,0,0,0,0,161,161,161,161,161,161,0,0,0,161,161,161,161,0,0,0,161,161,0,167,0,0,0,0,161,161,161,0,0,0,0,161,160,162,162,162,168,178,169,148,179,160,170,162,147,147,147,147,167,168,168,169,169,148,148,170,170,258,147,147,147,167,168,168,169,169,148,170,0,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,160,162,162,169,170,162,167,168,168,169,169,148,148,170,170,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,169,148,170,162,168,169,170,162,168,169,170,162,170,160,162,162,147,162,168,168,148,148,148,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,148,170,168,178,169,148,179,160,170,162,147,162,148,170,169,169,0,169,169,147,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,167,168,169,169,148,170,170,148,179,160,170,147,147,147,168,178,169,148,179,160,170,162,147,169,170,169,168,178,169,148,179,160,170,162,147,167,169,169,148,170,170,167,169,169,148,170,170,168,161,168,178,169,148,160,170,162,147,179,160,160,160,147,147,147,168,169,170,168,169,170,168,169,170,169,170,178,168,169,170,170,170,167,168,168,169,169,148,148,170,170,168,178,169,148,179,160,170,162,147,168,178,168,178,169,170,167,168,168,178,169,169,148,170,170,169,168,169,168,169,169,170,169,170,168,178,169,168,178,169,169,170,169,170,169,170,169,170,147,147,147,167,168,168,168,168,178,169,169,169,148,148,148,179,160,170,170,170,162,147,178,169,148,170,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,147,168,147,147,259,148,148,168,178,169,148,179,160,170,162,147,148,179,148,148,162,179,148,162,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,160,170,147,160,169,170,169,170,169,178,160,169,170,169,170,106,148,170,147,148,148,169,170,169,170,169,170,169,170,170,170,260,260,260,260,260,260,261,148,261,147,147,147,160,160,147,169,160,148,148,160,147,147,0,179,147,160,0,169,169,147,147,168,178,167,168,168,169,169,148,148,170,170,168,148,147,179,160,147,0,169,148,169,148,148,160,148,160,167,168,168,169,169,148,148,170,170,148,167,168,168,169,169,148,148,170,170,148,179,170,148,168,147,147,147,147,106,168,160,167,168,168,169,169,148,148,170,170,178,169,148,170,178,170,147,169,148,179,170,147,169,148,179,170,147,148,168,178,169,148,179,160,170,162,147,169,169,168,148,0,162,169,148,170,148,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,168,178,169,148,179,160,170,162,147,0,161,0,179,148,148,168,178,169,148,179,160,170,162,147,259,167,168,168,169,169,148,148,170,170,262,263,264,169,170,169,170,168,178,167,168,168,169,169,148,148,170,170,262,263,264,169,170,169,170,147,0,0,0,0,184,184,184,184,184,184,184,168,184,184,184,184,184,178,184,178,184,184,184,184,184,184,184,184,184,184,184,184,106,184,168,178,168,106,168,178,184,184,184,184,184,184,184,184,184,168,178,0,0,0,0,0,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,180,180,198,180,180,198,180,198,180,180,199,202,198,198,200,180,180,199,202,198,198,200,180,198,180,198,180,199,198,200,180,198,180,199,198,200,180,198,200,180,198,200,180,199,202,198,200,180,198,180,180,199,202,198,198,200,180,180,199,202,198,198,200,180,199,202,198,200,180,180,180,199,199,202,202,198,200,200,180,180,180,180,198,198,200,180,180,180,198,198,198,200,200,200,180,180,180,199,198,198,200,200,180,180,199,202,198,198,200,180,199,202,198,200,198,180,180,199,202,198,200,198,180,198,198,180,198,180,198,198,180,198,180,199,202,198,200,180,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,180,180,180,180,199,202,180,199,202,198,200,180,198,180,198,180,198,198,180,198,180,198,198,180,198,200,180,198,199,202,199,202,180,198,180,198,198,200,180,198,180,180,198,198,180,180,198,180,198,180,180,198,200,199,202,180,180,180,180,199,198,200,198,200,198,200,180,198,180,199,202,198,200,180,180,180,199,202,198,198,198,200,180,180,199,202,198,200,180,199,202,198,200,180,198,198,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,199,202,198,200,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,198,180,180,180,180,180,180,180,198,180,180,180,180,180,198,0,0,185,185,185,185,185,185,185,185,185,169,169,185,185,185,185,185,169,185,185,185,185,185,185,185,185,185,185,185,185,185,185,169,185,185,185,185,185,185,185,185,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,218,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,220,220,119,119,221,221,222,223,194,194,218,218,224,225,146,146,219,219,220,119,119,221,221,223,194,218,224,225,146,219,119,221,226,227,226,227,232,146,146,219,226,227,220,119,221,229,86,228,146,219,86,228,220,119,221,229,86,86,228,228,146,219,0,0,150,230,194,229,229,229,229,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,223,0,0,0,150,231,220,119,221,230,222,194,218,86,228,146,219,150,231,220,119,221,230,232,229,194,218,146,219,233,119,119,221,221,194,194,218,218,146,146,219,219,150,231,230,119,221,222,194,218,146,219,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,220,222,85,220,222,85,146,219,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,230,194,218,150,231,230,181,146,219,233,0,150,231,220,119,221,230,222,223,194,218,86,228,224,225,146,219,85,181,231,218,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,86,228,119,221,150,150,231,231,220,220,220,119,119,221,221,230,230,223,223,194,194,218,218,146,146,219,219,150,150,231,231,220,119,119,221,221,230,230,223,223,194,194,218,218,146,146,219,219,119,221,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,194,218,146,219,150,150,150,231,231,231,236,236,236,220,220,220,119,119,119,221,221,221,230,230,230,232,232,232,229,229,229,222,222,222,223,223,223,194,194,194,218,218,218,86,86,86,228,228,228,224,224,224,225,225,225,146,146,146,219,219,219,233,233,233,226,226,226,227,227,227,85,85,85,229,119,146,181,119,119,221,221,194,194,218,218,146,146,219,219,150,231,236,220,119,221,230,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,150,231,231,236,236,236,236,236,220,119,119,119,221,221,221,230,230,232,229,222,223,194,194,194,194,218,218,218,218,86,228,224,224,225,225,146,146,146,146,219,219,219,233,233,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,146,86,228,86,228,223,119,221,223,194,218,146,219,150,150,231,230,233,228,150,231,230,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,233,150,231,119,221,230,232,229,194,218,86,228,224,225,146,219,233,223,223,220,222,232,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,194,218,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,230,194,218,223,229,232,229,222,86,228,224,225,233,150,231,230,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,230,150,231,230,150,231,150,231,230,150,231,236,220,119,119,119,221,221,221,230,232,229,222,223,194,194,194,218,218,218,86,228,224,224,224,225,225,225,146,146,146,219,219,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,232,229,222,86,228,224,225,233,228,228,150,231,230,194,218,150,231,119,221,230,194,218,146,219,222,224,225,86,228,150,231,229,194,218,223,229,229,223,146,219,150,231,220,119,221,230,229,194,218,146,219,194,218,146,219,86,228,86,228,228,228,86,228,86,228,228,228,86,228,86,228,228,228,228,228,228,228,220,119,221,230,222,194,218,146,219,150,231,230,230,220,119,221,230,222,194,218,146,219,150,231,230,230,150,150,231,231,220,220,119,119,221,221,230,230,222,223,223,194,194,218,218,146,146,219,219,150,150,231,231,220,119,119,221,221,230,230,223,223,194,194,218,218,146,146,219,219,228,220,119,221,223,194,218,146,219,150,231,236,220,119,221,230,232,222,223,194,218,86,228,224,225,146,219,233,228,223,233,226,227,229,229,146,219,226,227,194,218,146,219,150,231,220,119,221,230,222,223,194,218,86,228,224,225,146,219,85,0,222,146,219,226,227,119,221,230,228,150,230,86,228,228,86,228,220,222,85,228,0,0,119,86,228,86,228,86,228,146,219,228,229,229,232,147,181,0,146,219,119,221,223,146,219,86,228,233,150,231,119,119,221,221,230,194,194,218,218,146,146,219,219,150,231,230,150,231,230,220,220,150,231,230,86,228,226,227,226,227,226,227,150,181,150,231,230,0,0,228,229,119,221,194,218,224,225,146,219,146,219,229,220,119,119,119,221,221,221,222,223,194,218,224,225,146,219,220,119,119,221,221,223,194,218,224,225,146,219,220,220,194,194,218,218,146,146,219,219,181,232,229,86,228,233,86,228,86,228,86,228,221,228,219,119,232,86,146,119,221,194,218,86,228,224,225,146,219,221,219,86,228,86,228,228,230,150,231,119,221,230,194,218,146,219,150,231,119,221,230,194,218,146,219,150,231,119,221,230,194,218,146,219,150,231,119,221,230,194,218,146,219,150,231,230,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,146,219,236,236,150,146,232,229,224,225,146,219,233,119,221,194,218,224,225,146,219,221,219,150,231,119,221,230,194,218,146,219,230,194,150,231,119,221,230,232,229,194,218,86,228,224,225,146,219,233,150,231,119,221,230,194,218,146,219,119,221,194,218,224,225,223,224,222,225,222,225,232,232,222,222,86,86,224,224,229,228,225,228,229,222,228,225,228,222,224,225,222,224,225,232,232,222,222,86,86,224,229,228,229,228,150,231,230,86,228,233,150,231,220,119,221,230,222,194,218,86,228,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,146,219,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,150,231,230,229,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,0,0,229,223,231,218,150,231,236,220,119,221,230,232,229,222,223,194,218,86,228,224,225,146,219,233,226,227,85,236,150,231,230,194,218,86,228,146,146,219,146,219,86,228,236,119,221,224,225,146,219,226,227,150,231,230,221,219,227,231,221,219,227,231,236,119,221,224,225,146,219,226,227,150,231,230,119,146,221,219,227,231,236,221,225,219,227,231,150,231,220,119,119,221,221,230,223,194,194,218,218,146,146,219,219,0,176,176,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,265,266,267,259,267,268,268,268,266,269,270,269,270,270,270,269,270,269,270,270,270,269,270,269,270,270,270,270,270,270,270,261,271,261,271,272,268,266,273,272,266,273,274,259,267,263,275,264,276,274,277,278,263,275,264,276,274,277,278,275,276,274,278,0,0,0,0,0,234,239,235,240,237,0,0,0,0,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,170,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,170,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,186,187,242,186,187,242,186,187,186,187,170,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,242,186,187,167,0,0,167,167,167,167,167,167,167,167,167,167,167,167,167,144,144,167,167,0,0,0,0,0,0,0,0,0,0,0,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,244,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,245,246,243,142,245,246,243,243,245,244,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,245,246,243,142,0,0,0,0,0,0,0,0,0,279,280,281,281,281,281,281,281,282,282,0,283,0,0,280,284,285,286,284,285,286,0,0,0,0,0,0,0,0,0,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,102,105,105,141,102,105,133,138,129,141,102,105,133,138,129,102,105,105,102,105,133,138,129,102,105,133,138,129,141,102,105,133,138,129,102,105,105,102,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,102,105,105,102,105,129,138,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,133,138,129,141,141,102,105,133,138,129,102,105,105,102,105,141,133,138,129,102,102,105,105,138,102,105,105,102,105,105,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,141,102,105,133,138,129,102,102,0,0,0,0,0,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,104,247,247,104,247,135,104,247,135,104,104,247,247,135,135,104,247,135,104,104,247,247,104,247,135,104,247,135,104,247,135,104,247,135,104,104,247,247,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,135,104,247,135,104,104,247,247,247,135,135,104,247,104,104,247,247,104,104,247,247,135,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,247,135,104,0,0,0,0,0,0,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,108,109,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,130,137,136,139,130,130,108,109,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,137,136,139,130,0,0,0,155,0,145,145,145,145,145,149,145,145,149,145,155,149,145,145,149,145,145,145,244,149,145,149,149,145,145,145,149,149,149,149,149,149,149,149,145,149,149,149,149,149,145,244,149,145,67,66,69,0,0,0,67,66,67,69,66,0,0,65,65,65,68,68,65,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],4,5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]],-3,7,7],4,8,8,[]],[[[6,[-1,-2]]],-3,8,8,[]],[[[6,[-1,-2]],-3,7,7],-4,8,8,[9,10],[]],[[[3,[-1,-2]]],-3,11,[[11,[],[[12,[]],[13,[]],[14,[]]]]],[]],[[[3,[-1,-2]]],15,11,[[11,[],[[12,[]],[13,[]],[14,[]]]]]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]],-3],4,17,17,[]],[[[3,[-1,-2]],-3,18,19],4,20,[[20,[],[[21,[]]]]],[]],[[[3,[-1,-2]],22],4,23,23],[[[3,[-1,-2]],19,-3],4,24,5,25],[[[3,[-1,-2]],26,[28,[27]],19],4,29,29],[16,4],[16,4],[16,4],[[[3,[-1,-2]]],4,5,5],[[[3,[-1,-2]]],4,5,5],[[[6,[-1,-2]]],30,8,8],[[[3,[-1,-2]],-3,31,27,19],4,11,[[11,[],[[12,[]],[13,[]],[14,[]]]]],[]],[[[3,[-1,-2]],-3,31,27,19],4,11,[[11,[],[[12,[]],[13,[]],[14,[]]]]],[]],[[[3,[-1,-2]],32,-3],4,5,5,[[34,[33]]]],[[[3,[-1,-2]],[36,[35,-3]],31,27,19],4,11,[[11,[],[[12,[]],[13,[]],[14,[]]]]],[]],[[[3,[-1,-2]],37],38,39,39],[[[6,[-1,-2]],37],38,[8,39],[8,39]],[[[40,[-1,-2]],37],38,39,39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]],[46,[[45,[44]]]]],4,8,8],[[[3,[-1,-2]],-3],[[47,[7]]],20,[[20,[],[[21,[]]]]],[]],[[[3,[-1,-2]],26],[[47,[7]]],29,29],[[[3,[-1,-2]],47],-3,17,17,[]],[[[6,[-1,-2]],-3,-4,48,27,[45,[-5]]],[[50,[4,49]]],8,8,[],[],[[52,[51]]]],[[[6,[-1,-2]],-3,-4,48,27,[45,[-5]]],[[53,[44]]],8,8,[],[],[[52,[51]]]],[[[3,[-1,-2]],19],4,5,5],[[[3,[-1,-2]],54],4,5,5],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[57,-1,[28,[51]]],[[50,[[6,[-2,-3]],58]]],[9,10],8,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1]]],31,17],[[31,60],61],[[[62,[-1]]],4,17],[63,63],[64,64],[61,61],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[62,[-1]]],17],[[],64],[[],65],[[],66],[[],67],[[],68],[[],70],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[62,[-1]],-1,47,-2],[],17,[[71,[[59,[-1]]]]]],[[[17,[],[[72,[-1]],[73,[-2]]]],-1],4,74,[[75,[],[[72,[-1]]]]]],[[70,-1],4,[[76,[61,27]]]],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[[63,63],77],[[69,69],77],0,[[[59,[-1]],61,-2],4,17,[[34,[64]]]],[[[59,[-1]],31,47,-2],4,17,[[34,[64]]]],[[[59,[-1]],-2],4,17,[[34,[70]]]],[[[62,[-1]],37],[[50,[4,78]]],17],[[63,37],[[50,[4,78]]]],[[64,37],[[50,[4,78]]]],[[61,37],[[50,[4,78]]]],[[65,37],[[50,[4,78]]]],[[66,37],[[50,[4,78]]]],[[67,37],[[50,[4,78]]]],[[68,37],[[50,[4,78]]]],[[69,37],[[50,[4,78]]]],[[70,37],[[50,[4,78]]]],0,0,[-1,-1,[]],[-1,-1,[]],[79,63],[-1,-1,[]],[63,64],[79,64],[27,64],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,69],[27,69],[51,70],[-1,-1,[]],[35,70],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[59,[-1]]],60,17],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1]]],[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,31],61],0,0,0,0,[[-1,47],[[59,[-1]]],17],[[],[[62,[-1]]],17],[-1,61,[[71,[80]]]],[[[17,[],[[72,[-1]],[73,[-2]]]],47],-2,74,[[75,[],[[72,[-1]]]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[63,81],0,[[[59,[-1]]],4,17],0,[[[59,[-1]]],4,17],[61,82],[[31,47],61],[[[59,[-1]],-2],4,17,[[34,[83]]]],0,[[[59,[-1]],-2],4,17,[[34,[60]]]],[[[59,[-1]],-2],4,17,[[34,[84]]]],0,0,[[[59,[-1]]],47,17],0,0,[[[59,[-1]],61,-2],4,17,[[34,[65]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,[86,[60,85,85]]],61],[[[59,[-1]],84],4,17],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1]]],60,17],0,[[[59,[-1]],19,-3],-2,17,[],[[71,[[59,[-1]]],[[87,[-2]]]]]],[[65,27],65],[[65,66],65],[[65,67],65],[[[59,[-1]],-3],-2,17,[],[[71,[[59,[-1]]],[[87,[-2]]]]]],[[65,60],65],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[[-1,-2],4,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[16,4],[[88,88],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[88,37],[[50,[4,78]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,[[[75,[],[[72,[-1]]]]],31,[]],[[[75,[],[[72,[-1]]]],19],[[75,[],[[72,[-1]]]]],[]],[[[75,[],[[72,[-1]]]],61,-2],4,[],[[34,[64]]]],[[[75,[],[[72,[-1]]]],31,47,-2],4,[],[[34,[64]]]],[[[75,[],[[72,[-1]]]],-2],4,[],[[34,[70]]]],[[[75,[],[[72,[-1]]]]],60,[]],[[[75,[],[[72,[-1]]]]],-1,[]],[[[75,[],[[72,[-1]]]],[75,[],[[72,[-1]]]],31],4,[]],[[[75,[],[[72,[-1]]]]],4,[]],[[[75,[],[[72,[-1]]]]],4,[]],[[[75,[],[[72,[-1]]]],-2],4,[],[[34,[83]]]],[[[75,[],[[72,[-1]]]],-2],4,[],[[34,[60]]]],[[[75,[],[[72,[-1]]]],-2],4,[],[[34,[84]]]],[[[75,[],[[72,[-1]]]]],47,[]],[[[75,[],[[72,[-1]]]],61,-2],4,[],[[34,[65]]]],[[[75,[],[[72,[-1]]]],84],4,[]],[[[75,[],[[72,[-1]]]]],60,[]],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[79,60,27],79],[[79,-1],79,[[91,[],[[89,[90]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,79],[81,81],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],0,[[79,79],77],[[81,81],77],[[79,37],[[50,[4,78]]]],[[81,37],[[50,[4,78]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,77,[]],[[31,31],79],[[92,19],81],[79,81],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[[80,93],4],[[80,31,31,60],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[80,31,31,31],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,61],0,[[80,31,60],4],[93,93],[[-1,-2],4,[],[]],[80,4],[-1,-2,[],[]],[-1,-2,[],[]],[[],80],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[[80,94],4],0,[[93,37],[[50,[4,78]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[80,31],4],[[80,31],4],[[],80],[[],-1,[]],[[80,31,31],4],0,[[80,31,47],4],0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[94,94],[[-1,-2],4,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[16,4],0,0,[[94,37],[[50,[4,78]]]],[-1,-1,[]],[93,94],[-1,-1,[]],[-1,-2,[],[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[95,96],[82,97],[98,99],[[82,100],[[45,[60]]]],[[97,100],[[45,[60]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],101],[[],[[103,[102]]]],[98,104],[16,105],[98,4],[106,106],[95,95],[96,96],[[[107,[-1,-2]]],[[107,[-1,-2]]],10,10],[82,82],[97,97],[98,98],[99,99],[[[108,[-1]]],[[108,[-1]]],10],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[100,100],[116,116],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],106],[[],82],[[],98],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[[106,106],77],[[[107,[-1,-2]],[107,[-1,-2]]],77,117,117],[[110,110],77],[[111,111],77],[[112,112],77],[[113,113],77],[[114,114],77],[[115,115],77],[[100,100],77],[[116,116],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[95,116],[[107,[100,115]]]],[[96,116],[[107,[100,115]]]],[[[108,[-1]],116],[[107,[-1,4]]],[]],[[109,116],[[107,[100,115]]]],[[95,[45,[-1]],[45,[-2]]],[[118,[-1,-2]]],[],[]],[82,[[28,[[4,[[119,[60,85]],[45,[60]]]]]]]],[97,[[28,[[4,[[119,[60,85]],[45,[60]]]]]]]],[[106,37],[[50,[4,78]]]],[[95,37],[[50,[4,78]]]],[[96,37],[[50,[4,78]]]],[[[107,[-1,-2]],37],[[50,[4,78]]],39,39],[[82,37],[[50,[4,78]]]],[[97,37],[[50,[4,78]]]],[[98,37],[[50,[4,78]]]],[[99,37],[[50,[4,78]]]],[[110,37],[[50,[4,78]]]],[[111,37],[[50,[4,78]]]],[[112,37],[[50,[4,78]]]],[[113,37],[[50,[4,78]]]],[[114,37],[[50,[4,78]]]],[[115,37],[[50,[4,78]]]],[[100,37],[[50,[4,78]]]],[[116,37],[[50,[4,78]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[95,96],[-1,-1,[]],[-1,-1,[]],[[[107,[-1,-2]]],-1,10,[]],[-1,-1,[]],[82,97],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,82,[[91,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]]],[-1,98,[[91,[],[[89,[97]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,115],[16,100],[[120,100],[[45,[60]]]],[[121,100],[[45,[60]]]],[[82,100],[[45,[60]]]],[[97,100],[[45,[60]]]],[[98,16],97],[[99,16],97],[[122,115],[[119,[60,85]]]],[[82,115],[[119,[60,85]]]],[[97,115],[[119,[60,85]]]],[[[108,[-1]],115],[[119,[60,85]]],123],[[122,100],[[119,[60,85]]]],[[82,100],[[119,[60,85]]]],[[97,100],[[119,[60,85]]]],[[[108,[-1]],100],[[119,[60,85]]],123],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[[107,[-1,-2]],-3],4,125,125,128],[[114,-1],4,128],[[115,-1],4,128],[[100,-1],4,128],[[116,-1],4,128],[82,129],[97,129],[[[108,[-1]]],130,[]],[[82,100],[[119,[60,85]]]],[[82,115],[[119,[60,85]]]],[[97,100],[[119,[60,85]]]],[[97,115],[[119,[60,85]]]],[[[108,[-1]],100],-1,[]],[98,[[131,[16]]]],[99,[[131,[16]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,132],[82,133],[97,133],[97,133],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[107,[-1,-2]]],77,[],[]],[97,77],[98,77],[99,77],[[113,134],77],[112,77],[[113,134],77],[112,77],[95,132],[96,132],[82,133],[97,133],[98,135],[99,135],[[[108,[-1]]],[[136,[-1]]],[]],[109,137],[82,138],[97,138],0,0,[82,[[28,[[4,[[119,[60,85]],[45,[60]]]]]]]],[97,[[28,[[4,[[119,[60,85]],[45,[60]]]]]]]],[98,16],[99,16],0,[[[45,[60]],16],121],[[],82],[[],98],[[95,116],[[28,[116]]]],[[96,116],[[28,[116]]]],[[95,116],116],[[96,116],116],[[],-1,[]],[[],-1,[]],[[],-1,[]],[120,16],[121,16],[82,16],[97,16],[115,16],[100,16],[112,112],0,0,[[[108,[-1]]],[[139,[-1]]],123],[[95,[45,[-1]],[45,[-2]]],[[140,[-1,-2]]],[],[]],0,0,0,[123,[[119,[60,85]]]],[[98,16,16,16],4],[82,[[142,[141]]]],[97,[[142,[141]]]],[[],[[143,[102]]]],0,[[[107,[-1,-2]]],-1,10,[]],[112,60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,16],[100,16],[116,16],0,[[[107,[[119,[60,85]],[119,[60,85]]]],-1],[[107,[[119,[60,85]],[119,[60,85]]]]],[[144,[60]]]],[[82,-1],82,[[144,[60]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,82],[[16,16,16],98],[[[107,[-1,-2]]],[[107,[[119,[60,85]],[119,[60,85]]]]],123,123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[145,[119,[60,85]],60,114,[45,[60]]],4],[[[103,[-1]],[119,[60,85]],60,114],4,145],[[145,[119,[60,85]],[146,[60,85]],[147,[60]],114,[45,[60]]],4],[[[103,[-1]],[119,[60,85]],[146,[60,85]],[147,[60]],114],4,145],[[145,[148,[60]],[45,[60]]],[[4,[100,100]]]],[[[103,[-1]],[148,[60]]],[[4,[100,100]]],145],[[145,[119,[60,85]],[45,[60]]],100],[[[103,[-1]],[119,[60,85]]],100,145],[[145,[108,[[119,[60,85]]]],[45,[60]]],4],[[149,[108,[[119,[60,85]]]]],4],[[[103,[-1]],[108,[[119,[60,85]]]]],4,145],[[145,[150,[60,85]],114,[45,[60]]],4],[[[103,[-1]],[150,[60,85]],114],4,145],[[145,[150,[60,85]],151,114,[45,[60]]],4],[[[103,[-1]],[150,[60,85]],151,114],4,145],[[[143,[-1]],[119,[60,85]],[146,[60,85]],[147,[60]],[147,[60]]],4,145],[[149,[146,[60,85]],[147,[60]],106,[119,[60,85]]],4],[[[143,[-1]],[146,[60,85]],[147,[60]],106,[119,[60,85]]],4,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[145,[119,[60,85]],[45,[60]]],100],[[[152,[-1]],[119,[60,85]],[45,[60]]],100,145],[[[153,[-1,-2]],[119,[60,85]],[45,[60]]],100,145,[[144,[60]]]],[[[103,[-1]],[119,[60,85]],[45,[60]]],100,145],[[[103,[-1]],[119,[60,85]]],100,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[155,[],[[154,[-1]]]]],-1,[]],[[[152,[-1]]],[],[155,145]],[[[152,[-1]]],[],155],[[[153,[-1,-2]]],[],155,[]],[[[143,[-1]]],[],[155,145]],[[[143,[-1]]],[],[145,155]],[[[103,[-2]]],-1,[],[[155,[],[[154,[-1]]]],145]],[[[103,[-1]]],[],[145,155]],[151,151],[[[103,[-1]]],[[103,[-1]]],[10,145]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[149,4],[145,4],[[[143,[-1]]],4,145],[[[143,[-1]]],4,145],[[[103,[-1]]],4,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[145,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]],[119,[60,85]],[119,[60,85]]],4],[[[152,[-1]],[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145],[[[153,[-1,-2]],[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145,[[144,[60]]]],[[[143,[-1]],[119,[60,85]],[119,[60,85]],[119,[60,85]]],4,145],[[[143,[-1]],[119,[60,85]],[119,[60,85]],[119,[60,85]]],100,145],[[[103,[-1]],[119,[60,85]],[119,[60,85]],[119,[60,85]]],100,145],[[[103,[-1]],[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145],[[[143,[-1]]],[[119,[60,85]]],145],[[],151],[[],[[103,[-1]]],[145,156]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[16,4],[[145,77],4],[[[152,[-1]],77],4,145],[[[153,[-1,-2]],77],4,145,[[144,[60]]]],[[[103,[-1]],77],4,145],[[[103,[-1]],77],4,145],[[151,151],77],[[[103,[-1]],[103,[-1]]],77,[117,145]],[[145,[107,[[4,[[119,[60,85]],[45,[60]]]],[119,[60,85]]]]],4],[[[103,[102]],[45,[97]]],4],[[145,60],[[152,[145]]]],[[[143,[-1]],60],[[143,[[152,[-1]]]]],145],[[[103,[-1]],60],[[103,[[152,[-1]]]]],145],[[151,37],[[50,[4,78]]]],[[151,37],[[50,[4,78]]]],[[[103,[-1]],37],[[50,[4,78]]],[39,145]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],124,[125,126],127],[[[103,[-1]],-2],4,[125,145],128],[[149,60],4],[[[143,[-1]],60],4,145],[[],16],[[],16],[[],16],[[],16],[[],16],[[[103,[-1]]],-1,145],[[[103,[-1]]],-1,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]]],-1,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[145,[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]]],4],[[[152,[-1]],[119,[60,85]],[45,[60]]],100,145],[[[153,[-1,-2]],[119,[60,85]],[45,[60]]],100,145,[[144,[60]]]],[[[143,[-1]],[119,[60,85]]],4,145],[[[143,[-1]],[119,[60,85]]],100,145],[[[103,[-1]],[119,[60,85]],[45,[60]]],100,145],[[[103,[-1]],[119,[60,85]]],100,145],[[149,[119,[60,85]]],4],[[[143,[-1]],[119,[60,85]]],100,145],[[[143,[-1]],[119,[60,85]]],4,145],[[-1,60],[[152,[-1]]],145],[[-1,-2],[[153,[-1,-2]]],[],[]],[-1,[[143,[-1]]],145],[60,151],[[],[[103,[-1]]],[156,145]],[[],-1,[]],[[],-1,[]],[145,16],[[[152,[-1]]],16,145],[[[153,[-1,-2]]],16,145,[[144,[60]]]],[[[103,[-1]]],16,145],[[151,151],[[28,[157]]]],[[145,[107,[[119,[60,85]],[119,[60,85]]]],[45,[60]]],4],[[[103,[-1]],[107,[[119,[60,85]],[119,[60,85]]]]],4,145],[[145,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]],[119,[60,85]]],4],[[[152,[-1]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145],[[[153,[-1,-2]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145,[[144,[60]]]],[[[143,[-1]],[119,[60,85]],[119,[60,85]]],100,145],[[[143,[-1]],[119,[60,85]],[119,[60,85]]],4,145],[[[103,[-1]],[119,[60,85]],[119,[60,85]],[45,[60]]],100,145],[[[103,[-1]],[119,[60,85]],[119,[60,85]]],100,145],[[149,[146,[60,85]],[147,[60]],106,[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]],[147,[60]],106,[146,[60,85]]],4,145],[[149,[146,[60,85]],[146,[60,85]],[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]],[146,[60,85]],[146,[60,85]]],4,145],[[149,60],4],[[[143,[-1]],60],4,145],[[149,[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]]],4,145],[[149,[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]]],4,145],[[149,[146,[60,85]],[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]],[146,[60,85]]],4,145],[[149,60],4],[[[143,[-1]],60],4,145],[[145,16,16],4],[[149,16,16],4],[[[152,[-1]],16,16],4,145],[[[153,[-1,-2]],16,16],4,145,[[144,[60]]]],[[[143,[-1]],16,16],4,145],[[[143,[-1]],16,16],4,145],[[[103,[-1]],16,16],4,145],[[[103,[-1]],16,16],4,145],[[[152,[-1]],60],4,145],[[[153,[-1,-2]],-2],4,[],[]],[[[143,[[153,[-1,-2]]]],-2],4,145,[[144,[60]]]],[[149,[119,[60,85]],[119,[60,85]]],4],[[[143,[-1]],[119,[60,85]],[119,[60,85]]],4,145],[[149,[119,[60,85]]],4],[[[143,[-1]],[119,[60,85]]],4,145],[[149,[146,[60,85]],[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]],[146,[60,85]]],4,145],[[149,[146,[60,85]]],4],[[[143,[-1]],[146,[60,85]]],4,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,158,[]],[-1,35,[]],0,0,[[145,-1],[[153,[145,-1]]],[[144,[60]]]],[[[143,[-1]],-2],[[143,[[153,[-1,-2]]]]],145,[[144,[60]]]],[[[103,[-1]],-2],[[103,[[153,[-1,-2]]]]],145,[[144,[60]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[149,60],4],[[[143,[-1]],60],4,145],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,16],[[103,[-1]]],[156,145]],[145,[[143,[145]]]],[[[103,[-1]]],[[143,[-1]]],145],[-1,[[103,[-1]]],145],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[101,100],116],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[101,95],[[[140,[-1,-2]]],[[140,[-1,-2]]],10,10],[101,101],[[[118,[-1,-2]]],[[118,[-1,-2]]],10,10],[132,132],[[[159,[-1,-2]]],[[159,[-1,-2]]],10,10],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[101,115,115,100],116],[[],101],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[16,4],[[101,77],[[28,[116]]]],[[[140,[-1,-2]]],[[118,[-1,-2]]],[],[]],[[[140,[-1,-2]],37],[[50,[4,78]]],39,39],[[101,37],[[50,[4,78]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[140,[-1,-2]],115],[[119,[60,85]]],123,123],[[[140,[-1,-2]],100],[[119,[60,85]]],123,123],[[[140,[-1,-2]],100],-1,[],[]],[[[140,[-1,-2]],115],-2,[],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[140,[-1,-2]]],132,[],[]],[[101,100],116],[[],101],[[[118,[-1,-2]]],[[28,[[107,[-1,-2]]]]],[],[]],[132,[[28,[[107,[100,115]]]]]],[[[159,[-1,-2]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],123,123],[[],-1,[]],[[[118,[-1,-2]]],[[159,[-1,-2]]],123,123],[[101,115,100],116],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,101],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[160,[-1]]],-1,161],0,[[[162,[-1]]],[[148,[-1]]],161],[[[162,[-1]]],[[148,[-1]]],161],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[147,[-1]],[147,[-1]]],[[147,[-1]]],[[163,[],[[87,[]]]]]],[[[147,[-1]],[147,[-1]]],[[147,[-1]]],[164,[163,[],[[87,[]]]]]],[[[147,[-1]],[147,[-1]]],4,165],[[[167,[],[[166,[-1]]]],-1],[[167,[],[[166,[-1]]]]],161],[[[168,[-1]],-1],[[168,[-1]]],161],[[[168,[-1]],-1],[[168,[-1]]],161],[[[169,[-1]],-1],[[169,[-1]]],161],[[[169,[-1]],-1],[[169,[-1]]],161],[[[148,[-1]],-1],[[148,[-1]]],161],[[[148,[-1]],-1],[[148,[-1]]],161],[[[170,[-1]],-1],[[170,[-1]]],161],[[[170,[-1]],-1],[[170,[-1]]],161],0,[[[147,[-1]],[147,[-1]]],[[147,[-1]]],[[171,[],[[87,[]]]],[172,[],[[87,[]]]],[163,[],[[87,[]]]],[173,[],[[87,[]]]],174,175,164]],[[],-1,176],[[[147,[-1]],[147,[-1]],-1],77,[]],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[160,[-1]]],-1,161],0,[[[162,[-1]]],[[148,[-1]]],161],[[[169,[-1]]],[[148,[-1]]],161],[[[170,[-1]]],[[148,[-1]]],161],[[[162,[-1]]],[[148,[-1]]],161],[[[167,[],[[166,[-1]]]],-1],[[167,[],[[166,[-1]]]]],161],[[[168,[-1]],-1],[[168,[-1]]],161],[[[168,[-1]],-1],[[168,[-1]]],161],[[[169,[-1]],-1],[[169,[-1]]],161],[[[169,[-1]],-1],[[169,[-1]]],161],[[[148,[-1]],-1],[[148,[-1]]],161],[[[148,[-1]],-1],[[148,[-1]]],161],[[[170,[-1]],-1],[[170,[-1]]],161],[[[170,[-1]],-1],[[170,[-1]]],161],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[168,[-1]]],[[150,[-1,85]]],161],[[[169,[-1]]],[[150,[-1,85]]],161],[[[148,[-1]]],[[150,[-1,85]]],161],[[[170,[-1]]],[[150,[-1,85]]],161],[[[162,[-1]]],[[150,[-1,85]]],161],[[[168,[-1]]],[[4,[-1,-1]]],161],[[[169,[-1]]],[[4,[-1,-1]]],161],[[[170,[-1]]],[[4,[-1,-1]]],161],[[[162,[-1]]],[[4,[-1,-1]]],161],[[[168,[-1]]],[[4,[-1,-1]]],161],[[[169,[-1]]],[[4,[-1,-1]]],161],[[[170,[-1]]],[[4,[-1,-1]]],161],[[[162,[-1]]],[[4,[-1,-1]]],161],[[[170,[-1]]],[[162,[-1]]],161],[[[160,[-1]]],-1,161],0,[[[162,[-1]]],[[148,[-1]]],161],[[[147,[-1]]],[[147,[-2]]],[177,164],177],[[[162,[-1]]],[[148,[-1]]],161],0,[[[119,[-1,85]],-1],[[168,[-1]]],161],[[[148,[-1]],[150,[-1,85]]],[[28,[[148,[-1]]]]],161],[[[148,[-1]],[131,[-1]]],[[28,[[148,[-1]]]]],161],[[[148,[-1]],[131,[-1]]],[[28,[[148,[-1]]]]],161],[[[168,[-1]]],[[168,[-1]]],10],[[[178,[-1]]],[[178,[-1]]],10],[[[169,[-1]]],[[169,[-1]]],10],[[[148,[-1]]],[[148,[-1]]],10],[[[179,[-1]]],[[179,[-1]]],10],[[[160,[-1]]],[[160,[-1]]],10],[[[170,[-1]]],[[170,[-1]]],10],[[[162,[-1]]],[[162,[-1]]],10],[[[147,[-1]]],[[147,[-1]]],10],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[[148,[-1]],[119,[-1,85]]],[[119,[-1,85]]],161],[[[170,[-1]],[119,[-1,85]]],-1,161],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[162,[-1]],[119,[-1,85]]],77,161],[[[148,[-1]],[148,[-1]]],77,161],0,0,0,0,[[[169,[-1]],[169,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[169,[-1]],[169,[-1]]],[[180,[[4,[-1,-1]]]]],161],[[],[[147,[-1]]],156],[-1,[[147,[-1]]],181],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[[[167,[],[[166,[-1]]]],-1],[[146,[-1,85]]],161],[[[168,[-1]],-1],[[146,[-1,85]]],161],[[[169,[-1]],-1],[[146,[-1,85]]],161],[[[169,[-1]],-1],[[146,[-1,85]]],161],[[[148,[-1]],-1],[[146,[-1,85]]],161],[[[170,[-1]],-1],[[146,[-1,85]]],161],[[[170,[-1]],-1],[[146,[-1,85]]],161],[[[148,[-1]],[119,[-1,85]]],-1,161],[[[179,[-1]],[119,[-1,85]]],-1,161],[[[160,[-1]],[119,[-1,85]]],-1,161],[[[170,[-1]],[119,[-1,85]]],-1,161],[[[147,[-1]],-1],[[147,[-1]]],[[182,[],[[87,[]]]]]],[[[147,[-1]],[147,[-1]]],-1,[[182,[],[[87,[]]]]]],[[[147,[-1]],-1],4,183],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[169,[-1]],-1,[119,[-1,85]]],[[169,[-1]]],161],[[[170,[-1]],-1,[119,[-1,85]]],[[170,[-1]]],161],[[[169,[-1]],-1,[119,[-1,85]],-1],[[169,[-1]]],161],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[168,[-1]]],[[147,[-1]]],161],[161,161],[[[168,[-1]],[168,[-1]]],77,117],[[[178,[-1]],[178,[-1]]],77,117],[[[169,[-1]],[169,[-1]]],77,117],[[[148,[-1]],[148,[-1]]],77,117],[[[160,[-1]],[160,[-1]]],77,117],[[[170,[-1]],[170,[-1]]],77,117],[[[162,[-1]],[162,[-1]]],77,117],[[[147,[-1]],[147,[-1]]],77,117],[[[179,[-1]]],[[160,[-1]]],161],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[[168,[-1]]],[[150,[-1,85]]],161],[[[169,[-1]]],[[150,[-1,85]]],161],[[[170,[-1]]],[[150,[-1,85]]],161],[[[168,[-1]]],[[4,[-1,-1]]],161],[[[169,[-1]]],[[4,[-1,-1]]],161],[[[170,[-1]]],[[4,[-1,-1]]],161],[[[168,[-1]]],[[4,[-1,-1]]],161],[[[169,[-1]]],[[4,[-1,-1]]],161],[[[170,[-1]]],[[4,[-1,-1]]],161],[[[169,[-1]]],[[4,[[160,[-1]],[160,[-1]]]]],161],[[[170,[-1]]],[[4,[[160,[-1]],[160,[-1]]]]],161],0,[[[168,[-1]],-1],[[184,[-1]]],161],[[[169,[-1]],-1],[[185,[-1]]],161],[[[170,[-1]],-1],[[186,[-1]]],161],[[[170,[-1]],-1],[[187,[-1]]],161],[[[170,[-1]],-1],-1,161],[[[167,[],[[166,[-1]]]]],[[167,[],[[166,[-1]]]]],161],[[[168,[-1]]],[[168,[-1]]],161],[[[168,[-1]]],[[168,[-1]]],161],[[[169,[-1]]],[[169,[-1]]],161],[[[169,[-1]]],[[169,[-1]]],161],[[[148,[-1]]],[[148,[-1]]],161],[[[148,[-1]]],[[148,[-1]]],161],[[[170,[-1]]],[[170,[-1]]],161],[[[170,[-1]]],[[170,[-1]]],161],[[[168,[-1]],37],[[50,[4,78]]],39],[[[178,[-1]],37],[[50,[4,78]]],39],[[[169,[-1]],37],[[50,[4,78]]],39],[[[148,[-1]],37],[[50,[4,78]]],39],[[[179,[-1]],37],[[50,[4,78]]],39],[[[160,[-1]],37],[[50,[4,78]]],39],[[[170,[-1]],37],[[50,[4,78]]],39],[[[162,[-1]],37],[[50,[4,78]]],39],[[[147,[-1]],37],[[50,[4,78]]],39],[[[168,[-1]],-2],4,161,[[76,[[169,[-1]]]]]],[[[178,[-1]],-2],4,161,[[76,[[169,[-1]]]]]],[[[168,[-1]],-1,-2],4,161,[[76,[[148,[-1]]]]]],[[[178,[-1]],-1,-2],4,161,[[76,[[148,[-1]]]]]],[[[169,[-1]],-1,-2],4,161,[[76,[[148,[-1]]]]]],[[[170,[-1]],-1,-2],4,161,[[76,[[148,[-1]]]]]],[[[167,[],[[166,[-1]]]],-1,76],4,161],[[[168,[-1]],76],4,161],[[[168,[-1]],-1,-2],4,161,[[76,[[148,[-1]],[131,[-1]]]]]],[[[178,[-1]],-1,-2],4,161,[[76,[[148,[-1]],[131,[-1]]]]]],[[[169,[-1]],-1,-2],4,161,[[76,[[148,[-1]],[131,[-1]]]]]],[[[169,[-1]],76],4,161],[[[148,[-1]],76],4,161],[[[170,[-1]],76],4,161],[[[170,[-1]],-1,-2],4,161,[[76,[[148,[-1]],[131,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[-1]]]],[[[168,[-1]],-2],4,161,[[76,[-1]]]],[[[169,[-1]],-2],4,161,[[76,[-1]]]],[[[168,[-1]],-2],4,161,[[76,[-1]]]],[[[169,[-1]],-2],4,161,[[76,[-1]]]],[[[169,[-1]],-2],4,161,[[76,[[169,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[170,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[[168,[-1]],-2],4,161,[[76,[[170,[-1]]]]]],[[[178,[-1]],-2],4,161,[[76,[[170,[-1]]]]]],[[[169,[-1]],-1,-2],4,161,[[76,[[170,[-1]]]]]],[[[168,[-1]],-2],4,161,[[76,[[170,[-1]],[131,[-1]]]]]],[[[178,[-1]],-2],4,161,[[76,[[170,[-1]],[131,[-1]]]]]],[[[169,[-1]],-1,-2],4,161,[[76,[[170,[-1]],[131,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[[169,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[170,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[[169,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[170,[-1]]]]]],[[[169,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[[170,[-1]],-2],4,161,[[76,[[131,[-1]]]]]],[[],[[147,[-1]]],[175,[163,[],[[87,[]]]]]],[[],[[147,[-1]]],[175,[163,[],[[87,[]]]]]],[[],[[147,[-1]]],[175,[163,[],[[87,[]]]]]],[[[167,[],[[166,[-1]]]]],[[119,[-1,85]]],161],[[[178,[-1]]],[[168,[-1]]],161],[-1,-1,[]],[[[168,[-1]]],[[119,[-1,85]]],161],[[[168,[-1]]],[[119,[-1,85]]],161],[-1,-1,[]],[[[169,[-1]]],[[119,[-1,85]]],161],[[[169,[-1]]],[[119,[-1,85]]],161],[-1,-1,[]],[[[148,[-1]]],[[119,[-1,85]]],161],[[[148,[-1]]],[[119,[-1,85]]],161],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[170,[-1]]],[[119,[-1,85]]],161],[[[170,[-1]]],[[119,[-1,85]]],161],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[178,[-1]]],[[168,[-1]]],161],[[[147,[-1]]],-1,[]],[[[168,[-1]],-1],[[147,[-1]]],161],[[-1,-2],124,[125,126],127],[[[147,[-1]],-2],4,125,128],0,[[[148,[-1]],-1],[[28,[[119,[-1,85]]]]],161],[[[148,[-1]],-1],[[28,[-1]]],161],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[148,[-1]],[148,[-1]]],[[28,[[119,[-1,85]]]]],161],[[[179,[-1]],[179,[-1]]],[[28,[[119,[-1,85]]]]],161],[[[148,[-1]],[148,[-1]]],[[28,[[4,[-1,-1]]]]],161],[[[148,[-1]],[148,[-1]]],77,161],[[[162,[-1]],[162,[-1]]],77,161],[[[179,[-1]],[150,[-1,85]]],77,161],[[[148,[-1]],[179,[-1]]],77,161],[[[162,[-1]],[148,[-1]]],77,161],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[160,[-1]]],[[160,[-1]]],161],[[[170,[-1]],-1],77,161],[[[147,[-1]]],77,188],[[[160,[-1]]],77,161],[[[169,[-1]],-1],77,161],[[[170,[-1]],-1],77,161],[[[169,[-1]]],77,161],[[[170,[-1]]],77,161],[[[169,[-1]],-1],77,161],[[[178,[-1]]],77,161],[[[160,[-1]]],77,161],[[[169,[-1]]],77,161],[[[170,[-1]]],77,161],[[[169,[-1]]],77,161],[[[170,[-1]]],77,161],0,[[[148,[-1]]],-1,161],[[[170,[-1]]],-1,161],[[[147,[-1]],[147,[-1]],-1],[[147,[-1]]],[[171,[],[[87,[]]]],[172,[],[[87,[]]]],[163,[],[[87,[]]]],[173,[],[[87,[]]]],174,175,164]],[[[148,[-1]],[179,[-1]]],[[28,[[119,[-1,85]]]]],161],[[[148,[-1]],[179,[-1]]],[[28,[-1]]],161],[[[169,[-1]],[179,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[170,[-1]],[179,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[169,[-1]],[179,[-1]]],[[180,[-1]]],161],[[[170,[-1]],[179,[-1]]],[[180,[-1]]],161],[[[169,[-1]],[148,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[170,[-1]],[148,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[169,[-1]],[148,[-1]]],[[180,[[4,[-1,-1]]]]],161],[[[170,[-1]],[148,[-1]]],[[180,[[4,[-1,-1]]]]],161],[[[170,[-1]]],[[28,[-1]]],161],[[[170,[-1]]],[[28,[-1]]],161],0,0,0,0,0,0,0,[[[148,[-1]]],[[119,[-1,85]]],161],0,[[[147,[-1]],-1],[[147,[-1]]],[[173,[],[[87,[]]]]]],[[[147,[-1]],-1],4,189],[[[147,[-1]]],[[147,[-1]]],[[190,[],[[87,[]]]]]],[[-1,-1,-1],[[160,[-1]]],161],[[[160,[-1]]],[[146,[-1,85]]],161],[[],-1,[]],[[[169,[-1]],-1],7,161],[[[160,[-1]],-1],[[160,[-1]]],161],[[[148,[-1]],[179,[-1]]],77,161],[[[148,[-1]],[148,[-1]]],77,161],[[[160,[-1]],[119,[-1,85]]],[[160,[-1]]],161],[[[147,[-1]],[147,[-1]]],[[28,[157]]],191],[[],[[147,[-1]]],[175,[163,[],[[87,[]]]]]],[[-1,-1],[[119,[-1,85]]],[]],0,[[[147,[-1]]],[[147,[-1]]],[[172,[],[[87,[]]]],[171,[],[[87,[]]]],[163,[],[[87,[]]]],192,175,191,164]],[[[160,[-1]],[119,[-1,85]]],[[119,[-1,85]]],161],0,[[[169,[-1]],[170,[-1]]],[[180,[[119,[-1,85]]]]],161],[[[169,[-1]],[170,[-1]]],[[180,[[4,[-1,-1]]]]],161],[-1,[[147,[-1]]],[]],0,0,0,[[[167,[],[[166,[-1]]]],-1],[[119,[-1,85]]],161],[[[168,[-1]],-1],[[119,[-1,85]]],161],[[[168,[-1]],-1],[[119,[-1,85]]],161],[[[169,[-1]],-1],[[119,[-1,85]]],161],[[[169,[-1]],-1],[[119,[-1,85]]],161],[[[148,[-1]],-1],[[119,[-1,85]]],161],[[[148,[-1]],-1],[[119,[-1,85]]],161],[[[170,[-1]],-1],[[119,[-1,85]]],161],[[[170,[-1]],-1],[[119,[-1,85]]],161],[[[168,[-1]],-1],[[146,[-1,85]]],161],[[[148,[-1]],-1],4,161],[[[147,[-1]]],[[147,[-1]]],[[172,[],[[87,[]]]],[171,[],[[87,[]]]],[163,[],[[87,[]]]],192,175,191,164]],[[[179,[-1]],[119,[-1,85]]],-1,161],[[[160,[-1]],[119,[-1,85]]],-1,161],[[[147,[-1]]],[[4,[-1,-1]]],193],[[-1,-1],[[194,[-1,85]]],[]],[[[169,[-1]],-1],[[180,[-1]]],161],[[[148,[-1]],-1],-1,161],[[[169,[-1]],-1],[[180,[-1]]],161],[[[148,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[160,[-1]],-1],[[28,[-1]]],161],[[[148,[-1]],-1],-1,161],[[[160,[-1]],-1],[[28,[-1]]],161],[[[167,[],[[166,[-1]]]],-1],[[4,[[167,[],[[166,[-1]]]],[167,[],[[166,[-1]]]]]]],161],[[[168,[-1]],-1],[[4,[[168,[-1]],[168,[-1]]]]],161],[[[168,[-1]],-1],[[4,[[168,[-1]],[168,[-1]]]]],161],[[[169,[-1]],-1],[[4,[[169,[-1]],[169,[-1]]]]],161],[[[169,[-1]],-1],[[4,[[169,[-1]],[169,[-1]]]]],161],[[[148,[-1]],-1],[[4,[[148,[-1]],[148,[-1]]]]],161],[[[148,[-1]],-1],[[4,[[148,[-1]],[148,[-1]]]]],161],[[[170,[-1]],-1],[[4,[[170,[-1]],[170,[-1]]]]],161],[[[170,[-1]],-1],[[4,[[170,[-1]],[170,[-1]]]]],161],[[[148,[-1]],-1],[[4,[[148,[-1]],[148,[-1]]]]],161],[[[167,[],[[166,[-1]]]],[131,[-1]]],[[167,[],[[166,[-1]]]]],161],[[[168,[-1]],[131,[-1]]],[[168,[-1]]],161],[[[168,[-1]],[131,[-1]]],[[168,[-1]]],161],[[[169,[-1]],[131,[-1]]],[[169,[-1]]],161],[[[169,[-1]],[131,[-1]]],[[169,[-1]]],161],[[[148,[-1]],[131,[-1]]],[[148,[-1]]],161],[[[148,[-1]],[131,[-1]]],[[148,[-1]]],161],[[[170,[-1]],[131,[-1]]],[[170,[-1]]],161],[[[170,[-1]],[131,[-1]]],[[170,[-1]]],161],[[[148,[-1]],[119,[-1,85]]],-1,161],[[[179,[-1]],[119,[-1,85]]],-1,161],[[[170,[-1]],[119,[-1,85]]],-1,161],[[[148,[-1]]],-1,161],0,[[[147,[-1]],[147,[-1]]],[],[[172,[],[[87,[]]]]]],[[[147,[-1]],[147,[-1]]],4,195],[-2,[[147,[-1]]],[163,164,192],[[196,[],[[89,[[147,[-1]]]]]]]],[-2,[[147,[-1]]],[163,192],[[196,[],[[89,[[147,[-1]]]]]]]],0,0,[[[160,[-1]]],[[146,[-1,85]]],161],[[[167,[],[[166,[-1]]]]],[[119,[-1,85]]],161],[[[168,[-1]]],[[119,[-1,85]]],161],[[[168,[-1]]],[[119,[-1,85]]],161],[[[169,[-1]]],[[119,[-1,85]]],161],[[[169,[-1]]],[[119,[-1,85]]],161],[[[148,[-1]]],[[119,[-1,85]]],161],[[[148,[-1]]],[[119,[-1,85]]],161],[[[170,[-1]]],[[119,[-1,85]]],161],[[[170,[-1]]],[[119,[-1,85]]],161],0,0,0,0,[[[178,[-1]]],[[168,[-1]]],161],[[[170,[-1]]],[[169,[-1]]],161],[[[147,[-1]]],-1,181],[[[169,[-1]]],[[169,[60]]],161],[[[148,[-1]]],[[148,[60]]],161],[[[179,[-1]]],[[179,[60]]],161],[[[170,[-1]]],[[170,[60]]],161],[[[147,[-1]]],[[147,[60]]],[177,164]],[[[169,[-1]]],[[169,[197]]],161],[[[148,[-1]]],[[148,[197]]],161],[[[179,[-1]]],[[179,[197]]],161],[[[170,[-1]]],[[170,[197]]],161],[[[147,[-1]]],[[147,[197]]],[177,164]],[[[148,[-1]]],[[179,[-1]]],161],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[169,[-1]]],[[170,[-1]]],161],[[[169,[-1]]],-1,161],[[[168,[-1]]],[[178,[-1]]],161],[[[148,[-1]]],[[146,[-1,85]]],161],0,[[[162,[-1]],-2],[[162,[-1]]],161,[[144,[-1]]]],[[[169,[-1]],-2],[[169,[-1]]],161,[[144,[-1]]]],[[[148,[-1]],-2],[[148,[-1]]],161,[[144,[-1]]]],[[[170,[-1]],-2],[[170,[-1]]],161,[[144,[-1]]]],[[[148,[-1]],[146,[-1,85]]],[[148,[-1]]],161],[[[147,[-1]]],[[28,[[147,[-2]]]]],[177,164],177],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[[],[[147,[-1]]],[175,[163,[],[[87,[]]]]]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],0,[60,161],[[-1,-1],[[146,[-1,85]]],[]],0,[[[148,[-1]],-1],[[28,[[119,[-1,85]]]]],161],[[[148,[-1]],-1],[[28,[-1]]],161],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[167,[],[[166,[-1]]]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],0,0,0,[[[169,[-1]]],-1,161],[[[170,[-1]]],-1,161],[[[169,[-1]]],-1,161],[[[170,[-1]]],-1,161],0,0,[[[167,[],[[166,[-1]]]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[168,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[169,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[148,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],[[[170,[-1]],-1],-1,161],0,0,0,[[[169,[-1]]],-1,161],[[[170,[-1]]],-1,161],[[[169,[-1]]],-1,161],[[[170,[-1]]],-1,161],[[],[[147,[-1]]],192],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[16,4],0,[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[184,[-1]]],[[28,[[119,[-1,85]]]]],161],0,0,0,0,0,0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[180,[-1]]],[[45,[-1]]],[]],[[[180,[-1]]],[],[]],[[[180,[-1]]],[[45,[-1]]],[]],[198,51],[[[180,[-1]]],[],[]],[[[180,[-1]]],[[45,[-1]]],[]],[198,51],[[[180,[-1]]],[[45,[-1]]],[]],[198,51],[-1,-2,[],[]],[[[180,[-1]]],[[45,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[198,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1]]],[[45,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[198,51],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1]]],16,[]],[198,16],[[[180,[-1]]],4,[]],[198,4],[[[180,[-1]]],[[180,[-1]]],10],[[[199,[-1]]],[[199,[-1]]],10],[198,198],[[[200,[-1]]],[[200,[-1]]],10],[[[180,[-1]],[180,[-1]]],4,10],[[198,198],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[[180,[-1]],[180,[-1]]],157,201],[[198,198],157],[[[200,[-1]],[200,[-1]]],157,201],[[-1,-2],157,[],[]],[[-1,-2],157,[],[]],[[-1,-2],157,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[180,[-1]]],[]],[[],198],[[[180,[-1]]],[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[198,51],[16,-1,[]],[16,-1,[]],[16,-1,[]],[[[180,[-1]]],[],[]],[16,-1,[]],[16,-1,[]],[198,51],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1]],-2],[[202,[-1]]],[],[[203,[16]]]],[16,4],[[[180,[-1]]],4,[]],[16,4],[[[199,[-1]]],4,[]],[16,4],[[[202,[-1]]],4,[]],[16,4],[16,4],[[[200,[-1]]],-1,[]],[-1,-2,[],[[205,[204]]]],[-1,-2,[],[[205,[204]]]],[[[180,[-1]],[180,[-1]]],77,117],[[[180,[-1]],[45,[-1]]],77,117],[[198,51],77],[[198,198],77],[[[200,[-1]],[200,[-1]]],77,117],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[[180,[-1]],-2],4,[],[[91,[],[[89,[-1]]]]]],[[[180,[44]]],[[50,[4,206]]]],[[[180,[-1]],37],[[50,[4,78]]],39],[[[199,[-1]],37],[[50,[4,78]]],39],[[198,37],[[50,[4,78]]]],[[198,37],[[50,[4,78]]]],[[[200,[-1]],37],[[50,[4,78]]],[]],[[[200,[-1]],37],[[50,[4,78]]],[]],[-1,-1,[]],[[[207,[-1]]],[[180,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[51,[[50,[198,[200,[51]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[207,[44]]],[[50,[198,208]]]],[-2,[[180,[-1]]],[],[[91,[],[[89,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,[[50,[198]]]],[[[180,[-1]],[180,[-1]]],77,191],[[198,51],77],[[198,198],77],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[[180,[-1]],[180,[-1]]],77,191],[[198,198],77],[[198,51],77],[[[180,[-1]],-2],4,125,128],[[198,-1],4,128],[[],16],[[],16],[[],16],[[],16],[[],16],[[[180,[-1]],16,-1],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1]]],[[50,[[207,[-1]],[180,[-1]]]]],[]],[[[180,[-1]]],[[207,[-1]]],[]],[[[180,[-1]]],[[199,[-1]]],[]],[[[180,[-1]]],[],[]],[[[180,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1]]],77,[]],[198,77],[[[180,[-1]]],77,[]],[198,77],[[[180,[-1]],[180,[-1]]],77,191],[[198,51],77],[[198,198],77],[[[180,[-1]]],16,[]],[198,16],[[[180,[-1]],[180,[-1]]],77,191],[[198,51],77],[[198,198],77],[[],[[180,[-1]]],[]],[[],198],[-1,[[200,[-1]]],[]],[[],[[180,[-1]]],[]],[[],198],[[[199,[-1]]],28,[]],[[[202,[-1]]],28,[]],[[[199,[-1]]],28,[]],[[[202,[-1]]],28,[]],[[],-1,[]],[[],-1,[]],[[[180,[-1]],[180,[-1]]],[[28,[157]]],191],[[198,198],[[28,[157]]]],[[198,51],[[28,[157]]]],[[[200,[-1]],[200,[-1]]],[[28,[157]]],191],[[[180,[-1]]],[[28,[-1]]],[]],[198,[[28,[204]]]],[[[180,[-1]],16],[[28,[-1]]],[]],[[[180,[-1]],-1],4,[]],[[198,204],4],[[198,51],4],[[[180,[-1]],-1],4,[]],[[[180,[-1]]],16,[]],[198,16],[[[180,[-1]],16],-1,[]],[[198,16],204],[[[180,[-1]],-2],4,[],[[76,[-1],[[87,[77]]]]]],[[[180,[-1]],16],4,[]],[[198,16],4],[[[200,[-1]]],200,[]],[[[199,[-1]]],[[4,[16,[28,[16]]]]],[]],[[[202,[-1]]],[[4,[16,[28,[16]]]]],[]],[[[180,[-1]],16],[[28,[-1]]],[]],[[[180,[-1]],16],-1,[]],[[[180,[-1]]],[[180,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,158,[]],[-1,158,[]],[-1,35,[]],[-1,35,[]],[[[180,[-1]],16],4,[]],[[198,16],4],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[[[180,[-1]],[45,[-1]]],[[50,[4,200]]],164],[-1,[[50,[-2]]],[],[]],[[[45,[-1]]],[[50,[[180,[-1]]]]],10],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[209,[[50,[198]]]],[51,[[50,[198]]]],[-1,[[50,[-2]]],[],[]],[[[180,[-1]],16,-1],[[50,[4,[200,[-1]]]]],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[[[180,[-1]],-1],[[50,[4,[200,[-1]]]]],[]],[[198,204],[[50,[4,[200,[204]]]]]],[[198,51],[[50,[4,[200,[51]]]]]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[44]],[45,[44]]],[[50,[16,206]]]],[[-1,7],[[50,[4,206]]],[]],[[-1,[45,[197]]],[[50,[4,206]]],[]],[[-1,[45,[124]]],[[50,[4,206]]],[]],[[-1,[45,[60]]],[[50,[4,206]]],[]],[[-1,210],[[50,[4,206]]],[]],[[-1,[45,[211]]],[[50,[4,206]]],[]],[[-1,[45,[7]]],[[50,[4,206]]],[]],[[-1,60],[[50,[4,206]]],[]],[[-1,124],[[50,[4,206]]],[]],[[-1,44],[[50,[4,206]]],[]],[[-1,[45,[212]]],[[50,[4,206]]],[]],[[-1,213],[[50,[4,206]]],[]],[[-1,[45,[210]]],[[50,[4,206]]],[]],[[-1,212],[[50,[4,206]]],[]],[[-1,134],[[50,[4,206]]],[]],[[-1,[45,[134]]],[[50,[4,206]]],[]],[[-1,[45,[214]]],[[50,[4,206]]],[]],[[-1,211],[[50,[4,206]]],[]],[[-1,[45,[44]]],[[50,[4,206]]],[]],[[-1,[45,[215]]],[[50,[4,206]]],[]],[[-1,197],[[50,[4,206]]],[]],[[-1,215],[[50,[4,206]]],[]],[[-1,214],[[50,[4,206]]],[]],[[-1,[45,[213]]],[[50,[4,206]]],[]],[[-1,212],[[50,[4,206]]],[]],[[-1,213],[[50,[4,206]]],[]],[[-1,197],[[50,[4,206]]],[]],[[-1,215],[[50,[4,206]]],[]],[[-1,[45,[197]]],[[50,[4,206]]],[]],[[-1,[45,[44]]],[[50,[4,206]]],[]],[[-1,214],[[50,[4,206]]],[]],[[-1,[45,[134]]],[[50,[4,206]]],[]],[[-1,[45,[215]]],[[50,[4,206]]],[]],[[-1,[45,[210]]],[[50,[4,206]]],[]],[[-1,211],[[50,[4,206]]],[]],[[-1,[45,[214]]],[[50,[4,206]]],[]],[[-1,[45,[212]]],[[50,[4,206]]],[]],[[-1,[45,[213]]],[[50,[4,206]]],[]],[[-1,[45,[7]]],[[50,[4,206]]],[]],[[-1,134],[[50,[4,206]]],[]],[[-1,124],[[50,[4,206]]],[]],[[-1,44],[[50,[4,206]]],[]],[[-1,[45,[124]]],[[50,[4,206]]],[]],[[-1,7],[[50,[4,206]]],[]],[[-1,210],[[50,[4,206]]],[]],[[-1,60],[[50,[4,206]]],[]],[[-1,[45,[60]]],[[50,[4,206]]],[]],[[-1,[45,[211]]],[[50,[4,206]]],[]],[[198,204],[[50,[4,78]]]],[[-1,216,60],[[50,[4,206]]],[]],[[-1,216,197],[[50,[4,206]]],[]],[[-1,216,213],[[50,[4,206]]],[]],[[-1,216,134],[[50,[4,206]]],[]],[[-1,216,211],[[50,[4,206]]],[]],[[-1,216,215],[[50,[4,206]]],[]],[[-1,216,210],[[50,[4,206]]],[]],[[198,51],[[50,[4,78]]]],[[-1,216,212],[[50,[4,206]]],[]],[[-1,216,214],[[50,[4,206]]],[]],[[-1,216,7],[[50,[4,206]]],[]],[[-1,216,124],[[50,[4,206]]],[]],[[-1,216,44],[[50,[4,206]]],[]],[[],198],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[16,4],[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[185,[-1]]],[[28,[[119,[-1,85]]]]],161],[[[185,[-1]]],[[4,[16,[28,[16]]]]],161],0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[194,[-1,-2]]],[[194,[-1,-2]]],217,[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],217,[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],217,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],217,[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[],163,[]],[[[220,[-1,-2]],[220,[-1,-2]]],[],[163,164],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[],163,[]],[[[119,[-1,-2]],[146,[-1,-2]]],[],163,[]],[[[221,[-1,-2]],[218,[-1,-2]]],[],163,[]],[[[221,[-1,-2]],[219,[-1,-2]]],[],163,[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[],163,[],[]],[[[223,[-1,-2]],[223,[-1,-2]]],[[223,[-1,-2]]],[[163,[],[[87,[]]]]],[]],[[[194,[-1,-2]],[194,[-1,-2]]],[[194,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[194,[-1,-2]],[194,[-1,-2]]],[],163,[]],[[[218,[-1,-2]],[218,[-1,-2]]],[],163,[]],[[[218,[-1,-2]],[218,[-1,-2]]],[[218,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[224,[-1,-2,-3]],[224,[-1,-3,-4]]],[],163,[],[],[]],[[[225,[-1,-2,-3]],[225,[-1,-3,-4]]],[],163,[],[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[],163,[]],[[[146,[-1,-2]],[146,[-1,-2]]],[],[163,164],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[],[163,164],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[],163,[]],[[[220,[-1,-2]],[220,[-1,-2]]],4,165,[]],[[[119,[-1,-2]],[194,[-1,-2]]],4,165,[]],[[[119,[-1,-2]],[146,[-1,-2]]],4,[164,[163,[],[[87,[]]]]],[]],[[[221,[-1,-2]],[218,[-1,-2]]],4,165,[]],[[[221,[-1,-2]],[219,[-1,-2]]],4,[164,[163,[],[[87,[]]]]],[]],[[[223,[-1,-2]],[223,[-1,-2]]],4,165,[]],[[[194,[-1,-2]],[194,[-1,-2]]],4,165,[]],[[[218,[-1,-2]],[218,[-1,-2]]],4,165,[]],[[[224,[-1,-2,-3]],[224,[-1,-3,-3]]],4,165,[],[]],[[[225,[-1,-2,-3]],[225,[-1,-3,-3]]],4,165,[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],4,[164,[163,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],4,[164,[163,[],[[87,[]]]]],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[[119,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[221,[-1,-2]],[218,[-1,-2]]],[[221,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[226,77],[227,77],[[226,226],226],[[227,227],227],0,[[[146,[-1,-2]]],[[147,[-1]]],[181,164],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[147,[-1]]],[[172,[],[[87,[]]]],181,164,[173,[],[[87,[]]]],[163,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[147,[-1]]],[181,193],[]],[226,77],[227,77],[[],-1,176],[[],[[119,[-1,-2]]],[],[]],[[],[[221,[-1,-2]]],[],[]],[[],-1,[]],[[],-1,176],[[],-1,176],[[],[[146,[-1,-2]]],[],[]],[[],[[219,[-1,-2]]],[],[]],[[[86,[-1,-2,-3]],[86,[-1,-2,-3]]],77,[],[],[]],[[[228,[-1,-2,-3]],[228,[-1,-2,-3]]],77,[],[],[]],[[[220,[-1,-2]],[220,[-1,-2]],-1],77,[],[]],[[[119,[-1,-2]],[119,[-1,-2]],[119,[-1,-2]]],77,[],[]],[[[221,[-1,-2]],[221,[-1,-2]],[221,[-1,-2]]],77,[],[]],[[[229,[-1,-2,-3]],[229,[-1,-2,-3]],-1],77,[],[],[]],[[[86,[-1,-2,-3]],[86,[-1,-2,-3]],-1],77,[],[],[]],[[[86,[-1,-2,-3]],[86,[-1,-2,-3]],-1],77,[],[],[]],[[[228,[-1,-2,-3]],[228,[-1,-2,-3]],-1],77,[],[],[]],[[[228,[-1,-2,-3]],[228,[-1,-2,-3]],-1],77,[],[],[]],[[[146,[-1,-2]],[146,[-1,-2]],[146,[-1,-2]]],77,[],[]],[[[219,[-1,-2]],[219,[-1,-2]],[219,[-1,-2]]],77,[],[]],0,0,[[[150,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],-1,[164,[173,[],[[87,[]]]]],[]],[[[194,[-1,-2]]],[],[173,164],[]],[[[219,[-1,-2]],[147,[-1]]],[[229,[-1,-2,-3]]],193,[],[]],[[[147,[-1]]],[[229,[-1,-2,-3]]],193,[],[]],[[[147,[-1]]],[[229,[-1,-2,-3]]],193,[],[]],[[[147,[-1]]],[[229,[-1,-2,-3]]],193,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-1,-1,-1,-1,-1],[[231,[-1,-2]]],164,[]],[[77,77],226],[[77,77,77],227],[[[150,[-1,-2]]],[[150,[-3,-2]]],[177,164],[],177],[[[231,[-1,-2]]],[[231,[-3,-2]]],[177,164],[],177],[[[220,[-1,-2]]],[[220,[-3,-2]]],[177,10],[],177],[[[119,[-1,-2]]],[[119,[-3,-2]]],[177,164],[],177],[[[221,[-1,-2]]],[[221,[-3,-2]]],[177,164],[],177],[[[230,[-1,-2]]],[[230,[-3,-2]]],[177,164],[],177],[[[222,[-1,-2,-3]]],[[222,[-4,-2,-3]]],177,[],[],177],[[[194,[-1,-2]]],[[194,[-3,-2]]],[177,164],[],177],[[[218,[-1,-2]]],[[218,[-3,-2]]],[177,164],[],177],[[[86,[-1,-2,-3]]],[[86,[-4,-2,-3]]],[177,164],[],[],177],[[[228,[-1,-2,-3]]],[[228,[-4,-2,-3]]],[177,164],[],[],177],[[[146,[-1,-2]]],[[146,[-3,-2]]],[177,164],[],177],[[[219,[-1,-2]]],[[219,[-3,-2]]],[177,164],[],177],[[[150,[-1,-2]]],[[150,[-1,-3]]],164,[],[]],[[[231,[-1,-2]]],[[231,[-1,-3]]],164,[],[]],[[[220,[-1,-2]]],[[220,[-1,-3]]],10,[],[]],[[[119,[-1,-2]]],[[119,[-1,-3]]],164,[],[]],[[[221,[-1,-2]]],[[221,[-1,-3]]],164,[],[]],[[[230,[-1,-2]]],[[230,[-1,-3]]],164,[],[]],[[[232,[-1,-2,-3]]],[[232,[-1,-4,-5]]],164,[],[],[],[]],[[[229,[-1,-2,-3]]],[[229,[-1,-4,-5]]],164,[],[],[],[]],[[[194,[-1,-2]]],[[194,[-1,-3]]],164,[],[]],[[[218,[-1,-2]]],[[218,[-1,-3]]],164,[],[]],[[[146,[-1,-2]]],[[146,[-1,-3]]],164,[],[]],[[[219,[-1,-2]]],[[219,[-1,-3]]],164,[],[]],[[[233,[-1,-2,-3]]],[[233,[-1,-4,-5]]],164,[],[],[],[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],[234,164],[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],234,[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],234,[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],[234,164],[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],234,[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],[234,164],[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],234,[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],[234,164],[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],234,[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],[234,164],[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],234,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],[234,164],[]],[[[150,[-1,-2]]],[[119,[-1,-2]]],[164,235,[163,[],[[87,[]]]],[182,[],[[87,[]]]]],[]],[[[231,[-1,-2]]],[[221,[-1,-2]]],[164,235,[163,[],[[87,[]]]],[182,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],[[119,[-1,-2]]],[164,235,[163,[],[[87,[]]]],[182,[],[[87,[]]]]],[]],[[[119,[-1,-2]],[119,[-1,-2]],[119,[-1,-2]]],[[119,[-1,-2]]],[164,191],[]],[[[221,[-1,-2]],[221,[-1,-2]],[221,[-1,-2]]],[[221,[-1,-2]]],[164,191],[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[[222,[-1,-2,-3]]],[164,191],[],[]],[[[194,[-1,-2]],[194,[-1,-2]],[194,[-1,-2]]],[[194,[-1,-2]]],[164,191],[]],[[[218,[-1,-2]],[218,[-1,-2]],[218,[-1,-2]]],[[218,[-1,-2]]],[164,191],[]],[[[146,[-1,-2]],[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[164,191],[]],[[[219,[-1,-2]],[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[164,191],[]],[[[146,[-1,-2]],-1,-1],[[146,[-1,-2]]],193,[]],[[[219,[-1,-2]],-1,-1],[[219,[-1,-2]]],193,[]],[[[150,[-1,-2]]],[[150,[-1,-2]]],10,[]],[[[231,[-1,-2]]],[[231,[-1,-2]]],10,[]],[[[236,[-1,-2]]],[[236,[-1,-2]]],10,[]],[[[220,[-1,-2]]],[[220,[-1,-2]]],10,[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],10,[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],10,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],10,[]],[[[232,[-1,-2,-3]]],[[232,[-1,-2,-3]]],10,[],[]],[[[229,[-1,-2,-3]]],[[229,[-1,-2,-3]]],10,[],[]],[[[222,[-1,-2,-3]]],[[222,[-1,-2,-3]]],10,[],[]],[[[223,[-1,-2]]],[[223,[-1,-2]]],10,[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],10,[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],10,[]],[[[86,[-1,-2,-3]]],[[86,[-1,-2,-3]]],10,[],[]],[[[228,[-1,-2,-3]]],[[228,[-1,-2,-3]]],10,[],[]],[[[224,[-1,-2,-3]]],[[224,[-1,-2,-3]]],10,[],[]],[[[225,[-1,-2,-3]]],[[225,[-1,-2,-3]]],10,[],[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],10,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],10,[]],[[[233,[-1,-2,-3]]],[[233,[-1,-2,-3]]],10,[],[]],[226,226],[227,227],[85,85],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[[220,[-1,-2]],[220,[-1,-2]]],157,201,[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],157,201,[],[]],[[85,85],157],[[-1,-2],157,[],[]],[[-1,-2],157,[],[]],[[-1,-2],157,[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[[182,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[[182,[],[[87,[]]]],164],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[[173,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[[173,[],[[87,[]]]],164],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1,-2]],[119,[-1,-2]]],77,191,[]],[[[231,[-1,-2]],[221,[-1,-2]]],77,191,[]],[[[230,[-1,-2]],[119,[-1,-2]]],77,[164,191,[163,[],[[87,[]]]]],[]],[[[194,[-1,-2]],[194,[-1,-2]]],77,191,[]],[[[218,[-1,-2]],[218,[-1,-2]]],77,191,[]],[[[150,[-1,-2]],[150,[-1,-2]]],77,191,[]],[[[231,[-1,-2]],[231,[-1,-2]]],77,191,[]],[[[230,[-1,-2]],[230,[-1,-2]]],77,[164,237,191,[163,[],[[87,[]]]]],[]],[181,181],[[[146,[-1,-2]],[146,[-1,-2]]],-1,[[172,[],[[87,[]]]],[173,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[233,[-1,-2,-3]]],[[4,[[219,[-1,-2]],[229,[-1,-2,-3]]]]],[],[],[]],0,[[],[[150,[-1,-2]]],156,[]],[[],[[231,[-1,-2]]],156,[]],[[],[[220,[-1,-2]]],156,[]],[[],[[119,[-1,-2]]],156,[]],[[],[[221,[-1,-2]]],156,[]],[[],[[230,[-1,-2]]],156,[]],[[],[[222,[-1,-2,-3]]],156,[],[]],[[],[[223,[-1,-2]]],156,[]],[[],[[194,[-1,-2]]],156,[]],[[],[[218,[-1,-2]]],156,[]],[[],[[86,[-1,-2,-3]]],[237,235],[],[]],[[],[[228,[-1,-2,-3]]],[237,235],[],[]],[[],[[224,[-1,-2,-3]]],237,[],[]],[[],[[225,[-1,-2,-3]]],237,[],[]],[[],[[146,[-1,-2]]],156,[]],[[],[[219,[-1,-2]]],156,[]],[[],85],[181,181],[[[231,[-1,-2]]],-1,[164,[172,[],[[87,[]]]]],[]],0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[[[86,[-1,-2,-3]]],-1,[164,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],117,237,235],[],[]],[[[228,[-1,-2,-3]]],-1,[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[119,[-1,-2]],[119,[-1,-2]]],-1,[[193,[],[[87,[]]]],172],[]],[[[221,[-1,-2]],[221,[-1,-2]]],-1,[[193,[],[[87,[]]]],172],[]],[[[150,[-1,-2]],-1],[],[164,182],[]],[[[150,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[231,[-1,-2]],-1],[],[164,182],[]],[[[231,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[220,[-1,-2]],[222,[-1,-3,-2]]],[],182,[],[]],[[[220,[-1,-2]],-1],[],182,[]],[[[220,[-1,-2]],[220,[-1,-3]]],[],182,[],[]],[[[119,[-1,-2]],-1],[],[164,182],[]],[[[119,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[221,[-1,-2]],-1],[],[164,182],[]],[[[221,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[230,[-1,-2]],-1],[],[164,182],[]],[[[230,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[223,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[223,[-1,-2]],-1],[],[164,182],[]],[[[194,[-1,-2]],-1],[],[164,182],[]],[[[194,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[218,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[218,[-1,-2]],-1],[],[164,182],[]],[[[146,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[146,[-1,-2]],-1],[],[164,182],[]],[[[219,[-1,-2]],[222,[-1,-3,-2]]],[],[164,182],[],[]],[[[219,[-1,-2]],-1],[],[164,182],[]],[[[150,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[150,[-1,-2]],-1],4,[164,183],[]],[[[231,[-1,-2]],-1],4,[164,183],[]],[[[231,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[220,[-1,-2]],-1],4,[164,[182,[],[[87,[]]]]],[]],[[[119,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[119,[-1,-2]],-1],4,[164,[182,[],[[87,[]]]]],[]],[[[221,[-1,-2]],-1],4,[164,183],[]],[[[221,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[230,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[230,[-1,-2]],-1],4,[164,183],[]],[[[223,[-1,-2]],-1],4,[164,183],[]],[[[223,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[194,[-1,-2]],-1],4,[164,183],[]],[[[194,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[218,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[218,[-1,-2]],-1],4,[164,183],[]],[[[146,[-1,-2]],-1],4,[164,[182,[],[[87,[]]]]],[]],[[[146,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[219,[-1,-2]],[222,[-1,-2,-2]]],4,[164,183],[]],[[[219,[-1,-2]],-1],4,[164,[182,[],[[87,[]]]]],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[[119,[-1,-2]]],238,[]],[[[221,[-1,-2]],[218,[-1,-2]]],[[221,[-1,-2]]],238,[]],[[[146,[-1,-2]],[146,[-1,-2]]],-1,[[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],-1,[[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[[[150,[-1,-2]],[150,[-1,-2]]],77,117,[]],[[[231,[-1,-2]],[231,[-1,-2]]],77,117,[]],[[[236,[-1,-2]],[236,[-1,-2]]],77,117,[]],[[[220,[-1,-2]],[220,[-1,-2]]],77,117,[]],[[[119,[-1,-2]],[119,[-1,-2]]],77,117,[]],[[[221,[-1,-2]],[221,[-1,-2]]],77,117,[]],[[[230,[-1,-2]],[230,[-1,-2]]],77,117,[]],[[[232,[-1,-2,-3]],[232,[-1,-2,-3]]],77,117,[],[]],[[[229,[-1,-2,-3]],[229,[-1,-2,-3]]],77,117,[],[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],77,117,[],[]],[[[223,[-1,-2]],[223,[-1,-2]]],77,117,[]],[[[194,[-1,-2]],[194,[-1,-2]]],77,117,[]],[[[218,[-1,-2]],[218,[-1,-2]]],77,117,[]],[[[86,[-1,-2,-3]],[86,[-1,-2,-3]]],77,117,[],[]],[[[228,[-1,-2,-3]],[228,[-1,-2,-3]]],77,117,[],[]],[[[224,[-1,-2,-3]],[224,[-1,-2,-3]]],77,117,[],[]],[[[225,[-1,-2,-3]],[225,[-1,-2,-3]]],77,117,[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],77,117,[]],[[[219,[-1,-2]],[219,[-1,-2]]],77,117,[]],[[[233,[-1,-2,-3]],[233,[-1,-2,-3]]],77,117,117,117],[[226,226],77],[[227,227],77],[[85,85],77],[[[194,[-1,-2]],[194,[-1,-2]]],226,117,[]],[[[218,[-1,-2]],[218,[-1,-2]]],227,117,[]],[[[146,[-1,-2]],[146,[-1,-2]]],226,117,[]],[[[219,[-1,-2]],[219,[-1,-2]]],227,117,[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[[147,[-1]],[147,[-1]],[147,[-1]]],[[229,[-1,-2,-3]]],193,[],[]],[[[119,[-1,-2]],-1],[[221,[-1,-2]]],164,[]],[[[146,[-1,-2]],-1],[[219,[-1,-2]]],164,[]],[[181,181],181],[[[119,[-1,-2]]],[[119,[-1,-2]]],239,[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],[239,164],[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],239,[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],[239,164],[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],[239,164],[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],239,[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],[239,164],[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],239,[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],[239,164],[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],239,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],[239,164],[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],239,[]],[[[150,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[231,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[236,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[220,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[119,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[221,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[230,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[229,[-1,-2,-3]],37],[[50,[4,78]]],39,[],[]],[[[222,[-1,-2,-3]],37],[[50,[4,78]]],39,[],[]],[[[223,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[194,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[218,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[86,[-1,-2,-3]],37],[[50,[4,78]]],[164,39,117,235,237],[],[]],[[[228,[-1,-2,-3]],37],[[50,[4,78]]],[164,39,117,235,237],[],[]],[[[224,[-1,-2,-3]],37],[[50,[4,78]]],39,[],[]],[[[225,[-1,-2,-3]],37],[[50,[4,78]]],39,[],[]],[[[146,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[219,[-1,-2]],37],[[50,[4,78]]],39,[]],[[[233,[-1,-2,-3]],37],[[50,[4,78]]],39,39,39],[[226,37],[[50,[4,78]]]],[[227,37],[[50,[4,78]]]],[[85,37],[[50,[4,78]]]],[-1,-1,[]],[[[194,[-1,-2]]],[[150,[-1,-2]]],[164,237,191],[]],[-1,-1,[]],[[[218,[-1,-2]]],[[231,[-1,-2]]],[164,237,191],[]],[[[219,[-1,-2]]],[[236,[-1,-2]]],237,[]],[[[119,[-1,-2]]],[[236,[-1,-2]]],[237,235],[]],[[[146,[-1,-2]]],[[236,[-1,-2]]],237,[]],[-1,-1,[]],[[[221,[-1,-2]]],[[236,[-1,-2]]],235,[]],[-1,-1,[]],[[[4,[-1,-1]]],[[119,[-1,-2]]],[],[]],[[[207,[-1]]],[[119,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[[[4,[-1,-1,-1]]],[[221,[-1,-2]]],[],[]],[[[207,[-1]]],[[221,[-1,-2]]],[],[]],[[[194,[-1,-2]]],[[230,[-1,-2]]],237,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[207,[-1]]],[[194,[-1,-2]]],[],[]],[[[4,[-1,-1]]],[[194,[-1,-2]]],[],[]],[-1,-1,[]],[[[146,[-1,-2]]],[[194,[-1,-2]]],[],[]],[-1,-1,[]],[[[219,[-1,-2]]],[[218,[-1,-2]]],[],[]],[[[4,[-1,-1,-1]]],[[218,[-1,-2]]],[],[]],[[[207,[-1]]],[[218,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[146,[-1,-2]]],[[224,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[[[219,[-1,-2]]],[[225,[-1,-2,-3]]],[],[],[]],[[[207,[-1]]],[[146,[-1,-2]]],[],[]],[[[4,[-1,-1]]],[[146,[-1,-2]]],[],[]],[[[194,[-1,-2]]],[[146,[-1,-2]]],[],[]],[-1,-1,[]],[[[207,[-1]]],[[219,[-1,-2]]],[],[]],[[[4,[-1,-1,-1]]],[[219,[-1,-2]]],[],[]],[-1,-1,[]],[[[229,[-1,-2,-3]]],[[233,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[[[219,[-1,-2]]],[[233,[-1,-3,-2]]],[],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[147,[-1]],-1],[[146,[-1,-2]]],[181,[173,[],[[87,[]]]],164],[]],[[[207,[-1]]],[[86,[-1,-2,-3]]],164,[],[]],[[[207,[-1]]],[[228,[-1,-2,-3]]],164,[],[]],[[[207,[[207,[-1]]]]],[[86,[-1,-2,-3]]],164,[],[]],[[[207,[[207,[-1]]]]],[[228,[-1,-2,-3]]],164,[],[]],[[[220,[-1,-2]]],[[223,[-1,-2]]],164,[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[119,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]],[220,[-1,-2]]],[[221,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]],[220,[-1,-2]],[220,[-1,-2]]],[[223,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[194,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]],[220,[-1,-2]]],[[218,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[146,[-1,-2]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]],[220,[-1,-2]]],[[219,[-1,-2]]],[],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[-1,[[150,[-2,-3]]],91,[164,237,191],[]],[-1,[[231,[-2,-3]]],91,[164,237,191],[]],[-1,[[230,[-2,-3]]],91,[164,237,191,[172,[],[[87,[]]]]],[]],[[[229,[-1,-2,-3]]],[[233,[-1,-2,-3]]],[],[],[]],[[[222,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[194,[-1,-2]]],[[150,[-1,-2]]],237,[]],[[[218,[-1,-2]]],[[231,[-1,-2]]],237,[]],[[[194,[-1,-2]]],[[230,[-1,-2]]],237,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[219,[-1,-2]]],[[233,[-1,-3,-2]]],[],[],[]],[[[150,[-1,85]]],[[150,[-1,-2]]],164,[]],[[[231,[-1,85]]],[[231,[-1,-2]]],164,[]],[[[119,[-1,85]]],[[119,[-1,-2]]],[],[]],[[[221,[-1,85]]],[[221,[-1,-2]]],[],[]],[[[230,[-1,85]]],[[230,[-1,-2]]],164,[]],[[[232,[-1,85,85]]],[[232,[-1,-2,-3]]],164,[],[]],[[[229,[-1,85,85]]],[[229,[-1,-2,-3]]],164,[],[]],[[[194,[-1,85]]],[[194,[-1,-2]]],[],[]],[[[218,[-1,85]]],[[218,[-1,-2]]],[],[]],[[[86,[-1,85,85]]],[[86,[-1,-2,-3]]],164,[],[]],[[[228,[-1,85,85]]],[[228,[-1,-2,-3]]],164,[],[]],[[[224,[-1,85,85]]],[[224,[-1,-2,-3]]],164,[],[]],[[[225,[-1,85,85]]],[[225,[-1,-2,-3]]],164,[],[]],[[[146,[-1,85]]],[[146,[-1,-2]]],[],[]],[[[219,[-1,85]]],[[219,[-1,-2]]],[],[]],[[[233,[-1,85,85]]],[[233,[-1,-2,-3]]],[],[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[223,[-1,-2]]],[[190,[],[[87,[]]]]],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[223,[-1,-2]]],[[190,[],[[87,[]]]]],[]],[[[220,[-1,-2]]],-1,10,[]],[[[222,[-1,-2,-3]]],-1,[],[],[]],[[[232,[-1,-2,-3]]],[[147,[-1]]],164,[],[]],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[-1,-2],124,[125,126],127],[[[194,[-1,-2]],[194,[-1,-2]]],226,191,[]],[[[218,[-1,-2]],[218,[-1,-2]]],227,191,[]],[[[146,[-1,-2]],[146,[-1,-2]]],226,191,[]],[[[219,[-1,-2]],[219,[-1,-2]]],227,191,[]],[[[150,[-1,-2]],-3],4,125,[],128],[[[231,[-1,-2]],-3],4,125,[],128],[[[236,[-1,-2]],-3],4,125,[],128],[[[220,[-1,-2]],-3],4,125,[],128],[[[119,[-1,-2]],-3],4,125,[],128],[[[221,[-1,-2]],-3],4,125,[],128],[[[230,[-1,-2]],-3],4,125,[],128],[[[232,[-1,-2,-3]],-4],4,125,[],[],128],[[[229,[-1,-2,-3]],-4],4,125,[],[],128],[[[222,[-1,-2,-3]],-4],4,125,[],[],128],[[[223,[-1,-2]],-3],4,125,[],128],[[[194,[-1,-2]],-3],4,125,[],128],[[[218,[-1,-2]],-3],4,125,[],128],[[[86,[-1,-2,-3]],-4],4,125,[],[],128],[[[228,[-1,-2,-3]],-4],4,125,[],[],128],[[[224,[-1,-2,-3]],-4],4,125,[],[],128],[[[225,[-1,-2,-3]],-4],4,125,[],[],128],[[[146,[-1,-2]],-3],4,125,[],128],[[[219,[-1,-2]],-3],4,125,[],128],[[[233,[-1,-2,-3]],-4],4,125,125,125,128],[[226,-1],4,128],[[227,-1],4,128],[[85,-1],4,128],[[[150,[-1,-2]]],-1,[164,[172,[],[[87,[]]]]],[]],[[[231,[-1,-2]]],-1,[164,[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],0,0,[[[223,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],0,[[],[[232,[-1,-2,-3]]],192,[],[]],[[],[[229,[-1,-2,-3]]],[192,174],[],[]],[[],[[222,[-1,-2,-3]]],235,[],[]],[[],[[86,[-1,-2,-3]]],[237,235],[],[]],[[],[[228,[-1,-2,-3]]],[237,235],[],[]],[[],[[224,[-1,-2,-3]]],237,[],[]],[[],[[225,[-1,-2,-3]]],237,[],[]],[[],[[233,[-1,-2,-3]]],[],[],[]],[[[150,[-1,-2]],-1,-1],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[231,[-1,-2]],-1,-1,-1],[[231,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]],-1,-1],[[230,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[150,[-1,-2]],[223,[-1,-2]]],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]],[223,[-1,-2]]],[[230,[-1,-2]]],[164,237,191,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[150,[-1,-2]],[150,[-1,-2]]],[[28,[[150,[-1,-2]]]]],[164,191],[]],[[[231,[-1,-2]],[231,[-1,-2]]],[[28,[[231,[-1,-2]]]]],[164,191],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[28,[[230,[-1,-2]]]]],[164,191,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[150,[-1,-2]],[150,[-1,-2]]],[[150,[-1,-2]]],[164,191],[]],[[[231,[-1,-2]],[231,[-1,-2]]],[[231,[-1,-2]]],[164,191],[]],[[[150,[-1,-2]],[150,[-1,-2]]],77,191,[]],[[[231,[-1,-2]],[231,[-1,-2]]],77,191,[]],[[[230,[-1,-2]],[230,[-1,-2]]],77,[164,191,[163,[],[[87,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[119,[-1,-2]]],[[4,[-1,-1]]],[],[]],[[[119,[-1,-2]]],[[207,[-1]]],[],[]],[-1,-2,[],[]],[[[221,[-1,-2]]],[[207,[-1]]],[],[]],[[[221,[-1,-2]]],[[4,[-1,-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[194,[-1,-2]]],[[4,[-1,-1]]],[],[]],[[[194,[-1,-2]]],[[207,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[218,[-1,-2]]],[[207,[-1]]],[],[]],[[[218,[-1,-2]]],[[4,[-1,-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[224,[-1,-2,-3]]],[[86,[-1,-2,-3]]],[237,235],[],[]],[-1,-2,[],[]],[[[224,[-1,-2,-3]]],[[146,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[[[225,[-1,-2,-3]]],[[219,[-1,-2]]],[],[],[]],[[[225,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[237,235],[],[]],[-1,-2,[],[]],[[[146,[-1,-2]]],[[4,[-1,-1]]],[],[]],[[[146,[-1,-2]]],[[207,[-1]]],[],[]],[[[219,[-1,-2]]],[[4,[-1,-1,-1]]],[],[]],[[[219,[-1,-2]]],[[207,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[232,[-1,-2,-3]]],[[232,[-1,-3,-2]]],193,[],[]],[[[229,[-1,-2,-3]]],[[229,[-1,-3,-2]]],193,[],[]],[[[222,[-1,-2,-3]]],[[222,[-3,-2]]],[235,182],[],[]],[[[86,[-1,-2,-3]]],[[28,[[86,[-1,-3,-2]]]]],[164,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],117,237,235],[],[]],[[[228,[-1,-2,-3]]],[[28,[[228,[-1,-3,-2]]]]],[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[224,[-1,-2,-3]]],[[224,[-3,-2]]],[190,164],[],[]],[[[225,[-1,-2,-3]]],[[225,[-3,-2]]],[190,164],[],[]],[[[233,[-1,-2,-3]]],[[233,[-1,-3,-2]]],[],[],[]],[[[228,[-1,-2,-3]]],77,[237,235,117],[],[]],[[[228,[-1,-2,-3]]],77,[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[150,[-1,-2]]],77,191,[]],[[[231,[-1,-2]]],77,191,[]],[[[230,[-1,-2]]],77,[164,237,191],[]],[[[194,[-1,-2]]],77,[237,191],[]],[[[218,[-1,-2]]],77,[237,191],[]],[[[150,[-1,-2]]],77,188,[]],[[[231,[-1,-2]]],77,188,[]],[[[119,[-1,-2]]],77,188,[]],[[[221,[-1,-2]]],77,188,[]],[[[230,[-1,-2]]],77,188,[]],[[[194,[-1,-2]]],77,188,[]],[[[218,[-1,-2]]],77,188,[]],[[[146,[-1,-2]]],77,188,[]],[[[219,[-1,-2]]],77,188,[]],[[[222,[-1,-2,-3]]],77,[117,235],[],[]],[[[224,[-1,-2,-3]]],77,[237,117],[],[]],[[[225,[-1,-2,-3]]],77,[237,117],[],[]],[[[86,[-1,-2,-3]]],77,[164,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],117,237,235],[],[]],[[[228,[-1,-2,-3]]],77,[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[150,[-1,-2]]],77,191,[]],[[[231,[-1,-2]]],77,191,[]],[[[229,[-1,-2,-3]]],77,[],[],[]],[[[194,[-1,-2]]],77,217,[]],[[[218,[-1,-2]]],77,217,[]],[[[223,[-1,-2]]],77,[237,117],[]],0,0,0,[[[146,[-1,-2]]],-1,193,[]],[[[219,[-1,-2]]],-1,193,[]],[[[150,[-1,-2]],[150,[-1,-2]],-1],[[150,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[231,[-1,-2]],[231,[-1,-2]],-1],[[231,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[220,[-1,-2]],[220,[-1,-2]],-1],[[220,[-1,-2]]],[235,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[163,[],[[87,[]]]],10],[]],[[[119,[-1,-2]],[119,[-1,-2]],-1],[[119,[-1,-2]]],[235,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[163,[],[[87,[]]]],164],[]],[[[221,[-1,-2]],[221,[-1,-2]],-1],[[221,[-1,-2]]],[235,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[163,[],[[87,[]]]],164],[]],[[[230,[-1,-2]],[230,[-1,-2]],-1],[[230,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[229,[-1,-2,-3]],[229,[-1,-2,-3]],-1],[[229,[-1,-2,-3]]],193,[],[]],[[[194,[-1,-2]],[194,[-1,-2]],-1],[[194,[-1,-2]]],[235,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[163,[],[[87,[]]]],164],[]],[[[218,[-1,-2]],[218,[-1,-2]],-1],[[218,[-1,-2]]],[235,[172,[],[[87,[]]]],[173,[],[[87,[]]]],[163,[],[[87,[]]]],164],[]],[[[146,[-1,-2]],[146,[-1,-2]],-1],[[146,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[219,[-1,-2]],[219,[-1,-2]],-1],[[219,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[194,[-1,-2]],[194,[-1,-2]]],226,191,[]],[[[218,[-1,-2]],[218,[-1,-2]]],227,191,[]],[[[146,[-1,-2]],[146,[-1,-2]]],226,191,[]],[[[219,[-1,-2]],[219,[-1,-2]]],227,191,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[220,[-1,-2]],[220,[-1,-2]]],[[220,[-1,-2]]],191,[]],[[[119,[-1,-2]],[119,[-1,-2]]],[[119,[-1,-2]]],191,[]],[[[221,[-1,-2]],[221,[-1,-2]]],[[221,[-1,-2]]],191,[]],[[[230,[-1,-2]]],[[119,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[[222,[-1,-2,-3]]],191,[],[]],[[[194,[-1,-2]],[194,[-1,-2]]],[[194,[-1,-2]]],191,[]],[[[218,[-1,-2]],[218,[-1,-2]]],[[218,[-1,-2]]],191,[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],191,[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],191,[]],0,0,[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[220,[-1,-2]]],191,[]],[[[119,[-1,-2]],[119,[-1,-2]]],[[119,[-1,-2]]],191,[]],[[[221,[-1,-2]],[221,[-1,-2]]],[[221,[-1,-2]]],191,[]],[[[230,[-1,-2]]],[[119,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[[222,[-1,-2,-3]]],191,[],[]],[[[194,[-1,-2]],[194,[-1,-2]]],[[194,[-1,-2]]],191,[]],[[[218,[-1,-2]],[218,[-1,-2]]],[[218,[-1,-2]]],191,[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],191,[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],191,[]],0,0,[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],[[[150,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[150,[-1,-2]],-1],[],[164,173],[]],[[[231,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[231,[-1,-2]],-1],[],[164,173],[]],[[[220,[-1,-2]],[222,[-1,-2,-3]]],[],173,[],[]],[[[220,[-1,-2]],-1],[],173,[]],[[[119,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[119,[-1,-2]],-1],[],[164,173],[]],[[[221,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[221,[-1,-2]],-1],[],[164,173],[]],[[[230,[-1,-2]],-1],[],[164,173],[]],[[[230,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[222,[-1,-2,-3]],[222,[-1,-3,-4]]],[],173,[],[],[]],[[[223,[-1,-2]],-1],[],[164,173],[]],[[[223,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[194,[-1,-2]],-1],[],[164,173],[]],[[[194,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[218,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[218,[-1,-2]],-1],[],[164,173],[]],[[[146,[-1,-2]],-1],[],[164,173],[]],[[[146,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[219,[-1,-2]],-1],[],[164,173],[]],[[[219,[-1,-2]],[222,[-1,-2,-3]]],[],[164,173],[],[]],[[[150,[-1,-2]],-1],4,[164,189],[]],[[[150,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[231,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[231,[-1,-2]],-1],4,[164,189],[]],[[[220,[-1,-2]],-1],4,[164,[173,[],[[87,[]]]]],[]],[[[119,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[119,[-1,-2]],-1],4,[164,[173,[],[[87,[]]]]],[]],[[[221,[-1,-2]],-1],4,[164,189],[]],[[[221,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[230,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[230,[-1,-2]],-1],4,[164,189],[]],[[[223,[-1,-2]],-1],4,[164,189],[]],[[[223,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[194,[-1,-2]],-1],4,[164,189],[]],[[[194,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[218,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[218,[-1,-2]],-1],4,[164,189],[]],[[[146,[-1,-2]],-1],4,[164,[173,[],[[87,[]]]]],[]],[[[146,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[219,[-1,-2]],-1],4,[164,[173,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[222,[-1,-2,-2]]],4,[164,189],[]],[[[228,[-1,-2,-3]],-1],[[228,[-1,-2,-3]]],[[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,[190,[],[[87,[]]]],[163,[],[[87,[]]]],191,235,237],[],[]],[[[220,[-1,-2]]],[],190,[]],[[[119,[-1,-2]]],[],190,[]],[[[221,[-1,-2]]],[],190,[]],[[[223,[-1,-2]]],[[223,[-1,-2]]],[[190,[],[[87,[]]]]],[]],[[[194,[-1,-2]]],[],190,[]],[[[218,[-1,-2]]],[],190,[]],[[[146,[-1,-2]]],[],190,[]],[[[219,[-1,-2]]],[],190,[]],[[[119,[-1,-2]],[119,[-1,-2]]],[[150,[-1,-2]]],[],[]],[[[221,[-1,-2]],[221,[-1,-2]]],[[231,[-1,-2]]],[],[]],[[-1,-1,-1,-1],[[236,[-1,-2]]],[],[]],[-1,[[220,[-1,-2]]],[],[]],[[-1,-1],[[119,[-1,-2]]],[],[]],[[-1,-1,-1],[[221,[-1,-2]]],[],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[[230,[-1,-2]]],[],[]],[[[147,[-1]]],[[232,[-1,-2,-3]]],[],[],[]],[-1,[[222,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1],[[223,[-1,-2]]],[],[]],[[-1,-1],[[194,[-1,-2]]],[],[]],[[-1,-1,-1],[[218,[-1,-2]]],[],[]],[[-1,-1,-1,-1,-1,-1],[[86,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[[228,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[224,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1],[[225,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[146,[-1,-2]]],[],[]],[[-1,-1,-1],[[219,[-1,-2]]],[],[]],[[[229,[-1,-2,-3]],[219,[-1,-3]]],[[233,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1],[[228,[-1,-2,-3]]],[237,235],[],[]],[-1,[[223,[-1,-2]]],164,[]],[[[219,[-1,-2]],[229,[-1,-2,-3]]],[[233,[-1,-2,-3]]],[],[],[]],[226,77],[227,77],[[[229,[-1,-2,-3]]],-1,193,[],[]],[[[229,[-1,-2,-3]]],[[229,[-1,-2,-3]]],193,[],[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],193,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],193,[]],[226,226],[227,227],[[[194,[-1,-2]],[194,[-1,-2]]],226,117,[]],[[[218,[-1,-2]],[218,[-1,-2]]],227,117,[]],[[[146,[-1,-2]],[146,[-1,-2]]],226,117,[]],[[[219,[-1,-2]],[219,[-1,-2]]],227,117,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[],[[222,[-1,-2,-3]]],235,[],[]],[[],[[146,[-1,-2]]],235,[]],[[],[[219,[-1,-2]]],235,[]],[[226,226],226],[[227,227],227],[[],[[119,[-1,-2]]],237,[]],[[],[[221,[-1,-2]]],237,[]],0,[[-1,-1,-1,-1,-1,-1],[[228,[-1,-2,-3]]],[],[],[]],[[[150,[-1,-2]],[223,[-1,-2]]],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]],[223,[-1,-2]]],[[230,[-1,-2]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[86,[-1,-2,-3]],[150,[-1,-2]]],[[150,[-1,-3]]],[[172,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[228,[-1,-2,-3]],[150,[-1,-2]]],[[28,[[150,[-1,-3]]]]],[[172,[],[[87,[]]]],[182,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[228,[-1,-2,-3]],[231,[-1,-2]]],[[28,[[231,[-1,-3]]]]],[[172,[],[[87,[]]]],[182,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[86,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],[[172,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[228,[-1,-2,-3]],[230,[-1,-2]]],[[28,[[230,[-1,-3]]]]],[[172,[],[[87,[]]]],[182,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[28,[157]]],191,[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[[28,[157]]],191,[],[]],[[85,85],[[28,[157]]]],[-1,[[228,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[119,[-1,-2]]],[],[]],[[-1,-1,-1],[[221,[-1,-2]]],[],[]],[[[119,[60,-1]]],[[119,[60,85]]],[]],[[[86,[-1,-2,-3]],[147,[-1]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],237,181],[],[]],[[[228,[-1,-2,-3]],-1,-1,-1,[147,[-1]]],[[228,[-1,-2,-3]]],[[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,237,235,181],[],[]],[[[86,[-1,-2,-3]],-1,-1],[[86,[-1,-2,-3]]],[164,[173,[],[[87,[]]]]],[],[]],[[[228,[-1,-2,-3]],-1,-1,-1],[[228,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[86,[-1,-2,-3]],[146,[-1,-2]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[228,[-1,-2,-3]],[219,[-1,-2]]],[[228,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[[172,[],[[87,[]]]],[182,[],[[87,[]]]],164,[173,[],[[87,[]]]],[163,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[[172,[],[[87,[]]]],[182,[],[[87,[]]]],164,[173,[],[[87,[]]]],[163,[],[[87,[]]]]],[]],[[[228,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[164,[173,[],[[87,[]]]],[182,[],[[87,[]]]],237,235,117],[],[]],[[-1,-1,-1,-1],[[229,[-1,-2,-3]]],[],[],[]],0,[-1,[[232,[-1,-2,-3]]],[],[],[]],0,[181,181],[[-1,-1,-1,-1],[[230,[-1,-2]]],[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[235,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],164],[]],[[[119,[-1,-2]],[194,[-1,-2]]],[[119,[-1,-2]]],238,[]],[[[221,[-1,-2]],[218,[-1,-2]]],[[221,[-1,-2]]],238,[]],0,[[[146,[-1,-2]]],[[146,[-1,-2]]],188,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],188,[]],[[[147,[-1]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],237,181],[],[]],[[-1,-1,-1,[147,[-1]]],[[228,[-1,-2,-3]]],[],[],[]],0,[[[150,[-1,-2]]],[[150,[-1,-2]]],240,[]],[[[231,[-1,-2]]],[[231,[-1,-2]]],240,[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],240,[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],[240,164],[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],[240,164],[]],[[[221,[-1,-2]]],[[221,[-1,-2]]],240,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[239,234,240,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],[240,164],[]],[[[194,[-1,-2]]],[[194,[-1,-2]]],240,[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],[240,164],[]],[[[218,[-1,-2]]],[[218,[-1,-2]]],240,[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],[240,164],[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],240,[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],[240,164],[]],[[[219,[-1,-2]]],[[219,[-1,-2]]],240,[]],[[[150,[-1,-2]]],[[150,[-1,-2]]],[239,234],[]],[[[231,[-1,-2]]],[[231,[-1,-2]]],[239,234],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[239,234,240,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[150,[-1,-2]]],[[150,[-1,-2]]],[239,234],[]],[[[231,[-1,-2]]],[[231,[-1,-2]]],[239,234],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[239,234,240,[163,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[220,[-1,-2]]],241,[]],[[[220,[-1,-2]],[220,[-1,-2]]],[[220,[-1,-2]]],241,[]],[[[150,[-2,-3]],-1,-1],[[150,[-2,-3]]],164,[[173,[-1],[[87,[]]]],164],[]],[[[231,[-2,-3]],-1,-1,-1],[[231,[-2,-3]]],164,[[173,[-1],[[87,[]]]],164],[]],[[[230,[-2,-3]],-1,-1],[[230,[-2,-3]]],164,[164,[173,[-1],[[87,[]]]]],[]],[[-1,-1],[[86,[-1,-2,-3]]],237,[],[]],[[-1,-1,-1],[[228,[-1,-2,-3]]],[237,235],[],[]],[[226,[119,[-1,-2]],[119,[-1,-2]]],[[119,[-1,-2]]],[],[]],[[227,[221,[-1,-2]],[221,[-1,-2]]],[[221,[-1,-2]]],[],[]],[[226,[194,[-1,-2]],[194,[-1,-2]]],[[194,[-1,-2]]],[],[]],[[227,[218,[-1,-2]],[218,[-1,-2]]],[[218,[-1,-2]]],[],[]],[[226,[146,[-1,-2]],[146,[-1,-2]]],[[146,[-1,-2]]],[],[]],[[227,[219,[-1,-2]],[219,[-1,-2]]],[[219,[-1,-2]]],[],[]],[[[150,[-1,-2]],[194,[-1,-2]]],4,[164,[172,[],[[87,[]]]]],[]],[181,181],[[[150,[-1,-2]]],[[194,[-1,-2]]],[164,[172,[],[[87,[]]]]],[]],[[[231,[-1,-2]]],[[218,[-1,-2]]],[164,[172,[],[[87,[]]]]],[]],0,[[-1,-1],[[194,[-1,-2]]],[],[]],[[-1,-1,-1],[[218,[-1,-2]]],[],[]],[[[147,[-1]],[147,[-1]]],[[228,[-1,-2,-3]]],[181,237,235],[],[]],[[[229,[-1,-2,-3]],[229,[-1,-2,-3]],-1],[[229,[-1,-2,-3]]],[],[],[]],[-1,[[119,[-1,-2]]],10,[]],[-1,[[221,[-1,-2]]],10,[]],[-1,[[194,[-1,-2]]],10,[]],[-1,[[218,[-1,-2]]],10,[]],[-1,[[224,[-1,-2,-3]]],10,[],[]],[-1,[[225,[-1,-2,-3]]],10,[],[]],[-1,[[146,[-1,-2]]],10,[]],[-1,[[219,[-1,-2]]],10,[]],[[[146,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[163,[],[[87,[]]]]],[]],[[[219,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[163,[],[[87,[]]]]],[]],[[[229,[-1,-2,-3]]],-1,193,[],[]],[[[220,[-1,-2]],[220,[-1,-2]]],[],172,[]],[[[119,[-1,-2]],[119,[-1,-2]]],[],172,[]],[[[119,[-1,-2]],[146,[-1,-2]]],[],172,[]],[[[119,[-1,-2]],[194,[-1,-2]]],[],172,[]],[[[221,[-1,-2]],[219,[-1,-2]]],[],172,[]],[[[221,[-1,-2]],[218,[-1,-2]]],[],172,[]],[[[221,[-1,-2]],[221,[-1,-2]]],[],172,[]],[[[222,[-1,-2,-3]],[222,[-1,-2,-3]]],[],172,[],[]],[[[223,[-1,-2]],[223,[-1,-2]]],[[223,[-1,-2]]],[[172,[],[[87,[]]]]],[]],[[[194,[-1,-2]],[194,[-1,-2]]],[],172,[]],[[[218,[-1,-2]],[218,[-1,-2]]],[],172,[]],[[[224,[-1,-2,-3]],[224,[-1,-4,-3]]],[],172,[],[],[]],[[[225,[-1,-2,-3]],[225,[-1,-4,-3]]],[],172,[],[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],[],172,[]],[[[219,[-1,-2]],[219,[-1,-2]]],[],172,[]],[[[220,[-1,-2]],[220,[-1,-2]]],4,195,[]],[[[119,[-1,-2]],[194,[-1,-2]]],4,195,[]],[[[119,[-1,-2]],[146,[-1,-2]]],4,[164,[172,[],[[87,[]]]]],[]],[[[221,[-1,-2]],[219,[-1,-2]]],4,[164,[172,[],[[87,[]]]]],[]],[[[221,[-1,-2]],[218,[-1,-2]]],4,195,[]],[[[223,[-1,-2]],[223,[-1,-2]]],4,195,[]],[[[194,[-1,-2]],[194,[-1,-2]]],4,195,[]],[[[218,[-1,-2]],[218,[-1,-2]]],4,195,[]],[[[224,[-1,-2,-3]],[224,[-1,-3,-3]]],4,195,[],[]],[[[225,[-1,-2,-3]],[225,[-1,-3,-3]]],4,195,[],[]],[[[146,[-1,-2]],[146,[-1,-2]]],4,[164,[172,[],[[87,[]]]]],[]],[[[219,[-1,-2]],[219,[-1,-2]]],4,[164,[172,[],[[87,[]]]]],[]],[-3,[[220,[-1,-2]]],[[163,[],[[87,[]]]],237],[],[[196,[],[[89,[[220,[-1,-2]]]]]]]],[-3,[[220,[-1,-2]]],[[163,[],[[87,[]]]],164,237],[],[[196,[],[[89,[[220,[-1,-2]]]]]]]],[-3,[[194,[-1,-2]]],[[163,[],[[87,[]]]],164,237],[],[[196,[],[[89,[[194,[-1,-2]]]]]]]],[-3,[[194,[-1,-2]]],[[163,[],[[87,[]]]],237],[],[[196,[],[[89,[[194,[-1,-2]]]]]]]],[-3,[[218,[-1,-2]]],[[163,[],[[87,[]]]],237],[],[[196,[],[[89,[[218,[-1,-2]]]]]]]],[-3,[[218,[-1,-2]]],[[163,[],[[87,[]]]],164,237],[],[[196,[],[[89,[[218,[-1,-2]]]]]]]],[-3,[[146,[-1,-2]]],[[163,[],[[87,[]]]],164,237],[],[[196,[],[[89,[[146,[-1,-2]]]]]]]],[-3,[[146,[-1,-2]]],[[163,[],[[87,[]]]],237],[],[[196,[],[[89,[[146,[-1,-2]]]]]]]],[-3,[[219,[-1,-2]]],[[163,[],[[87,[]]]],164,237],[],[[196,[],[[89,[[219,[-1,-2]]]]]]]],[-3,[[219,[-1,-2]]],[[163,[],[[87,[]]]],237],[],[[196,[],[[89,[[219,[-1,-2]]]]]]]],[181,181],[[[232,[-1,-2,-3]],[232,[-1,-4,-2]]],[[232,[-1,-4,-3]]],193,[],[],[]],[[[229,[-1,-2,-3]],[229,[-1,-3,-4]]],[[229,[-1,-2,-4]]],[],[],[],[]],[[[86,[-1,-2,-3]],[86,[-1,-3,-4]]],[[86,[-1,-2,-4]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[],[]],[[[228,[-1,-2,-3]],[228,[-1,-3,-4]]],[[228,[-1,-2,-4]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[],[]],[[[233,[-1,-2,-3]],[233,[-1,-3,-4]]],[[233,[-1,-2,-4]]],[],[],[],[]],[[[86,[-1,-2,-3]],[147,[-1]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],237,181],[],[]],[[[228,[-1,-2,-3]],-1,-1,-1,[147,[-1]]],[[228,[-1,-2,-3]]],[[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],[182,[],[[87,[]]]],164,237,235,181],[],[]],[[[86,[-1,-2,-3]],-1,-1],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237],[],[]],[[[228,[-1,-2,-3]],-1,-1,-1],[[228,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[86,[-1,-2,-3]],[146,[-1,-3]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[228,[-1,-2,-3]],[219,[-1,-3]]],[[228,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]],237,235],[],[]],[[[221,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[228,[-1,-2,-3]]],[[86,[-1,-2,-3]]],164,[],[]],[[[219,[-1,-2]]],[[146,[-1,-2]]],164,[]],[[[119,[-1,-2]]],[[221,[-1,-2]]],[237,164],[]],[[[232,[-1,-2,-3]]],[[229,[-1,-2,-3]]],193,[],[]],[[[86,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[237,235,164],[],[]],[[[146,[-1,-2]]],[[219,[-1,-2]]],[237,164],[]],[[[119,[-1,-2]]],[[207,[-1]]],164,[]],[[[221,[-1,-2]]],[[207,[-1]]],164,[]],[[[194,[-1,-2]]],[[207,[-1]]],164,[]],[[[218,[-1,-2]]],[[207,[-1]]],164,[]],[[[86,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[228,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[224,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[225,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[146,[-1,-2]]],[[207,[-1]]],164,[]],[[[219,[-1,-2]]],[[207,[-1]]],164,[]],[[[221,[-1,-2]]],[[207,[-1]]],[235,164],[]],[[[219,[-1,-2]]],[[207,[-1]]],[237,164],[]],[[[86,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[228,[-1,-2,-3]]],[[207,[-1]]],164,[],[]],[[[86,[-1,-2,-3]]],[[207,[[207,[-1]]]]],164,[],[]],[[[228,[-1,-2,-3]]],[[207,[[207,[-1]]]]],164,[],[]],[[[228,[-1,-2,-3]]],[[207,[[207,[-1]]]]],164,[],[]],[[[230,[-1,-2]]],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[150,[-1,-2]]],[[150,[60,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[60,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[60,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[60,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[60,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[60,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[60,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[60,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[60,-2]]],[177,164],[]],[[[150,[-1,-2]]],[[150,[197,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[197,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[197,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[197,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[197,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[197,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[197,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[197,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[197,-2]]],[177,164],[]],[[[150,[-1,-2]]],[[150,[211,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[211,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[211,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[211,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[211,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[211,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[211,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[211,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[211,-2]]],[177,164],[]],[[[150,[-1,-2]]],[[150,[215,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[215,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[215,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[215,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[215,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[215,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[215,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[215,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[215,-2]]],[177,164],[]],[[[150,[-1,-2]]],[[28,[[150,[-1,-2]]]]],[164,191],[]],[[[231,[-1,-2]]],[[28,[[231,[-1,-2]]]]],[164,191],[]],[[[230,[-1,-2]]],[[28,[[230,[-1,-2]]]]],[164,237,191],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[146,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[219,[-1,-2]]],[[221,[-1,-2]]],164,[]],[[[236,[-1,-2]]],[[28,[[119,[-1,-2]]]]],[164,[182,[],[[87,[]]]],237,191],[]],[[[236,[-1,-2]]],[[28,[[221,[-1,-2]]]]],[164,[182,[],[[87,[]]]],237,191],[]],[[[150,[-1,-2]]],[[230,[-1,-2]]],[164,[172,[],[[87,[]]]]],[]],[[[146,[-1,-2]]],[[194,[-1,-2]]],164,[]],[[[232,[-1,-2,-3]]],[[86,[-1,-2,-3]]],[164,[163,[],[[87,[]]]],[172,[],[[87,[]]]],[173,[],[[87,[]]]],192,181],[],[]],[[[229,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[],[],[]],[[[224,[-1,-2,-3]]],[[86,[-1,-2,-3]]],[237,235,164],[],[]],[[[225,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[237,235,164],[],[]],[[[146,[-1,-2]]],[[86,[-1,-2,-2]]],[237,235,164],[]],[[[219,[-1,-2]]],[[228,[-1,-2,-2]]],[237,235,164],[]],[[[233,[-1,-2,-3]]],[[228,[-1,-2,-3]]],[],[],[]],[[[119,[-1,-2]]],[[4,[-1,-1]]],164,[]],[[[221,[-1,-2]]],[[4,[-1,-1,-1]]],164,[]],[[[194,[-1,-2]]],[[4,[-1,-1]]],164,[]],[[[218,[-1,-2]]],[[4,[-1,-1,-1]]],164,[]],[[[224,[-1,-2,-3]]],[[4,[-1,-1]]],164,[],[]],[[[225,[-1,-2,-3]]],[[4,[-1,-1,-1]]],164,[],[]],[[[146,[-1,-2]]],[[4,[-1,-1]]],164,[]],[[[219,[-1,-2]]],[[4,[-1,-1,-1]]],164,[]],[[[221,[-1,-2]]],[[4,[-1,-1,-1,-1]]],[235,164],[]],[[[219,[-1,-2]]],[[4,[-1,-1,-1,-1]]],[237,164],[]],[[[150,[-1,-2]]],[[150,[7,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[7,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[7,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[7,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[7,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[7,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[7,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[7,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[7,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[124,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[124,-2]]],[177,164],[]],[[[150,[-1,-2]]],[[150,[-1,85]]],164,[]],[[[231,[-1,-2]]],[[231,[-1,85]]],164,[]],[[[119,[-1,-2]]],[[119,[-1,85]]],164,[]],[[[221,[-1,-2]]],[[221,[-1,85]]],164,[]],[[[230,[-1,-2]]],[[230,[-1,85]]],164,[]],[[[232,[-1,-2,-3]]],[[232,[-1,85,85]]],164,[],[]],[[[229,[-1,-2,-3]]],[[229,[-1,85,85]]],164,[],[]],[[[194,[-1,-2]]],[[194,[-1,85]]],164,[]],[[[218,[-1,-2]]],[[218,[-1,85]]],164,[]],[[[86,[-1,-2,-3]]],[[86,[-1,85,85]]],164,[],[]],[[[228,[-1,-2,-3]]],[[228,[-1,85,85]]],164,[],[]],[[[224,[-1,-2,-3]]],[[224,[-1,85,85]]],164,[],[]],[[[225,[-1,-2,-3]]],[[225,[-1,85,85]]],164,[],[]],[[[146,[-1,-2]]],[[146,[-1,85]]],164,[]],[[[219,[-1,-2]]],[[219,[-1,85]]],164,[]],[[[233,[-1,-2,-3]]],[[233,[-1,85,85]]],[],[],[]],[[[150,[-1,-2]]],[[150,[16,-2]]],[177,164],[]],[[[231,[-1,-2]]],[[231,[16,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[119,[16,-2]]],[177,164],[]],[[[221,[-1,-2]]],[[221,[16,-2]]],[177,164],[]],[[[230,[-1,-2]]],[[230,[16,-2]]],[177,164],[]],[[[194,[-1,-2]]],[[194,[16,-2]]],[177,164],[]],[[[218,[-1,-2]]],[[218,[16,-2]]],[177,164],[]],[[[146,[-1,-2]]],[[146,[16,-2]]],[177,164],[]],[[[219,[-1,-2]]],[[219,[16,-2]]],[177,164],[]],[[[119,[-1,-2]]],[[146,[-1,-2]]],164,[]],[[[221,[-1,-2]]],[[219,[-1,-2]]],164,[]],[[[194,[-1,-2]]],[[146,[-1,-2]]],164,[]],[[[218,[-1,-2]]],[[219,[-1,-2]]],164,[]],[[[224,[-1,-2,-3]]],[[146,[-1,-2]]],164,[],[]],[[[225,[-1,-2,-3]]],[[219,[-1,-2]]],164,[],[]],0,[[[224,[-1,-2,-3]],[150,[-1,-2]]],[[150,[-3]]],[163,164],[],[]],[[[222,[-1,-2,-3]],[150,[-1,-2]]],[[150,[-3]]],[164,173],[],[]],[[[225,[-1,-2,-3]],[150,[-1,-2]]],[[150,[-3]]],[163,164],[],[]],[[[222,[-1,-2,-3]],[231,[-1,-2]]],[[231,[-3]]],[164,173],[],[]],[[[225,[-1,-2,-3]],[231,[-1,-2]]],[[231,[-3]]],[163,164],[],[]],[[[232,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-1,-3]]],193,[],[]],[[[232,[-1,85,85]],[119,[-1,85]]],[[119,[-1,85]]],161],[[[222,[-1,85,85]],[119,[-1,85]]],[[119,[-1,85]]],161],[[[222,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-3]]],[164,173],[],[]],[[[86,[-1,85,85]],[119,[-1,85]]],[[119,[-1,85]]],161],[[[86,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[224,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-3]]],[163,164],[],[]],[[[224,[-1,85,85]],[119,[-1,85]]],[[119,[-1,85]]],161],[[[229,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-1,-3]]],[],[],[]],[[[228,[-1,-2,-3]],[119,[-1,-2]]],[[28,[[119,[-1,-3]]]]],[[182,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[225,[-1,-2,-3]],[119,[-1,-2]]],[[119,[-3]]],[163,164],[],[]],[[[228,[-1,-2,-3]],[119,[-1,-2]]],[[236,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[229,[-1,-2,-3]],[221,[-1,-2]]],[[221,[-1,-3]]],[],[],[]],[[[222,[-1,-2,-3]],[221,[-1,-2]]],[[221,[-3]]],[164,173],[],[]],[[[228,[-1,-2,-3]],[221,[-1,-2]]],[[28,[[221,[-1,-3]]]]],[[182,[],[[87,[]]]],237,191,164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[225,[-1,-2,-3]],[221,[-1,-2]]],[[221,[-3]]],[163,164],[],[]],[[[228,[-1,-2,-3]],[221,[-1,-2]]],[[236,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[222,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-3]]],[164,173],[],[]],[[[224,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-3]]],[[163,[],[[87,[]]]],164],[],[]],[[[225,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],[[163,[],[[87,[]]]],164],[],[]],[[[222,[-1,-2,-3]],[194,[-1,-2]]],[[194,[-3]]],[164,173],[],[]],[[[224,[-1,-2,-3]],[194,[-1,-2]]],[[194,[-1,-3]]],[],[],[]],[[[225,[-1,-2,-3]],[194,[-1,-2]]],[[194,[-1,-3]]],[],[],[]],[[[232,[-1,-2,-3]],[146,[-1,-2]]],[[146,[-1,-3]]],193,[],[]],[[[232,[-1,85,85]],[146,[-1,85]]],[[146,[-1,85]]],161],[[[222,[-1,85,85]],[146,[-1,85]]],[[146,[-1,85]]],161],[[[222,[-1,-2,-3]],[146,[-1,-2]]],[[146,[-3]]],[164,173],[],[]],[[[86,[-1,-2,-3]],[146,[-1,-2]]],[[146,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[86,[-1,85,85]],[146,[-1,85]]],[[146,[-1,85]]],161],[[[224,[-1,85,85]],[146,[-1,85]]],[[146,[-1,85]]],161],[[[229,[-1,-2,-3]],[146,[-1,-2]]],[[146,[-1,-3]]],[],[],[]],[[[228,[-1,-2,-3]],[146,[-1,-2]]],[[146,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[229,[-1,-2,-3]],[219,[-1,-2]]],[[219,[-1,-3]]],[],[],[]],[[[228,[-1,-2,-3]],[219,[-1,-2]]],[[219,[-1,-3]]],[164,[163,[],[[87,[]]]],[173,[],[[87,[]]]]],[],[]],[[[150,[-1,-2]],[146,[-1,-2]]],[[150,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[231,[-1,-2]],[219,[-1,-2]]],[[231,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[[230,[-1,-2]],[146,[-1,-2]]],[[230,[-1,-2]]],[164,[163,[],[[87,[]]]]],[]],[[-1,-1],[[86,[-1,-2,-3]]],[237,235],[],[]],[[-1,-1,-1],[[228,[-1,-2,-3]]],[237,235],[],[]],0,[[[150,[-1,-2]]],[[28,[[150,[-3,-2]]]]],[177,164],[],177],[[[231,[-1,-2]]],[[28,[[231,[-3,-2]]]]],[177,164],[],177],[[[220,[-1,-2]]],[[28,[[220,[-3,-2]]]]],[177,10],[],177],[[[119,[-1,-2]]],[[28,[[119,[-3,-2]]]]],[177,164],[],177],[[[221,[-1,-2]]],[[28,[[221,[-3,-2]]]]],[177,164],[],177],[[[230,[-1,-2]]],[[28,[[230,[-3,-2]]]]],[177,164],[],177],[[[222,[-1,-2,-3]]],[[28,[[222,[-4,-2,-3]]]]],177,[],[],177],[[[194,[-1,-2]]],[[28,[[194,[-3,-2]]]]],[177,164],[],177],[[[218,[-1,-2]]],[[28,[[218,[-3,-2]]]]],[177,164],[],177],[[[86,[-1,-2,-3]]],[[28,[[86,[-4,-2,-3]]]]],[177,164],[],[],177],[[[228,[-1,-2,-3]]],[[28,[[228,[-4,-2,-3]]]]],[177,164],[],[],177],[[[146,[-1,-2]]],[[28,[[146,[-3,-2]]]]],[177,164],[],177],[[[219,[-1,-2]]],[[28,[[219,[-3,-2]]]]],[177,164],[],177],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[[[146,[-1,-2]]],[[28,[[146,[-1,-2]]]]],193,[]],[[[219,[-1,-2]]],[[28,[[219,[-1,-2]]]]],193,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1,-2]],[150,[-1,-2]]],[[150,[-1,-2]]],[164,191],[]],[[[231,[-1,-2]],[231,[-1,-2]]],[[231,[-1,-2]]],[164,191],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[164,191,[163,[],[[87,[]]]],[172,[],[[87,[]]]],237],[]],[[-1,-1,-1,-1],[[229,[-1,-2,-3]]],193,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[-1,-1],[[146,[-1,-2]]],[],[]],[[-1,-1,-1],[[219,[-1,-2]]],[],[]],[[[229,[-1,-2,-3]]],[[219,[-1,85]]],164,[],[]],[[[223,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],[[[231,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[218,[-1,-2]]],-1,[[173,[],[[87,[]]]],164],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[150,[-1,-2]]],-1,[164,[172,[],[[87,[]]]]],[]],[[[231,[-1,-2]]],-1,[164,[172,[],[[87,[]]]]],[]],[[[230,[-1,-2]]],-1,[164,[163,[],[[87,[]]]]],[]],0,0,[[[86,[-1,-2,-3]]],[[86,[-1,-2,-4]]],164,[],[],[]],[[[228,[-1,-2,-3]]],[[228,[-1,-2,-4]]],164,[],[],[]],[[[146,[-1,-2]],-1],[[146,[-1,-2]]],193,[]],[[[146,[-1,-2]],-1],[[146,[-1,-2]]],193,[]],[[[219,[-1,-2]],-1],[[219,[-1,-2]]],193,[]],[[[146,[-1,-2]],-1],[[146,[-1,-2]]],193,[]],[[[219,[-1,-2]],-1],[[219,[-1,-2]]],193,[]],[[[86,[-1,-2,-3]]],[[86,[-1,-4,-3]]],164,[],[],[]],[[[228,[-1,-2,-3]]],[[228,[-1,-4,-3]]],164,[],[],[]],0,0,0,0,0,0,0,0,0,[[[150,[-1,-2]]],[[131,[-1]]],164,[]],[[[231,[-1,-2]]],[[131,[-1]]],164,[]],[[[230,[-1,-2]]],[[131,[-1]]],[164,[163,[],[[87,[]]]]],[]],[[[221,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[219,[-1,-2]]],[[146,[-1,-2]]],164,[]],[227,226],[[[231,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],[[[221,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[219,[-1,-2]]],[[146,[-1,-2]]],164,[]],[227,226],[[[231,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],0,0,0,0,0,0,0,0,0,[[[150,[-1,-2]]],[[131,[-1]]],164,[]],[[[231,[-1,-2]]],[[131,[-1]]],164,[]],[[[230,[-1,-2]]],[[131,[-1]]],[164,[163,[],[[87,[]]]]],[]],[[[119,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[146,[-1,-2]]],[[146,[-1,-2]]],164,[]],[[[221,[-1,-2]]],[[119,[-1,-2]]],164,[]],[[[219,[-1,-2]]],[[146,[-1,-2]]],164,[]],[227,226],[[[231,[-1,-2]]],-1,[164,[173,[],[[87,[]]]],[172,[],[[87,[]]]]],[]],0,0,0,0,0,[[[231,[-1,-2]]],[[131,[-1]]],164,[]],[[],[[150,[-1,-2]]],237,[]],[[],[[231,[-1,-2]]],237,[]],[[],[[220,[-1,-2]]],237,[]],[[],[[119,[-1,-2]]],237,[]],[[],[[119,[-1,-2]]],237,[]],[[],[[221,[-1,-2]]],237,[]],[[],[[221,[-1,-2]]],237,[]],[[],[[230,[-1,-2]]],237,[]],[[],[[223,[-1,-2]]],237,[]],[[],[[194,[-1,-2]]],237,[]],[[],[[194,[-1,-2]]],237,[]],[[],[[218,[-1,-2]]],237,[]],[[],[[218,[-1,-2]]],237,[]],[[],[[146,[-1,-2]]],237,[]],[[],[[146,[-1,-2]]],237,[]],[[],[[219,[-1,-2]]],237,[]],[[],[[219,[-1,-2]]],237,[]],0,[[],-1,[]],[[176,176],77],[[176,176,-1],77,[]],[[-1,-1],-1,191],[[-1,-1],-1,191],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[234,234],[239,239],[[],235],[240,240],[[],237],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[170,[-1]],-1],[[242,[-1]]],161],[[[186,[-1]]],[[28,[[119,[-1,85]]]]],161],[[[187,[-1]]],[[28,[-1]]],161],[[[186,[-1]]],[[4,[16,[28,[16]]]]],161],[[[187,[-1]]],[[4,[16,[28,[16]]]]],161],0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[167,[],[[166,[-1]]]],-1],[[167,[],[[166,[-1]]]]],161],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[167,[],[[166,[-1]]]],-1],[[167,[],[[166,[-1]]]]],161],[[[167,[],[[166,[-1]]]],-1],[[146,[-1,85]]],161],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[167,[],[[166,[-1]]]]],[[167,[],[[166,[-1]]]]],161],[[[167,[],[[166,[-1]]]],-1,76],4,161],[[[167,[],[[166,[-1]]]]],[[119,[-1,85]]],161],[[[167,[],[[166,[-1]]]],-1],[[119,[-1,85]]],161],[[[167,[],[[166,[-1]]]],-1],[[4,[[167,[],[[166,[-1]]]],[167,[],[[166,[-1]]]]]]],161],[[[167,[],[[166,[-1]]]],[131,[-1]]],[[167,[],[[166,[-1]]]]],161],[[[167,[],[[166,[-1]]]]],[[119,[-1,85]]],161],[[144,[119,[-1,85]]],[[119,[-1,85]]],[]],[[144,[146,[-1,85]]],[[146,[-1,85]]],[]],[[[167,[],[[166,[-1]]]],-1],-1,161],[[[167,[],[[166,[-1]]]],-1],-1,161],[[-1,-1,-1,-1],[[180,[-1]]],161],[[[146,[-1,85]],[146,[-1,85]]],-1,161],[[[119,[-1,85]],[119,[-1,85]],[119,[-1,85]]],-1,161],[[-1,-1],[[4,[-1,-1]]],188],[[[146,[-1,85]]],[[146,[-1,85]]],161],[[[146,[-1,85]]],[[146,[-1,85]]],188],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[243,[-1]]],[[196,[],[[89,[[119,[60,85]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[[244,60],[[245,[244]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[60,-1],[[245,[-1]]],[[196,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]]],[[-1,-2],[[246,[-2,-1]]],[[144,[60]]],[[196,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]]],[[77,-1],[[243,[-1]]],[[196,[],[[89,[[119,[60,85]]]]]]]],[[[142,[-1]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],[[196,[],[[89,[[107,[[4,[[119,[60,85]],[45,[60]]]],[119,[60,85]]]]]]]]]],[[[245,[-1]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],[[196,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]]],[[[246,[-1,-2]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],[[196,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]],[[144,[60]]]],[[[243,[-1]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],[[196,[],[[89,[[119,[60,85]]]]]]]],[-1,[[243,[-1]]],[[196,[],[[89,[[119,[60,85]]]]]]]],[[[245,[-1]]],[[4,[16,[28,[16]]]]],[[196,[],[[89,[[107,[[119,[60,85]],[119,[60,85]]]]]]]]]],[[244,-1],[[246,[244,-1]]],[[144,[60]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[142,[-1]]],-1,[[196,[],[[89,[[107,[[4,[[119,[60,85]],[45,[60]]]],[119,[60,85]]]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[60,60],[[119,[60,85]]]],0,[[60,60],[[194,[60,85]]]],[[60,60],[[146,[60,85]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[102,[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[45,[60]]],100],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,82],[105,82],[105,82],[102,102],[105,105],[133,133],[138,138],[129,129],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[102,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[],102],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[16,4],[16,4],[[102,77],4],[[105,77],4],[[105,77],4],[[102,[45,[97]]],4],[[105,[45,[97]]],4],[[129,37],[[50,[4,78]]]],[[138,60,-1],4,[[76,[[107,[[4,[[119,[60,85]],[45,[60]]]],[119,[60,85]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,82],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[102,[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[45,[60]]],100],[[],102],[16,105],[141,28],[133,[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]]],[138,28],[129,[[28,[[107,[100,115]]]]]],[[],-1,[]],[102,16],[105,16],[105,16],[138,133],[[102,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[105,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[102,16,16],4],[[105,16,16],4],[[105,16,16],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,16],102],[102,[[143,[102]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[104,[119,[60,85]]],100],[[104,[119,[60,85]],[45,[60]]],100],[[247,[119,[60,85]],[45,[60]]],100],[[247,[119,[60,85]],[45,[60]]],100],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,16],[104,16],[247,16],[247,16],[135,135],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[104,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[104,[119,[60,85]],[119,[60,85]],[119,[60,85]]],100],[[247,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[247,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[[104,77],4],[[104,77],4],[[247,77],4],[[247,77],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[104,[119,[60,85]],[45,[60]]],100],[[104,[119,[60,85]]],100],[[247,[119,[60,85]],[45,[60]]],100],[[247,[119,[60,85]],[45,[60]]],100],[[98,16],247],[135,[[28,[97]]]],[135,[[28,[97]]]],[104,16],[247,16],[[104,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[104,[119,[60,85]],[119,[60,85]]],100],[[247,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[247,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[104,16,16],4],[[104,16,16],4],[[247,16,16],4],[[247,16,16],4],[135,[[4,[16,[28,[16]]]]]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[104,16],247],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[137,137],[[[136,[-1]]],[[136,[-1]]],10],[[[139,[-1]]],[[139,[-1]]],10],[130,130],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,4],[16,4],[16,4],[16,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[41,[-1]]],[[41,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[42,[-1]]],[[42,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[[[43,[-1]]],[[43,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[131,[7]],77],130],[137,[[28,[[107,[100,115]]]]]],[[[136,[-1]]],[[28,[[107,[-1,4]]]]],[]],[[[139,[-1]]],[[28,[[107,[[119,[60,85]],[119,[60,85]]]]]]],123],[130,[[28,[[107,[100,115]]]]]],[-1,[[248,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,[[50,[-2,[55,[-2]]]]],[],[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[145,[119,[60,85]],60,114,[45,[60]]],4],[[145,[119,[60,85]],[146,[60,85]],[147,[60]],114,[45,[60]]],4],[[145,[148,[60]],[45,[60]]],[[4,[100,100]]]],[[145,[119,[60,85]],[45,[60]]],100],[[145,[108,[[119,[60,85]]]],[45,[60]]],4],[[149,[108,[[119,[60,85]]]]],4],[[145,[150,[60,85]],114,[45,[60]]],4],[[145,[150,[60,85]],151,114,[45,[60]]],4],[[149,[146,[60,85]],[147,[60]],106,[119,[60,85]]],4],[[145,[119,[60,85]],[45,[60]]],100],[[[155,[],[[154,[-1]]]]],-1,[]],[149,4],[145,4],[[145,[119,[60,85]],[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]],[119,[60,85]],[119,[60,85]]],4],[[145,77],4],[[145,[107,[[4,[[119,[60,85]],[45,[60]]]],[119,[60,85]]]]],4],[[145,60],[[152,[145]]]],[[244,60],[[245,[244]]]],[[149,60],4],[[145,[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]]],4],[[149,[119,[60,85]]],4],[145,16],[[145,[107,[[119,[60,85]],[119,[60,85]]]],[45,[60]]],4],[[145,[119,[60,85]],[119,[60,85]],[45,[60]]],100],[[149,[119,[60,85]],[119,[60,85]]],4],[[149,[146,[60,85]],[147,[60]],106,[146,[60,85]]],4],[[149,[146,[60,85]],[146,[60,85]],[146,[60,85]]],4],[[149,60],4],[[149,[146,[60,85]]],4],[[149,[146,[60,85]]],4],[[149,[146,[60,85]],[146,[60,85]]],4],[[149,60],4],[[145,16,16],4],[[149,16,16],4],[[149,[119,[60,85]],[119,[60,85]]],4],[[149,[119,[60,85]]],4],[[149,[146,[60,85]],[146,[60,85]]],4],[[149,[146,[60,85]]],4],[[145,-1],[[153,[145,-1]]],[[144,[60]]]],[[244,-1],[[246,[244,-1]]],[[144,[60]]]],[[149,60],4],[145,[[143,[145]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[10,"TransformMatrix",6794],[10,"Any",6795],[6,"Renderer",11],[1,"tuple"],[10,"Renderer",6796],[6,"Compositor",11],[1,"u32"],[10,"Compositor",6797],[10,"Window",6797],[10,"Clone",6798],[10,"Renderer",6799],[17,"Font"],[17,"Paragraph"],[17,"Editor"],[5,"Pixels",6800],[1,"usize"],[10,"Renderer",149],[6,"FilterMethod",6801],[5,"Rectangle",6802],[10,"Renderer",6801],[17,"Handle"],[6,"Mesh",6803],[10,"Renderer",6803],[10,"Renderer",6804],[10,"Primitive",6804],[5,"Handle",6805],[5,"Color",6806],[6,"Option",6807],[10,"Renderer",6805],[5,"Information",6797],[5,"Point",6808],[5,"Quad",6796],[6,"Background",6809],[10,"Into",6810],[5,"String",6811],[5,"Text",6799],[5,"Formatter",6812],[8,"Result",6812],[10,"Debug",6812],[6,"Surface",11],[5,"Box",6813],[5,"Arc",6814],[5,"Rc",6815],[1,"u8"],[1,"slice"],[6,"Cow",6816],[5,"Size",6817],[5,"Viewport",6818],[6,"SurfaceError",6797],[6,"Result",6819],[1,"str"],[10,"AsRef",6810],[5,"Vec",6820],[5,"Transformation",6821],[5,"OutOfBounds",6822],[5,"TypeId",6795],[5,"Settings",6823],[6,"Error",6824],[5,"Frame",149],[1,"f32"],[5,"Path",149],[5,"Cache",149],[6,"Gradient",149],[5,"Fill",149],[5,"Stroke",149],[6,"LineCap",149],[6,"LineJoin",149],[5,"LineDash",149],[6,"Style",149],[5,"Text",149],[10,"FnOnce",6825],[17,"Geometry"],[17,"Frame"],[10,"Cached",6826],[10,"Backend",703],[10,"FnMut",6825],[1,"bool"],[5,"Error",6812],[5,"Linear",723],[5,"Builder",812],[5,"Packed",723],[5,"Path",953],[5,"Radians",6827],[5,"Vector",6828],[5,"UnknownUnit",3722],[5,"Transform2D",3722],[17,"Output"],[6,"Rule",653],[17,"Item"],[5,"ColorStop",6829],[10,"IntoIterator",6830],[6,"Gradient",6829],[5,"Arc",812],[5,"Elliptical",904],[5,"PathCommands",953],[5,"PathCommandsSlice",953],[5,"PathSlice",953],[5,"PathBuffer",953],[5,"PathBufferSlice",953],[5,"EndpointId",953],[5,"PathCommandsBuilder",2237],[5,"BuilderImpl",6154],[5,"NoAttributes",1907],[5,"Builder",6418],[5,"BuilderWithAttributes",6154],[5,"ArcFlags",953],[6,"Event",953],[5,"Polygon",953],[5,"IdPolygon",953],[6,"LineCap",953],[6,"LineJoin",953],[6,"Side",953],[6,"FillRule",953],[6,"Winding",953],[5,"ControlPointId",953],[5,"EventId",953],[10,"PartialEq",6831],[5,"Events",2237],[5,"Point2D",3722],[10,"AttributeStore",953],[5,"AttributeSlice",953],[10,"PositionStore",953],[10,"Position",953],[1,"u64"],[10,"Hash",6832],[10,"Sized",6833],[10,"BuildHasher",6832],[10,"Hasher",6832],[5,"IdIter",6154],[5,"PolygonIdIter",6561],[5,"Range",6834],[5,"Iter",2237],[5,"Iter",6154],[1,"i16"],[5,"Iter",6418],[5,"PolygonIter",6561],[5,"IdPolygonIter",6561],[5,"IterWithAttributes",6154],[5,"PathEvents",6561],[5,"CommandsPathSlice",2237],[5,"Reversed",6154],[5,"NoAttributes",5970],[5,"WithSvg",1907],[10,"Transformation",5944],[10,"PathBuilder",6725],[5,"Vector2D",3722],[5,"Angle",2446],[5,"LineSegment",2446],[10,"SvgPathBuilder",6725],[5,"Box2D",3722],[5,"BorderRadii",1907],[5,"Flattened",1907],[5,"Transformed",1907],[17,"PathType"],[10,"Build",6725],[10,"Default",6835],[6,"Ordering",6831],[5,"SmolStr",6836],[5,"PointEvents",2237],[5,"LineEquation",2446],[10,"Scalar",2446],[5,"Triangle",2446],[10,"Add",6837],[10,"Copy",6833],[10,"AddAssign",6837],[17,"Scalar"],[10,"Segment",2446],[5,"Arc",2446],[5,"CubicBezierSegment",2446],[5,"QuadraticBezierSegment",2446],[10,"Rem",6837],[10,"Sub",6837],[10,"Mul",6837],[10,"One",6838],[10,"FloatConst",6839],[10,"ApproxEq",5732],[10,"NumCast",6840],[5,"SvgArc",2446],[5,"Line",2446],[5,"ArrayVec",3289],[10,"Trig",3722],[10,"Div",6837],[10,"DivAssign",6837],[5,"Flattened",3238],[5,"Flattened",3679],[5,"Flattened",5831],[5,"FlattenedT",5831],[10,"Float",6839],[10,"MulAssign",6837],[10,"Neg",6837],[10,"PartialOrd",6831],[10,"Zero",6838],[10,"Real",6841],[5,"Size2D",3722],[10,"SubAssign",6837],[10,"Iterator",6842],[1,"f64"],[5,"ArrayString",3289],[5,"IntoIter",3289],[5,"CapacityError",3289],[10,"Ord",6831],[5,"Drain",3289],[10,"RangeBounds",6834],[1,"char"],[10,"FromIterator",6830],[5,"Error",6843],[1,"array"],[5,"Utf8Error",6844],[5,"Arguments",6812],[1,"i8"],[1,"i32"],[1,"u128"],[1,"i128"],[1,"u16"],[1,"i64"],[6,"Endian",6845],[10,"Signed",6846],[5,"Size3D",3722],[5,"Vector3D",3722],[5,"Length",3722],[5,"Point3D",3722],[5,"Scale",3722],[5,"SideOffsets2D",3722],[5,"Translation2D",3722],[5,"Translation3D",3722],[5,"BoolVector2D",3722],[5,"BoolVector3D",3722],[5,"Transform3D",3722],[5,"Rotation3D",3722],[5,"Rect",3722],[5,"Box3D",3722],[5,"Rotation2D",3722],[5,"RigidTransform3D",3722],[10,"Ceil",5821],[10,"One",5821],[5,"HomogeneousVector",3722],[10,"Zero",5821],[10,"Euclid",6847],[10,"Floor",5821],[10,"Round",5821],[10,"Saturating",6848],[5,"FlatteningParameters",5831],[5,"FromPolyline",5970],[10,"PathIterator",6725],[5,"Flattened",5970],[5,"Transformed",5970],[5,"BuilderWithAttributes",6418],[5,"IterBridge",6849],[8,"Renderer",0],[8,"Compositor",0],[8,"PathEvent",953],[8,"IdEvent",953],[15,"Begin",1868],[15,"End",1868],[15,"Quadratic",1868],[15,"Cubic",1868],[15,"Line",1868],[8,"Rotation",2446],[8,"Size",2446],[8,"Transform",2446],[8,"Box2D",2446],[8,"Translation",2446],[8,"Point",2446],[8,"Vector",2446],[8,"Rotation2D",5738],[8,"SideOffsets2D",5738],[8,"Size3D",5738],[8,"Rotation3D",5738],[8,"Transform2D",5738],[8,"Transform3D",5738],[8,"Box3D",5738],[8,"Rect",5738],[8,"RigidTransform3D",5738],[8,"HomogeneousVector",5738],[8,"Point3D",5738],[8,"Vector3D",5738],[8,"Translation2D",5738],[8,"Translation3D",5738],[8,"Rotation",6124],[8,"Size",6124],[8,"Transform",6124],[8,"Box2D",6124],[8,"Angle",6124],[8,"Point",6124],[8,"Vector",6124],[8,"Translation",6124]],"b":[[359,"impl-From%3CGradient%3E-for-Fill"],[360,"impl-From%3CLinear%3E-for-Fill"],[361,"impl-From%3CColor%3E-for-Fill"],[369,"impl-From%3CGradient%3E-for-Style"],[370,"impl-From%3CColor%3E-for-Style"],[371,"impl-From%3C%26str%3E-for-Text"],[373,"impl-From%3CString%3E-for-Text"],[1431,"impl-Index%3CEndpointId%3E-for-Path"],[1432,"impl-Index%3CControlPointId%3E-for-Path"],[1433,"impl-Index%3CEndpointId%3E-for-PathSlice%3C\'l%3E"],[1434,"impl-Index%3CControlPointId%3E-for-PathSlice%3C\'l%3E"],[1592,"impl-IntoIterator-for-%26PathSlice%3C\'l%3E"],[1593,"impl-IntoIterator-for-PathSlice%3C\'l%3E"],[1962,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[1963,"impl-NoAttributes%3CB%3E"],[1977,"impl-Flattened%3CBuilder%3E"],[1978,"impl-Build-for-Flattened%3CBuilder%3E"],[1980,"impl-WithSvg%3CBuilder%3E"],[1981,"impl-Build-for-WithSvg%3CBuilder%3E"],[1982,"impl-NoAttributes%3CB%3E"],[1983,"impl-Build-for-NoAttributes%3CB%3E"],[1990,"impl-WithSvg%3CBuilder%3E"],[1991,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2002,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2003,"impl-WithSvg%3CBuilder%3E"],[2004,"impl-NoAttributes%3CB%3E"],[2005,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2032,"impl-NoAttributes%3CB%3E"],[2033,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2041,"impl-Display-for-BorderRadii"],[2042,"impl-Debug-for-BorderRadii"],[2115,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2116,"impl-WithSvg%3CBuilder%3E"],[2117,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2118,"impl-NoAttributes%3CB%3E"],[2120,"impl-WithSvg%3CBuilder%3E"],[2121,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2140,"impl-WithSvg%3CBuilder%3E"],[2141,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2142,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2143,"impl-NoAttributes%3CB%3E"],[2162,"impl-WithSvg%3CBuilder%3E"],[2163,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2164,"impl-NoAttributes%3CB%3E"],[2165,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2339,"impl-Index%3CEndpointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[2340,"impl-Index%3CControlPointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[2496,"impl-Add-for-Angle%3CT%3E"],[2497,"impl-Add%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[2500,"impl-Segment-for-Arc%3CS%3E"],[2501,"impl-Arc%3CS%3E"],[2502,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2503,"impl-CubicBezierSegment%3CS%3E"],[2504,"impl-Segment-for-LineSegment%3CS%3E"],[2505,"impl-LineSegment%3CS%3E"],[2506,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2507,"impl-QuadraticBezierSegment%3CS%3E"],[2513,"impl-Segment-for-Arc%3CS%3E"],[2514,"impl-Arc%3CS%3E"],[2515,"impl-CubicBezierSegment%3CS%3E"],[2516,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2563,"impl-Arc%3CS%3E"],[2564,"impl-Segment-for-Arc%3CS%3E"],[2565,"impl-CubicBezierSegment%3CS%3E"],[2566,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2567,"impl-Segment-for-LineSegment%3CS%3E"],[2568,"impl-LineSegment%3CS%3E"],[2569,"impl-QuadraticBezierSegment%3CS%3E"],[2570,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2672,"impl-CubicBezierSegment%3CS%3E"],[2673,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2675,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2676,"impl-QuadraticBezierSegment%3CS%3E"],[2681,"impl-Div%3CT%3E-for-Angle%3CT%3E"],[2682,"impl-Div-for-Angle%3CT%3E"],[2706,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2707,"impl-CubicBezierSegment%3CS%3E"],[2709,"impl-QuadraticBezierSegment%3CS%3E"],[2710,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2712,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2713,"impl-CubicBezierSegment%3CS%3E"],[2715,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2716,"impl-QuadraticBezierSegment%3CS%3E"],[2752,"impl-Arc%3CS%3E"],[2753,"impl-Segment-for-Arc%3CS%3E"],[2754,"impl-CubicBezierSegment%3CS%3E"],[2755,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2756,"impl-LineSegment%3CS%3E"],[2757,"impl-Segment-for-LineSegment%3CS%3E"],[2758,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2759,"impl-QuadraticBezierSegment%3CS%3E"],[2776,"impl-Segment-for-Arc%3CS%3E"],[2777,"impl-Arc%3CS%3E"],[2779,"impl-CubicBezierSegment%3CS%3E"],[2780,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2782,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2783,"impl-QuadraticBezierSegment%3CS%3E"],[2811,"impl-From%3CSvgArc%3CS%3E%3E-for-Arc%3CS%3E"],[2813,"impl-Arc%3CS%3E"],[2814,"impl-Segment-for-Arc%3CS%3E"],[2816,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2817,"impl-CubicBezierSegment%3CS%3E"],[2819,"impl-LineSegment%3CS%3E"],[2820,"impl-Segment-for-LineSegment%3CS%3E"],[2825,"impl-QuadraticBezierSegment%3CS%3E"],[2826,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3013,"impl-Arc%3CS%3E"],[3014,"impl-Segment-for-Arc%3CS%3E"],[3015,"impl-CubicBezierSegment%3CS%3E"],[3016,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3017,"impl-Segment-for-LineSegment%3CS%3E"],[3018,"impl-LineSegment%3CS%3E"],[3019,"impl-QuadraticBezierSegment%3CS%3E"],[3020,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3037,"impl-Arc%3CS%3E"],[3038,"impl-Segment-for-Arc%3CS%3E"],[3039,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3040,"impl-CubicBezierSegment%3CS%3E"],[3041,"impl-Segment-for-LineSegment%3CS%3E"],[3042,"impl-LineSegment%3CS%3E"],[3043,"impl-QuadraticBezierSegment%3CS%3E"],[3044,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3047,"impl-Segment-for-Arc%3CS%3E"],[3048,"impl-Arc%3CS%3E"],[3049,"impl-CubicBezierSegment%3CS%3E"],[3050,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3051,"impl-Segment-for-LineSegment%3CS%3E"],[3052,"impl-LineSegment%3CS%3E"],[3053,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3054,"impl-QuadraticBezierSegment%3CS%3E"],[3062,"impl-Sum%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[3063,"impl-Sum-for-Angle%3CT%3E"],[3068,"impl-Arc%3CS%3E"],[3069,"impl-Segment-for-Arc%3CS%3E"],[3070,"impl-CubicBezierSegment%3CS%3E"],[3071,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3072,"impl-Segment-for-LineSegment%3CS%3E"],[3073,"impl-LineSegment%3CS%3E"],[3074,"impl-QuadraticBezierSegment%3CS%3E"],[3075,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3204,"impl-Segment-for-Arc%3CS%3E"],[3205,"impl-Arc%3CS%3E"],[3206,"impl-CubicBezierSegment%3CS%3E"],[3207,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3208,"impl-Segment-for-LineSegment%3CS%3E"],[3209,"impl-LineSegment%3CS%3E"],[3210,"impl-QuadraticBezierSegment%3CS%3E"],[3211,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3222,"impl-Segment-for-Arc%3CS%3E"],[3223,"impl-Arc%3CS%3E"],[3224,"impl-CubicBezierSegment%3CS%3E"],[3225,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3226,"impl-Segment-for-LineSegment%3CS%3E"],[3227,"impl-LineSegment%3CS%3E"],[3228,"impl-QuadraticBezierSegment%3CS%3E"],[3229,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3400,"impl-PartialEq-for-ArrayVec%3CT,+CAP%3E"],[3401,"impl-PartialEq%3C%5BT%5D%3E-for-ArrayVec%3CT,+CAP%3E"],[3402,"impl-PartialEq%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3403,"impl-PartialEq-for-ArrayString%3CCAP%3E"],[3418,"impl-Display-for-ArrayString%3CCAP%3E"],[3419,"impl-Debug-for-ArrayString%3CCAP%3E"],[3420,"impl-Debug-for-CapacityError%3CT%3E"],[3421,"impl-Display-for-CapacityError%3CT%3E"],[3443,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3444,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3448,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3449,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3495,"impl-IntoIterator-for-ArrayVec%3CT,+CAP%3E"],[3496,"impl-IntoIterator-for-%26ArrayVec%3CT,+CAP%3E"],[3497,"impl-IntoIterator-for-%26mut+ArrayVec%3CT,+CAP%3E"],[3510,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3511,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3515,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3516,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3529,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3530,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3573,"impl-TryFrom%3CArguments%3C\'a%3E%3E-for-ArrayString%3CCAP%3E"],[3574,"impl-TryFrom%3C%26str%3E-for-ArrayString%3CCAP%3E"],[3774,"impl-Add-for-Length%3CT,+U%3E"],[3775,"impl-Add%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[3776,"impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[3777,"impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[3778,"impl-Add%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[3779,"impl-Add%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[3782,"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[3783,"impl-Add-for-Size2D%3CT,+U%3E"],[3784,"impl-Add-for-Size3D%3CT,+U%3E"],[3785,"impl-Add%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[3788,"impl-Add-for-Vector2D%3CT,+U%3E"],[3789,"impl-Add%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[3790,"impl-Add%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[3791,"impl-Add-for-Vector3D%3CT,+U%3E"],[3793,"impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[3794,"impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[3795,"impl-AddAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[3796,"impl-AddAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[3830,"impl-ApproxEq%3CT%3E-for-Transform2D%3CT,+Src,+Dst%3E"],[3831,"impl-Transform2D%3CT,+Src,+Dst%3E"],[3832,"impl-ApproxEq%3CT%3E-for-Transform3D%3CT,+Src,+Dst%3E"],[3833,"impl-Transform3D%3CT,+Src,+Dst%3E"],[4013,"impl-Point2D%3CT,+U%3E"],[4014,"impl-Ceil-for-Point2D%3CT,+U%3E"],[4015,"impl-Ceil-for-Point3D%3CT,+U%3E"],[4016,"impl-Point3D%3CT,+U%3E"],[4017,"impl-Ceil-for-Size2D%3CT,+U%3E"],[4018,"impl-Size2D%3CT,+U%3E"],[4019,"impl-Ceil-for-Size3D%3CT,+U%3E"],[4020,"impl-Size3D%3CT,+U%3E"],[4021,"impl-Ceil-for-Vector2D%3CT,+U%3E"],[4022,"impl-Vector2D%3CT,+U%3E"],[4023,"impl-Ceil-for-Vector3D%3CT,+U%3E"],[4024,"impl-Vector3D%3CT,+U%3E"],[4199,"impl-Div%3CT%3E-for-Box2D%3CT,+U%3E"],[4200,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U2%3E"],[4201,"impl-Div%3CT%3E-for-Box3D%3CT,+U%3E"],[4202,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U2%3E"],[4203,"impl-Div%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Dst%3E"],[4204,"impl-Div%3CT%3E-for-Length%3CT,+U%3E"],[4205,"impl-Div%3CLength%3CT,+Src%3E%3E-for-Length%3CT,+Dst%3E"],[4206,"impl-Div%3CT%3E-for-Point2D%3CT,+U%3E"],[4207,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E"],[4208,"impl-Div%3CT%3E-for-Point3D%3CT,+U%3E"],[4209,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U2%3E"],[4210,"impl-Div%3CT%3E-for-Rect%3CT,+U%3E"],[4211,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U2%3E"],[4212,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U2%3E"],[4213,"impl-Div%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[4214,"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E"],[4215,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E"],[4216,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U2%3E"],[4217,"impl-Div%3CT%3E-for-Size3D%3CT,+U%3E"],[4218,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U2%3E"],[4219,"impl-Div%3CT%3E-for-Vector2D%3CT,+U%3E"],[4220,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U2%3E"],[4221,"impl-Div%3CT%3E-for-Vector3D%3CT,+U%3E"],[4222,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[4223,"impl-DivAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[4224,"impl-DivAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[4225,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[4227,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4228,"impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[4229,"impl-DivAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[4230,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4231,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[4232,"impl-DivAssign%3CT%3E-for-Rect%3CT,+U%3E"],[4233,"impl-DivAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[4234,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[4235,"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[4236,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[4237,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[4238,"impl-DivAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[4239,"impl-DivAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[4240,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[4241,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[4242,"impl-DivAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[4393,"impl-Floor-for-Point2D%3CT,+U%3E"],[4394,"impl-Point2D%3CT,+U%3E"],[4395,"impl-Floor-for-Point3D%3CT,+U%3E"],[4396,"impl-Point3D%3CT,+U%3E"],[4397,"impl-Size2D%3CT,+U%3E"],[4398,"impl-Floor-for-Size2D%3CT,+U%3E"],[4399,"impl-Size3D%3CT,+U%3E"],[4400,"impl-Floor-for-Size3D%3CT,+U%3E"],[4401,"impl-Vector2D%3CT,+U%3E"],[4402,"impl-Floor-for-Vector2D%3CT,+U%3E"],[4403,"impl-Vector3D%3CT,+U%3E"],[4404,"impl-Floor-for-Vector3D%3CT,+U%3E"],[4431,"impl-From%3CVector3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4432,"impl-From%3CPoint2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4433,"impl-From%3CVector2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4435,"impl-From%3CPoint3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4437,"impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[4438,"impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[4441,"impl-From%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[4442,"impl-From%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[4449,"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[4450,"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[4452,"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[4454,"impl-From%3CVector3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[4455,"impl-From%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[4456,"impl-From%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[4463,"impl-From%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[4464,"impl-From%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[4465,"impl-From%3CSize2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[4467,"impl-From%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[4468,"impl-From%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[4470,"impl-From%3CRotation3D%3CT,+Src,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[4472,"impl-From%3CVector3D%3CT,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[4671,"impl-Into%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[4672,"impl-Into%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[4674,"impl-Into%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[4675,"impl-Into%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[4682,"impl-Into%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[4683,"impl-Into%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[4686,"impl-Into%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[4687,"impl-Into%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[4690,"impl-Into%3CTransform2D%3CT,+Src,+Dst%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[4692,"impl-Into%3CVector2D%3CT,+Src%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[4694,"impl-Into%3CVector3D%3CT,+Src%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[4695,"impl-Into%3CTransform3D%3CT,+Src,+Dst%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[4697,"impl-Into%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[4698,"impl-Into%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[4699,"impl-Into%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[4700,"impl-Into%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[4970,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U1%3E"],[4971,"impl-Mul%3CT%3E-for-Box2D%3CT,+U%3E"],[4972,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U1%3E"],[4973,"impl-Mul%3CT%3E-for-Box3D%3CT,+U%3E"],[4974,"impl-Mul%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Src%3E"],[4975,"impl-Mul%3CT%3E-for-Length%3CT,+U%3E"],[4976,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E"],[4977,"impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E"],[4978,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U1%3E"],[4979,"impl-Mul%3CT%3E-for-Point3D%3CT,+U%3E"],[4980,"impl-Mul%3CT%3E-for-Rect%3CT,+U%3E"],[4981,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U1%3E"],[4983,"impl-Mul%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[4984,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U1%3E"],[4985,"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E"],[4986,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E"],[4987,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U1%3E"],[4988,"impl-Mul%3CT%3E-for-Size3D%3CT,+U%3E"],[4989,"impl-Mul%3CT%3E-for-Vector2D%3CT,+U%3E"],[4990,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U1%3E"],[4991,"impl-Mul%3CT%3E-for-Vector3D%3CT,+U%3E"],[4992,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U1%3E"],[4993,"impl-MulAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[4994,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[4995,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[4996,"impl-MulAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[4998,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4999,"impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[5000,"impl-MulAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[5001,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5002,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[5003,"impl-MulAssign%3CT%3E-for-Rect%3CT,+U%3E"],[5004,"impl-MulAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[5005,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[5006,"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[5007,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[5008,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[5009,"impl-MulAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[5010,"impl-MulAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[5011,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[5012,"impl-MulAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[5013,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[5125,"impl-Round-for-Point2D%3CT,+U%3E"],[5126,"impl-Point2D%3CT,+U%3E"],[5127,"impl-Point3D%3CT,+U%3E"],[5128,"impl-Round-for-Point3D%3CT,+U%3E"],[5130,"impl-Size2D%3CT,+U%3E"],[5131,"impl-Round-for-Size2D%3CT,+U%3E"],[5132,"impl-Size3D%3CT,+U%3E"],[5133,"impl-Round-for-Size3D%3CT,+U%3E"],[5134,"impl-Vector2D%3CT,+U%3E"],[5135,"impl-Round-for-Vector2D%3CT,+U%3E"],[5136,"impl-Vector3D%3CT,+U%3E"],[5137,"impl-Round-for-Vector3D%3CT,+U%3E"],[5178,"impl-Sub-for-Point2D%3CT,+U%3E"],[5179,"impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5180,"impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5181,"impl-Sub%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5182,"impl-Sub%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5183,"impl-Sub-for-Point3D%3CT,+U%3E"],[5193,"impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5194,"impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5195,"impl-SubAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5196,"impl-SubAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5204,"impl-Sum-for-Length%3CT,+U%3E"],[5205,"impl-Sum%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[5206,"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[5207,"impl-Sum-for-Size2D%3CT,+U%3E"],[5208,"impl-Sum-for-Size3D%3CT,+U%3E"],[5209,"impl-Sum%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[5210,"impl-Sum%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[5211,"impl-Sum-for-Vector2D%3CT,+U%3E"],[5212,"impl-Sum%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[5213,"impl-Sum-for-Vector3D%3CT,+U%3E"],[5384,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[5385,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5386,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[5387,"impl-Scale%3CT,+Src,+Dst%3E"],[5388,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5389,"impl-Transform2D%3CT,+Src,+Dst%3E"],[5390,"impl-Translation2D%3CT,+Src,+Dst%3E"],[5391,"impl-Transformation%3CS%3E-for-Translation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5407,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[5408,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5409,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[5410,"impl-Scale%3CT,+Src,+Dst%3E"],[5411,"impl-Transform2D%3CT,+Src,+Dst%3E"],[5412,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5718,"impl-Zero-for-Point2D%3CT,+U%3E"],[5719,"impl-Point2D%3CT,+U%3E"],[5720,"impl-Point3D%3CT,+U%3E"],[5721,"impl-Zero-for-Point3D%3CT,+U%3E"],[5724,"impl-Zero-for-Size2D%3CT,+U%3E"],[5725,"impl-Size2D%3CT,+U%3E"],[5726,"impl-Size3D%3CT,+U%3E"],[5727,"impl-Zero-for-Size3D%3CT,+U%3E"],[5728,"impl-Zero-for-Vector2D%3CT,+U%3E"],[5729,"impl-Vector2D%3CT,+U%3E"],[5730,"impl-Zero-for-Vector3D%3CT,+U%3E"],[5731,"impl-Vector3D%3CT,+U%3E"],[6194,"impl-PathBuilder-for-BuilderWithAttributes"],[6195,"impl-BuilderWithAttributes"],[6209,"impl-Build-for-BuilderWithAttributes"],[6210,"impl-BuilderWithAttributes"],[6228,"impl-BuilderWithAttributes"],[6229,"impl-PathBuilder-for-BuilderWithAttributes"],[6256,"impl-PathBuilder-for-BuilderWithAttributes"],[6257,"impl-BuilderWithAttributes"],[6338,"impl-PathBuilder-for-BuilderWithAttributes"],[6339,"impl-BuilderWithAttributes"],[6348,"impl-BuilderWithAttributes"],[6349,"impl-PathBuilder-for-BuilderWithAttributes"],[6352,"impl-PathBuilder-for-BuilderWithAttributes"],[6353,"impl-BuilderWithAttributes"],[6355,"impl-PathBuilder-for-BuilderWithAttributes"],[6356,"impl-BuilderWithAttributes"],[6438,"impl-Builder%3C\'l%3E"],[6439,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6440,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6441,"impl-BuilderWithAttributes%3C\'l%3E"],[6448,"impl-Builder%3C\'l%3E"],[6449,"impl-Build-for-Builder%3C\'l%3E"],[6450,"impl-BuilderWithAttributes%3C\'l%3E"],[6451,"impl-Build-for-BuilderWithAttributes%3C\'l%3E"],[6457,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6458,"impl-Builder%3C\'l%3E"],[6459,"impl-BuilderWithAttributes%3C\'l%3E"],[6460,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6473,"impl-Builder%3C\'l%3E"],[6474,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6475,"impl-BuilderWithAttributes%3C\'l%3E"],[6476,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6514,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6515,"impl-Builder%3C\'l%3E"],[6516,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6517,"impl-BuilderWithAttributes%3C\'l%3E"],[6523,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6524,"impl-Builder%3C\'l%3E"],[6525,"impl-BuilderWithAttributes%3C\'l%3E"],[6526,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6527,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6528,"impl-Builder%3C\'l%3E"],[6529,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6530,"impl-BuilderWithAttributes%3C\'l%3E"]]},\
"iced_runtime":{"doc":"A renderer-agnostic native GUI runtime.","t":"ETFFTEENNNNNNNNNNCNNCNNENNNNNNNNONNCNNNNNNENNNNNNNNNNNNCNNNCNNNCNCNNNNOOCNNNNNNNNNNNNNNNNNNCNNNNOCNGPPNNNNNNNNNNNNNNNNHHNNNNNNNNHHGPFPPPPPPPNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPPPGPPPPPGPFPPPPPPPPPPPPPPGGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTPGGPPTPGFPPPPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEECCRKRRMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRKRFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNGFPNNNNNNNNNNNNNNOONNNNNNNNOONNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNFPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOGPPPPPPPPPPPPPPPPPPEPPPPPNNNNNHHHHNHHHHHHHNHNNNHNNNNNNHHHEHHHCHHHHHNNNNNNNNGPFPNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNN","n":["Command","DEFAULT","Debug","Font","MONOSPACE","Program","UserInterface","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clipboard","clone","clone_into","command","components_from","components_from","core","default","default","draw_finished","draw_started","eq","equivalent","event_processing_finished","event_processing_started","family","fmt","fmt","font","from","from","from_angle","from_angle","from_stimulus","from_stimulus","futures","get_hash","hash","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","keyboard","layout_finished","layout_started","log_message","multi_window","new","null_value","null_value","overlay","overlay","program","render_finished","render_started","startup_finished","startup_started","stretch","style","system","to_owned","toggle","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","update_finished","update_started","user_interface","view_finished","view_started","vzip","vzip","weight","window","with_name","Action","Read","Write","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","fmt","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","map","read","read_primary","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","write","write_primary","Action","Clipboard","Command","Custom","Future","LoadFont","Stream","System","Widget","Window","actions","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","batch","borrow","borrow","borrow_mut","borrow_mut","channel","components_from","components_from","fmt","fmt","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","map","map","none","perform","run","single","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","widget","bytes","tagger","Black","Bold","Condensed","Cursive","Error","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Family","Fantasy","Font","Italic","Light","Medium","Monospace","Name","Normal","Normal","Normal","Oblique","SansSerif","SemiCondensed","SemiExpanded","Semibold","Serif","Stretch","Style","Thin","UltraCondensed","UltraExpanded","Weight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","family","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","load","null_value","null_value","null_value","null_value","stretch","style","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","vzip","vzip","vzip","vzip","vzip","weight","ALT","COMMAND","CTRL","Character","Event","Key","KeyPressed","KeyReleased","LOGO","Left","Location","Modifiers","ModifiersChanged","Named","Numpad","Right","SHIFT","Standard","Unidentified","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","alt","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","command","complement","components_from","components_from","components_from","components_from","contains","control","default","difference","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","insert","intersection","intersects","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_all","is_empty","iter","iter_names","key","logo","not","null_value","partial_cmp","partial_cmp","remove","set","shift","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","union","vzip","vzip","vzip","vzip","key","key","location","location","modifiers","modifiers","text","AVRInput","AVRPower","Accept","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AppSwitch","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeMute","AudioVolumeUp","Backspace","BrightnessDown","BrightnessUp","BrowserBack","BrowserFavorites","BrowserForward","BrowserHome","BrowserRefresh","BrowserSearch","BrowserStop","Call","Camera","CameraFocus","Cancel","CapsLock","ChannelDown","ChannelUp","Character","Clear","Close","ClosedCaptionToggle","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Compose","ContextMenu","Control","Convert","Copy","CrSel","Cut","DVR","Delete","Dimmer","DisplaySwap","Eisu","Eject","End","EndCall","Enter","EraseEof","Escape","ExSel","Execute","Exit","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F25","F26","F27","F28","F29","F3","F30","F31","F32","F33","F34","F35","F4","F5","F6","F7","F8","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Fn","FnLock","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Hibernate","Hiragana","HiraganaKatakana","Home","Hyper","Info","Insert","InstantReplay","JunjaMode","KanaMode","KanjiMode","Katakana","Key","Key11","Key12","LastNumberRedial","LaunchApplication1","LaunchApplication2","LaunchCalendar","LaunchContacts","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailReply","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaLast","MediaPause","MediaPlay","MediaPlayPause","MediaRecord","MediaRewind","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackPrevious","Meta","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","ModeChange","Named","Named","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","Notification","NumLock","OnDemand","Open","PageDown","PageUp","Pairing","Paste","Pause","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","PowerOff","PreviousCandidate","Print","PrintScreen","Process","Props","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RfBypass","Romaji","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","Select","Settings","Shift","SingleCandidate","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Teletext","Undo","Unidentified","VideoModeNext","VoiceDial","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","clone","clone_into","cmp","components_from","eq","equivalent","fmt","from","from_angle","from_stimulus","get_hash","hash","into","into_angle","into_color","into_color_unclamped","into_stimulus","partial_cmp","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","Program","State","program","state","Message","Program","Renderer","Theme","update","view","State","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","is_queue_empty","mouse_interaction","new","operate","program","queue_event","queue_message","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","update","vzip","Nested","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","draw","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","is_over","layout","mouse_interaction","new","on_event","operate","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","Message","Program","Renderer","State","Theme","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","components_from","from","from_angle","from_stimulus","into","into_angle","into_color","into_color_unclamped","into_stimulus","is_queue_empty","mouse_interaction","new","operate","program","queue_event","queue_message","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","update","update","view","vzip","Action","Information","QueryInformation","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","cpu_brand","cpu_cores","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","graphics_adapter","graphics_backend","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","map","memory_total","memory_used","system_kernel","system_name","system_short_version","system_version","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","Cache","Outdated","State","Updated","UserInterface","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","components_from","components_from","components_from","default","draw","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","into","into","into","into_angle","into_angle","into_angle","into_cache","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","new","null_value","operate","relayout","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","update","vzip","vzip","vzip","redraw_request","Action","ChangeIcon","ChangeLevel","ChangeMode","Close","Drag","FetchId","FetchMaximized","FetchMinimized","FetchMode","FetchPosition","FetchSize","GainFocus","Maximize","Minimize","Move","RequestUserAttention","Resize","RunWithHandle","Screenshot","Screenshot","ShowSystemMenu","Spawn","ToggleDecorations","ToggleMaximize","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","change_icon","change_level","change_mode","close","components_from","drag","fetch_id","fetch_maximized","fetch_minimized","fetch_mode","fetch_position","fetch_size","fmt","frames","from","from_angle","from_stimulus","gain_focus","into","into_angle","into_color","into_color_unclamped","into_stimulus","map","maximize","minimize","move_to","raw_window_handle","request_user_attention","resize","run_with_handle","screenshot","screenshot","show_system_menu","spawn","toggle_decorations","toggle_maximize","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","CropError","OutOfBounds","Screenshot","Zero","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_ref","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","components_from","components_from","crop","encode_hex","encode_hex_upper","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","size","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip"],"q":[[0,"iced_runtime"],[99,"iced_runtime::clipboard"],[130,"iced_runtime::command"],[197,"iced_runtime::command::Action"],[199,"iced_runtime::font"],[393,"iced_runtime::keyboard"],[581,"iced_runtime::keyboard::Event"],[588,"iced_runtime::keyboard::key"],[931,"iced_runtime::multi_window"],[935,"iced_runtime::multi_window::program"],[941,"iced_runtime::multi_window::state"],[972,"iced_runtime::overlay"],[1002,"iced_runtime::program"],[1039,"iced_runtime::system"],[1102,"iced_runtime::user_interface"],[1187,"iced_runtime::user_interface::State"],[1188,"iced_runtime::window"],[1263,"iced_runtime::window::screenshot"],[1326,"palette::chromatic_adaptation"],[1327,"core::fmt"],[1328,"core::fmt"],[1329,"core::hash"],[1330,"core::marker"],[1331,"core::hash"],[1332,"alloc::vec"],[1333,"palette::convert::try_from_into_color"],[1334,"core::any"],[1335,"core::ops::function"],[1336,"iced_futures::maybe::platform"],[1337,"core::marker"],[1338,"core::iter::traits::collect"],[1339,"core::future::future"],[1340,"futures_channel::mpsc"],[1341,"core::ops::function"],[1342,"futures_core::stream"],[1343,"iced_core::widget::operation"],[1344,"alloc::borrow"],[1345,"core::convert"],[1346,"core::cmp"],[1347,"core::cmp"],[1348,"bitflags::iter"],[1349,"iced_core::text"],[1350,"core::marker"],[1351,"iced_core::element"],[1352,"iced_core::mouse::interaction"],[1353,"iced_core::size"],[1354,"alloc::boxed"],[1355,"core::iter::traits::iterator"],[1356,"iced_core::event"],[1357,"iced_core::mouse::cursor"],[1358,"iced_core::renderer"],[1359,"iced_core::layout"],[1360,"iced_core::point"],[1361,"iced_core::layout::node"],[1362,"iced_core::rectangle"],[1363,"iced_core::overlay::element"],[1364,"iced_core::shell"],[1365,"iced_core::event"],[1366,"iced_core::window::level"],[1367,"iced_core::window::mode"],[1368,"std::time"],[1369,"iced_futures::subscription"],[1370,"iced_core::window::user_attention"],[1371,"raw_window_handle::borrowed"],[1372,"iced_core::window::settings"],[1373,"core::iter::traits::collect"]],"d":["","A non-monospaced sans-serif font with normal <code>Weight</code>.","A bunch of time measurements for debugging purposes.","A font.","A monospaced font with normal <code>Weight</code>.","","","","","","","","","","","","","Access the clipboard.","","","Run asynchronous actions.","","","","","","","","","","","","The <code>Family</code> of the <code>Font</code>.","","","Load and use fonts.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Track keyboard events.","","","","A multi-window application.","Creates a new <code>Debug</code>.","","","Overlays for user interfaces.","","Build interactive programs using The Elm Architecture.","","","","","The <code>Stretch</code> of the <code>Font</code>.","The <code>Style</code> of the <code>Font</code>.","Access the native system.","","","","","","","","","","","","","","","","","","","Implement your own event loop to drive a user interface.","","","","","The <code>Weight</code> of the <code>Font</code>.","Build window-based GUI applications.","Creates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …","A clipboard action to be performed by some <code>Command</code>.","Read the clipboard and produce <code>T</code> with the result.","Write the given contents to the clipboard.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Maps the output of a clipboard <code>Action</code> using the provided …","Read the current contents of the clipboard.","Read the current contents of the primary clipboard.","","","","","","","","","Write the given contents to the clipboard.","Write the given contents to the primary clipboard.","An action that a <code>Command</code> can perform.","Run a clipboard action.","A set of asynchronous actions to be performed by some …","A custom action supported by a specific runtime.","Run a <code>Future</code> to completion.","Load a font from its bytes.","Run a <code>Stream</code> to completion.","Run a system action.","Run a widget action.","Run a window action.","Returns all of the actions of the <code>Command</code>.","","","","","","","Creates a <code>Command</code> that performs the actions of all the …","","","","","Creates a <code>Command</code> that produces the <code>Message</code>s published …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Applies a transformation to the result of a <code>Command</code>.","Applies a transformation to the result of a <code>Command</code>.","Creates an empty <code>Command</code>.","Creates a <code>Command</code> that performs the action of the given …","Creates a <code>Command</code> that runs the given stream to completion.","Creates a <code>Command</code> that performs a single <code>Action</code>.","","","","","","","","","","","","","","","","","Creates a <code>Command</code> that performs a <code>widget::Operation</code>.","The bytes of the font to load.","The message to produce when the font has been loaded.","","","","Glyphs in cursive fonts generally use a more informal …","An error while loading a font.","","","","","","A font family.","Fantasy fonts are primarily decorative or expressive fonts …","A font.","","","","The sole criterion of a monospace font is that all glyphs …","The name of a font family of choice.","","","","","Glyphs in sans-serif fonts, as the term is used in CSS, …","","","","Serif fonts represent the formal text style for a script.","The width of some text.","The style of some text.","","","","The weight of some text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Family</code> of the <code>Font</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Load a font from its bytes.","","","","","The <code>Stretch</code> of the <code>Font</code>.","The <code>Style</code> of the <code>Font</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Weight</code> of the <code>Font</code>.","The “alt” key.","The “command” key.","The “control” key.","A key string that corresponds to the character typed by …","A keyboard event.","A key on the keyboard.","A keyboard key was pressed.","A keyboard key was released.","The “windows” key on Windows, “command” key on …","The left side of the keyboard.","The location of a key on the keyboard.","The current state of the keyboard modifiers.","The keyboard modifiers have changed.","A key with an established name.","The numpad of the keyboard.","The right side of the keyboard.","The “shift” key.","The standard group of keys on the keyboard.","An unidentified key.","","","","","Get a flags value with all known bits set.","Returns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.","","","","","","","","","Convert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","Returns true if a “command key” is pressed in the …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","Whether all set bits in a source flags value are also set …","Returns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Identify keyboard keys.","Returns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Returns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","The key pressed.","The key released.","The location of the key.","The location of the key.","The state of the modifier keys.","The state of the modifier keys.","The text produced by the key press, if any.","Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","The Accept (Commit, OK) key. Accept current option or …","Redo or repeat an action.","Initate the multi-candidate mode.","","The <code>Alt</code> (Alternative) key.","The Alternate Graphics (AltGr or AltGraph) key.","The Application switch key, which provides a list of …","Navigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)","Navigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)","Navigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)","Navigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)","The Attention (Attn) key.","Adjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)","Adjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (<code>VK_FADER_FRONT</code>)","Adjust audio fader towards rear. (<code>VK_FADER_REAR</code>)","Advance surround audio mode to next available mode. (…","Decrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)","Increase treble. (<code>APPCOMMAND_TREBLE_UP</code>)","Decrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …","Toggle between muted state and prior volume level. (…","Increase audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …","Used to remove the character to the left of the cursor. …","The Brightness Down key. Typically controls the display …","The Brightness Up key. Typically controls the display …","Navigate to previous content or page in current history. (…","Open the list of browser favorites. (…","Navigate to next content or page in current history. (…","Go to the user’s preferred home page. (…","Refresh the current page or content. (…","Call up the user’s preferred search page. (…","Stop loading the current page or content. (…","The Call key. (<code>KEYCODE_CALL</code>)","The Camera key. (<code>KEYCODE_CAMERA</code>)","The Camera focus key. (<code>KEYCODE_FOCUS</code>)","","The <code>Caps Lock</code> (Capital) key.","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","A key string that corresponds to the character typed by …","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (<code>VK_CC</code>, …","Initiate the Code Input mode to allow characters to be …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …","The Compose key, also known as “Multi_key” on the X …","Show the application’s context menu. This key is …","The <code>Control</code> or <code>Ctrl</code> key.","Convert the current input method sequence.","Copy the current selection. (<code>APPCOMMAND_COPY</code>)","The Cursor Select key.","Cut the current selection. (<code>APPCOMMAND_CUT</code>)","Select Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)","Used to delete the character to the right of the cursor. …","Adjust brightness of device, by toggling between or …","Swap video sources. (<code>VK_DISPLAY_SWAP</code>)","The Eisu key. This key may close the IME, but its purpose …","Toggle removable media to eject (open) and insert (close) …","The End key, used with keyboard entry to go to the end of …","The End Call key. (<code>KEYCODE_ENDCALL</code>)","The <code>Enter</code> or <code>↵</code> key. Used to activate current selection …","The Erase to End of Field key. This key deletes all …","The <code>Esc</code> key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","","Exit the current application. (<code>VK_EXIT</code>)","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key.","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","General-purpose function key. Usually found at the top of …","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode <code>Final</code> key used on some Asian keyboards, to …","Open the Find dialog. (<code>APPCOMMAND_FIND</code>)","The Function switch <code>Fn</code> key. Activating this key …","The Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …","The Back key. (<code>KEYCODE_BACK</code>)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (<code>VK_GUIDE</code>, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","Toggle between Hangul and English modes.","","The (Half-Width) Characters key.","The Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","The Home key, used with keyboard entry, to go to start of …","","Toggle display of information about currently selected …","Toggle between text modes for insertion or overtyping. (…","Toggle instant replay. (<code>VK_INSTANT_REPLAY</code>)","","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","The Katakana (Japanese Kana characters) key.","A key on the keyboard.","The <code>11</code> key found on media numpads that have buttons from <code>1</code> …","The <code>12</code> key found on media numpads that have buttons from <code>1</code> …","","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","The “Calendar” key. (<code>KEYCODE_CALENDAR</code>)","The “Contacts” key. (<code>KEYCODE_CONTACTS</code>)","The “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)","The “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…","","","","","","","","Launch linked content, if available and appropriate. (…","List the current program. (<code>VK_LIST</code>)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (<code>VK_LOCK</code>)","","Open an editor to forward the current message. (…","Open an editor to reply to the current message. (…","Send the current message. (<code>APPCOMMAND_SEND_MAIL</code>)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)","Close the current media, for example to close a CD or DVD …","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (<code>VK_LAST</code>, …","Pause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…","Initiate or continue media playback at normal speed, if …","Toggle media between play and pause states. (…","Initiate or resume recording of currently selected media. (…","Initiate or continue reverse playback at faster than …","Skip backward to next content or program. (…","Skip forward to next content or program. (<code>VK_SKIP</code>, …","Step backward to next content or program. (…","Step forward to next content or program. (…","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)","Seek to next media or program track. (…","Seek to previous media or program track. (…","","Toggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…","Decrease microphone volume. (…","Mute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …","Increase microphone volume. (…","Toggle between or cycle through input modes of IMEs.","A named key.","A key with an established name.","Navigate in. (<code>KEYCODE_NAVIGATE_IN</code>)","Navigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)","Navigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)","Navigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)","Open a new document or message. (<code>APPCOMMAND_NEW</code>)","","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Accept current input method sequence without conversion in …","The Notification key. (<code>KEYCODE_NOTIFICATION</code>)","The <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …","Access on-demand content or programs. (<code>VK_ON_DEMAND</code>)","Open an existing document or message. (<code>APPCOMMAND_OPEN</code>)","Scroll down or display next page of content.","Scroll up or display previous page of content.","Pairing key to pair devices. (<code>KEYCODE_PAIRING</code>)","The Paste key. (<code>APPCOMMAND_PASTE</code>)","Pause the current state or application (as appropriate).","Move picture-in-picture window down. (<code>VK_PINP_DOWN</code>)","Move picture-in-picture window. (<code>VK_PINP_MOVE</code>)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (<code>VK_PINP_UP</code>)","Play or resume the current state or application (as …","Decrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)","Reset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)","Increase media playback speed. (<code>VK_PLAY_SPEED_UP</code>)","Toggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …","The <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.","","Print the current document or message. (<code>APPCOMMAND_PRINT</code>)","Initiate print-screen function.","","The properties (Props) key.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (<code>APPCOMMAND_REDO</code>)","Toggle RF (radio frequency) input bypass mode (pass RF …","The Roman characters function key.","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (<code>APPCOMMAND_SAVE</code>)","Toggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)","Advance display screen mode to next available mode. (…","Toggle between scrolling and cursor movement modes.","","Toggle display of device settings screen. (<code>VK_SETTINGS</code>, …","Used to enable shift modifier function for interpreting …","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","Used in text to insert a space between words. Usually …","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)","Used to enable “super” modifier function for …","The Symbol modifier key (used on some virtual keyboards).","","Switch to viewing TV. (<code>KEYCODE_TV</code>)","TV 3D Mode. (<code>KEYCODE_3D_MODE</code>)","Toggle between antenna and cable input. (…","Audio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)","Contents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)","Switch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)","Switch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…","Switch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…","Switch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…","Switch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…","Switch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)","Switch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)","Switch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)","Switch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)","Switch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)","Media context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)","Toggle network. (<code>KEYCODE_TV_NETWORK</code>)","Number entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)","Toggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)","Radio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)","Satellite. (<code>KEYCODE_TV_SATELLITE</code>)","Broadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)","Communication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)","Toggle between available satellites. (…","Analog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)","Digital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)","Timer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)","The Horizontal Tabulation <code>Tab</code> key.","Toggle display of teletext, if available (<code>VK_TELETEXT</code>, …","Undo the last action. (<code>APPCOMMAND_UNDO</code>)","An unidentified key.","Advance video mode to next available mode. (…","","The WakeUp key. (<code>KEYCODE_WAKEUP</code>)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)","The ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)","Toggle between full-screen and scaled content, or alter …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Build interactive programs using The Elm Architecture.","The internal state of a multi-window <code>Program</code>.","The type of <strong>messages</strong> your <code>Program</code> will produce.","The core of a user interface for a multi-window …","The graphics backend to use to draw the <code>Program</code>.","The theme used to draw the <code>Program</code>.","Handles a <strong>message</strong> and updates the state of the <code>Program</code>.","Returns the widgets to display in the <code>Program</code> for the …","The execution state of a multi-window <code>Program</code>. It …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns whether the event queue of the <code>State</code> is empty or …","Returns the current <code>mouse::Interaction</code> of the <code>State</code>.","Creates a new <code>State</code> with the provided <code>Program</code>, …","Applies widget <code>Operation</code>s to the <code>State</code>.","Returns a reference to the <code>Program</code> of the <code>State</code>.","Queues an event in the <code>State</code> for processing during an …","Queues a message in the <code>State</code> for processing during an …","","","","","","","","Processes all the queued events and messages, rebuilding …","","An overlay container that displays nested overlays","","","","","","","Draws the <code>Nested</code> overlay using the associated <code>Renderer</code>.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns true if the cursor is over the <code>Nested</code> overlay.","Returns the layout <code>Node</code> of the <code>Nested</code> overlay.","Returns the current <code>mouse::Interaction</code> of the <code>Nested</code> …","Creates a nested overlay from the provided <code>overlay::Element</code>","Processes a runtime <code>Event</code>.","Applies a <code>widget::Operation</code> to the <code>Nested</code> overlay.","","","","","","","","","The type of <strong>messages</strong> your <code>Program</code> will produce.","The core of a user interface application following The Elm …","The graphics backend to use to draw the <code>Program</code>.","The execution state of a <code>Program</code>. It leverages caching, …","The theme used to draw the <code>Program</code>.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns whether the event queue of the <code>State</code> is empty or …","Returns the current <code>mouse::Interaction</code> of the <code>State</code>.","Creates a new <code>State</code> with the provided <code>Program</code>, …","Applies <code>Operation</code>s to the <code>State</code>","Returns a reference to the <code>Program</code> of the <code>State</code>.","Queues an event in the <code>State</code> for processing during an …","Queues a message in the <code>State</code> for processing during an …","","","","","","","","Handles a <strong>message</strong> and updates the state of the <code>Program</code>.","Processes all the queued events and messages, rebuilding …","Returns the widgets to display in the <code>Program</code>.","","An operation to be performed on the system.","Contains informations about the system (e.g. system name, …","Query system information and produce <code>T</code> with the result.","","","","","","","","","","","","","","","Detailed processor model information","The number of physical cores on the processor","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Model information for the active graphics adapter","Underlying graphics backend for rendering","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Maps the output of a system <code>Action</code> using the provided …","Total RAM size, in bytes","Memory used by this process, in bytes","Operating system kernel version","The operating system name","Short operating system version number","Long operating system version","","","","","","","","","","","","","","","","","","Reusable data of a specific <code>UserInterface</code>.","The <code>UserInterface</code> is outdated and needs to be rebuilt.","The resulting state after updating a <code>UserInterface</code>.","The <code>UserInterface</code> is up-to-date and can be reused without …","A set of interactive graphical elements with a specific …","","","","","","","","","","","","","","","","Builds a user interface for an <code>Element</code>.","","","","","","","Draws the <code>UserInterface</code> with the provided <code>Renderer</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Extract the <code>Cache</code> of the <code>UserInterface</code>, consuming it in the","","","","","","","","","","Creates an empty <code>Cache</code>.","","Applies a <code>widget::Operation</code> to the <code>UserInterface</code>.","Relayouts and returns a new  <code>UserInterface</code> using the …","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>UserInterface</code> by processing each provided <code>Event</code>…","","","","The <code>window::RedrawRequest</code> when a redraw should be …","An operation to be performed on some window.","Change the window <code>Icon</code>.","Change the window <code>Level</code>.","Change the <code>Mode</code> of the window.","Close the window and exits the application.","Move the window with the left mouse button until the …","Fetch the raw identifier unique to the window.","Fetch if the current window is maximized or not.","Fetch if the current window is minimized or not.","Fetch the current <code>Mode</code> of the window.","Fetch the current logical coordinates of the window.","Fetch the current logical dimensions of the window.","Bring the window to the front and sets input focus. Has no …","Set the window to maximized or back","Set the window to minimized or back","Move the window to the given logical coordinates.","Request user attention to the window, this has no effect …","Resize the window to the given logical dimensions.","Runs the closure with the native window handle of the …","","Screenshot the viewport of the window.","Show the system menu at cursor position.","Spawns a new window with some <code>Settings</code>.","Toggle whether window has decorations.","Toggle the window to maximized or back","","","","","","Changes the <code>Icon</code> of the window.","Changes the window <code>Level</code>.","Changes the <code>Mode</code> of the window.","Closes the window with <code>id</code>.","","Begins dragging the window while the left mouse button is …","Fetches an identifier unique to the window, provided by …","Fetches if the window is maximized.","Fetches if the window is minimized.","Fetches the current <code>Mode</code> of the window.","Fetches the current window position in logical coordinates.","Fetches the window’s size in logical dimensions.","","Subscribes to the frames of the window of the running …","Returns the argument unchanged.","","","Brings the window to the front and sets input focus. Has …","Calls <code>U::from(self)</code>.","","","","","Maps the output of a window <code>Action</code> using the provided …","Maximizes the window.","Minimizes the window.","Moves the window to the given logical coordinates.","","Request user attention to the window. This has no effect …","Resizes the window to the given logical dimensions.","Runs the given callback with the native window handle for …","Take screenshots of a window.","Captures a <code>Screenshot</code> from the window.","Show the system menu at cursor position.","Spawns a new window with the given <code>settings</code>.","Toggles the window decorations.","Toggles the window to maximized or back.","","","","","","","","","Errors that can occur when cropping a <code>Screenshot</code>.","The cropped region’s size is out of bounds.","Data of a screenshot, captured with <code>window::screenshot()</code>.","The cropped region’s size is zero.","","","","","","","","","","","","The bytes of the <code>Screenshot</code>.","","","","","Crops a <code>Screenshot</code> to the provided <code>region</code>. This will …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>Screenshot</code>.","The size of the <code>Screenshot</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,2,0,0,2,0,0,4,2,4,2,4,2,4,2,4,2,0,2,2,0,4,2,0,4,2,4,4,2,2,4,4,2,4,2,0,4,2,4,2,4,2,0,2,2,4,2,4,2,4,2,4,2,4,2,0,4,4,4,0,4,4,2,0,4,0,4,4,4,4,2,2,0,2,4,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,4,0,4,4,4,2,2,0,2,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,21,21,21,21,21,21,21,21,0,0,0,28,0,28,28,28,28,28,28,28,26,28,26,28,26,28,26,26,28,26,28,26,0,28,26,28,26,28,26,26,28,26,28,26,28,26,28,26,28,26,28,26,28,26,28,26,26,26,26,26,28,26,28,26,28,26,28,26,28,26,28,26,28,26,28,26,26,106,106,40,40,41,39,0,41,40,41,41,40,0,39,0,42,40,40,39,39,40,41,42,42,39,41,41,40,39,0,0,40,41,41,0,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,39,40,41,42,38,39,40,41,42,38,39,40,41,42,2,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,39,40,41,42,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,0,39,40,41,42,2,2,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,2,47,47,47,48,0,0,50,50,47,51,0,0,50,48,51,51,47,51,48,48,50,51,47,47,47,48,50,51,47,48,50,51,47,48,47,47,47,47,47,47,47,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,48,47,47,47,48,50,51,47,47,47,47,47,47,48,50,51,47,48,50,51,47,47,48,50,51,47,47,47,47,47,48,50,51,47,48,50,51,47,47,47,47,47,47,47,48,50,51,47,48,47,48,47,47,47,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,47,48,50,51,47,47,47,47,47,0,47,47,47,48,47,47,47,47,47,47,47,48,50,51,47,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,48,50,51,47,47,48,50,51,47,107,108,107,108,107,108,107,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,48,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,48,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,48,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,0,0,62,0,62,62,62,62,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,69,0,69,0,69,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,69,86,69,86,0,0,88,88,87,88,87,88,87,88,87,88,87,87,87,88,87,87,87,88,87,88,87,88,87,88,87,87,87,88,87,88,87,88,87,88,87,88,87,88,87,87,87,87,87,87,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,88,87,0,91,0,91,0,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,91,91,90,89,91,89,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,90,89,91,90,89,91,90,89,91,89,89,90,90,91,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,89,91,90,90,89,91,109,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,0,0,0,0,95,0,0,0,0,0,0,0,95,0,95,95,95,0,95,95,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,95,95,95,95,0,102,0,102,100,102,100,102,100,102,100,100,102,100,102,100,100,100,100,102,100,100,100,100,102,102,100,102,100,102,100,102,100,102,100,102,100,102,100,102,100,102,100,100,100,102,102,100,102,100,102,100,102,100,102,100,102,100,102,100,102,100,102],"f":[0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[[-1,-2],3,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],4],[[],2],[4,3],[4,3],[[2,2],5],[[-1,-2],5,[],[]],[4,3],[4,3],0,[[4,6],7],[[2,6],[[9,[3,8]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2],10,[11,12],13],[[2,-1],3,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,3],[4,3],[[4,-1],3,15],0,[[],4],[[],-1,[]],[[],-1,[]],0,[4,[[17,[16]]]],0,[4,3],[4,3],[4,3],[4,3],0,0,0,[-1,-2,[],[]],[4,3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,3],[4,3],0,[4,3],[4,3],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[20,2],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]],6],7,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]],-3],[[21,[-2]]],[],[],[[23,[-1],[[22,[-2]]]],24,25]],[-2,[[26,[-1]]],[],[[23,[[27,[16]]],[[22,[-1]]]]]],[-2,[[26,[-1]]],[],[[23,[[27,[16]]],[[22,[-1]]]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[26,[-1]]],[]],[16,[[26,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,[[[26,[-1]]],[[17,[[28,[-1]]]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[26,[-1]]],[],[[30,[],[[29,[[26,[-1]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,-3],[[26,[-1]]],24,[[32,[],[[22,[3]]]],24],[[34,[[33,[-1]]],[[22,[-2]]]],24]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]],6],7,[]],[[[26,[-1]],6],7,[]],[-1,-1,[]],[-1,-1,[]],[3,[[26,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]],-3],[[28,[-2]]],[],[],[[23,[-1],[[22,[-2]]]],24,25]],[[[26,[-1]],-3],[[26,[-2]]],[],[],[[23,[-1],[[22,[-2]]]],24,25,35]],[[],[[26,[-1]]],[]],[[-2,-4],[[26,[-3]]],[],[[32,[],[[22,[-1]]]],24],[],[[34,[-1],[[22,[-3]]]],24]],[[-2,-4],[[26,[-3]]],[],[[36,[],[[29,[-1]]]],24],[],[[23,[-1],[[22,[-3]]]],24]],[[[28,[-1]]],[[26,[-1]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[26,[-1]]],[],[[37,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[39,39],[40,40],[41,41],[42,42],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],39],[[],40],[[],41],[[],42],[[38,38],5],[[39,39],5],[[40,40],5],[[41,41],5],[[42,42],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[38,6],7],[[39,6],[[9,[3,8]]]],[[40,6],[[9,[3,8]]]],[[41,6],[[9,[3,8]]]],[[42,6],[[9,[3,8]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],10,[11,12],13],[[-1,-2],10,[11,12],13],[[-1,-2],10,[11,12],13],[[-1,-2],10,[11,12],13],[[39,-1],3,14],[[40,-1],3,14],[[41,-1],3,14],[[42,-1],3,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[[9,[3,38]]]]],[[46,[[45,[[44,[43]]]]]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[],47],[47,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,[[48,[20]]]],[[47,47],47],[[47,47],3],[[47,47],47],[[47,47],3],[47,49],[47,49],[[47,47],47],[[47,47],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],[[48,[-1]]],35],[50,50],[51,51],[47,47],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[48,[-1]],[48,[-1]]],52,53],[[47,47],52],[47,5],[47,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,47],5],[47,5],[[],47],[[47,47],47],[[],47],[[[48,[-1]],[48,[-1]]],5,54],[[50,50],5],[[51,51],5],[[47,47],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[47,-1],3,[[30,[],[[29,[47]]]]]],[[[48,[-1]],6],[[9,[3,8]]],15],[[50,6],[[9,[3,8]]]],[[51,6],[[9,[3,8]]]],[[47,6],[[9,[3,8]]]],[[47,6],[[9,[3,8]]]],[[47,6],[[9,[3,8]]]],[[47,6],[[9,[3,8]]]],[[47,6],[[9,[3,8]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,[[27,[47]]]],[49,47],[49,47],[49,47],[-1,47,[[30,[],[[29,[47]]]]]],[20,[[27,[47]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],10,[11,12],13],[[-1,-2],10,[11,12],13],[[[48,[-1]],-2],3,11,14],[[47,-1],3,14],[[47,47],3],[[47,47],47],[[47,47],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,5],[47,5],[47,[[55,[47]]]],[47,[[56,[47]]]],0,[47,5],[47,47],[[],-1,[]],[[[48,[-1]],[48,[-1]]],[[27,[52]]],57],[[47,47],[[27,[52]]]],[[47,47],3],[[47,47,5],3],[47,5],[[47,47],47],[[47,47],3],[[47,47],47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,47],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,47],47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[-1,-2],3,[],[]],[[58,58],52],[-1,-2,[],[]],[[58,58],5],[[-1,-2],5,[],[]],[[58,6],[[9,[3,8]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],10,[11,12],13],[[58,-1],3,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,58],[[27,[52]]]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[62,[],[[59,[-1]],[60,[-2]],[61,[-3]]]],-2],[[26,[-2]]],[63,64],[15,65],[]],[[[62,[],[[59,[-1]],[60,[-2]],[61,[-3]]]],66],[[67,[-2,-3,-1]]],[63,64],[15,65],[]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[68,[-1]]],5,69],[[[68,[-1]]],70,69],[[-1,71,4],[[68,[-1]]],69],[[[68,[-1]],-2,71,4],3,69,[[73,[],[[29,[[72,[37]]]]]]]],[[[68,[-1]]],-1,69],[[[68,[-1]],74],3,69],[[[68,[-1]]],3,69],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[68,[-1]],71,75,76,77,4],[[3,[[17,[74]],[27,[26]]]]],69],[-1,-2,[],[]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1,-2,-3]],-3,-2,76,79,75],3,[],[],63],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1,-2,-3]],79,-3,80],5,[],[],63],[[[78,[-1,-2,-3]],-3,71],81,[],[],63],[[[78,[-1,-2,-3]],79,75,82,-3],70,[],[],63],[[[83,[-1,-2,-3]]],[[78,[-1,-2,-3]]],[],[],63],[[[78,[-1,-2,-3]],74,79,75,-3,77,[84,[-1]]],85,[],[],63],[[[78,[-1,-2,-3]],79,-3,37],3,[],[],63],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[86,[-1]]],5,69],[[[86,[-1]]],70,69],[[-1,71,4],[[86,[-1]]],69],[[[86,[-1]],-2,71,4],3,69,[[73,[],[[29,[[72,[37]]]]]]]],[[[86,[-1]]],-1,69],[[[86,[-1]],74],3,69],[[[86,[-1]]],3,69],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[69,[],[[59,[-1]],[61,[-2]],[60,[-3]]]],-3],[[26,[-3]]],64,[],[15,65]],[[[86,[-1]],71,75,76,77,4],[[3,[[17,[74]],[27,[26]]]]],69],[[[69,[],[[59,[-1]],[61,[-2]],[60,[-3]]]]],[[67,[-3,-2,-1]]],64,[],[15,65]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[88,[-1]],6],7,[]],[[87,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[88,[-1]],-3],[[88,[-2]]],[],[],[[23,[-1],[[22,[-2]]]],24,25]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-4,71,89,-3],[[90,[-1,-2,-3]]],[],[],63,[[46,[[67,[-1,-2,-3]]]]]],[91,91],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],89],[[[90,[-1,-2,-3]],-3,-2,76,75],70,[],[],63],[[89,6],7],[[91,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[90,[-1,-2,-3]]],89,[],[],63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],89],[[],-1,[]],[[[90,[-1,-2,-3]],-3,37],3,[],[],63],[[[90,[-1,-2,-3]],71,-3],[[90,[-1,-2,-3]]],[],[],63],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[90,[-1,-2,-3]],[44,[74]],75,-3,77,[17,[-1]]],[[3,[91,[17,[85]]]]],[],[],63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[66,92],[[26,[-1]]],[]],[[66,93],[[26,[-1]]],[]],[[66,94],[[26,[-1]]],[]],[66,[[26,[-1]]],[]],[-1,-2,[],[]],[66,[[26,[-1]]],[]],[[66,-2],[[26,[-1]]],[],[[34,[10],[[22,[-1]]]]]],[[66,-2],[[26,[-1]]],[],[[34,[5],[[22,[-1]]]]]],[[66,-2],[[26,[-1]]],[],[[34,[[27,[5]]],[[22,[-1]]]]]],[[66,-2],[[26,[-1]]],[],[[34,[94],[[22,[-1]]]]]],[[66,-2],[[26,[-1]]],[],[[34,[[27,[80]]],[[22,[-1]]]]]],[[66,-2],[[26,[-1]]],[],[[34,[71],[[22,[-1]]]]]],[[[95,[-1]],6],7,[]],[[],[[97,[96]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[66,[[26,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[-1]],-3],[[95,[-2]]],[],[],[[23,[-1],[[22,[-2]]]],24,25]],[[66,5],[[26,[-1]]],[]],[[66,5],[[26,[-1]]],[]],[[66,80],[[26,[-1]]],[]],0,[[66,[27,[98]]],[[26,[-1]]],[]],[[66,71],[[26,[-1]]],[]],[[66,-2],[[26,[-1]]],[],[[34,[99],[[22,[-1]]]]]],0,[[66,-2],[[26,[-1]]],[],[[34,[100],[[22,[-1]]]],65]],[66,[[26,[-1]]],[]],[101,[[3,[66,[26,[-1]]]]],[]],[66,[[26,[-1]]],[]],[66,[[26,[-1]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,[[44,[43]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[100,100],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[100,[82,[49]]],[[9,[100,102]]]],[-1,-2,[],[[104,[103]]]],[-1,-2,[],[[104,[103]]]],[[100,6],7],[[102,6],7],[[102,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[43]],[71,[49]]],100],0,[-1,-2,[],[]],[-1,105,[]],[-1,16,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,[[9,[-2,[18,[-2]]]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[10,"TransformMatrix",1326],[5,"Font",0],[1,"tuple"],[5,"Debug",0],[1,"bool"],[5,"Formatter",1327],[8,"Result",1327],[5,"Error",1327],[6,"Result",1328],[1,"u64"],[10,"Hash",1329],[10,"Sized",1330],[10,"BuildHasher",1329],[10,"Hasher",1329],[10,"Debug",1327],[5,"String",1331],[5,"Vec",1332],[5,"OutOfBounds",1333],[5,"TypeId",1334],[1,"str"],[6,"Action",99],[17,"Output"],[10,"Fn",1335],[10,"MaybeSend",1336],[10,"Sync",1330],[5,"Command",130],[6,"Option",1337],[6,"Action",130],[17,"Item"],[10,"IntoIterator",1338],[1,"usize"],[10,"Future",1339],[5,"Sender",1340],[10,"FnOnce",1335],[10,"Clone",1341],[10,"Stream",1342],[10,"Operation",1343],[6,"Error",199],[6,"Family",199],[6,"Weight",199],[6,"Stretch",199],[6,"Style",199],[1,"u8"],[1,"slice"],[6,"Cow",1344],[10,"Into",1345],[5,"Modifiers",393],[6,"Key",393],[1,"u32"],[6,"Event",393],[6,"Location",393],[6,"Ordering",1346],[10,"Ord",1346],[10,"PartialEq",1346],[5,"Iter",1347],[5,"IterNames",1347],[10,"PartialOrd",1346],[6,"Named",588],[17,"Renderer"],[17,"Message"],[17,"Theme"],[10,"Program",935],[10,"Renderer",1348],[10,"Renderer",1349],[10,"Send",1330],[5,"Id",1350],[5,"Element",1351],[5,"State",941],[10,"Program",1002],[6,"Interaction",1352],[5,"Size",1353],[5,"Box",1354],[10,"Iterator",1355],[6,"Event",1356],[6,"Cursor",1357],[5,"Style",1348],[10,"Clipboard",1358],[5,"Nested",972],[5,"Layout",1359],[5,"Point",1360],[5,"Node",1361],[5,"Rectangle",1362],[5,"Element",1363],[5,"Shell",1364],[6,"Status",1356],[5,"State",1002],[5,"Information",1039],[6,"Action",1039],[5,"Cache",1102],[5,"UserInterface",1102],[6,"State",1102],[5,"Icon",1365],[6,"Level",1366],[6,"Mode",1367],[6,"Action",1188],[5,"Instant",1368],[5,"Subscription",1369],[6,"UserAttention",1370],[5,"WindowHandle",1371],[5,"Screenshot",1263],[5,"Settings",1372],[6,"CropError",1263],[1,"char"],[10,"FromIterator",1338],[5,"SmolStr",1373],[15,"LoadFont",197],[15,"KeyPressed",581],[15,"KeyReleased",581],[15,"Updated",1187]],"b":[[431,"impl-Modifiers"],[432,"impl-Flags-for-Modifiers"],[476,"impl-LowerHex-for-Modifiers"],[477,"impl-Octal-for-Modifiers"],[478,"impl-Binary-for-Modifiers"],[479,"impl-Debug-for-Modifiers"],[480,"impl-UpperHex-for-Modifiers"],[490,"impl-Flags-for-Modifiers"],[491,"impl-Modifiers"],[1287,"impl-Debug-for-CropError"],[1288,"impl-Display-for-CropError"]]},\
"iced_tiny_skia":{"doc":"","t":"PEFGFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNENNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNOOOOOOFPFGPNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNHNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOEECFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNHNNNNNNNNNNNNNNNNNN","n":["Fill","Geometry","Layer","Primitive","Renderer","Settings","Stroke","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clear","clone","clone","clone","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","core","damage","default","default","default_font","default_font","default_size","default_text_size","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","draw","draw_editor","draw_geometry","draw_image","draw_image","draw_mesh","draw_paragraph","draw_primitive_cache","draw_primitive_group","draw_quad","draw_svg","draw_svg","draw_text","draw_text_cache","draw_text_group","drop","drop","drop","drop","end_layer","end_transformation","eq","eq","fill_editor","fill_paragraph","fill_quad","fill_text","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","geometry","graphics","images","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layers","measure_image","measure_svg","new","new_frame","null_value","null_value","primitives","quads","reset","resize","start_layer","start_transformation","text","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","visible_bounds","vzip","vzip","vzip","vzip","window","with_bounds","paint","paint","path","path","rule","stroke","Cache","Cache","Frame","Geometry","Live","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","center","clip_bounds","clone","clone_into","components_from","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","deref_mut","draft","drop","drop","drop","fill","fill_rectangle","fill_text","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","height","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_fill_rule","into_geometry","into_paint","into_stimulus","into_stimulus","into_stimulus","into_stroke","load","new","paste","pop_transform","primitives","push_transform","rotate","scale","scale_nonuniform","size","stroke","text","to_owned","translate","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","vzip","vzip","vzip","width","with_clip","clip_bounds","primitives","text","Compositor","Surface","compositor","Compositor","Surface","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","components_from","components_from","configure_surface","create_renderer","create_surface","deref","deref","deref_mut","deref_mut","drop","drop","fetch_information","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","present","present","screenshot","screenshot","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","with_backend"],"q":[[0,"iced_tiny_skia"],[197,"iced_tiny_skia::Primitive"],[203,"iced_tiny_skia::geometry"],[332,"iced_tiny_skia::geometry::Geometry"],[335,"iced_tiny_skia::window"],[338,"iced_tiny_skia::window::compositor"],[410,"palette::chromatic_adaptation"],[411,"core::any"],[412,"iced_core::rectangle"],[413,"alloc::vec"],[414,"iced_core::pixels"],[415,"tiny_skia::pixmap"],[416,"tiny_skia::mask"],[417,"iced_graphics::viewport"],[418,"iced_core::color"],[419,"core::convert"],[420,"iced_graphics::text::editor"],[421,"iced_core::point"],[422,"iced_core::transformation"],[423,"iced_core::image"],[424,"iced_core::image"],[425,"iced_graphics::text::paragraph"],[426,"alloc::rc"],[427,"iced_core::renderer"],[428,"iced_core::background"],[429,"iced_core::svg"],[430,"core::option"],[431,"iced_core::text"],[432,"iced_graphics::text"],[433,"core::convert"],[434,"core::fmt"],[435,"alloc::boxed"],[436,"alloc::sync"],[437,"iced_core::size"],[438,"iced_core::font"],[439,"core::result"],[440,"palette::convert::try_from_into_color"],[441,"core::any"],[442,"iced_graphics::geometry::fill"],[443,"iced_graphics::geometry::text"],[444,"iced_graphics::geometry::fill"],[445,"iced_graphics::geometry::style"],[446,"tiny_skia::painter"],[447,"tiny_skia_path::stroker"],[448,"iced_core::angle"],[449,"iced_core::vector"],[450,"iced_graphics::compositor"],[451,"core::clone"],[452,"iced_graphics::compositor"]],"d":["A path filled with some paint.","","","","A <code>tiny-skia</code> graphics renderer for <code>iced</code>.","The settings of a <code>Compositor</code>.","A path stroked with some paint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default <code>Font</code> to use.","","The default size of text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the visible bounds of the <code>Primitive</code>.","","","","","","","The paint to use.","The paint to use.","The path to fill.","The path to stroke.","The fill rule to follow.","The stroke settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,0,0,0,0,0,6,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,3,5,6,7,5,6,7,5,6,7,3,0,5,5,7,3,7,3,7,5,6,7,3,5,6,7,3,3,5,3,5,3,3,5,5,5,5,5,3,5,5,5,5,6,7,3,3,3,6,7,3,3,3,3,5,5,6,7,3,5,6,7,7,3,5,6,7,3,5,6,7,3,0,0,5,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,6,7,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,3,3,3,3,3,5,7,5,5,5,5,3,3,5,5,6,7,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,5,6,7,3,6,5,6,7,3,0,5,69,70,69,70,69,70,0,46,0,0,46,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,48,47,47,47,46,47,48,46,47,48,46,47,48,48,46,47,48,48,48,48,46,47,48,46,47,48,46,47,48,46,47,48,48,46,47,48,46,47,48,46,47,48,46,47,48,48,46,47,48,46,47,48,46,47,48,0,48,0,46,47,48,0,46,48,48,48,47,48,48,48,48,48,48,47,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,48,48,71,71,71,0,0,0,0,0,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,61,61,61,65,61,65,61,65,61,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,0,0,61,0,61,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61],"f":[0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,4],[5,5],[6,6],[7,7],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[5,5],[[9,[8]]]],[[],5],[[],7],[3,-1,[]],0,[3,10],0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[[3,12,13,14,[15,[8]],16,[15,[-1]]],4,[[18,[17]]]],[[5,19,20,16,8,21],4],[[3,-1],4,[]],[[5,22,23,8,21],4],[[3,-1,23,8],4,[]],[[3,24],4],[[5,25,20,16,8,21],4],[[5,[26,[[15,[6]]]],8,21],4],[[5,[9,[6]],8,21],4],[[5,27,28,21],4],[[5,29,[30,[16]],8,21],4],[[3,29,[30,[16]],8],4],[[5,31,20,16,8,21],4],[[5,[26,[[15,[32]]]],8,21],4],[[5,[9,[32]],8,21],4],[11,4],[11,4],[11,4],[11,4],[3,4],[3,4],[[6,6],33],[[7,7],33],[[3,-1,20,16,8],4,[]],[[3,-1,20,16,8],4,[]],[[3,27,-1],4,[[34,[28]]]],[[3,31,20,16,8],4],[5,4],[[5,35],36],[[6,35],36],[[7,35],36],[[3,35],36],[-1,-1,[]],[-1,-1,[]],[37,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[39,[-1]]],[[39,[2]]],[]],[[[39,[-1]]],[[39,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[15,[5]]]],[[3,-1],[[41,[40]]],[]],[[3,29],[[41,[40]]]],[[42,10],3],[[3,41],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[5,4],[[5,8],4],[[3,8],4],[[3,21],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[8,5],0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[46,[30,[47]]],47],[48,20],0,[47,47],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[[48,8],48],[11,4],[11,4],[11,4],[[48,49,-1],4,[[34,[50]]]],[[48,20,41,-1],4,[[34,[50]]]],[[48,-1],4,[[34,[51]]]],[[46,35],36],[[47,35],36],[[48,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,52],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[39,[-1]]],[[39,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,54],[48,46],[55,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,58],[47,46],[41,48],[[48,48,20],4],[48,4],0,[48,4],[[48,-1],4,[[34,[59]]]],[[48,-1],4,[[34,[52]]]],[[48,-1],4,[[34,[60]]]],[48,41],[[48,49,-1],4,[[34,[57]]]],0,[-1,-2,[],[]],[[48,60],4],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,52],[8,48],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,-1,40,40],4,[]],[61,-1,[]],[[61,-1,40,40],-2,[62,63],[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,4],[11,4],[61,64],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[38,[-1]]],[[38,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[[[26,[-1]]],[[26,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,-1],61,62],[[3,65,14,16,[15,[-1]]],[[43,[4,66]]],[[18,[17]]]],[[61,-1,-2,14,16,[15,[-3]]],[[43,[4,66]]],[],[],[[18,[17]]]],[[3,65,14,16,[15,[-1]]],[[9,[67]]],[[18,[17]]]],[[61,-1,-2,14,16,[15,[-3]]],[[9,[67]]],[],[],[[18,[17]]]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,[[43,[-2,[44,[-2]]]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,-1,[30,[17]]],[[43,[61,68]]],62]],"c":[],"p":[[10,"TransformMatrix",410],[10,"Any",411],[5,"Renderer",0],[1,"tuple"],[5,"Layer",0],[6,"Primitive",0],[5,"Settings",0],[5,"Rectangle",412],[5,"Vec",413],[5,"Pixels",414],[1,"usize"],[5,"PixmapMut",415],[5,"Mask",416],[5,"Viewport",417],[1,"slice"],[5,"Color",418],[1,"str"],[10,"AsRef",419],[5,"Editor",420],[5,"Point",421],[5,"Transformation",422],[5,"Handle",423],[6,"FilterMethod",423],[6,"Mesh",424],[5,"Paragraph",425],[5,"Rc",426],[5,"Quad",427],[6,"Background",428],[5,"Handle",429],[6,"Option",430],[5,"Text",431],[6,"Text",432],[1,"bool"],[10,"Into",419],[5,"Formatter",433],[8,"Result",433],[5,"Settings",434],[5,"Box",435],[5,"Arc",436],[1,"u32"],[5,"Size",437],[5,"Font",438],[6,"Result",439],[5,"OutOfBounds",440],[5,"TypeId",411],[6,"Geometry",203],[5,"Cache",203],[5,"Frame",203],[5,"Path",441],[5,"Fill",442],[5,"Text",443],[1,"f32"],[6,"Rule",442],[6,"FillRule",444],[6,"Style",445],[5,"Paint",444],[5,"Stroke",446],[5,"Stroke",447],[5,"Radians",448],[5,"Vector",449],[5,"Compositor",338],[10,"Window",450],[10,"Clone",451],[5,"Information",450],[5,"Surface",338],[6,"SurfaceError",450],[1,"u8"],[6,"Error",452],[15,"Fill",197],[15,"Stroke",197],[15,"Live",332]],"b":[]},\
"iced_wgpu":{"doc":"A <code>wgpu</code> renderer for Iced.","t":"FEEEFENNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNCENNNNNNNNNNNNNCNNNNNNCCNNNNNNNNNNNNNNNNNNNNNECFPFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFINNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONNOONNNNNNNNNNIFKKFNNNNNNNNNNONNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMOMNNNNNNNNNNNNNNNNNNNFNONNONNNNNNOONNNNNNNNNNNNNNNNNONNNNNNNNNNEFNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNHNNNNNNNNNNNNNNNNNNNNNNNN","n":["Engine","Geometry","Layer","Primitive","Renderer","Settings","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clear","components_from","components_from","core","default_font","default_size","deref","deref","deref_mut","deref_mut","downcast","downcast","draw_geometry","draw_image","draw_mesh","draw_primitive","draw_svg","drop","drop","end_layer","end_transformation","fill_editor","fill_paragraph","fill_quad","fill_text","from","from","from_angle","from_angle","from_stimulus","from_stimulus","geometry","graphics","image_cache","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layer","measure_image","measure_svg","new","new","new_frame","present","primitive","settings","start_layer","start_transformation","submit","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","wgpu","window","Cache","Cached","Frame","Geometry","Live","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","center","clone","clone_into","components_from","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draft","drop","drop","drop","fill","fill_rectangle","fill_text","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","height","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_geometry","into_stimulus","into_stimulus","into_stimulus","load","meshes","new","paste","pop_transform","push_transform","rotate","scale","scale_nonuniform","size","stroke","text","to_owned","translate","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","with_clip","meshes","text","Layer","Stack","adapt_into_using","arrays_from","arrays_into","borrow","borrow_mut","bounds","components_from","default","deref","deref_mut","downcast","draw_editor","draw_image","draw_mesh","draw_mesh_cache","draw_mesh_group","draw_paragraph","draw_primitive","draw_quad","draw_svg","draw_text","draw_text_cache","draw_text_group","drop","flush","fmt","from","from_angle","from_stimulus","images","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","null_value","primitives","quads","reset","resize","text","triangles","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","with_bounds","Batch","Instance","Primitive","Renderer","Storage","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","bounds","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","draw_primitive","drop","drop","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","get","get_mut","has","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","null_value","prepare","primitive","render","store","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Settings","adapt_into_using","antialiasing","arrays_from","arrays_into","backends","borrow","borrow_mut","clone","clone_into","components_from","default","default_font","default_text_size","deref","deref_mut","downcast","drop","eq","fmt","from","from","from_angle","from_stimulus","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","null_value","present_mode","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Compositor","Surface","adapt_into_using","arrays_from","arrays_into","as_hal","borrow","borrow_mut","components_from","compositor","configure","deref","deref_mut","downcast","drop","drop","fmt","from","from_angle","from_stimulus","get_capabilities","get_current_texture","get_default_config","global_id","init","into","into_angle","into_color","into_color_unclamped","into_stimulus","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Compositor","Error","IncompatibleSurface","NoAdapterFound","RequestDeviceFailed","SurfaceCreationFailed","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","configure_surface","create_renderer","create_surface","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fetch_information","fmt","fmt","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","present","present","request","screenshot","screenshot","source","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_backend"],"q":[[0,"iced_wgpu"],[94,"iced_wgpu::geometry"],[211,"iced_wgpu::geometry::Geometry"],[213,"iced_wgpu::layer"],[268,"iced_wgpu::primitive"],[343,"iced_wgpu::settings"],[385,"iced_wgpu::window"],[424,"iced_wgpu::window::compositor"],[506,"palette::chromatic_adaptation"],[507,"iced_core::pixels"],[508,"iced_core::image"],[509,"iced_core::rectangle"],[510,"iced_graphics::mesh"],[511,"iced_core::svg"],[512,"iced_core::color"],[513,"core::option"],[514,"iced_core::point"],[515,"iced_core::renderer"],[516,"iced_core::background"],[517,"core::convert"],[518,"iced_core::text"],[519,"iced_core::size"],[520,"wgpu"],[521,"wgpu"],[522,"iced_graphics::antialiasing"],[523,"iced_core::font"],[524,"wgpu"],[525,"core::convert"],[526,"wgpu"],[527,"palette::convert::try_from_into_color"],[528,"core::any"],[529,"iced_graphics::geometry::path"],[530,"iced_graphics::geometry::fill"],[531,"iced_graphics::geometry::text"],[532,"core::fmt"],[533,"core::fmt"],[534,"iced_core::vector"],[535,"iced_graphics::geometry::stroke"],[536,"iced_graphics::text::editor"],[537,"iced_core::image"],[538,"iced_graphics::text::paragraph"],[539,"alloc::boxed"],[540,"iced_graphics::text"],[541,"core::marker"],[542,"iced_graphics::settings"],[543,"core::ops::function"],[544,"wgpu_types"],[545,"iced_graphics::compositor"],[546,"smol_str"],[547,"alloc::string"],[548,"iced_graphics::error"]],"d":["","","","","A <code>wgpu</code> graphics renderer for <code>iced</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Build and draw geometry.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Draw custom primitives.","Configure a renderer.","","","","","","","","","","","","","","","","","","","","","","","Display rendering results on windows.","","","A frame for drawing some geometry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>Frame</code> with the given <code>Size</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Frame</code> with the given clip bounds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A batch of primitives.","An instance of a specific <code>Primitive</code>.","A set of methods which allows a <code>Primitive</code> to be rendered.","A renderer than can draw custom primitives.","Stores custom, user-provided types.","","","","","","","","","","","The bounds of the <code>Instance</code>.","","","","","","","","","","Draws a custom primitive.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns a reference to the data with type <code>T</code> if it exists …","Returns a mutable reference to the data with type <code>T</code> if it …","Returns <code>true</code> if <code>Storage</code> contains a type <code>T</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>Instance</code> with the given <code>Primitive</code>.","","Processes the <code>Primitive</code>, allowing for GPU buffer …","The <code>Primitive</code> to render.","Renders the <code>Primitive</code>.","Inserts the data <code>T</code> in to <code>Storage</code>.","","","","","","","","","","","","","","","","","","","The settings of a <code>Renderer</code>.","","The antialiasing strategy that will be used for triangle …","","","The graphics backends to use.","","","","","","","The default <code>Font</code> to use.","The default size of text.","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","The present mode of the <code>Renderer</code>.","","","","","","","","","","","","Handle to a presentable surface.","","","","Returns the inner hal Surface using a callback. The hal …","","","","Connect a window with a renderer.","Initializes <code>Surface</code> for presentation.","","","","","","","Returns the argument unchanged.","","","Returns the capabilities of the surface when used with the …","Returns the next texture to be presented by the swapchain …","Return a default <code>SurfaceConfiguration</code> from width and …","Returns a globally-unique identifier for this <code>Surface</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A window graphics backend for iced powered by <code>wgpu</code>.","A compositor error.","The surface is not compatible.","No adapter was found for the options requested.","No device request succeeded.","The surface creation failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a <code>Compositor</code> with the given <code>Settings</code> and window.","Presents the given primitives with the given <code>Compositor</code>.","","Requests a new <code>Compositor</code> with the given <code>Settings</code>.","Renders the current surface to an offscreen buffer.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,18,2,18,2,18,2,18,2,18,2,2,18,2,0,2,2,18,2,18,2,18,2,2,2,2,2,2,18,2,2,2,2,2,2,2,18,2,18,2,18,2,0,0,18,18,2,18,2,18,2,18,2,18,2,18,2,0,2,2,18,2,2,2,0,0,2,2,18,18,2,18,2,18,2,18,2,18,2,18,2,18,2,18,2,18,2,0,0,0,38,0,0,38,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,38,39,40,40,39,38,40,39,38,40,39,38,40,39,38,40,39,39,38,40,39,39,39,38,40,39,38,40,39,38,40,39,38,40,39,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,39,38,40,38,40,39,39,39,39,39,39,39,39,39,40,40,39,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,38,40,39,39,84,84,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,59,57,59,57,59,57,59,57,59,57,59,59,57,57,59,57,59,57,59,57,58,59,57,59,57,59,57,59,57,59,57,57,57,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,9,59,9,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,64,64,64,64,64,64,64,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,73,73,73,73,74,73,74,73,74,73,74,73,74,73,73,73,74,73,74,74,74,74,73,74,73,74,73,74,73,74,73,73,74,73,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,0,0,74,74,0,74,73,73,73,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74],"f":[0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,3],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,4],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,-1],3,[]],[[2,-1,6,7],3,[]],[[2,8],3],[[2,7,-1],3,9],[[2,10,[12,[11]],7],3],[5,3],[5,3],[2,3],[2,3],[[2,-1,13,11,7],3,[]],[[2,-1,13,11,7],3,[]],[[2,14,-1],3,[[16,[15]]]],[[2,17,13,11,7],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[2,-1],[[20,[19]]],[]],[[2,10],[[20,[19]]]],[[21,22,23,24,[12,[25]]],18],[[18,26,4],2],[[2,20],-1,[]],[[2,18,22,23,27,[12,[11]],24,28,29,[30,[-1]]],3,[[32,[31]]]],0,0,[[2,7],3],[[2,33],3],[[18,23,27],34],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,[12,[-1]]],-1,[]],[39,13],[40,40],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[39,7],39],[5,3],[5,3],[5,3],[[39,41,-1],3,[[16,[42]]]],[[39,13,20,-1],3,[[16,[42]]]],[[39,-1],3,[[16,[43]]]],[[38,44],45],[[40,44],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,46],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,38,[]],0,[20,39],[[39,39,13],3],[39,3],[39,3],[[39,-1],3,[[16,[47]]]],[[39,-1],3,[[16,[46]]]],[[39,-1],3,[[16,[48]]]],[39,20],[[39,41,-1],3,[[16,[49]]]],0,[-1,-2,[],[]],[[39,48],3],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,46],[7,39],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[[],50],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[[50,51,13,11,7,33],3],[[50,52,6,7,33],3],[[50,8,33],3],0,[[50,[53,[8]],33],3],[[50,54,13,11,7,33],3],[[50,7,[55,[9]],33],3],[[50,14,15,33],3],[[50,10,[12,[11]],7,33],3],[[50,17,13,11,7,33],3],0,[[50,[53,[56]],33],3],[5,3],[50,3],[[50,44],45],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,[50,3],[[50,7],3],0,0,[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[7,50],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],57],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,7,-1],3,9],[5,3],[5,3],[[59,44],45],[[57,44],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,[[12,[-1]]],[]],[57,[[12,[-1]]],[]],[57,60],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,-1],59,9],[[],-1,[]],[[9,22,23,24,57,7,29],3],0,[[9,27,57,28,[7,[19]]],3],[[57,-1],3,61],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[62,62],[[-1,-2],3,[],[]],[-1,-2,[],[]],[[],62],0,0,[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[5,3],[[62,62],60],[[62,44],45],[-1,-1,[]],[63,62],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[64,-2],[[12,[-1]]],[],[[66,[12],[[65,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[64,22,[67,[[53,[24]]]]],3],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[5,3],[64,3],[[64,44],[[35,[3,68]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[64,21],69],[64,[[35,[70,71]]]],[[64,21,19,19],[[12,[[67,[[53,[24]]]]]]]],[64,[[72,[64]]]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[[-1,-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[74,-1,19,19],3,[]],[74,-1,[]],[[74,-1,19,19],-2,75,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,3],[5,3],[74,76],[[73,44],45],[[73,44],45],[-1,-1,[]],[-1,-1,[]],[77,73],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,-1],[[35,[74,73]]],75],[[74,2,64,29,11,[30,[-1]]],[[35,[3,78]]],[[32,[31]]]],[[74,-1,-2,29,11,[30,[-3]]],[[35,[3,78]]],[],[],[[32,[31]]]],[[62,[12,[-1]]],[[35,[74,73]]],75],[[74,2,29,11,[30,[-1]]],[[53,[79]]],[[32,[31]]]],[[74,-1,-2,29,11,[30,[-3]]],[[53,[79]]],[],[],[[32,[31]]]],[73,[[12,[80]]]],[-1,-2,[],[]],[-1,81,[]],[-1,82,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,[[35,[-2,[36,[-2]]]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[63,-1,[12,[31]]],[[35,[74,83]]],75]],"c":[],"p":[[10,"TransformMatrix",506],[5,"Renderer",0],[1,"tuple"],[5,"Pixels",507],[1,"usize"],[6,"FilterMethod",508],[5,"Rectangle",509],[6,"Mesh",510],[10,"Primitive",268],[5,"Handle",511],[5,"Color",512],[6,"Option",513],[5,"Point",514],[5,"Quad",515],[6,"Background",516],[10,"Into",517],[5,"Text",518],[5,"Engine",0],[1,"u32"],[5,"Size",519],[5,"Adapter",520],[5,"Device",520],[5,"Queue",520],[6,"TextureFormat",521],[6,"Antialiasing",522],[5,"Font",523],[5,"CommandEncoder",520],[5,"TextureView",520],[5,"Viewport",524],[1,"slice"],[1,"str"],[10,"AsRef",517],[5,"Transformation",525],[5,"SubmissionIndex",520],[6,"Result",526],[5,"OutOfBounds",527],[5,"TypeId",528],[6,"Geometry",94],[5,"Frame",94],[5,"Cache",94],[5,"Path",529],[5,"Fill",530],[5,"Text",531],[5,"Formatter",532],[8,"Result",532],[1,"f32"],[5,"Radians",533],[5,"Vector",534],[5,"Stroke",535],[5,"Layer",213],[5,"Editor",536],[5,"Handle",508],[5,"Vec",537],[5,"Paragraph",538],[5,"Box",539],[6,"Text",540],[5,"Storage",268],[10,"Renderer",268],[5,"Instance",268],[1,"bool"],[10,"Send",541],[5,"Settings",343],[5,"Settings",542],[5,"Surface",385],[17,"Output"],[10,"FnOnce",543],[5,"SurfaceConfiguration",521],[5,"Error",532],[5,"SurfaceCapabilities",521],[5,"SurfaceTexture",520],[6,"SurfaceError",520],[5,"Id",520],[6,"Error",424],[5,"Compositor",424],[10,"Window",544],[5,"Information",544],[5,"CreateSurfaceError",520],[6,"SurfaceError",544],[1,"u8"],[10,"Error",545],[5,"SmolStr",546],[5,"String",547],[6,"Error",548],[15,"Live",211]],"b":[[456,"impl-Debug-for-Error"],[457,"impl-Display-for-Error"]]},\
"iced_widget":{"doc":"Use the built-in widgets or create your own.","t":"TEEPPPPEEEKEPPPRPPPEPPPFPPEPPPEEPEEEIFEEEPEEPPEEREEEEGEEPPPEENNNNNNNNNNNNNNNNNNNNNCHCHCHNNNHQQCHHNNNCHENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNEHHHCHNNNNNNNNNNNNNNNNNNNNNNNNNCHQNNHHNNNNNNNHNNNNCNNNCCHCHCHCHEHHQQCECHCHNNNNNCHHQQNNNNNNNNNNNNNNNNNNNCHNNCHCHCHCHNNNCHCHNNNNNNNNNNNNNNNNNNNNNNNNMHHCHHMNNNPFKRPPPGFINNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHONNMNHNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPIFEFIIGPGFGPPFKPPPPRFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNCCNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNONNCONNOOONONCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNPGPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNGFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOONNNNNNNNNNNNNNNNNNNNFFFNNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNFFNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNOOOOONNNNNNNNNNFIFKIPPPPPFPPPPPPFPGFGTTTIFPPPGGPPSPPPFFFFFIFFKKPPPPPPPGPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNCNNNNNNNNNNMNNNNNNCCNNOOCMNNNNONNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFKFFKRKFFNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOMNNNNNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNMNNNNNNNNNMNNNNNNMMNNNNNNMNMNMNMNMNMNMNNNNNNNNNNNNMNMNMNMNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFIFTTTTTTFFFTTTTIFITTKRIKIFTTTIIFITNONNNNNNNNNNNNNNMNNNNNNNNONNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOONONNNNNNNNNNNNNHONNCNNNOOOMNNNNNNNNNNNNNNHNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNONNNNOONMNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMHONNNNNNNNNNNONNNNNNNNNOOONNNNOONNNNNNNNNOOONNNNNFFFFNNNNNNNONNNNNONONNNNNNNNNNNNONOOOOOONNNNNNNNNOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNOONNNNNONNNNNNNNNNNNNNONNNNNNNNNFFFFFFFFFFFFFFFFFFFFFKFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNCNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNOONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNONNNNNNNNNNNNHHNNNNNNNNNNNONOMHNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNOOOOOOOOONNNNNNNNNNNOOOOOOOOONNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNKMNMHHIIIIIIIIIIIIIIIIIIIIOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKKKKMMMMMFFFFNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNRKKMMMMNNMMMMMMMMMNNHHHHHHFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIIIIIIIIOOOOOOOOOOHOHHOOOOOOOIFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKKRKNNNNNNNNMMMMNMMMNNNMMMMMNMMMMMMMMMNNMMMMNNMNPPPGFGPPPPPFGOOOOOOOPKFRPPFGFINNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNONNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNHHONNONNMNHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRFFFINNNNNNNNNNNNNNNNNOOHNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNHONNMNNONNHNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNGFFPPENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNECFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCKRFFFINNNNNNNNNNNNNNNOONNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPKPRGFGGPGKPGPPFPPPFPGFPPPFPGFPPFPPEFIGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOGPPFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPKRPGPFPPFPGFINNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNONNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOONONMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKRTFFINNNNNNNNNNOOONNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNMNHNNNNNNNNNNNNNNNNNNNNKRFPGGPPPPPPPPFPFIPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKRTTPFGFINNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNHMNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPKRGPPPFFINNNNNNNNNNNNNNNNNNNNNNNNNNONNNHMNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFPGPKRGPTPPPFFFTFFFPGFIPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNHNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOOOOOGPPKRKPFRFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNPKPRTPFGPFPFGFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOKRFPPGFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPKRIKGPPGFFIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNHNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPKRPFPPPPPPGPPPPPPPPGPPPPPPPPPFGFIFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOPKRESPPPFFPPGFGFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNCNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNHNNNNNNNNNNNNNNONNNNNNHNNOONNOONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOTTTTPPPPFPTTPPTPTTPPTTTPPPTPTPTTPPTPFTTPPTTTGPPPNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOONNNNNNNNNNNNNNNNNNNNNNNFFJJJJJJJJJJJJJJJJJJJJJJFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPKRTPGFIFNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNHMNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPPGPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNETEEEEEFNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ALL","Button","Canvas","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Checkbox","Column","ComboBox","Component","Container","Custom","Dark","Dracula","Event","Ferra","GruvboxDark","GruvboxLight","Image","KanagawaDragon","KanagawaLotus","KanagawaWave","Lazy","Light","Moonfly","MouseArea","Nightfly","Nord","Oxocarbon","PaneGrid","PickList","Primary","ProgressBar","QRCode","Radio","Renderer","Responsive","Row","Rule","Scrollable","Secondary","Shader","Slider","SolarizedDark","SolarizedLight","Space","Stack","State","Svg","Text","TextEditor","TextInput","Theme","Themer","Toggler","TokyoNight","TokyoNightLight","TokyoNightStorm","Tooltip","VerticalSlider","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","button","button","canvas","canvas","checkbox","checkbox","children","clone","clone_into","column","column","column","combo_box","combo_box","component","components_from","components_from","components_from","container","container","core","custom","custom_with_fn","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","draw","draw","drop","drop","drop","eq","extended_palette","fmt","fmt","focus_next","focus_previous","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","graphics","horizontal_rule","horizontal_space","hover","image","image","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","keyed","keyed_column","keyed_column","layout","layout","lazy","mouse_area","mouse_interaction","mouse_interaction","new","new","null_value","on_event","on_event","opaque","operate","operate","operate","operate","overlay","overlay","overlay","palette","pane_grid","pick_list","pick_list","progress_bar","progress_bar","qr_code","qr_code","radio","radio","renderer","responsive","row","row","row","rule","runtime","scrollable","scrollable","shader","shader","size","size","size_hint","size_hint","size_hint","slider","slider","stack","stack","stack","state","state","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","svg","svg","tag","tag","text","text","text_editor","text_editor","text_input","text_input","theme","themer","to_owned","to_smolstr","to_string","toggler","toggler","tooltip","tooltip","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","update","value","vertical_rule","vertical_slider","vertical_slider","vertical_space","view","vzip","vzip","vzip","Active","Button","Catalog","Class","Disabled","Hovered","Pressed","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","class","clip","clone","clone","clone_into","clone_into","components_from","components_from","components_from","danger","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","draw","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","height","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","mouse_interaction","new","null_value","on_event","on_press","on_press_maybe","operate","overlay","padding","primary","secondary","shadow","size","state","style","style","success","tag","text","text_color","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","with_background","Bevel","Butt","Cache","Canvas","Event","Fill","Frame","Geometry","Gradient","Gradient","LineCap","LineDash","LineJoin","Linear","Miter","Path","Program","Round","Round","Solid","Square","State","Stroke","Style","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","circle","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","content","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw_with","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","event","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gradient","height","horizontal_alignment","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","line","line_cap","line_dash","line_height","line_join","mouse_interaction","mouse_interaction","mouse_interaction","new","new","null_value","null_value","null_value","null_value","null_value","null_value","offset","on_event","pack","path","position","raw","rectangle","rule","segments","shaping","size","size","state","stroke","style","style","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transform","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","vertical_alignment","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_color","with_line_cap","with_line_join","with_width","Captured","Event","Ignored","Keyboard","Mouse","Status","Touch","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","merge","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","EvenOdd","Fill","Gradient","NonZero","Rule","Solid","Style","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","rule","style","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Gradient","Linear","Linear","Packed","adapt_into_using","adapt_into_using","add_stop","add_stops","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end","eq","eq","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_valid_bit_pattern","new","pack","pack","start","stops","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Builder","Path","adapt_into_using","adapt_into_using","arc","arc","arc_to","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","bezier_curve_to","borrow","borrow","borrow_mut","borrow_mut","build","center","circle","clone","clone_into","close","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ellipse","end_angle","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","line_to","move_to","new","null_value","quadratic_curve_to","radius","rectangle","start_angle","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Arc","Elliptical","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","center","clone","clone_into","components_from","deref","deref_mut","downcast","drop","end_angle","end_angle","fmt","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","radii","radius","rotation","start_angle","start_angle","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","ArcFlags","AttributeIndex","AttributeSlice","AttributeStore","Attributes","Begin","Begin","Begin","Bevel","Butt","ControlPointId","Cubic","Cubic","Cubic","End","End","End","EndpointId","EvenOdd","Event","EventId","FillRule","INVALID","INVALID","INVALID","IdEvent","IdPolygon","Line","Line","Line","LineCap","LineJoin","Miter","MiterClip","NO_ATTRIBUTES","Negative","Negative","NonZero","Path","PathBuffer","PathBufferSlice","PathCommands","PathCommandsSlice","PathEvent","PathSlice","Polygon","Position","PositionStore","Positive","Positive","Quadratic","Quadratic","Quadratic","Round","Round","Side","Square","Winding","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_slice","as_slice","as_slice","attributes","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","builder","builder_with_attributes","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed","closed","commands","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event","event","event","events","first_endpoint","first_endpoint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_iter","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_usize","from_usize","get","get","get","get","get","get","get_control_point","get_control_point","get_control_point","get_control_point","get_endpoint","get_endpoint","get_endpoint","get_endpoint","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","id_iter","id_iter","id_iter","index","index","index","index","index","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edge","is_empty","is_empty","is_empty","is_in","is_negative","is_out","is_positive","iter","iter","iter","iter","iter","iter","iter","iter","iter_with_attributes","iter_with_attributes","iterator","large_arc","last_endpoint","last_endpoint","len","len","math","new","new","new","next_event_id_in_path","next_event_id_in_path","next_event_id_in_sub_path","next_event_id_in_sub_path","null_value","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","offset","offset","opposite","path","path_buffer","path_events","path_slice","points","points","polygon","position","reserve","reversed","reversed","svg_builder","sweep","to","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_usize","to_usize","to_usize","traits","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_attributes","with_capacity","with_points","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","BorderRadii","Build","Flattened","NoAttributes","PathBuilder","PathType","SvgPathBuilder","Transformed","WithSvg","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_circle","add_circle","add_ellipse","add_ellipse","add_line_segment","add_line_segment","add_point","add_point","add_polygon","add_polygon","add_polygon","add_rectangle","add_rectangle","add_rounded_rectangle","add_rounded_rectangle","arc","arc_to","arc_to","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","build","build","build","build","build","build","build","build","clone","clone","clone_into","clone_into","close","close","close","close","close","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","current_position","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","end","end","end","end","eq","eq","event","extend_from_paths","flattened","flattened","flattened","fmt","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","horizontal_line_to","horizontal_line_to","init","init","init","init","init","inner","inner_mut","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","line_to","line_to","line_to","line_to","move_to","move_to","move_to","new","new","new","new","new","null_value","null_value","num_attributes","num_attributes","num_attributes","num_attributes","partial_cmp","path_event","path_event","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_arc_to","relative_cubic_bezier_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_horizontal_line_to","relative_line_to","relative_line_to","relative_move_to","relative_move_to","relative_quadratic_bezier_to","relative_quadratic_bezier_to","relative_vertical_line_to","relative_vertical_line_to","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","set_tolerance","set_transform","set_transform","smooth_cubic_bezier_to","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","smooth_relative_quadratic_bezier_to","to_owned","to_owned","to_smolstr","to_string","top_left","top_right","transformed","transformed","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vertical_line_to","vertical_line_to","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","with_svg","wrap","CommandsPathSlice","Events","Iter","PathCommands","PathCommandsBuilder","PathCommandsSlice","PointEvents","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","end","events","fmt","fmt","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_control_point","get_endpoint","index","index","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","iter","line_to","new","next","next","next","null_value","points","quadratic_bezier_to","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","with_capacity","Angle","Arc","ArcFlags","Box2D","CubicBezierSegment","DIV_EPSILON","EIGHT","EPSILON","FIVE","FOUR","HALF","Line","LineEquation","LineSegment","MAX","MIN","NINE","ONE","Point","QuadraticBezierSegment","Rotation","SEVEN","SIX","Scalar","Scalar","Scale","Segment","Size","SvgArc","TEN","THREE","TWO","Transform","Translation","Triangle","Vector","ZERO","a","a","ab","ac","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add_assign","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","after_split","angle","angle_to","approx_epsilon","approx_eq_eps","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","arc","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","b","b","ba","baseline","baseline","bc","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","before_split","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_x","bounding_range_y","bounding_range_y","bounding_range_y","bounding_range_y","bounding_triangle","c","c","ca","cast","cb","center","circle","clipped","clipped_x","clipped_y","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_point","closest_point","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains_point","contains_segment","ctrl","ctrl1","ctrl2","cubic_bezier","cubic_intersections","cubic_intersections_t","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivative","derivative","derivative","derivative","derivative","derivative","derivative","distance_to_point","distance_to_point","distance_to_point","distance_to_point","div","div","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drag","drag_with_weight","drop","drop","drop","drop","drop","drop","drop","drop","drop","dx","dx","dx","dx","dx","dx","dy","dy","dy","dy","dy","dy","end_angle","epsilon_for","eq","eq","eq","eq","eq","eq","eq","eq","equation","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fast_bounding_box","fast_bounding_box","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_x","fast_bounding_range_y","fast_bounding_range_y","fast_bounding_range_y","fat_line","fat_line","flags","flattened","flattened","flattened","flattened_t","flattening_step","flip","flip","flip","flip","flip","flip","flip","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_cubic_bezier","for_each_cubic_bezier","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_inflection_t","for_each_local_x_extremum_t","for_each_local_x_extremum_t","for_each_local_y_extremum_t","for_each_local_y_extremum_t","for_each_monotonic","for_each_monotonic","for_each_monotonic_range","for_each_monotonic_range","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","for_each_x_monotonic","for_each_x_monotonic","for_each_x_monotonic_range","for_each_x_monotonic_range","for_each_y_monotonic","for_each_y_monotonic","for_each_y_monotonic_range","for_each_y_monotonic_range","frac_pi_2","frac_pi_3","frac_pi_4","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_svg_arc","get","get_angle","get_hash","hash","height","horizontal_line_intersection","horizontal_line_intersection_t","init","init","init","init","init","init","init","init","init","intersection","intersection","intersection_t","intersects","intersects","intersects_box","intersects_line","intersects_line_segment","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","invert","is_a_point","is_finite","is_horizontal","is_linear","is_linear","is_monotonic","is_monotonic","is_quadratic","is_straight_line","is_vertical","is_x_monotonic","is_x_monotonic","is_y_monotonic","is_y_monotonic","large_arc","length","length","lerp","line_intersection","line_intersection_t","line_intersections","line_intersections","line_intersections_t","line_intersections_t","line_segment_intersections","line_segment_intersections","line_segment_intersections_t","line_segment_intersections_t","local_x_extremum_t","local_y_extremum_t","m11","m12","m21","m22","m31","m32","max","mid_point","min","mul","mul_assign","neg","new","normal","null_value","num_quadratics","offset","overlaps_line","overlaps_segment","parallel_line","partial_cmp","pi","point","point","positive","project_point","quadratic_bezier","quadratic_intersections","quadratic_intersections_t","radians","radians","radii","radii","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_tangent","set_length","signed","signed_distance_to_point","signed_distance_to_point","sin_cos","size","solve_t_for_x","solve_t_for_x","solve_t_for_y","solve_t_for_y","solve_x_for_y","solve_x_for_y","solve_y_for_x","solve_y_for_x","split","split","split","split","split","split","split","split","split","split_at_x","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","split_range","square_distance_to_point","square_distance_to_point","square_distance_to_point","square_length","start_angle","sub","sub_assign","sum","sum","sweep","sweep_angle","tangent","to","to","to","to","to","to","to","to","to","to","to","to","to","to_arc","to_cubic","to_degrees","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_line","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_quadratic","to_quadratic_error","to_svg_arc","to_vector","traits","transform","transformed","transformed","transformed","translate","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utils","value","vector","vector","vertical_line_intersection","vertical_line_intersection_t","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","x","x","x","x","x","x","x","x","x","x","x","x","x_maximum_t","x_maximum_t","x_minimum_t","x_minimum_t","x_rotation","x_rotation","y","y","y","y","y","y","y","y","y","y","y","y","y_maximum_t","y_maximum_t","y_minimum_t","y_minimum_t","zero","Arc","ArcFlags","Flattened","SvgArc","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","center","components_from","deref","deref_mut","downcast","drop","flags","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","large_arc","next","radii","radii","start_angle","sweep","sweep_angle","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","x_rotation","x_rotation","ArrayString","ArrayVec","CapacityError","Drain","IntoIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","drop","drop","drop","drop","drop","drop","element","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_byte_string","from_iter","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_str","ge","ge","ge","get_hash","get_hash","gt","gt","gt","hash","hash","init","init","init","init","init","insert","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","null_value","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_smolstr","to_string","to_string","truncate","truncate","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","write","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_big_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_as_little_endian","write_char","write_f32","write_f64","write_i128","write_i16","write_i32","write_i64","write_i8","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","zero_filled","CubicBezierSegment","Flattened","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","components_into","ctrl1","ctrl2","deref","deref_mut","downcast","drop","from","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_iter","into_stimulus","next","size_hint","to","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","Angle","BoolVector2D","BoolVector3D","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Trig","UnknownUnit","Vector2D","Vector3D","abs","abs","abs","abs","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_size","add_size","all","all","and","and","angle","angle_from_x_axis","angle_to","angle_to","any","any","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_eq","approx_eq","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approxeq","approxord","area","area","area","around_axis","around_x","around_y","around_z","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","box3d","bvec2","bvec3","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","center","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","component_div","component_div","component_mul","component_mul","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","contains","contains","contains","contains","contains","contains_box","contains_box","contains_rect","cos","cross","cross","decompose_reversed","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","degrees_to_radians","depth","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","distance_to","distance_to","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","dot","dot","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","equal","equal","equal","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler","extend","extend","fast_atan2","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_and_length","from_array","from_array","from_arrays","from_arrays","from_length_all_same","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_origin_and_size","from_points","from_points","from_points","from_rotation","from_scale","from_size","from_size","from_size","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_translation","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_vectors_inner","from_vectors_outer","get","get","get_angle","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","greater_than","greater_than","greater_than","greater_than","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","horizontal","i","identity","identity","identity","identity","identity","identity","identity","identity","inflate","inflate","inflate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_box","inner_rect","intersection","intersection","intersection","intersection_unchecked","intersection_unchecked","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_2d","is_backface_visible","is_empty","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_identity","is_identity","is_identity","is_invertible","is_invertible","is_negative","is_negative","is_normalized","is_positive","is_positive","is_zero","j","k","left","length","length","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lower_than","lower_than","lower_than","lower_than","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","max","max","max","max","max","max","max","max","max","max_x","max_y","min","min","min","min","min","min","min","min","min","min","min","min_x","min_y","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_s","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_2d","new_all_same","new_from_reversed","none","none","norm","normalize","normalize","normalize","not","not","not_equal","not_equal","not_equal","not_equal","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","num","one","one","one","or","or","origin","origin","origin","ortho","outer_box","outer_rect","outer_transformed_box","outer_transformed_box2d","outer_transformed_box3d","outer_transformed_rect","outer_transformed_rect","partial_cmp","partial_cmp","partial_cmp","perspective","point2","point3","position","pre_rotate","pre_rotate","pre_scale","pre_scale","pre_translate","pre_translate","project_onto_vector","project_onto_vector","project_to_2d","quaternion","r","radians","radians","radians_to_degrees","rect","reflect","reflect","rem_euclid","rem_euclid","right","robust_normalize","robust_normalize","rotation","rotation","rotation","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","saturating_add","saturating_sub","scale","scale","scale","scale","scale","select_point","select_point","select_size","select_size","select_vector","select_vector","set_size","sin","size","size","size","size2","size3","skew","slerp","splat","splat","splat","splat","splat","splat","splat","splat","square_length","square_length","square_norm","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","tan","then","then","then","then","then","then_rotate","then_rotate","then_scale","then_scale","then_translate","then_translate","to_2d","to_2d","to_2d","to_3d","to_3d","to_3d","to_3d","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array_4d","to_array_4d","to_array_transposed","to_array_transposed","to_arrays","to_arrays","to_arrays_transposed","to_box2d","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_non_empty","to_non_empty","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_point","to_point2d","to_point3d","to_rect","to_size","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple_4d","to_tuple_4d","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u64","to_u64","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_vector","to_vector","to_vector","to_vector","to_vector","to_vector","top","transform_box","transform_box2d","transform_box2d","transform_box3d","transform_box3d","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point2d","transform_point2d","transform_point2d","transform_point2d_homogeneous","transform_point3d","transform_point3d","transform_point3d","transform_point3d","transform_point3d_homogeneous","transform_rect","transform_rect","transform_rect","transform_size","transform_size","transform_size","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector2d","transform_vector2d","transform_vector3d","transform_vector3d","translate","translate","translate","translation","translation","translation","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","union","union","union","unit_quaternion","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vec2","vec3","vector_part","vertical","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","width","width","width","width","width","with_destination","with_destination","with_length","with_max_length","with_max_length","with_min_length","with_min_length","with_source","with_source","x","x","x","x","x","x","x","x","x","x_range","x_range","x_range","xy","xy","xy","xy_area","xz","xz","xz","xz_area","y","y","y","y","y","y","y","y","y","y_range","y_range","y_range","yx","yx","yz","yz","yz","yz_area","z","z","z","z","z","z_range","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","ApproxEq","approx_epsilon","approx_eq","approx_eq_eps","max","min","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Vector2D","Vector3D","angle","bottom","depth","height","height","i","j","k","left","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","min","min","origin","r","right","rotation","size","top","translation","w","width","width","x","x","x","x","x","x","x","y","y","y","y","y","y","y","z","z","z","z","Ceil","Floor","One","Round","Zero","ceil","floor","one","round","zero","Flattened","FlattenedT","FlatteningParameters","QuadraticBezierSegment","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","components_from","components_from","components_from","ctrl","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","new","next","next","size_hint","size_hint","to","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","Scalar","Segment","Transformation","after_split","approximate_length","before_split","derivative","dx","dy","flip","for_each_flattened_with_t","from","sample","split","split_range","to","transform_point","transform_vector","x","y","cubic_polynomial_roots","directed_angle","directed_angle2","min_max","normalized_tangent","tangent","Flattened","FromPolyline","NoAttributes","PathIterator","Transformed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","flattened","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","new","new","next","next","next","next","open","size_hint","transformed","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_attributes","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","angle","height","m11","m12","m21","m22","m31","m32","max","min","point","radians","size","vector","width","x","x","x","y","y","y","Builder","BuilderImpl","BuilderWithAttributes","IdIter","Iter","IterWithAttributes","Path","PathSlice","Reversed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","end","end","end","extend_from_paths","extend_from_paths","fmt","for_each_flattened","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_path","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","new","new","next","next","next","next","null_value","num_attributes","num_attributes","num_attributes","points","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_svg","Builder","BuilderWithAttributes","Iter","PathBuffer","PathBufferSlice","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","begin","begin","begin","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","clone","clone_into","components_from","components_from","components_from","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end","end","end","end","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_stimulus","into_stimulus","into_stimulus","line_to","line_to","line_to","line_to","new","next","next_back","num_attributes","num_attributes","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reserve","size_hint","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","with_attributes","IdPolygon","IdPolygonIter","PathEvents","Polygon","PolygonIdIter","PolygonIter","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed","closed","components_from","components_from","components_from","components_from","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_stimulus","into_stimulus","into_stimulus","into_stimulus","new","next","next","next","next","par_bridge","points","points","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Build","PathBuilder","PathIterator","PathType","SvgPathBuilder","add_circle","add_ellipse","add_line_segment","add_point","add_polygon","add_polygon","add_rectangle","add_rounded_rectangle","arc_to","begin","build","close","close","cubic_bezier_to","cubic_bezier_to","end","event","flattened","flattened","horizontal_line_to","line_to","line_to","move_to","num_attributes","path_event","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_line_to","relative_move_to","relative_quadratic_bezier_to","relative_vertical_line_to","reserve","reserve","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","transformed","transformed","vertical_line_to","with_svg","Bevel","Butt","Gradient","LineCap","LineDash","LineJoin","Miter","Round","Round","Solid","Square","Stroke","Style","line_cap","line_dash","line_join","offset","segments","style","width","Active","Catalog","Checkbox","Class","Disabled","Hovered","Icon","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","components_from","danger","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","font","font","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","icon","icon_color","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","line_height","mouse_interaction","new","on_event","on_toggle","on_toggle_maybe","primary","secondary","shaping","size","size","size","spacing","state","style","style","success","tag","text_color","text_line_height","text_shaping","text_size","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","width","is_checked","is_checked","is_checked","Catalog","ComboBox","State","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","components_from","components_from","default_input","default_menu","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","fmt","font","from","from","from_angle","from_angle","from_stimulus","from_stimulus","icon","init","init","input_class","input_style","into","into","into_angle","into_angle","into_any","into_any","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layout","line_height","menu_class","menu_style","mouse_interaction","new","new","on_close","on_event","on_input","on_option_hovered","overlay","padding","size","size","state","tag","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","width","with_selection","Catalog","Class","Container","Id","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","align_x","align_y","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border","bordered_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center_x","center_y","children","class","clip","clone","clone","clone_into","clone_into","components_from","components_from","components_from","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","draw","draw_background","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","height","id","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","layout","max_height","max_width","mouse_interaction","new","new","null_value","on_event","operate","overlay","padding","rounded_box","shadow","size","state","style","style","tag","text_color","to_owned","to_owned","transparent","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","unique","upcast","upcast","upcast","visible_bounds","vzip","vzip","vzip","width","with_background","with_border","FilterMethod","Handle","Image","Linear","Nearest","Viewer","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","components_from","content_fit","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw","draw","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter_method","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_memory","from_path","from_pixels","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","height","id","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","layout","new","null_value","size","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","viewer","viewer","vzip","vzip","vzip","width","State","Viewer","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","filter_method","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","height","image_size","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","is_cursor_grabbed","layout","max_scale","min_scale","mouse_interaction","new","new","null_value","on_event","padding","scale_step","size","state","tag","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","width","Column","column","Column","adapt_into_using","align_items","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","children","components_from","default","deref","deref_mut","diff","downcast","draw","drop","extend","from","from_angle","from_stimulus","from_vecs","height","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","layout","max_width","mouse_interaction","new","null_value","on_event","operate","overlay","padding","push","push_maybe","size","spacing","state","tag","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","width","with_capacity","with_children","menu","Catalog","Class","Menu","State","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","components_from","components_from","components_from","default","default","default","default_scrollable","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","new","new","null_value","overlay","padding","selected_background","selected_text_color","style","text_color","text_line_height","text_shaping","text_size","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","All","Axis","Bottom","Canceled","Catalog","Center","Class","Configuration","Content","Contents","Direction","Down","DragEvent","Draggable","Dropped","Edge","Edge","Edge","Highlight","Horizontal","Left","Left","Line","Maximized","Node","Pane","Pane","Pane","Pane","PaneGrid","Picked","Region","ResizeEvent","Right","Right","Split","Split","Split","State","Style","StyleFn","Target","TitleBar","Top","Up","Vertical","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","always_show_controls","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_dragged_at","can_be_dragged_at","children","class","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color","compare","compare","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","controls","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","height","hovered_region","hovered_split","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_over_pick_area","iter","layout","layout","mouse_interaction","new","new","new","null_value","on_click","on_drag","on_event","on_resize","operate","overlay","padding","pane_regions","partial_cmp","partial_cmp","picked_split","ratio","size","spacing","split","split","split_line_bounds","split_regions","splits","state","state","style","style","style","style","tag","title_bar","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","a","axis","b","ratio","pane","pane","pane","target","a","axis","b","id","ratio","Action","Dragging","Idle","Internal","Resizing","State","adapt_into_using","adapt_into_using","adapt_into_using","adjacent","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","components_from","components_from","components_from","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_configuration","from_stimulus","from_stimulus","from_stimulus","get","get_mut","init","init","init","internal","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","is_empty","iter","iter_mut","layout","layout","len","maximize","maximized","move_to_edge","new","panes","picked_pane","picked_split","resize","restore","split","split_with","swap","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","with_configuration","axis","origin","pane","split","Active","Arrow","Catalog","Class","Dynamic","Handle","Hovered","Icon","None","Opened","PickList","Static","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","components_from","components_from","default","default","default","default_menu","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","font","font","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","handle","handle_color","init","init","init","init","init","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","line_height","mouse_interaction","new","null_value","on_close","on_event","on_open","overlay","padding","placeholder","placeholder_color","shaping","size","size","state","style","style","tag","text_color","text_line_height","text_shaping","text_size","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","width","closed","open","size","Catalog","Class","DEFAULT_HEIGHT","ProgressBar","Style","StyleFn","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","bar","border","borrow","borrow","borrow_mut","borrow_mut","class","clone","clone_into","components_from","components_from","danger","default","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","height","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layout","new","primary","secondary","size","style","style","success","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","width","Catalog","Class","Data","DataTooLong","Error","ErrorCorrection","High","InvalidCharacter","InvalidEciDesignator","InvalidVersion","Low","Medium","Micro","Normal","QRCode","Quartile","Style","StyleFn","UnsupportedCharacterSet","Version","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","cell_size","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","new","new","size","state","style","style","tag","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","with_error_correction","with_version","Active","Catalog","Class","DEFAULT_SIZE","DEFAULT_SPACING","Hovered","Radio","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","border_color","border_width","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone_into","clone_into","components_from","components_from","components_from","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","dot_color","downcast","downcast","downcast","draw","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","font","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","mouse_interaction","new","on_event","size","size","spacing","state","style","style","tag","text_color","text_line_height","text_shaping","text_size","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","is_selected","is_selected","AsymmetricPadding","Catalog","Class","FillMode","Full","Padded","Percent","Rule","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone_into","clone_into","color","components_from","components_from","components_from","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw","drop","drop","drop","fill","fill_mode","fmt","fmt","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","horizontal","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","radius","size","style","style","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vertical","vzip","vzip","vzip","width","AbsoluteOffset","Active","Alignment","Both","Catalog","Class","Direction","Dragged","END","End","Horizontal","Hovered","Id","Properties","RelativeOffset","START","Scrollable","Scrollbar","Scroller","Start","Status","Style","StyleFn","Vertical","Viewport","absolute_offset","absolute_offset_reversed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","alignment","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","children","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","container","content_bounds","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","gap","get_hash","hash","height","horizontal","horizontal_scrollbar","id","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","margin","mouse_interaction","new","new","new","null_value","null_value","null_value","null_value","null_value","on_event","on_scroll","operate","overlay","relative_offset","scroll_to","scroller","scroller_width","size","snap_to","state","style","style","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unique","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertical","vertical_scrollbar","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_direction","x","x","y","y","horizontal","vertical","is_horizontal_scrollbar_dragged","is_horizontal_scrollbar_hovered","is_vertical_scrollbar_dragged","is_vertical_scrollbar_hovered","Event","Keyboard","Mouse","Primitive","Primitive","Program","RedrawRequested","Shader","State","Storage","Touch","Viewport","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","components_from","components_from","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","draw","drop","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get","get_mut","has","height","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","logical_size","mouse_interaction","mouse_interaction","mouse_interaction","new","null_value","on_event","physical_height","physical_size","physical_width","prepare","projection","render","scale_factor","size","state","store","tag","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","update","update","vzip","vzip","vzip","vzip","wgpu","width","with_physical_size","Active","Catalog","Circle","Class","DEFAULT_HEIGHT","Dragged","Handle","HandleShape","Hovered","Rail","Rectangle","Slider","Status","Style","StyleFn","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","border_color","border_radius","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color","colors","components_from","components_from","components_from","components_from","components_from","components_from","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","handle","height","init","init","init","init","init","init","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","mouse_interaction","new","on_event","on_release","rail","shape","shift_step","size","state","step","style","style","tag","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","width","width","with_circular_handle","border_radius","radius","width","Catalog","Class","Handle","Hovered","Idle","Status","Style","StyleFn","Svg","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","content_fit","data","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_memory","from_path","from_path","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","height","id","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","new","null_value","size","style","style","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","width","Absolute","Advanced","Basic","Borrowed","Catalog","Class","Fragment","IntoFragment","LineHeight","Owned","Relative","Shaping","State","Style","StyleFn","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","get_hash","hash","hash","init","init","init","init","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_fragment","into_stimulus","into_stimulus","into_stimulus","into_stimulus","layout","null_value","null_value","null_value","null_value","style","to_absolute","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","Action","Active","Backspace","Catalog","Class","Click","Content","Delete","Disabled","DocumentEnd","DocumentStart","Down","Drag","Edit","Edit","End","Enter","Focused","Home","Hovered","Insert","Left","Motion","Move","PageDown","PageUp","Paste","Right","Scroll","Select","SelectLine","SelectWord","State","Status","Style","StyleFn","TextEditor","Up","WordLeft","WordRight","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","cursor_position","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direction","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","height","highlight","icon","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_edit","is_focused","layout","line","line_count","line_height","lines","mouse_interaction","new","new","null_value","on_action","on_event","padding","perform","placeholder","selection","selection","size","size","state","style","style","tag","text","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widen","with_text","lines","Active","Catalog","Class","Cursor","DEFAULT_PADDING","Disabled","Focused","Hovered","Icon","Id","Left","Right","Side","State","Status","Style","StyleFn","TextInput","Value","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_point","components_from","components_from","components_from","components_from","components_from","components_from","components_from","components_from","cursor","cursor","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus","focused","font","font","from","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","get_hash","hash","icon","icon","id","init","init","init","init","init","init","init","init","insert","insert_many","into","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_empty","is_focused","is_focused","layout","layout","len","line_height","mouse_interaction","move_cursor_to","move_cursor_to","move_cursor_to","move_cursor_to_end","move_cursor_to_end","move_cursor_to_end","move_cursor_to_front","move_cursor_to_front","move_cursor_to_front","new","new","new","new","next_end_of_word","null_value","on_event","on_input","on_paste","on_submit","operate","padding","placeholder","previous_start_of_word","remove","remove_many","secure","secure","select","select_all","select_all","select_all","selection","side","size","size","size","spacing","state","style","style","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","unfocus","unfocus","unique","until","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","Cursor","Index","Selection","State","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","null_value","selection","state","to_owned","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","end","start","CATPPUCCIN_FRAPPE","CATPPUCCIN_LATTE","CATPPUCCIN_MACCHIATO","CATPPUCCIN_MOCHA","CatppuccinFrappe","CatppuccinLatte","CatppuccinMacchiato","CatppuccinMocha","Custom","Custom","DARK","DRACULA","Dark","Dracula","FERRA","Ferra","GRUVBOX_DARK","GRUVBOX_LIGHT","GruvboxDark","GruvboxLight","KANAGAWA_DRAGON","KANAGAWA_LOTUS","KANAGAWA_WAVE","KanagawaDragon","KanagawaLotus","KanagawaWave","LIGHT","Light","MOONFLY","Moonfly","NIGHTFLY","NORD","Nightfly","Nord","OXOCARBON","Oxocarbon","Palette","SOLARIZED_DARK","SOLARIZED_LIGHT","SolarizedDark","SolarizedLight","TOKYO_NIGHT","TOKYO_NIGHT_LIGHT","TOKYO_NIGHT_STORM","Theme","TokyoNight","TokyoNightLight","TokyoNightStorm","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components_from","components_from","danger","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","fmt","fmt","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","new","palette","primary","success","text","to_owned","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","with_fn","Background","Danger","EXTENDED_CATPPUCCIN_FRAPPE","EXTENDED_CATPPUCCIN_LATTE","EXTENDED_CATPPUCCIN_MACCHIATO","EXTENDED_CATPPUCCIN_MOCHA","EXTENDED_DARK","EXTENDED_DRACULA","EXTENDED_FERRA","EXTENDED_GRUVBOX_DARK","EXTENDED_GRUVBOX_LIGHT","EXTENDED_KANAGAWA_DRAGON","EXTENDED_KANAGAWA_LOTUS","EXTENDED_KANAGAWA_WAVE","EXTENDED_LIGHT","EXTENDED_MOONFLY","EXTENDED_NIGHTFLY","EXTENDED_NORD","EXTENDED_OXOCARBON","EXTENDED_SOLARIZED_DARK","EXTENDED_SOLARIZED_LIGHT","EXTENDED_TOKYO_NIGHT","EXTENDED_TOKYO_NIGHT_LIGHT","EXTENDED_TOKYO_NIGHT_STORM","Extended","Pair","Palette","Primary","Secondary","Success","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","background","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","components_from","components_from","components_from","components_from","components_from","components_from","components_from","danger","danger","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","from_stimulus","generate","generate","generate","generate","generate","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","into_stimulus","is_dark","new","new","primary","primary","secondary","strong","strong","strong","strong","strong","success","success","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","uints_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak","weak","weak","weak","weak","Active","Catalog","Class","DEFAULT_SIZE","Hovered","Status","Style","StyleFn","Toggler","adapt_into_using","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_from","arrays_into","arrays_into","arrays_into","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","background","background_border_color","background_border_width","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone_into","clone_into","components_from","components_from","components_from","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","draw","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","font","foreground","foreground_border_color","foreground_border_width","from","from","from","from_angle","from_angle","from_angle","from_stimulus","from_stimulus","from_stimulus","init","init","init","into","into","into","into_angle","into_angle","into_angle","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","into_stimulus","layout","mouse_interaction","new","on_event","size","size","spacing","state","style","style","tag","text_alignment","text_line_height","text_shaping","text_size","to_owned","to_owned","try_components_into","try_components_into","try_components_into","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","uints_from","uints_from","uints_from","uints_into","uints_into","uints_into","upcast","upcast","upcast","vzip","vzip","vzip","width","is_toggled","is_toggled","Bottom","FollowCursor","Left","Position","Right","Tooltip","Top","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","children","class","clone","clone_into","components_from","components_from","default","deref","deref","deref_mut","deref_mut","diff","downcast","downcast","draw","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","gap","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","layout","mouse_interaction","new","null_value","on_event","overlay","padding","size","size_hint","snap_within_viewport","state","style","tag","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","upcast","upcast","vzip","vzip","Catalog","DEFAULT_WIDTH","Handle","HandleShape","Status","Style","StyleFn","VerticalSlider","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","class","components_from","default","default","deref","deref_mut","downcast","draw","drop","from","from_angle","from_stimulus","height","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","layout","mouse_interaction","new","on_event","on_release","shift_step","size","state","step","style","tag","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","upcast","vzip","width"],"q":[[0,"iced_widget"],[309,"iced_widget::button"],[464,"iced_widget::canvas"],[928,"iced_widget::canvas::event"],[1015,"iced_widget::canvas::fill"],[1065,"iced_widget::canvas::gradient"],[1154,"iced_widget::canvas::path"],[1246,"iced_widget::canvas::path::arc"],[1295,"iced_widget::canvas::path::lyon_path"],[2210,"iced_widget::canvas::path::lyon_path::Event"],[2223,"iced_widget::canvas::path::lyon_path::IdEvent"],[2236,"iced_widget::canvas::path::lyon_path::PathEvent"],[2249,"iced_widget::canvas::path::lyon_path::builder"],[2579,"iced_widget::canvas::path::lyon_path::commands"],[2788,"iced_widget::canvas::path::lyon_path::geom"],[3580,"iced_widget::canvas::path::lyon_path::geom::arc"],[3631,"iced_widget::canvas::path::lyon_path::geom::arrayvec"],[4021,"iced_widget::canvas::path::lyon_path::geom::cubic_bezier"],[4064,"iced_widget::canvas::path::lyon_path::geom::euclid"],[6074,"iced_widget::canvas::path::lyon_path::geom::euclid::approxeq"],[6078,"iced_widget::canvas::path::lyon_path::geom::euclid::approxord"],[6080,"iced_widget::canvas::path::lyon_path::geom::euclid::default"],[6163,"iced_widget::canvas::path::lyon_path::geom::euclid::num"],[6173,"iced_widget::canvas::path::lyon_path::geom::quadratic_bezier"],[6286,"iced_widget::canvas::path::lyon_path::geom::traits"],[6306,"iced_widget::canvas::path::lyon_path::geom::utils"],[6312,"iced_widget::canvas::path::lyon_path::iterator"],[6466,"iced_widget::canvas::path::lyon_path::math"],[6496,"iced_widget::canvas::path::lyon_path::path"],[6760,"iced_widget::canvas::path::lyon_path::path_buffer"],[6903,"iced_widget::canvas::path::lyon_path::polygon"],[7067,"iced_widget::canvas::path::lyon_path::traits"],[7116,"iced_widget::canvas::stroke"],[7136,"iced_widget::checkbox"],[7329,"iced_widget::checkbox::Status"],[7332,"iced_widget::combo_box"],[7430,"iced_widget::container"],[7594,"iced_widget::image"],[7740,"iced_widget::image::viewer"],[7832,"iced_widget::keyed"],[7834,"iced_widget::keyed::column"],[7893,"iced_widget::overlay"],[7894,"iced_widget::overlay::menu"],[8022,"iced_widget::pane_grid"],[8807,"iced_widget::pane_grid::Configuration"],[8811,"iced_widget::pane_grid::DragEvent"],[8815,"iced_widget::pane_grid::Node"],[8820,"iced_widget::pane_grid::state"],[8964,"iced_widget::pane_grid::state::Action"],[8968,"iced_widget::pick_list"],[9206,"iced_widget::pick_list::Handle"],[9209,"iced_widget::progress_bar"],[9302,"iced_widget::qr_code"],[9569,"iced_widget::radio"],[9715,"iced_widget::radio::Status"],[9717,"iced_widget::rule"],[9849,"iced_widget::scrollable"],[10392,"iced_widget::scrollable::Direction"],[10394,"iced_widget::scrollable::Status"],[10398,"iced_widget::shader"],[10582,"iced_widget::slider"],[10847,"iced_widget::slider::HandleShape"],[10850,"iced_widget::svg"],[11035,"iced_widget::text"],[11222,"iced_widget::text_editor"],[11593,"iced_widget::text_editor::Action"],[11594,"iced_widget::text_input"],[11995,"iced_widget::text_input::cursor"],[12077,"iced_widget::text_input::cursor::State"],[12079,"iced_widget::theme"],[12214,"iced_widget::theme::palette"],[12545,"iced_widget::toggler"],[12691,"iced_widget::toggler::Status"],[12693,"iced_widget::tooltip"],[12792,"iced_widget::vertical_slider"],[12849,"palette::chromatic_adaptation"],[12850,"core::any"],[12851,"iced_core::renderer"],[12852,"iced_core::element"],[12853,"core::convert"],[12854,"iced_graphics::geometry"],[12855,"alloc::string"],[12856,"iced_core::text"],[12857,"iced_core::widget::tree"],[12858,"alloc::vec"],[12859,"core::hash"],[12860,"core::iter::traits::collect"],[12861,"core::option"],[12862,"core::fmt"],[12863,"core::clone"],[12864,"core::ops::function"],[12865,"core::ops::function"],[12866,"iced_core::mouse::cursor"],[12867,"iced_core::rectangle"],[12868,"core::fmt"],[12869,"iced_runtime::command"],[12870,"iced_core::pixels"],[12871,"alloc::boxed"],[12872,"alloc::sync"],[12873,"alloc::rc"],[12874,"core::marker"],[12875,"core::cmp"],[12876,"iced_core::layout::limits"],[12877,"iced_core::layout::node"],[12878,"iced_core::mouse::interaction"],[12879,"iced_core::size"],[12880,"iced_core::event"],[12881,"iced_core::clipboard"],[12882,"iced_core::shell"],[12883,"iced_core::widget::operation"],[12884,"core::default"],[12885,"iced_core::vector"],[12886,"iced_core::overlay::element"],[12887,"alloc::string"],[12888,"core::ops::range"],[12889,"core::cmp"],[12890,"core::convert"],[12891,"smol_str"],[12892,"palette::convert::try_from_into_color"],[12893,"core::any"],[12894,"iced_core::background"],[12895,"iced_core::point"],[12896,"iced_core::color"],[12897,"core::ops::function"],[12898,"iced_core::gradient"],[12899,"core::ops::arith"],[12900,"num_traits::float"],[12901,"num_traits::cast"],[12902,"core::ops::arith"],[12903,"core::ops::arith"],[12904,"core::cmp"],[12905,"core::str::error"],[12906,"core::fmt"],[12907,"num_traits::sign"],[12908,"num_traits::ops::euclid"],[12909,"num_traits::ops::saturating"],[12910,"rayon::iter::par_bridge"],[12911,"iced_core::alignment"],[12912,"iced_core::alignment"],[12913,"iced_core::content_fit"],[12914,"iced_core::image"],[12915,"iced_core::image"],[12916,"core::convert"],[12917,"rustc_hash"],[12918,"qrcode::types"],[12919,"iced_wgpu::primitive"],[12920,"wgpu"],[12921,"wgpu"],[12922,"iced_core::transformation"],[12923,"wgpu"],[12924,"iced_core::svg"],[12925,"iced_core::text::highlighter"],[12926,"core::ops::deref"]],"d":["A list with all the defined themes.","","","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","","","","A reusable, custom widget that uses The Elm Architecture.","","A <code>Theme</code> that uses a <code>Custom</code> palette.","The built-in dark variant.","The built-in Dracula variant.","The type of event this <code>Component</code> handles internally.","The built-in Ferra variant:","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","A widget that only rebuilds its contents when necessary.","The built-in light variant.","The built-in Moonfly variant.","","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant.","","","The primary rendering option.","","","","The default graphics renderer for <code>iced</code>.","A widget that is aware of its dimensions.","","","","The secondary (or fallback) rendering option.","","","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","","","The internal state of this <code>Component</code>.","","","","","A built-in theme.","","","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","","","","","","","","","","","","","","","","","","","","","","","","Allow your users to perform actions by pressing a button.","Creates a new <code>Button</code> with the provided content.","Draw 2D graphics for your users.","Creates a new <code>Canvas</code>.","Show toggle controls using checkboxes.","Creates a new <code>Checkbox</code>.","","","","Creates a new <code>Column</code> with the given children.","Creates a <code>Column</code> with the given children.","Creates a <code>Column</code> with the given children.","Display a dropdown list of searchable and selectable …","Creates a new <code>ComboBox</code>.","Turns an implementor of <code>Component</code> into an <code>Element</code> that can …","","","","Decorate content and apply alignment.","Creates a new <code>Container</code> with the provided content.","","Creates a new custom <code>Theme</code> from the given <code>Palette</code>.","Creates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>palette::Extended</code> of the <code>Theme</code>.","","","Focuses the next focusable widget.","Focuses the previous focusable widget.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates a horizontal <code>Rule</code> with the given height.","Creates a new <code>Space</code> widget that fills the available …","Displays a widget on top of another one, only when the …","Display images in your user interface.","Creates a new <code>Image</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Use widgets that can provide hints to ensure continuity.","Creates a new <code>keyed::Column</code> with the given children.","Creates a <code>Column</code> with the given children.","","","Creates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …","A container intercepting mouse events.","","","Creates a new <code>Responsive</code> widget with a closure that …","Creates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …","","","","Wraps the given widget and captures any mouse button …","Update the <code>Component</code> state based on the provided <code>Operation</code>","Update the <code>Component</code> state based on the provided <code>Operation</code>","","","Display interactive elements on top of other widgets.","","","Returns the <code>Palette</code> of the <code>Theme</code>.","Let your users split regions of your application and …","Display a dropdown list of selectable values.","Creates a new <code>PickList</code>.","Provide progress feedback to your users.","Creates a new <code>ProgressBar</code>.","Encode and display information in a QR code.","Creates a new <code>QRCode</code> widget from the given <code>Data</code>.","Create choices using radio buttons.","Creates a new <code>Radio</code>.","","Creates a new <code>Responsive</code> widget with a closure that …","Creates a new <code>Row</code> with the given children.","Creates a <code>Row</code> with the given children.","Creates a <code>Row</code> with the given children.","Display a horizontal or vertical rule for dividing content.","","Navigate an endless amount of content with a scrollbar.","Creates a new <code>Scrollable</code> with the provided content.","A custom shader widget for wgpu applications.","Creates a new <code>Shader</code>.","","","Returns a <code>Size</code> hint for laying out the <code>Component</code>.","Returns a <code>Size</code> hint for laying out the <code>Component</code>.","","Display an interactive selector of a single value from a …","Creates a new <code>Slider</code>.","Creates a new <code>Stack</code> with the given children.","Creates a <code>Stack</code> with the given children.","Creates a <code>Stack</code> with the given children.","","","","","","","","","","","","","","","","","","","","Display vector graphics in your application.","Creates a new <code>Svg</code> widget from the given <code>Handle</code>.","","","Draw and interact with text.","Creates a new <code>Text</code> widget with the provided content.","Display a multi-line text input for text editing.","Creates a new <code>TextEditor</code>.","Display fields that can be filled with text.","Creates a new <code>TextInput</code>.","Use the built-in theme and styles.","A widget that applies any <code>Theme</code> to its contents.","","","","Show toggle controls using togglers.","Creates a new <code>Toggler</code>.","Display a widget over another.","Creates a new <code>Tooltip</code> for the provided content with the …","","","","","","","","","","","","","","","","","","","","","","","","","Processes an <code>Event</code> and updates the <code>Component</code> state …","Creates a new <code>Text</code> widget that displays the provided value.","Creates a vertical <code>Rule</code> with the given width.","Display an interactive selector of a single value from a …","Creates a new <code>VerticalSlider</code>.","Creates a new <code>Space</code> widget that fills the available …","Produces the widgets of the <code>Component</code>, which may trigger …","","","","The <code>Button</code> can be pressed.","A generic widget that produces a message when pressed.","The theme catalog of a <code>Button</code>.","The item class of the <code>Catalog</code>.","The <code>Button</code> cannot be pressed.","The <code>Button</code> can be pressed and it is being hovered.","The <code>Button</code> is being pressed.","The possible status of a <code>Button</code>.","The style of a button.","A styling function for a <code>Button</code>.","","","","","","","","","","","","","","","","The <code>Background</code> of the button.","The <code>Border</code> of the buton.","","","","","","","","Sets the style class of the <code>Button</code>.","Sets whether the contents of the <code>Button</code> should be clipped …","","","","","","","","A danger button; denoting a destructive action.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Sets the height of the <code>Button</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Button</code> with the given content.","","","Sets the message that will be produced when the <code>Button</code> is …","Sets the message that will be produced when the <code>Button</code> is …","","","Sets the <code>Padding</code> of the <code>Button</code>.","A primary button; denoting a main action.","A secondary button; denoting a complementary action.","The <code>Shadow</code> of the butoon.","","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Button</code>.","A success button; denoting a good outcome.","","A text button; useful for links.","The text <code>Color</code> of the button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Button</code>.","Updates the <code>Style</code> with the given <code>Background</code>.","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A simple cache that stores generated <code>Geometry</code> to avoid …","A widget capable of drawing 2D graphics.","","The style used to fill geometry.","The frame supported by a renderer.","The geometry supported by a renderer.","A fill which linearly interpolates colors along a …","A <code>Gradient</code> color.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A linear gradient interpolates colors along a direction …","A sharp corner.","An immutable set of points that may or may not be …","The state and logic of a <code>Canvas</code>.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The internal state mutated by the <code>Program</code>.","The style of a stroke.","The coloring style of some drawing.","A bunch of text that can be drawn to a canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Path</code> representing a circle given its center …","","","","","","","","","","","","","","","","","","","The color of the text","","","","","","","","","","","The contents of the text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the state of the <code>Program</code>, producing a bunch of …","","Computes the <code>Path</code>s of the <code>Text</code> and draws them using the …","","","","","","","","","","","","","Handle events of a canvas.","Fill <code>Geometry</code> with a certain style.","","","","","","","","","","","The font of the text","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","A gradient that can be used as a fill for some geometry.","Sets the height of the <code>Canvas</code>.","The horizontal alignment of the text","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Path</code> representing a line segment given its …","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The line height of the text.","The shape to be used at the corners of paths or basic …","Returns the current mouse interaction of the <code>Program</code>.","Returns the current mouse interaction of the <code>Program</code>.","","Creates a new <code>Path</code> with the provided closure.","Creates a new <code>Canvas</code>.","","","","","","","The offset of <code>LineDash::segments</code> to start the pattern.","","Packs the <code>Gradient</code> for use in shader code.","Build different kinds of 2D shapes.","The position of the text relative to the alignment …","Returns the internal <code>lyon_path::Path</code>.","Creates a new <code>Path</code> representing a rectangle given its …","The fill rule defines how to determine what is inside and …","The alternating lengths of lines and gaps which describe …","The shaping strategy of the text.","","The size of the text","","Create lines from a <code>Path</code> and assigns them various …","The color or gradient of the fill.","The color or gradient of the stroke.","","","","","","","","","","","Returns the current <code>Path</code> with the given transform applied …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>State</code> of the <code>Program</code>.","Updates the <code>State</code> of the <code>Program</code>.","The vertical alignment of the text","","","","","","","","","","","Sets the width of the <code>Canvas</code>.","The distance between the two edges of the stroke.","Sets the color of the <code>Stroke</code>.","Sets the <code>LineCap</code> of the <code>Stroke</code>.","Sets the <code>LineJoin</code> of the <code>Stroke</code>.","Sets the width of the <code>Stroke</code>.","The <code>Event</code> was handled and processed by a widget.","A <code>Canvas</code> event.","The <code>Event</code> was <strong>NOT</strong> handled by any widget.","A keyboard event.","A mouse event.","The status of an <code>Event</code> after being processed.","A touch event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Merges two <code>Status</code> into one.","","","","","","","","","","","","","","","","","","","","","","The style used to fill geometry.","A <code>Gradient</code> color.","","The fill rule defines how to determine what is inside and …","A solid <code>Color</code>.","The coloring style of some drawing.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The fill rule defines how to determine what is inside and …","The color or gradient of the fill.","","","","","","","","","","","A fill which linearly interpolates colors along a …","A linear gradient.","A linear gradient interpolates colors along a direction …","Packed <code>Gradient</code> data for use in shader code.","","","Adds a new <code>ColorStop</code>, defined by an offset and a color, to …","Adds multiple <code>ColorStop</code>s to the gradient.","","","","","","","","","","","","","","","","","","","","","","","","","","","The absolute ending position of the gradient.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>Linear</code> builder.","Creates a new <code>Packed</code> gradient for use in shader code.","Packs the <code>Gradient</code> for use in shader code.","The absolute starting position of the gradient.","<code>ColorStop</code>s along the linear gradient direction.","","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","A <code>Path</code> builder.","An immutable set of points that may or may not be …","","","Build and draw curves.","Adds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …","Adds a circular arc to the <code>Path</code> with the given control …","","","","","","","","","Adds a cubic Bézier curve to the <code>Path</code> given its two …","","","","","Builds the <code>Path</code> of this <code>Builder</code>.","The center of the arc.","Adds a circle to the <code>Path</code> given its center coordinate and …","","","Closes the current sub-path in the <code>Path</code> with a straight …","","","","","","","","","","","","Adds an ellipse to the <code>Path</code> using a clockwise direction.","The end of the segment’s angle, clockwise rotation from …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Connects the last point in the <code>Path</code> to the given <code>Point</code> …","Moves the starting point of a new sub-path to the given …","Creates a new <code>Builder</code>.","","Adds a quadratic Bézier curve to the <code>Path</code> given its …","The radius of the arc.","Adds a rectangle to the <code>Path</code> given its top-left corner …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","","","","","","","","","","A segment of a differentiable curve.","An elliptical <code>Arc</code>.","","","","","","","","The center of the arc.","The center of the arc.","","","","","","","","The end of the segment’s angle, clockwise rotation from …","The end of the segment’s angle, clockwise rotation from …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","The radii of the arc’s ellipse. The horizontal and …","The radius of the arc.","The clockwise rotation of the arc’s ellipse.","The start of the segment’s angle, clockwise rotation …","The start of the segment’s angle, clockwise rotation …","","","","","","","","","","","Flag parameters for arcs as described by the SVG …","An alias for <code>usize</code>.","A view over a contiguous storage of custom attributes.","Interface for objects storing custom attributes associated …","An alias for a slice of <code>f32</code> values.","","","","A beveled corner is to be used to join path segments. The …","The stroke for each sub-path does not extend beyond its …","ID of a control point in a path.","","","","","","","ID of an endpoint point in a path.","","Represents an event or edge of path.","Refers to an event in a path.","The fill rule defines how to determine what is inside and …","","","","A path event representing endpoints and control points as …","A view over a sequence of endpoint IDs forming a polygon.","","","","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","An empty attribute slice.","","","","A simple path data structure.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","The commands of a path encoded in a single array using IDs …","A view over <code>PathCommands</code>.","A path event representing endpoints and control points as …","A view on a <code>Path</code>.","A view over a sequence of endpoints forming a polygon.","Interface for types types (typically endpoints and control …","Interface for objects storing endpoints and control points …","","","","","","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","The positive or negative side of a vector or segment.","At the end of each sub-path, the shape representing the …","The two possible orientations for the edges of a shape to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a view on the path commands.","Returns a view on this <code>Path</code>.","","Returns a slice over an endpoint’s custom attributes.","Returns a slice over an endpoint’s custom attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path building utilities.","Creates a PathCommandsBuilder to create path commands.","Creates a Builder to build a path.","","Creates a BuilderWithAttributes to build a path with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic representation for paths that allow more control …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns an iterator over the path, with endpoints and …","Returns the first endpoint and its custom attributes if …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the endpoint’s custom attributes as a slice of …","","","","","","","","","","","","","","","","","","","","","","","","Iterates over the endpoint and control point ids of the …","Iterates over the endpoint and control point ids of the …","Returns an iterator of <code>IdEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the path buffer is empty.","Returns whether the path buffer is empty.","","","","","Returns an iterator over the path commands.","Returns an iterator over the path commands.","Iterates over the entire <code>Path</code>, ignoring custom attributes.","Iterates over the path.","","","Returns an iterator of <code>Event&lt;&amp;T&gt;</code>.","","Iterates over the entire <code>Path</code> with custom attributes.","Iterates over the entire <code>Path</code> with custom attributes.","Tools to iterate over paths.","Of the four candidate arc sweeps, two will represent an …","Returns the last endpoint and its custom attributes if any.","","Returns the number of paths in the path buffer.","Returns the number of paths in the path buffer.","f32 version of the lyon_geom types used everywhere. Most …","","Creates an Empty <code>Path</code>.","","Returns the next event id within the path.","Returns the next event id within the path.","Returns the next event id within the sub-path.","Returns the next event id within the path.","","","","Returns the number of float attributes per endpoint.","","","","","","","The default path data structure.","A container to store multiple paths contiguously.","Returns an iterator of <code>PathEvent</code>.","Returns a view on a path made of these commands with …","","","Specific path types for polygons.","","","Returns a reversed version of this path in the form of an …","Returns a reversed version of this path in the form of an …","Creates an WithSvg to build a path with a rich set of …","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","","","","","","","","","","","<code>lyon_path</code> traits reexported here for convenience.","","Applies a transform to all endpoints and control points of …he radius of each corner of a rounded rectangle.","Builds a path.","A Builder that approximates curves with successions of …","A convenience wrapper for <code>PathBuilder</code> without custom …","The base path building interface.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Builds a path with a transformation applied.","Implements an SVG-like building interface on top of a …","","","","","","Adds a sub-path containing a circle.","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","","Adds an elliptical arc.","","","","","","","","","","","","","","","","","","","","","","Starts a new sub-path at a given position.","","","Starts a new sub-path at a given position.","","","","","","","","","","","","","","Builds a path object, consuming the builder.","","","","","","Builds a path object, consuming the builder.","","","","","","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","","","Closes the current sub path.","","","","","","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","","","","","Adds a cubic bézier curve to the current sub-path.","","","","","","","","","","","","","","","","","","","","","","","","","Ends the current sub path.","","","Ends the current sub path.","","","","","","Returns a builder that approximates all curves with …","","Returns a builder that approximates all curves with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Adds an horizontal line segment.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","","","","","Adds a line segment to the current sub-path.","","Start a new sub-path at the given position.","","","","","","","","","","","","","","","Applies the provided path event.","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","","","","","","Adds a quadratic bézier curve to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","","Adds an horizontal line segment in relative coordinates.","","Equivalent to <code>line_to</code> in relative coordinates.","","Equivalent to <code>move_to</code> in relative coordinates.","","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","","Adds a vertical line segment in relative coordinates.","","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","","","","","","Hints at the builder that a certain number of endpoints …","","","","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","","","","","","","","Returns a builder that applies the given transformation to …","","Returns a builder that applies the given transformation to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a vertical line segment.","","","","","","","","Returns a builder that support SVG commands.","Returns a builder that support SVG commands.","","A view on a <code>PathCommands</code> buffer and two slices for …","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","The commands of a path encoded in a single array using IDs …","Builds path commands.","A view over <code>PathCommands</code>.","An iterator of <code>PathEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns path commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the events of the path using IDs.","","Creates a builder without allocating memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a pre-allocated builder.","An angle in radians","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","","A 2d curve segment defined by four points: the beginning …","","","","","","","An infinite line defined by a point and a vector.","A line defined by the equation …","A linear segment.","","","","","","A 2d curve segment defined by three points: the beginning …","Alias for <code>euclid::default::Rotation2D</code>","","","","","","Common APIs to segment types.","","An elliptic arc curve segment using the SVG’s end-point …","","","","Alias for <code>euclid::default::Transform2D</code>","Alias for <code>euclid::default::Translation2D</code>","A 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.","","","","","","","","","","","","","","","","","","","Return the curve after the split point.","Return the curve after the split point.","","","Return the curve after the split point.","","Return the segment after the split point.","Return the curve after the split point.","","Angle in radians","Returns the shortest signed angle between two angles.","","","Compute the length of the segment using a flattened …","","","Compute the length of the segment using a flattened …","","","","Elliptic arc related maths and tools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the curve before the split point.","","Return the curve before the split point.","","Return the curve before the split point.","Return the segment before the split point.","","","Return the curve before the split point.","","","","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle that contains the curve.","Return the smallest rectangle containing this segment.","Returns the smallest rectangle the curve is contained in","Returns the smallest rectangle that contains this triangle.","","Returns the smallest range of x that contains this curve.","Returns the smallest range of x that contains this curve.","Returns a conservative range of x that contains this …","","Returns the smallest range of y that contains this curve.","Returns the smallest range of y that contains this curve.","Returns a conservative range of y that contains this …","Returns a triangle containing this curve segment.","","","","Cast from one numeric representation to another.","","","Create simple circle.","Clip this segment against a rectangle.","Horizontally clip this segment against a range of the x …","Vertically clip this segment against a range of the y axis.","","","","","","","","","","","","","","","","","","","Computes the closest point on this segment to <code>p</code>.","Analytic solution to finding the closest point on the …","","","","","","","","","","","","","","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","","","","","","","","","","","","","","","","","","","","","Sample the derivative at t (expecting t between 0 and 1).","","Sample the curve’s derivative at t (expecting t between …","","","Sample the curve’s derivative at t (expecting t between …","","Computes the distance between this segment and a point.","","","Returns the shortest distance between this segment and a …","","","","","","","","","","","","","","","","","","","","","","","","","Sample x derivative at t (expecting t between 0 and 1).","","Sample the x coordinate of the curve’s derivative at t …","","","Sample the x coordinate of the curve’s derivative at t …","Sample y derivative at t (expecting t between 0 and 1).","","Sample the y coordinate of the curve’s derivative at t …","","","Sample the y coordinate of the curve’s derivative at t …","","Epsilon constants are usually not a good way to deal with …","","","","","","","","","","","","","","","","Returns a conservative rectangle that contains the curve.","Returns a conservative rectangle the curve is contained in.","Returns a conservative rectangle that contains the curve.","","Returns a conservative range of x that contains this curve.","Returns a conservative range of x that contains this curve.","","Returns a conservative range of y that contains this curve.","Returns a conservative range of y that contains this curve.","Computes a “fat line” of this segment.","Computes a “fat line” of this segment.","","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Find the interval of the beginning of the curve that can …","Swap the direction of the segment.","","Swap the direction of the segment.","","Swap the beginning and the end of the segment.","Returns an inverted version of this segment where the …","","","Swap the beginning and the end of the segment.","","","","","","","","","","Approximate the arc with a sequence of cubic bézier …","Approximates the arc with a sequence of cubic bézier …","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","","","Compute a flattened approximation of the curve, invoking a …","Invokes a callback at each inflection point if any.","","Return local x extrema or None if this curve is monotonic.","","Return local y extrema or None if this curve is monotonic.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximates the cubic bézier curve with sequence of …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","","","","Start of the curve.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Convert from the SVG arc notation.","","Sample the curve’s angle at t (expecting t between 0 and …","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","","","","","","Computes the intersection (if any) between this segment …","","Test for triangle-triangle intersection.","","","Test for triangle-segment intersection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the curve can be approximated with a …","Returns true if the angle is a finite number.","","Returns true if the curve can be approximated with a …","Returns true if the curve can be approximated with a …","Returns whether this segment is fully monotonic.","Returns whether this segment is fully monotonic.","Returns true if the curve can be safely approximated with …","Per SVG spec, this arc should be rendered as a line_to …","","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the y axis.","Returns whether this segment is monotonic on the y axis.","Of the four candidate arc sweeps, two will represent an …","Computes the length of this segment.","Computes the length of this segment.","Linear interpolation between two angles, using the …","","","Computes the intersection points (if any) between this …","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment a …","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Computes the intersections (if any) between this segment …","Return the x inflection point or None if this curve is …","Return the y inflection point or None if this curve is …","","","","","","","","Computes third mid-point of this segment.","","","","","","","","Computes the number of quadratic bézier segments required …","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Returns this angle in the [0..2*PI[ range.","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","","","","","Sample the curve at t (expecting t between 0 and 1).","Sample the curve at t (expecting t between 0 and 1).","","","Sample the curve at t (expecting t between 0 and 1).","Sample the segment at t (expecting t between 0 and 1).","","Sample the curve at t (expecting t between 0 and 1).","","Sample the curve’s tangent at t (expecting t between 0 …","Changes the segment’s length, moving destination point.","Returns this angle in the ]-PI..PI] range.","","","Returns (sin(self), cos(self)).","Shorthand for <code>Size::new(x, y)</code>.","Return the parameter values corresponding to a given x …","","Return the parameter values corresponding to a given y …","","","","","","Split this curve into two sub-curves.","Split this curve into two sub-curves.","","Split this curve into two sub-curves.","","Split this curve into two sub-segments.","","","Split this curve into two sub-curves.","","Return the curve inside a given range of t.","Return the sub-curve inside a given range of t.","","Return the sub-curve inside a given range of t.","","Return the sub-segment inside a given range of t.","","","Return the sub-curve inside a given range of t.","Computes the squared distance between this segment and a …","Returned the squared distance to a point.","Returns the shortest squared distance between this segment …","Computes the squared length of this segment.","","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","End of the curve.","","","","","","","","","","","","","Converts this arc from endpoints to center notation.","Elevate this curve to a third order bézier.","","","","","","Cast angle to <code>f32</code>.","","","","","Cast angle <code>f64</code>.","Returns the line containing this segment.","","","","","","","","","","Approximate the curve with a single quadratic bézier …","Evaluates an upper bound on the maximum distance between …","Convert to the SVG arc notation.","Returns the vector between this segment’s <code>from</code> and <code>to</code> …","","[Not implemented] Applies the transform to this triangle …","Applies the transform to this curve and returns the …","Applies the transform to this segment and returns the …","Applies the transform to this curve and returns the …","","Fallible cast from one numeric representation to another.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for <code>Vector::new(x, y)</code>.","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","Sample x at t (expecting t between 0 and 1).","","","","Sample the x coordinate of the curve at t (expecting t …","","Sample the x coordinate of the segment at t (expecting t …","","Sample the x coordinate of the curve at t (expecting t …","","","The <code>x</code> (traditionally, horizontal) coordinate.","Find the advancement of the x-most position in the curve.","Find the advancement of the x-most position in the curve.","Find the x-least position in the curve.","Find the advancement of the x-least position in the curve.","","","Sample y at t (expecting t between 0 and 1).","","","","Sample the y coordinate of the curve at t (expecting t …","Sample the y coordinate of the segment at t (expecting t …","","","Sample the y coordinate of the curve at t (expecting t …","","","The <code>y</code> (traditionally, vertical) coordinate.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-most position in the curve.","Find the advancement of the y-least position in the curve.","Find the advancement of the y-least position in the curve.","","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","Flattening iterator for arcs.","An elliptic arc curve segment using the SVG’s end-point …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Of the four candidate arc sweeps, two will represent an …","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","","","","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","","","","","","","","","","","","","","","","Create a draining iterator that removes the specified …","","","","","","","","","Extract the overflowing element","","","","","","","","","","","","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","","","","","","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","","","","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","","","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","","","","","","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …","A 2d curve segment defined by four points: the beginning …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","An angle in radians","A 2d vector of booleans, useful for component-wise logic …","A 3d vector of booleans, useful for component-wise logic …","A 2d axis aligned rectangle represented by its minimum and …","An axis aligned 3D box represented by its minimum and …","Homogeneous vector in 3D space.","A one-dimensional distance, with value represented by <code>T</code> …","A 2d Point tagged with a unit.","A 3d Point tagged with a unit.","A 2d Rectangle optionally tagged with a unit.","A rigid transformation. All lengths are preserved under …","A transform that can represent rotations in 2d, …","A transform that can represent rotations in 3d, …","A scaling factor between two different units of …","A group of 2D side offsets, which correspond to …","A 2d size tagged with a unit.","A 3d size tagged with a unit.","A 2d transform represented by a column-major 3 by 3 …","A 3d transform stored as a column-major 4 by 4 matrix.","A 2d transformation from a space to another that can only …","A 3d transformation from a space to another that can only …","Trait for basic trigonometry functions, so they can be …","The default unit.","A 2d Vector tagged with a unit.","A 3d Vector tagged with a unit.","Computes the absolute value of each component.","Computes the absolute value of each component.","Computes the vector with absolute values of each component.","Computes the vector with absolute values of each component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns new vector with by-component AND operation applied.","Returns new vector with by-component AND operation applied.","Angle in radians","Returns the signed angle between this vector and the x …","Returns the signed angle between this vector and another …","Returns the positive angle between this vector and another …","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","","","","","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","Returns true is this transform is approximately equal to …","","","","Utilities for testing approximate ordering - especially …","","","Returns result of multiplication of both components","Creates a rotation around a given axis.","Creates a rotation around the x axis.","Creates a rotation around the y axis.","Creates a rotation around the z axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for …","Shorthand for <code>BoolVector2D { x, y }</code>.","Shorthand for <code>BoolVector3D { x, y, z }</code>.","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast the unit","Cast the unit","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit","Cast the unit.","Cast the unit.","","See Point2D::ceil()","Rounds each component to the smallest integer equal or …","See Point3D::ceil()","Rounds each component to the smallest integer equal or …","Rounds each component to the smallest integer equal or …","See <code>Size2D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Size3D::ceil()</code>.","Rounds each component to the smallest integer equal or …","See <code>Vector2D::ceil()</code>","Rounds each component to the smallest integer equal or …","See <code>Vector3D::ceil()</code>","","","","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the size each component of which clamped by …","Returns the size each component of which clamped by …","Returns the vector each component of which is clamped by …","Returns the vector each component of which is clamped by …","Return this vector with minimum and maximum lengths …","Return this vector with minimum and maximum lengths …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the component-wise division of the two vectors.","Returns the component-wise division of the two vectors.","Returns the component-wise multiplication of the two …","Returns the component-wise multiplication of the two …","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this box contains the point. Points are …","Returns <code>true</code> if this box3d contains the point. Points are …","Returns true if this rectangle contains the point. Points …","","","Returns <code>true</code> if this box contains the interior of the …","Returns <code>true</code> if this box3d contains the interior of the …","Returns true if this rectangle contains the interior of …","","Returns the norm of the cross product [self.x, self.y, 0] …","Cross product.","Decompose this into a translation and an rotation to be …","A set of aliases for all types, tagged with the default …","","","","","","","","","","","Returns the identity transform.","Returns the identity transform.","","","","","","","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes and returns the determinant of this transform.","Compute the determinant of the transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates Euclidean division, the matching method for …","Calculates Euclidean division, the matching method for …","Dot product.","Dot product.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a rotation from Euler angles.","Create a 3d point from this one, using the specified z …","Create a 3d vector from this one, using the specified z …","","See Point2D::floor()","Rounds each component to the biggest integer equal or …","See Point3D::floor()","Rounds each component to the biggest integer equal or …","See <code>Size2D::floor()</code>.","Rounds each component to the biggest integer equal or …","Rounds each component to the biggest integer equal or …","See <code>Size3D::floor()</code>.","Rounds each component to the biggest integer equal or …","See <code>Vector2D::floor()</code>","See <code>Vector3D::floor()</code>","Rounds each component to the biggest integer equal or …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Constructor taking angle and length","Create a transform providing its components via an array …","Create a transform providing its components via an array …","Equivalent to <code>from_array</code> with elements packed two at a time","Equivalent to <code>from_array</code> with elements packed four at a …","Constructor setting the same value to all sides, taking a …","Constructor taking properly Lengths instead of scalar …","Constructor taking properly Lengths instead of scalar …","Constructor taking a typed Length for each side.","Constructor taking scalar strongly typed lengths.","Constructor taking scalar strongly typed lengths.","Constructor taking properly  Lengths instead of scalar …","Constructor taking properly  Lengths instead of scalar …","Constructor.","Returns the smallest box containing all of the provided …","Returns the smallest box containing all of the provided …","Returns the smallest rectangle defined by the …","","Convenience function to create a scale transform from a …","Creates a Box2D of the given size, at offset zero.","Creates a Box3D of the given size, at offset zero.","Creates a rect of the given size, at offset zero.","","","","","","","","","","","","","","","","","","","","","","","","","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unit-less value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Construct side offsets from min and a max vector offsets.","Construct side offsets from min and a max vector offsets.","Unpack the underlying value from the wrapper.","Returns the underlying scalar scale factor.","Returns self.angle as a strongly typed <code>Angle&lt;T&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “greater then” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","","Component multiplied by the imaginary number <code>i</code>.","Creates the identity rotation.","Creates the identity rotation.","Creates an identity scale (1.0).","Create an identity matrix:","Creates an identity matrix:","Creates no-op translation (both <code>x</code> and <code>y</code> is <code>zero()</code>).","Creates no-op translation (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Construct an identity transform","Inflates the box by the specified sizes on each side …","Inflates the box by the specified sizes on each side …","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the size and position of an inner box.","Calculate the size and position of an inner rectangle.","Computes the intersection of two boxes, returning <code>None</code> if …","","","Computes the intersection of two boxes without check …","","Returns <code>true</code> if the two boxes intersect.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of this rotation.","Returns the inverse of this rotation.","The inverse Scale (1.0 / self).","Returns the inverse transform if possible.","Returns the inverse transform if possible.","Return the inverse transformation.","Return the inverse transformation.","Inverts the transformation","Returns <code>true</code> if this transform can be represented with a …","Check whether shapes on the XY plane with Z pointing …","Returns true if the size is zero, negative or NaN.","Returns true if the size is zero, negative or NaN.","","Returns <code>true</code> if any component of size is zero, negative, …","Returns <code>true</code> if any component of size is zero, negative or …","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns <code>true</code> if this scale has no effect.","Check if translation does nothing (both x and y is <code>zero()</code>).","Check if translation does nothing (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Returns whether it is possible to compute the inverse …","Returns whether it is possible to compute the inverse …","Returns true if the box has a negative area.","Returns true if the box has a negative volume.","Returns <code>true</code> if norm of this quaternion is (approximately) …","Returns <code>true</code> if both components is positive and <code>false</code> any …","Returns <code>true</code> if all components is positive and <code>false</code> any …","Returns <code>true</code> if all side offsets are zero.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","Returns the vector length.","Returns the vector length.","Linearly interpolate between this box and another box.","Linearly interpolate between this box3d and another box3d.","Linearly interpolate between this length and another …","Linearly interpolate between this point and another point.","Linearly interpolate between this point and another point.","Linearly interpolate between this rectangle and another …","Basic Linear interpolation between this rotation and …","Linearly interpolate each component between this size and …","Linearly interpolate between this size and another size.","Linearly interpolate each component between this vector …","Linearly interpolate each component between this vector …","Returns vector with results of “lower then” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","","","","","","","","","","","","","","","","","","","","","","","Returns maximum between this length and another length.","","","","","Returns the size each component of which are maximum of …","Returns the size each component of which are maximum of …","Returns the vector each component of which are maximum of …","Returns the vector each component of which are maximum of …","","","","","Returns minimum between this length and another length.","","","","","Returns the size each component of which are minimum of …","Returns the size each component of which are minimum of …","Returns the vector each component of which are minimum of …","Returns the vector each component of which are minimum of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies all of the transform’s component by a scalar …","","","","","","","","","Constructor.","Constructor.","Constructor taking scalar values directly.","Associate a value with a unit of measure.","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Constructor.","Creates a rotation from an angle in radians.","","Constructor taking a scalar for each side.","Constructor taking scalar values.","Constructor taking scalar values.","Create a transform specifying its components in using the …","Create a transform specifying all of it’s component as a …","","","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Construct a new rigid transformation, where the <code>rotation</code> …","Create a transform representing a 2d transformation from …","Constructor setting the same value to all sides, taking a …","Construct a new rigid transformation, where the <code>translation</code>…","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Computes the norm of this quaternion.","Returns a unit quaternion from this one.","Returns the vector with length of one unit.","Returns the vector with length of one unit","Returns new vector with results of negation operation on …","Returns new vector with results of negation operation on …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","","","","","","","","","","","","","","","","","","A one-dimensional length, tagged with its units.","","Constructor, setting all components to one.","Constructor, setting all components to one.","Returns new vector with by-component OR operation applied.","Returns new vector with by-component OR operation applied.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","","Create an orthogonal projection transform.","Calculate the b and position of an outer box.","Calculate the size and position of an outer rectangle.","Returns a box that encompasses the result of transforming …","Returns a 2d box that encompasses the result of …","Returns a 3d box that encompasses the result of …","Returns a rectangle that encompasses the result of …","Returns a rectangle that encompasses the result of …","","","","Create a simple perspective transform, projecting to the …","Shorthand for <code>Point2D::new(x, y)</code>.","Shorthand for <code>Point3D::new(x, y)</code>.","","Applies a rotation before self’s transformation and …","Returns a transform with a rotation applied before self’…","Applies a scale before self’s transformation and returns …","Returns a transform with a scale applied before self’s …","Applies a translation before self’s transformation and …","Returns a transform with a translation applied before self…","Returns this vector projected onto another one.","Returns this vector projected onto another one.","Returns a projection of this transform in 2d space.","Creates a rotation around from a quaternion representation.","The real part.","Creates a rotation from an angle in radians.","","","Shorthand for …","Returns a reflection vector using an incident ray and a …","Returns a reflection vector using an incident ray and a …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","","Return the normalized vector even if the length is larger …","Return the normalized vector even if the length is larger …","Returns a rotation transform.","Create a 3d rotation transform from an angle / axis. The …","","Return a box with edges rounded to integer coordinates, …","Return a box3d with edges rounded to integer coordinates, …","Rounds each component to the nearest integer value.","See Point2D::round()","Rounds each component to the nearest integer value.","See Point3D::round()","Return a rectangle with edges rounded to integer …","See <code>Size2D::round()</code>.","Rounds each component to the nearest integer value.","See <code>Size3D::round()</code>.","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See <code>Vector2D::round()</code>","Rounds each component to the nearest integer value.","See <code>Vector3D::round()</code>","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","","","","","","Create a 2d scale transform:","Create a 3d scale transform:","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns vector, each component of which or from <code>a</code>, or from …","Returns vector, each component of which or from <code>a</code>, or from …","Change the size of the box by adjusting the max endpoint …","","","","","Shorthand for <code>Size2D::new(w, h)</code>.","Shorthand for <code>Size3D::new(w, h, d)</code>.","Create a 2d skew transform.","Spherical linear interpolation between this rotation and …","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","","","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Returns the vector’s length squared.","Returns the vector’s length squared.","Computes the squared norm of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a rotation representing the other rotation …","Returns a rotation representing this rotation followed by …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two transforms such that …","Applies a rotation after self’s transformation and …","Returns a transform with a rotation applied after self’s …","Applies a scale after self’s transformation and returns …","Returns a transform with a scale applied after self’s …","Applies a translation after self’s transformation and …","Returns a transform with a translation applied after self…","Convert into a 2d point.","Create a 2D transform picking the relevant terms from this …","Convert into a 2d vector.","Convert into a 3d point with z-coordinate equals to zero.","Creates a 3d rotation (around the z axis) from this 2d …","Create a 3D transform from the current transform","Convert into a 3d vector with <code>z</code> coordinate equals to …","Cast into an array with x and y.","Cast into an array with x, y and z.","Return this size as an array of two elements (width, then …","Return this size as an array of three elements (width, …","Returns an array containing this transform’s terms.","Returns an array containing this transform’s terms.","Cast into an array with x and y.","Cast into an array with x, y and z.","Cast into an array with x and y.","Cast into an array with x, y and z.","","Cast into an array with x, y, z and 0.","Returns an array containing this transform’s terms …","Returns an array containing this transform’s terms …","Equivalent to <code>to_array</code> with elements packed two at a time …","Equivalent to <code>to_array</code> with elements packed four at a time …","Equivalent to <code>to_array_transposed</code> with elements packed …","","Cast into an <code>f32</code> box.","Cast into an <code>f32</code> box3d.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> rectangle.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> vector.","Cast into an <code>f32</code> vector.","Cast into an <code>f64</code> box.","Cast into an <code>f64</code> box3d.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> rectangle.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> vector.","Cast into an <code>f64</code> vector.","Cast into an <code>i32</code> box, truncating decimals if any.","Cast into an <code>i32</code> box3d, truncating decimals if any.","Cast into an i32 point, truncating decimals if any.","Cast into an <code>i32</code> point, truncating decimals if any.","Cast into an <code>i32</code> rectangle, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an i32 vector, truncating decimals if any.","Cast into an <code>i32</code> vector, truncating decimals if any.","Cast into an <code>i64</code> box, truncating decimals if any.","Cast into an <code>i64</code> box3d, truncating decimals if any.","Cast into an i64 point, truncating decimals if any.","Cast into an <code>i64</code> point, truncating decimals if any.","Cast into an <code>i64</code> rectangle, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an i64 vector, truncating decimals if any.","Cast into an <code>i64</code> vector, truncating decimals if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast this vector into a point.","Cast this vector into a point.","Convert into Cartesian 2D point.","Convert into Cartesian 3D point.","","Cast this vector into a size.","Returns the matrix representation of this rotation.","Returns the matrix representation of this rotation.","Returns the matrix representation of this translation.","Returns the matrix representation of this translation.","Creates translation by this vector in vector units.","Creates translation by this vector in vector units","","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Return this size as a tuple of two elements (width, then …","Return this size as an array of three elements (width, …","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","","Cast into a tuple with x, y, z and 0.","Cast into an <code>u32</code> box, truncating decimals if any.","Cast into an <code>u32</code> box3d, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> rectangle, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u64</code> rectangle, truncating decimals if any.","Cast into an <code>u64</code> size, truncating decimals if any.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Cast into an <code>usize</code> box, truncating decimals if any.","Cast into an <code>usize</code> box3d, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> rectangle, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast this point into a vector.","Cast this point into a vector.","Return this size as a vector with width and height.","Return this size as a vector with width, height and depth.","Cast into a 2D vector.","Cast into a 3D vector.","","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 3D box and cast its unit.","Returns the given 2d point transformed by this rotation.","","Returns the given point transformed by this scale.","","Returns the given point transformed by this transform.","","Translate a point and cast its unit.","","Returns the given 2d point transformed by this rotation …","Returns the given 2d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given 3d point transformed by this rotation.","Returns the given point transformed by this scale.","Returns the given 3d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given rect transformed by this scale.","Translate a rectangle and cast its unit.","Translate a rectangle and cast its unit.","Returns the given size transformed by this scale.","No-op, just cast the unit.","No-op, just cast the unit.","Returns the given 2d vector transformed by this rotation.","","","Returns the given vector transformed by this scale.","Returns the given vector transformed by this matrix.","","","Returns the given 2d vector transformed by this rotation …","Returns the given 2d vector transformed by this matrix.","Returns the given 3d vector transformed by this rotation.","Returns the given 3d vector transformed by this matrix.","Returns the same box, translated by a vector.","Returns the same box3d, translated by a vector.","Returns the same rectangle, translated by a vector.","Create a 2d translation transform:","Create a 3d translation transform:","","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector with length of one unit.","Returns the vector with length of one unit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union of two boxes.","Computes the union of two boxes.","","Creates a rotation around from a quaternion representation …","","","","","","","","","","","","","","","","","","","","","","","","Convenience constructor.","Convenience constructor.","Returns the vector part (i, j, k) of this quaternion.","","","Returns result of multiplication of all components","","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","Returns the same transform with a different destination …","Returns the same transform with a different destination …","Return this vector scaled to fit the provided length.","Return this vector capped to a maximum length.","Return this vector capped to a maximum length.","Return this vector with a minimum length applied.","Return this vector with a minimum length applied.","Returns the same transform with a different source unit.","Returns the same transform with a different source unit.","","","","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","Returns a 2d point using this point’s x and y coordinates","Returns a 2d vector using this vector’s x and y …","Returns a 2d vector using this vector’s x and y …","","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s x and z …","","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","","Swap x and y.","Swap x and y.","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s y and z …","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>origin()</code>.","","The same as <code>origin()</code>.","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>Zero::zero()</code> but available without importing …","","The same as <code>Zero::zero()</code> but available without importing …","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Trait for testing approximate equality","Default epsilon value","Returns <code>true</code> is this object is approximately equal to the …","Returns <code>true</code> is this object is approximately equal to the …","","","","","","","","","","","","","","","","","","","","","","","Angle in radians","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","Component multiplied by the imaginary number <code>i</code>.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The real part.","","","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Defines the smallest integer equal or greater than the …","Defines the biggest integer equal or lower than the …","","Defines the nearest integer value to the original value.","","Rounds to the smallest integer equal or greater than the …","Rounds to the biggest integer equal or lower than the …","","Rounds to the nearest integer value.","","A flattening iterator for quadratic bézier segments.","A flattening iterator for quadratic bézier segments.","","A 2d curve segment defined by three points: the beginning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common APIs to segment types.","","Return the curve after the split point.","Compute the length of the segment using a flattened …","Return the curve before the split point.","Sample the derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Swap the direction of the segment.","Approximates the curve with sequence of line segments.","Start of the curve.","Sample the curve at t (expecting t between 0 and 1).","Split this curve into two sub-curves.","Return the curve inside a given range of t.","End of the curve.","","","Sample x at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","","Angle between vectors v1 and v2 (oriented clockwise …","","","","","An iterator that consumes <code>Event</code> iterator and yields …","An iterator that consumes an iterator of <code>Point</code>s and …","","An extension trait for <code>PathEvent</code> iterators.","Applies a 2D transform to a path iterator and yields the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that turns curves into line segments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create the iterator.","Creates a new transformed path iterator from a path …","","","","","","","","Returns an iterator applying a 2D transform to all of its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Angle in radians","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","","","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>.","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","","The <code>x</code> (traditionally, horizontal) coordinate.","","","The <code>y</code> (traditionally, vertical) coordinate.","","","The default builder for <code>Path</code>.","A builder for <code>Path</code> with custom attributes.","An iterator of endpoint and control point ids for <code>Path</code> and …","An iterator for <code>Path</code> and <code>PathSlice</code>.","An iterator for <code>Path</code> and <code>PathSlice</code>.","A simple path data structure.","A view on a <code>Path</code>.","An iterator of over a <code>Path</code> traversing the path in reverse.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate on a flattened approximation of the path with …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>Path</code> from This iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Builder that appends a path to an existing PathBuffer.","A Builder that appends a path to an existing PathBuffer, …","Iterator over the paths in a <code>PathBufferSlice</code>.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A view over a sequence of endpoint IDs forming a polygon.","An iterator of <code>Event&lt;EndpointId, ()&gt;</code>.","An iterator of <code>PathEvent</code>.","A view over a sequence of endpoints forming a polygon.","An iterator of <code>IdEvent</code> for <code>Polygon</code>.","An iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a path.","The base path building interface.","An extension trait for <code>PathEvent</code> iterators.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds an elliptical arc.","Starts a new sub-path at a given position.","Builds a path object, consuming the builder.","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","Ends the current sub path.","","Returns a builder that approximates all curves with …","Returns an iterator that turns curves into line segments.","Adds an horizontal line segment.","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","Start a new sub-path at the given position.","","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","Adds an horizontal line segment in relative coordinates.","Equivalent to <code>line_to</code> in relative coordinates.","Equivalent to <code>move_to</code> in relative coordinates.","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","Adds a vertical line segment in relative coordinates.","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","Returns a builder that applies the given transformation to …","Returns an iterator applying a 2D transform to all of its …","Adds a vertical line segment.","Returns a builder that support SVG commands.","A bevelled corner.","The stroke for each sub-path does not extend beyond its …","A <code>Gradient</code> color.","The shape used at the end of open subpaths when they are …","The dash pattern used when stroking the line.","The shape used at the corners of paths or basic shapes …","A sharp corner.","At the end of each sub-path, the shape representing the …","A round corner.","A solid <code>Color</code>.","At the end of each sub-path, the shape representing the …","The style of a stroke.","The coloring style of some drawing.","The shape to be used at the end of open subpaths when they …","The dash pattern used when stroking the line.","The shape to be used at the corners of paths or basic …","The offset of <code>LineDash::segments</code> to start the pattern.","The alternating lengths of lines and gaps which describe …","The color or gradient of the stroke.","The distance between the two edges of the stroke.","The <code>Checkbox</code> can be interacted with.","The theme catalog of a <code>Checkbox</code>.","A box that can be checked.","The item class of the <code>Catalog</code>.","The <code>Checkbox</code> cannot be interacted with.","The <code>Checkbox</code> can be interacted with and it is being …","The icon in a <code>Checkbox</code>.","The possible status of a <code>Checkbox</code>.","The style of a checkbox.","A styling function for a <code>Checkbox</code>.","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the checkbox.","The <code>Border</code> of hte checkbox.","","","","","","","","","Sets the style class of the <code>Checkbox</code>.","","","","","","","The unicode code point that will be used as the icon.","","","","","A danger checkbox; denoting a negaive toggle.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.","Font that will be used to display the <code>code_point</code>,","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Sets the <code>Icon</code> of the <code>Checkbox</code>.","The icon <code>Color</code> of the checkbox.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The line height of the icon.","","Creates a new <code>Checkbox</code>.","","Sets the function that will be called when the <code>Checkbox</code> is …","Sets the function that will be called when the <code>Checkbox</code> is …","A primary checkbox; denoting a main toggle.","A secondary checkbox; denoting a complementary toggle.","The shaping strategy of the icon.","Sets the size of the <code>Checkbox</code>.","","Font size of the content.","Sets the spacing between the <code>Checkbox</code> and the text.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Checkbox</code>.","A success checkbox; denoting a positive toggle.","","The text <code>Color</code> of the checkbox.","Sets the text <code>text::LineHeight</code> of the <code>Checkbox</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Checkbox</code>.","Sets the text size of the <code>Checkbox</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Checkbox</code>.","Indicates if the <code>Checkbox</code> is currently checked.","Indicates if the <code>Checkbox</code> is currently checked.","Indicates if the <code>Checkbox</code> is currently checked.","The theme catalog of a <code>ComboBox</code>.","A widget for searching and selecting a single value from a …","The local state of a <code>ComboBox</code>.","","","","","","","","","","","","","","","","","","","","The default class for the text input of the <code>ComboBox</code>.","The default class for the menu of the <code>ComboBox</code>.","","","","","","","","","","","Sets the <code>Renderer::Font</code> of the <code>ComboBox</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Sets the <code>text_input::Icon</code> of the <code>ComboBox</code>.","","","Sets the style class of the input of the <code>ComboBox</code>.","Sets the style of the input of the <code>ComboBox</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Sets the <code>LineHeight</code> of the <code>ComboBox</code>.","Sets the style class of the menu of the <code>ComboBox</code>.","Sets the style of the menu of the <code>ComboBox</code>.","","Creates a new <code>ComboBox</code> with the given list of options, a …","Creates a new <code>State</code> for a <code>ComboBox</code> with the given list of …","Sets the message that will be produced when the outside …","","Sets the message that should be produced when some text is …","Sets the message that will be produced when an option of …","","Sets the <code>Padding</code> of the <code>ComboBox</code>.","","Sets the text sixe of the <code>ComboBox</code>.","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>ComboBox</code>.","Creates a new <code>State</code> for a <code>ComboBox</code> with the given list of …","The theme catalog of a <code>Container</code>.","The item class of the <code>Catalog</code>.","An element decorating some content.","The identifier of a <code>Container</code>.","The appearance of a container.","A styling function for a <code>Container</code>.","","","","Sets the content alignment for the horizontal axis of the …","Sets the content alignment for the vertical axis of the …","","","","","","","","","","","","","The <code>Background</code> of the container.","The <code>Border</code> of the container.","A bordered <code>Container</code> with a background.","","","","","","","Centers the contents in the horizontal axis of the …","Centers the contents in the vertical axis of the <code>Container</code>.","","Sets the style class of the <code>Container</code>.","Sets whether the contents of the <code>Container</code> should be …","","","","","","","","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","Draws the background of a <code>Container</code> given its <code>Style</code> and …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Sets the height of the <code>Container</code>.","Sets the <code>Id</code> of the <code>Container</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Computes the layout of a <code>Container</code>.","","Sets the maximum height of the <code>Container</code>.","Sets the maximum width of the <code>Container</code>.","","Creates a <code>Container</code> with the given content.","Creates a custom <code>Id</code>.","","","","","Sets the <code>Padding</code> of the <code>Container</code>.","A rounded <code>Container</code> with a background.","The <code>Shadow</code> of the container.","","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Container</code>.","","The text <code>Color</code> of the container.","","","A transparent <code>Container</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a unique <code>Id</code>.","","","","Produces a <code>Command</code> that queries the visible screen bounds …","","","","Sets the width of the <code>Container</code>.","Updates the background of the <code>Style</code>.","Updates the border of the <code>Style</code> with the given <code>Color</code> and …","Image filtering strategy.","A handle of some image data.","A frame that displays an image while keeping aspect ratio.","Bilinear interpolation.","Nearest neighbor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>ContentFit</code> of the <code>Image</code>.","Returns a reference to the image <code>Data</code>.","","","","","","","","","","","Draws an <code>Image</code>","","","","","","","","","","","","","Sets the <code>FilterMethod</code> of the <code>Image</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates an image <code>Handle</code> containing the image data directly.","Creates an image <code>Handle</code> pointing to the image of the given …","Creates an image <code>Handle</code> containing the image pixels …","","","","","","","","Sets the height of the <code>Image</code> boundaries.","Returns the unique identifier of the <code>Handle</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Computes the layout of an <code>Image</code>.","","Creates a new <code>Image</code> with the given path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zoom and pan on an image.","Creates a new <code>Viewer</code> with the given image <code>Handle</code>.","","","","Sets the width of the <code>Image</code> boundaries.","The local state of a <code>Viewer</code>.","A frame that displays an image with the ability to zoom …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>image::FilterMethod</code> of the <code>Viewer</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Sets the height of the <code>Viewer</code>.","Returns the bounds of the underlying image, given the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns if the cursor is currently grabbed by the <code>Viewer</code>.","","Sets the max scale applied to the image of the <code>Viewer</code>.","Sets the min scale applied to the image of the <code>Viewer</code>.","","Creates a new <code>Viewer</code> with the given <code>State</code>.","Creates a new <code>State</code>.","","","Sets the padding of the <code>Viewer</code>.","Sets the percentage the image of the <code>Viewer</code> will be scaled …","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Viewer</code>.","","Distribute content vertically.","A container that distributes its contents vertically.","","Sets the horizontal alignment of the contents of the <code>Column</code>…","","","","","","","","","","","","","","","","Extends the <code>Column</code> with the given children.","Returns the argument unchanged.","","","Creates a <code>Column</code> from already allocated <code>Vec</code>s.","Sets the height of the <code>Column</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","Sets the maximum width of the <code>Column</code>.","","Creates an empty <code>Column</code>.","","","","","Sets the <code>Padding</code> of the <code>Column</code>.","Adds an element to the <code>Column</code>.","Adds an element to the <code>Column</code>, if <code>Some</code>.","","Sets the vertical spacing <em>between</em> elements.","","","","","","","","","","","","Sets the width of the <code>Column</code>.","Creates a <code>Column</code> with the given capacity.","Creates a <code>Column</code> with the given elements.","Build and show dropdown menus.","The theme catalog of a <code>Menu</code>.","The item class of the <code>Catalog</code>.","A list of selectable options.","The local state of a <code>Menu</code>.","The appearance of a <code>Menu</code>.","A styling function for a <code>Menu</code>.","","","","","","","","","","","","","","","","The <code>Background</code> of the menu.","The <code>Border</code> of the menu.","","","","","","","","","","","","The default style of the list of a <code>Menu</code>.","The default class produced by the <code>Catalog</code>.","","The default class for the scrollable of the <code>Menu</code>.","","","","","","","","","","","","","","","Sets the font of the <code>Menu</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a new <code>Menu</code> with the given <code>State</code>, a list of options,","Creates a new <code>State</code> for a <code>Menu</code>.","","Turns the <code>Menu</code> into an overlay <code>Element</code> at the given target …","Sets the <code>Padding</code> of the <code>Menu</code>.","The background <code>Color</code> of a selected option in the menu.","The text <code>Color</code> of a selected option in the menu.","The <code>Style</code> of a class with the given status.","The text <code>Color</code> of the menu.","Sets the text <code>text::LineHeight</code> of the <code>Menu</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Menu</code>.","Sets the text size of the <code>Menu</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Menu</code>.","All panes are visible","A fixed reference line for the measurement of coordinates.","Bottom edge.","A <code>Pane</code> was picked and then dropped outside of other <code>Pane</code> …","The theme catalog of a <code>PaneGrid</code>.","Center region.","The item class of this <code>Catalog</code>.","The arrangement of a <code>PaneGrid</code>.","The content of a <code>Pane</code>.","The visible contents of the <code>PaneGrid</code>","A four cardinal direction.","↓","An event produced during a drag and drop interaction of a …","A pane that can be dragged.","A <code>Pane</code> was dropped on top of another <code>Pane</code>.","The edges of an area.","An <code>Edge</code> of the full <code>PaneGrid</code>.","Edge region.","The appearance of a highlight of the <code>PaneGrid</code>.","The horizontal axis: —","←","Left edge.","A line.","A maximized pane is visible","A layout node of a <code>PaneGrid</code>.","A rectangular region in a <code>PaneGrid</code> used to display widgets.","A <code>Pane</code>.","The region of this <code>Node</code> is taken by a <code>Pane</code>.","A single <code>Pane</code> of the <code>PaneGrid</code>.","A collection of panes distributed using either vertical or …","A <code>Pane</code> was picked for dragging.","The region of a <code>Pane</code>.","An event produced during a resize interaction of a <code>PaneGrid</code>…","→","Right edge.","A divider that splits a region in a <code>PaneGrid</code> into two …","A split of the available space.","The region of this <code>Node</code> is split into two.","","The appearance of a <code>PaneGrid</code>.","A styling function for a <code>PaneGrid</code>.","The <code>Target</code> area a pane can be dropped on.","The title bar of a <code>Pane</code>.","Top edge.","↑","The vertical axis: |","","","","","","","","","","","","","","","","","","","Sets whether or not the <code>controls</code> attached to this <code>TitleBar</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the pane region.","The <code>Border</code> of the pane region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Draggable</code> with the given <code>Layout</code> can be …","","","Sets the style class of the <code>Content</code>.","Sets the style class of the <code>TitleBar</code>.","Sets the style class of the <code>PaneGrid</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the <code>Line</code>.","","","","","","","","","","","","","","","","","","","","","Sets the controls of the <code>TitleBar</code>.","The default style of a <code>PaneGrid</code>.","The default class produced by this <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>Content</code> with the provided <code>Renderer</code> and <code>Layout</code>.","Draws the <code>TitleBar</code> with the provided <code>Renderer</code> and <code>Layout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the height of the <code>PaneGrid</code>.","The appearance of a hovered region highlight.","The appearance of a hovered split.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the mouse cursor is over the pick area of …","Returns an iterator over the values of the <code>Contents</code>","","Returns the layout <code>Node</code> of the <code>Contents</code>","","Creates a new <code>Content</code> with the provided body.","Creates a new <code>TitleBar</code> with the given content.","Creates a <code>PaneGrid</code> with the given <code>State</code> and view function.","","Sets the message that will be produced when a <code>Pane</code> of the …","Enables the drag and drop interactions of the <code>PaneGrid</code>, …","","Enables the resize interactions of the <code>PaneGrid</code>, which will","","","Sets the <code>Padding</code> of the <code>TitleBar</code>.","Returns the rectangular region for each <code>Pane</code> in the <code>Node</code> …","","","The appearance of a picked split.","The new ratio of the <code>Split</code>.","","Sets the spacing <em>between</em> the panes of the <code>PaneGrid</code>.","Splits the provided <code>Rectangle</code> on the current <code>Axis</code> with the …","The <code>Split</code> that is being dragged for resizing.","Calculates the bounds of the split line in a <code>Rectangle</code> …","Returns the axis, rectangular region, and ratio for each …","Returns an iterator over each <code>Split</code> in this <code>Node</code>.","The state of a <code>PaneGrid</code>.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Content</code>.","Sets the style of the <code>TitleBar</code>.","Sets the style of the <code>PaneGrid</code>.","","Sets the <code>TitleBar</code> of the <code>Content</codeets the width of the <code>PaneGrid</code>.","The width of the <code>Line</code>.","The left/top <code>Configuration</code> of the split.","The direction of the split.","The right/bottom <code>Configuration</code> of the split.","The ratio of the split in [0.0, 1.0].","The picked <code>Pane</code>.","The picked <code>Pane</code>.","The picked <code>Pane</code>.","The <code>Target</code> where the picked <code>Pane</code> was dropped on.","The left/top <code>Node</code> of the split.","The direction of the split.","The right/bottom <code>Node</code> of the split.","The <code>Split</code> of this <code>Node</code>.","The ratio of the split in [0.0, 1.0].","The current action of a <code>PaneGrid</code>.","A <code>Pane</code> in the <code>PaneGrid</code> is being dragged.","The <code>PaneGrid</code> is idle.","The internal state of a <code>PaneGrid</code>.","A <code>Split</code> in the <code>PaneGrid</code> is being dragged.","The state of a <code>PaneGrid</code>.","","","","Returns the adjacent <code>Pane</code> of another <code>Pane</code> in the given …","","","","","","","","","","","","","","","","","","","","","","","","","Closes the given <code>Pane</code> and returns its internal state and …","","","","","","","","","","","","","","Drops the given <code>Pane</code> into the provided <code>Target</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Initializes the <code>Internal</code> state of a <code>PaneGrid</code> from a …","","","","Returns the internal state of the given <code>Pane</code>, if it exists.","Returns the internal state of the given <code>Pane</code> with …","","","","The internal state of the <code>PaneGrid</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the amount of panes in the <code>State</code> is 0.","Returns an iterator over all the panes of the <code>State</code>, …","Returns a mutable iterator over all the panes of the <code>State</code>,","Returns the layout of the <code>State</code>.","The layout <code>Node</code> of the <code>Internal</code> state","Returns the total amount of panes in the <code>State</code>.","Maximize the given <code>Pane</code>. Only this pane will be rendered …","Returns the maximized <code>Pane</code> of the <code>PaneGrid</code>.","Move <code>Pane</code> to an <code>Edge</code> of the <code>PaneGrid</code>.","Creates a new <code>State</code>, initializing the first pane with the …","The panes of the <code>PaneGrid</code>.","Returns the current <code>Pane</code> that is being dragged, if any.","Returns the current <code>Split</code> that is being dragged, if any.","Resizes two panes by setting the position of the provided …","Restore the currently maximized <code>Pane</code> to it’s normal …","Splits the given <code>Pane</code> into two in the given <code>Axis</code> and …","Split a target <code>Pane</code> with a given <code>Pane</code> on a given <code>Region</code>.","Swaps the position of the provided panes in the <code>State</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>State</code> with the given <code>Configuration</code>.","The <code>Axis</code> of the <code>Split</code>.","The starting <code>Point</code> of the drag interaction.","The <code>Pane</code> being dragged.","The <code>Split</code> being dragged.","The <code>PickList</code> can be interacted with.","Displays an arrow icon (▼).","The theme catalog of a <code>PickList</code>.","The item class of the <code>Catalog</code>.","A custom dynamic handle.","The handle to the right side of the <code>PickList</code>.","The <code>PickList</code> is being hovered.","The icon of a <code>Handle</code>.","No handle will be shown.","The <code>PickList</code> is open.","A widget for selecting a single value from a list of …","A custom static handle.","The possible status of a <code>PickList</code>.","The appearance of a pick list.","A styling function for a <code>PickList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the pick list.","The <code>Border</code> of the pick list.","","","","","","","","","","","Sets the style class of the <code>PickList</code>.","","","","","","","","","The unicode code point that will be used as the icon.","","","","","","The default style of the field of a <code>PickList</code>.","The default class produced by the <code>Catalog</code>.","","The default class for the menu of the <code>PickList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the font of the <code>PickList</code>.","Font that will be used to display the <code>code_point</code>,","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Sets the <code>Handle</code> of the <code>PickList</code>.","The handle <code>Color</code> of the pick list.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Line height of the content.","","Creates a new <code>PickList</code> with the given list of options, the …","","Sets the message that will be produced when the <code>PickList</code> …","","Sets the message that will be produced when the <code>PickList</code> …","","Sets the <code>Padding</code> of the <code>PickList</code>.","Sets the placeholder of the <code>PickList</code>.","The placeholder <code>Color</code> of the pick list.","The shaping strategy of the icon.","","Font size of the content.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>PickList</code>.","","The text <code>Color</code> of the pick list.","Sets the text <code>text::LineHeight</code> of the <code>PickList</code>.","Sets the <code>text::Shaping</code> strategy of the <code>PickList</code>.","Sets the text size of the <code>PickList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>PickList</code>.","The <code>Icon</code> used when <code>PickList</code> is closed.","The <code>Icon</code> used when <code>PickList</code> is open.","Font size of the content.","The theme catalog of a <code>ProgressBar</code>.","The item class of the <code>Catalog</code>.","The default height of a <code>ProgressBar</code>.","A bar that displays progress.","The appearance of a progress bar.","A styling function for a <code>ProgressBar</code>.","","","","","","","","","","","The <code>Background</code> of the progress bar.","The <code>Background</code> of the bar of the progress bar.","The <code>Border</code> of the progress bar.","","","","","Sets the style class of the <code>ProgressBar</code>.","","","","","The danger style of a <code>ProgressBar</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Sets the height of the <code>ProgressBar</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>ProgressBar</code>.","The primary style of a <code>ProgressBar</code>.","The secondary style of a <code>ProgressBar</code>.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>ProgressBar</code>.","The success style of a <code>ProgressBar</code>.","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>ProgressBar</code>.","The theme catalog of a <code>QRCode</code>.","The item class of the <code>Catalog</code>.","The data of a <code>QRCode</code>.","The data is too long to encode in a QR code for the chosen …","An error that occurred when building a <code>Data</code> for a <code>QRCode</code>.","The error correction level.","High error correction. 30% of the data can be restored.","A character that does not belong to the character set was …","The chosen ECI designator is invalid. A valid designator …","The chosen <code>Version</code> and <code>ErrorCorrection</code> combination is …","Low error correction. 7% of the data can be restored.","Medium error correction. 15% of the data can be restored.","A micro QR code version. It should be between 1 and 4.","A normal QR code version. It should be between 1 and 40.","A type of matrix barcode consisting of squares arranged in …","Quartile error correction. 25% of the data can be restored.","The appearance of a QR code.","A styling function for a <code>QRCode</code>.","One or more characters in the provided data are not …","The size of a <code>QRCode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color of the QR code background","","","","","","","","","","","","","The color of the QR code data cells","Sets the size of the squares of the grid cell of the <code>QRCode</code>…","Sets the style class of the <code>QRCode</code>.","","","","","","","","","","","","","","","The default style of a <code>QRCode</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>QRCode</code> with the provided <code>Data</code>.","Creates a new <code>Data</code> with the provided data.","","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>QRCode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Data</code> with the provided <code>ErrorCorrection</code>.","Creates a new <code>Data</code> with the provided <code>Version</code> and …","The <code>Radio</code> button can be interacted with.","The theme catalog of a <code>Radio</code>.","The item class of the <code>Catalog</code>.","The default size of a <code>Radio</code> button.","The default spacing of a <code>Radio</code> button.","The <code>Radio</code> button is being hovered.","A circular button representing a choice.","The possible status of a <code>Radio</code> button.","The appearance of a radio button.","A styling function for a <code>Radio</code>.","","","","","","","","","","","","","","","","The <code>Background</code> of the radio button.","The border <code>Color</code> of the radio button.","The border width of the radio button.","","","","","","","Sets the style class of the <code>Radio</code> button.","","","","","","","","The default style of a <code>Radio</code> button.","The default class produced by the <code>Catalog</code>.","","","","","","","The <code>Color</code> of the dot of the radio button.","","","","","","","","","","","","","","Sets the text font of the <code>Radio</code> button.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Radio</code> button.","","Sets the size of the <code>Radio</code> button.","","Sets the spacing between the <code>Radio</code> button and the text.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Radio</code> button.","","The text <code>Color</code> of the radio button.","Sets the text <code>text::LineHeight</code> of the <code>Radio</code> button.","Sets the <code>text::Shaping</code> strategy of the <code>Radio</code> button.","Sets the text size of the <code>Radio</code> button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Radio</code> button.","Indicates whether the <code>Radio</code> button is currently selected.","Indicates whether the <code>Radio</code> button is currently selected.","Different offset on each end of the rule, length units. …","The theme catalog of a <code>Rule</code>.","The item class of the <code>Catalog</code>.","The fill mode of a rule.","Fill the whole length of the container.","Uniform offset from each end, length units.","Fill a percent of the length of the container. The rule …","Display a horizontal or vertical rule for dividing content.","The appearance of a rule.","A styling function for a <code>Rule</code>.","","","","","","","","","","","","","","","","","","","","","","Sets the style class of the <code>Rule</code>.","","","","","The color of the rule.","","","","The default styling of a <code>Rule</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","Return the starting offset and length of the rule.","The <code>FillMode</code> of the rule.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates a horizontal <code>Rule</code> with the given height.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The radius of the line corners.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Rule</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vertical <code>Rule</code> with the given width.","","","","The width (thickness) of the rule line.","The amount of absolute offset in each direction of a …","The <code>Scrollable</code> can be interacted with.","Alignment of the scrollable’s content relative to it’s …","Both vertical and horizontal scrolling","The theme catalog of a <code>Scrollable</code>.","The item class of the <code>Catalog</code>.","The direction of <code>Scrollable</code>.","The <code>Scrollable</code> is being dragged.","A relative offset that points to the bottom-right of a …","Content is aligned to the end of the <code>Viewport</code>","Horizontal scrolling","The <code>Scrollable</code> is being hovered.","The identifier of a <code>Scrollable</code>.","Properties of a scrollbar within a <code>Scrollable</code>.","The amount of relative offset in each direction of a …","A relative offset that points to the top-left of a …","A widget that can vertically display an infinite amount of …","The appearance of the scrollbar of a scrollable.","The appearance of the scroller of a scrollable.","Content is aligned to the start of the <code>Viewport</code>.","The possible status of a <code>Scrollable</code>.","The appearance of a scrolable.","A styling function for a <code>Scrollable</code>.","Vertical scrolling","The current <code>Viewport</code> of the <code>Scrollable</code>.","Returns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>.","Returns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>, but …","","","","","","","","","","","","","Sets the alignment of the <code>Scrollable</code> .","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of a scrollbar.","The <code>Border</code> of a scrollbar.","The <code>Border</code> of the scroller.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bounds of the current <code>Viewport</code>.","","Sets the style class of the <code>Scrollable</code>.","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the scroller.","","","","","","","","","","","","","The <code>container::Style</code> of a scrollable.","Returns the content bounds of the current <code>Viewport</code>.","The default style of a <code>Scrollable</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the gap between a horizontal and …","","","Sets the height of the <code>Scrollable</code>.","Returns the <code>Properties</code> of the horizontal scrollbar, if any.","The horizontal <code>Scrollbar</code> appearance.","Sets the <code>Id</code> of the <code>Scrollable</code>.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the scrollbar margin of the <code>Scrollable</code> .","","Creates a new vertical <code>Scrollable</code>.","Creates new <code>Properties</code> for use in a <code>Scrollable</code>.","Creates a custom <code>Id</code>.","","","","","","","Sets a function to call when the <code>Scrollable</code> is scrolled.","","","Returns the <code>RelativeOffset</code> of the current <code>Viewport</code>.","Produces a <code>Command</code> that scrolls the <code>Scrollable</code> with the …","The appearance of the <code>Scroller</code> of a scrollbar.","Sets the scroller width of the <code>Scrollable</code> .","","Produces a <code>Command</code> that snaps the <code>Scrollable</code> with the …","","The <code>Style</code> of a class with the given status.","Sets the style of this <code>Scrollable</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a unique <code>Id</code>.","","","","","","","","","","","","","Returns the <code>Properties</code> of the vertical scrollbar, if any.","The vertical <code>Scrollbar</code> appearance.","","","","","","","","","","","","","Sets the width of the <code>Scrollable</code>.","Sets the scrollbar width of the <code>Scrollable</code> .","Creates a new <code>Scrollable</code> with the given <code>Direction</code>.","The amount of horizontal offset","The amount of horizontal offset","The amount of vertical offset","The amount of vertical offset","The properties of the horizontal scrollbar.","The properties of the vertical scrollbar.","Indicates if the horizontal scrollbar is being dragged.","Indicates if the horizontal scrollbar is being hovered.","Indicates if the vertical scrollbar is being dragged.","Indicates if the vertical scrollbar is being hovered.","A <code>Shader</code> event.","A keyboard event.","A mouse event.","A set of methods which allows a <code>Primitive</code> to be rendered.","The type of primitive this <code>Program</code> can draw.","The state and logic of a <code>Shader</code> widget.","A window requested a redraw.","A widget which can render custom shaders with Iced’s <code>wgpu</code>…","The internal state of the <code>Program</code>.","Stores custom, user-provided types.","A touch event.","A viewing region for displaying computer graphics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>Primitive</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns a reference to the data with type <code>T</code> if it exists …","Returns a mutable reference to the data with type <code>T</code> if it …","Returns <code>true</code> if <code>Storage</code> contains a type <code>T</code>.","Set the <code>height</code> of the custom <code>Shader</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the logical size of the <code>Viewport</code>.","Returns the current mouse interaction of the <code>Program</code>.","Returns the current mouse interaction of the <code>Program</code>.","","Create a new custom <code>Shader</code>.","","","Returns the physical height of the <code>Viewport</code>.","Returns the physical size of the <code>Viewport</code>.","Returns the physical width of the <code>Viewport</code>.","Processes the <code>Primitive</code>, allowing for GPU buffer …","Returns the projection transformation of the <code>Viewport</code>.","Renders the <code>Primitive</code>.","Returns the scale factor of the <code>Viewport</code>.","","","Inserts the data <code>T</code> in to <code>Storage</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the internal <code>State</code> of the <code>Program</code>. This can be used …","Update the internal <code>State</code> of the <code>Program</code>. This can be used …","","","","","","Set the <code>width</code> of the custom <code>Shader</code>.","Creates a new <code>Viewport</code> with the given physical dimensions …","The <code>Slider</code> can be interacted with.","The theme catalog of a <code>Slider</code>.","A circular handle.","The item class of the <code>Catalog</code>.","The default height of a <code>Slider</code>.","The <code>Slider</code> is being dragged.","The appearance of the handle of a slider.","The shape of the handle of a slider.","The <code>Slider</code> is being hovered.","The appearance of a slider rail","A rectangular shape.","An horizontal bar and a handle that selects a single value …","The possible status of a <code>Slider</code>.","The appearance of a slider.","A styling function for a <code>Slider</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The border <code>Color</code> of the handle.","The border radius of the corners of the rail.","The border width of the handle.","","","","","","","","","","","","","Sets the style class of the <code>Slider</code>.","","","","","","","","","","","The <code>Color</code> of the handle.","The colors of the rail of the slider.","","","","","","","The default style of a <code>Slider</code>.","The default class produced by the <code>Catalog</code>.","Sets the optional default value for the <code>Slider</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","The appearance of the <code>Handle</code> of the slider.","Sets the height of the <code>Slider</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Slider</code>.","","Sets the release message of the <code>Slider</code>. This is called …","The colors of the rail of the slider.","The shape of the handle.","Sets the optional “shift” step for the <code>Slider</code>.","","","Sets the step size of the <code>Slider</code>.","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Slider</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Slider</code>.","The width of the stroke of a slider rail.","Changes the <code>HandleShape</code> of the <code>Style</code> to a circle with the …","The border radius of the corners of the rectangle.","The radius of the circle.","The width of the rectangle.","The theme catalog of an <code>Svg</code>.","The item class of the <code>Catalog</code>.","A handle of Svg data.","The <code>Svg</code> is being hovered.","The <code>Svg</code> is idle.","The possible status of an <code>Svg</code>.","The appearance of an <code>Svg</code>.","A styling function for an <code>Svg</code>.","A vector graphics image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the style class of the <code>Svg</code>.","","","","","","","The <code>Color</code> filter of an <code>Svg</code>.","","","","","Sets the <code>ContentFit</code> of the <code>Svg</code>.","Returns a reference to the SVG <code>Data</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates an SVG <code>Handle</code> from raw bytes containing either an …","Creates an SVG <code>Handle</code> pointing to the vector image of the …","Creates a new <code>Svg</code> that will display the contents of the …","","","","","","","Sets the height of the <code>Svg</code>.","Returns the unique identifier of the <code>Handle</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Svg</code> from the given <code>Handle</code>.","","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Svg</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Svg</code>.","An absolute height in logical pixels.","Advanced text shaping and font fallback.","No shaping and no font fallback.","Borrowed data.","The theme catalog of a <code>Text</code>.","The item class of this <code>Catalog</code>.","A fragment of <code>Text</code>.","A trait for converting a value to some text <code>Fragment</code>.","The height of a line of text in a paragraph.","Owned data.","A factor of the size of the text.","The shaping strategy of some text.","The internal state of a <code>Text</code> widget.","The appearance of some text.","A styling function for a <code>Text</code>.","A paragraph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the text.","","","","","The default class produced by this <code>Catalog</code>.","","","","","","","","","","","","","","","","","Draws text using the same logic as the <code>Text</code> widget.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts the value to some text <code>Fragment</code>.","","","","","Produces the <code>layout::Node</code> of a <code>Text</code> widget.","","","","","The <code>Style</code> of a class with the given status.","Returns the <code>LineHeight</code> in absolute logical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An interaction with an <code>Editor</code>.","The <code>TextEditor</code> can be interacted with.","Delete the previous character.","The theme catalog of a <code>TextEditor</code>.","The item class of the <code>Catalog</code>.","Click the <code>Editor</code> at the given <code>Point</code>.","The content of a <code>TextEditor</code>.","Delete the next character.","The <code>TextEditor</code> cannot be interacted with.","Move to the end of the text.","Move to the start of the text.","Move down.","Drag the mouse on the <code>Editor</code> to the given <code>Point</code>.","An action that edits text.","Perform an <code>Edit</code>.","Move to the end of the line.","Break the current line.","The <code>TextEditor</code> is focused.","Move to the start of the line.","The <code>TextEditor</code> is being hovered.","Insert the given character.","Move left.","A cursor movement.","Apply a <code>Motion</code>.","Move to the start of the next window.","Move to the start of the previous window.","Paste the given text.","Move right.","Scroll the <code>Editor</code> a certain amount of lines.","Select text with a given <code>Motion</code>.","Select the line at the current cursor.","Select the word at the current cursor.","The state of a <code>TextEditor</code>.","The possible status of a <code>TextEditor</code>.","The appearance of a text input.","A styling function for a <code>TextEditor</code>.","A multi-line text input.","Move up.","Move to the left boundary of a word.","Move to the right boundary of a word.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the text input.","The <code>Border</code> of the text input.","","","","","","","","","","","","","","","","","Sets the style class of the <code>TextEditor</code>.","","","","","","","","","","","","","","","","","","","Returns the current cursor position of the <code>Content</code>.","The default style of a <code>TextEditor</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","Returns the <code>Direction</code> of the <code>Motion</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>Font</code> of the <code>TextEditor</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Sets the height of the <code>TextEditor</code>.","Highlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …","The <code>Color</code> of the icon of the text input.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Action</code> is an editing action.","Returns whether the <code>TextEditor</code> is currently focused or not.","","Returns the text of the line at the given index, if it …","Returns the amount of lines of the <code>Content</code>.","Sets the <code>text::LineHeight</code> of the <code>TextEditor</code>.","Returns an iterator of the text of the lines in the <code>Content</code>…","","Creates new <code>TextEditor</code> with the given <code>Content</code>.","Creates an empty <code>Content</code>.","","Sets the message that should be produced when some action …","","Sets the <code>Padding</code> of the <code>TextEditor</code>.","Performs an <code>Action</code> on the <code>Content</code>.","The <code>Color</code> of the placeholder of the text input.","Returns the selected text of the <code>Content</code>.","The <code>Color</code> of the selection of the text input.","","Sets the text size of the <code>TextEditor</code>.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>TextEditor</code>.","","Returns the text of the <code>Content</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Color</code> of the value of the text input.","","","","","","","","","Widens the <code>Motion</code>, if possible.","Creates a <code>Content</code> with the given text.","The amount of lines to scroll.","The <code>TextInput</code> can be interacted with.","The theme catalog of a <code>TextInput</code>.","The item class of the <code>Catalog</code>.","","The default <code>Padding</code> of a <code>TextInput</code>.","The <code>TextInput</code> cannot be interacted with.","The <code>TextInput</code> is focused.","The <code>TextInput</code> is being hovered.","The content of the <code>Icon</code>.","The identifier of a <code>TextInput</code>.","The left side of a <code>TextInput</code>.","The right side of a <code>TextInput</code>.","The side of a <code>TextInput</code>.","The state of a <code>TextInput</code>.","The possible status of a <code>TextInput</code>.","The appearance of a text input.","A styling function for a <code>TextInput</code>.","A field that can be filled with text.","The value of a <code>TextInput</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Background</code> of the text input.","The <code>Border</code> of the text input.","","","","","","","","","","","","","","","","","Sets the style class of the <code>TextInput</code>.","","","","","","","","","","","","","","","The unicode code point that will be used as the icon.","","","","","","","","","Track the cursor of a text input.","Returns the <code>Cursor</code> of the <code>TextInput</code>.","The default style of a <code>TextInput</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its","","","","","","","","","","","","","","","","","","","","","","","","","","Produces a <code>Command</code> that focuses the <code>TextInput</code> with the …","","Focuses the <code>TextInput</code>.","Creates a new <code>State</code>, representing a focused <code>TextInput</code>.","Sets the <code>Font</code> of the <code>TextInput</code>.","The font that will be used to display the <code>code_point</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Sets the <code>Icon</code> of the <code>TextInput</code>.","The <code>Color</code> of the icon of the text input.","Sets the <code>Id</code> of the <code>TextInput</code>.","","","","","","","","","Inserts a new <code>char</code> at the given grapheme <code>index</code>.","Inserts a bunch of graphemes at the given grapheme <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the <code>Value</code> is empty or not.","","Returns whether the <code>TextInput</code> is currently focused or not.","","Lays out the <code>TextInput</code>, overriding its <code>Value</code> if provided.","Returns the total amount of graphemes in the <code>Value</code>.","Sets the <code>text::LineHeight</code> of the <code>TextInput</code>.","","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","Moves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.","","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","","Moves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …","Produces a <code>Command</code> that moves the cursor of the <code>TextInput</code> …","Moves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …","","Creates a new <code>TextInput</code> with the given placeholder and its …","Creates a new <code>Value</code> from a string slice.","Creates a custom <code>Id</code>.","Creates a new <code>State</code>, representing an unfocused <code>TextInput</code>.","Returns the position of the next end of a word from the …","","","Sets the message that should be produced when some text is …","Sets the message that should be produced when some text is …","Sets the message that should be produced when the <code>TextInput</code>…","","Sets the <code>Padding</code> of the <code>TextInput</code>.","The <code>Color</code> of the placeholder of the text input.","Returns the position of the previous start of a word from …","Removes the grapheme at the given <code>index</code>.","Removes the graphemes from <code>start</code> to <code>end</code>.","Converts the <code>TextInput</code> into a secure password input.","Returns a new <code>Value</code> with all its graphemes replaced with …","Returns a new <code>Value</code> containing the graphemes from <code>start</code> …","Produces a <code>Command</code> that selects all the content of the …","","Selects all the content of the <code>TextInput</code>.","The <code>Color</code> of the selection of the text input.","The side of a <code>TextInput</code> where to display the <code>Icon</code>.","","Sets the text size of the <code>TextInput</code>.","The font size of the content.","The spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>TextInput</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unfocuses the <code>TextInput</code>.","Creates a unique <code>Id</code>.","Returns a new <code>Value</code> containing the graphemes until the …","","","","","","","","","The <code>Color</code> of the value of the text input.","","","","","","","","","Sets the width of the <code>TextInput</code>.","The cursor of a text input.","Cursor without a selection","Cursor selecting a range of text","The state of a <code>Cursor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the current selection of the <code>Cursor</code> for the given …","Returns the <code>State</code> of the <code>Cursor</code>.","","","","","","","","","","","","","","","","","","","","","The end of the selection","The start of the selection","The built-in Catppuccin Frappé variant of a <code>Palette</code>.","The built-in Catppuccin Latte variant of a <code>Palette</code>.","The built-in Catppuccin Macchiato variant of a <code>Palette</code>.","The built-in Catppuccin Mocha variant of a <code>Palette</code>.","The built-in Catppuccin Frappé variant.","The built-in Catppuccin Latte variant.","The built-in Catppuccin Macchiato variant.","The built-in Catppuccin Mocha variant.","A <code>Theme</code> with a customized <code>Palette</code>.","A <code>Theme</code> that uses a <code>Custom</code> palette.","The built-in dark variant of a <code>Palette</code>.","The built-in Dracula variant of a <code>Palette</code>.","The built-in dark variant.","The built-in Dracula variant.","The built-in Ferra variant of a <code>Palette</code>.","The built-in Ferra variant:","The built-in Gruvbox Dark variant of a <code>Palette</code>.","The built-in Gruvbox Light variant of a <code>Palette</code>.","The built-in Gruvbox Dark variant.","The built-in Gruvbox Light variant.","The built-in Kanagawa Dragon variant of a <code>Palette</code>.","The built-in Kanagawa Lotus variant of a <code>Palette</code>.","The built-in Kanagawa Wave variant of a <code>Palette</code>.","The built-in Kanagawa Dragon variant.","The built-in Kanagawa Lotus variant.","The built-in Kanagawa Wave variant.","The built-in light variant of a <code>Palette</code>.","The built-in light variant.","The built-in Moonfly variant of a <code>Palette</code>.","The built-in Moonfly variant.","The built-in Nightfly variant of a <code>Palette</code>.","The built-in Nord variant of a <code>Palette</code>.","The built-in Nightfly variant.","The built-in Nord variant.","The built-in Oxocarbon variant of a <code>Palette</code>.","The built-in Oxocarbon variant.","A color palette.","The built-in Solarized Dark variant of a <code>Palette</code>.","The built-in Solarized Light variant of a <code>Palette</code>.","The built-in Solarized Dark variant.","The built-in Solarized Light variant.","The built-in Tokyo Night variant of a <code>Palette</code>.","The built-in Tokyo Night Light variant of a <code>Palette</code>.","The built-in Tokyo Night Storm variant of a <code>Palette</code>.","A built-in theme.","The built-in Tokyo Night variant.","The built-in Tokyo Night Light variant.","The built-in Tokyo Night Storm variant.","","","","","","","","","","","The background <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","The danger <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code>.","Define the colors of a theme.","The primary <code>Color</code> of the <code>Palette</code>.","The success <code>Color</code> of the <code>Palette</code>.","The text <code>Color</code> of the <code>Palette</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Custom</code> theme from the given <code>Palette</code> with a …","A set of background colors.","A set of danger colors.","The built-in Catppuccin Frappé variant of an <code>Extended</code> …","The built-in Catppuccin Latte variant of an <code>Extended</code> …","The built-in Catppuccin Macchiato variant of an <code>Extended</code> …","The built-in Catppuccin Mocha variant of an <code>Extended</code> …","The built-in dark variant of an <code>Extended</code> palette.","The built-in Dracula variant of an <code>Extended</code> palette.","The built-in Ferra variant of an <code>Extended</code> palette.","The built-in Gruvbox Dark variant of an <code>Extended</code> palette.","The built-in Gruvbox Light variant of an <code>Extended</code> palette.","The built-in Kanagawa Dragon variant of an <code>Extended</code> …","The built-in Kanagawa Lotus variant of an <code>Extended</code> palette.","The built-in Kanagawa Wave variant of an <code>Extended</code> palette.","The built-in light variant of an <code>Extended</code> palette.","The built-in Moonfly variant of an <code>Extended</code> palette.","The built-in Nightfly variant of an <code>Extended</code> palette.","The built-in Nord variant of an <code>Extended</code> palette.","The built-in Oxocarbon variant of an <code>Extended</code> palette.","The built-in Solarized Dark variant of an <code>Extended</code> palette.","The built-in Solarized Light variant of an <code>Extended</code> …","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night variant of an <code>Extended</code> palette.","The built-in Tokyo Night Storm variant of an <code>Extended</code> …","An extended set of colors generated from a <code>Palette</code>.","A pair of background and text colors.","A color palette.","A set of primary colors.","A set of secondary colors.","A set of success colors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background <code>Color</code> of the <code>Palette</code>.","The set of background colors.","The base background color.","The base primary color.","The base secondary color.","The base success color.","The base danger color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background color.","","","","","","","","The danger <code>Color</code> of the <code>Palette</code>.","The set of danger colors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Generates an <code>Extended</code> palette from a simple <code>Palette</code>.","Generates a set of <code>Primary</code> colors from the base, …","Generates a set of <code>Secondary</code> colors from the base and text …","Generates a set of <code>Success</code> colors from the base, …","Generates a set of <code>Danger</code> colors from the base, …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the palette is dark or not.","Creates a new <code>Pair</code> from a background <code>Color</code> and some text …","Generates a set of <code>Background</code> colors from the base and …","The primary <code>Color</code> of the <code>Palette</code>.","The set of primary colors.","The set of secondary colors.","A stronger version of the base background color.","A stronger version of the base primary color.","A stronger version of the base secondary color.","A stronger version of the base success color.","A stronger version of the base danger color.","The success <code>Color</code> of the <code>Palette</code>.","The set of success colors.","The text <code>Color</code> of the <code>Palette</code>.","The text color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A weaker version of the base background color.","A weaker version of the base primary color.","A weaker version of the base secondary color.","A weaker version of the base success color.","A weaker version of the base danger color.","The <code>Toggler</code> can be interacted with.","The theme catalog of a <code>Toggler</code>.","The item class of the <code>Catalog</code>.","The default size of a <code>Toggler</code>.","The <code>Toggler</code> is being hovered.","The possible status of a <code>Toggler</code>.","The appearance of a toggler.","A styling function for a <code>Toggler</code>.","A toggler widget.","","","","","","","","","","","","","","","","The background <code>Color</code> of the toggler.","The <code>Color</code> of the background border of the toggler.","The width of the background border of the toggler.","","","","","","","Sets the style class of the <code>Toggler</code>.","","","","","","","","The default style of a <code>Toggler</code>.","The default class produced by the <code>Catalog</code>.","","","","","","","","","","","","","","","","","","","","Sets the <code>Renderer::Font</code> of the text of the <code>Toggler</code>","The foreground <code>Color</code> of the toggler.","The <code>Color</code> of the foreground border of the toggler.","The width of the foreground border of the toggler.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Toggler</code>.","","","Sets the size of the <code>Toggler</code>.","Sets the spacing between the <code>Toggler</code> and the text.","","The <code>Style</code> of a class with the given status.","Sets the style of the <code>Toggler</code>.","","Sets the horizontal alignment of the text of the <code>Toggler</code>","Sets the text <code>text::LineHeight</code> of the <code>Toggler</code>.","Sets the <code>text::Shaping</code> strategy of the <code>Toggler</code>.","Sets the text size o the <code>Toggler</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width of the <code>Toggler</code>.","Indicates whether the <code>Toggler</code> is toggled.","Indicates whether the <code>Toggler</code> is toggled.","The tooltip will appear on the bottom of the widget.","The tooltip will follow the cursor.","The tooltip will appear on the left of the widget.","The position of the tooltip. Defaults to following the …","The tooltip will appear on the right of the widget.","An element to display a widget over another.","The tooltip will appear on the top of the widget.","","","","","","","","","","","","","","","","Sets the style class of the <code>Tooltip</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Sets the gap between the content and its <code>Tooltip</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>Tooltip</code>.","","","","Sets the padding of the <code>Tooltip</code>.","","","Sets whether the <code>Tooltip</code> is snapped within the viewport.","","Sets the style of the <code>Tooltip</code>.","","","","","","","","","","","","","","","","","","","","","","The default width of a <code>VerticalSlider</code>.","","","","","","An vertical bar and a handle that selects a single value …","","","","","","","","Sets the style class of the <code>VerticalSlider</code>.","","","Sets the optional default value for the <code>VerticalSlider</code>.","","","","","","Returns the argument unchanged.","","","Sets the height of the <code>VerticalSlider</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>VerticalSlider</code>.","","Sets the release message of the <code>VerticalSlider</code>. This is …","Sets the optional “shift” step for the <code>VerticalSlider</code>.","","","Sets the step size of the <code>VerticalSlider</code>.","Sets the style of the <code>VerticalSlider</code>.","","","","","","","","","","","Sets the width of the <code>VerticalSlider</code>."],"i":[20,0,0,20,20,20,20,0,0,0,0,0,20,20,20,33,20,20,20,0,20,20,20,0,20,20,0,20,20,20,0,0,383,0,0,0,0,0,0,0,0,383,0,0,20,20,0,0,33,0,0,0,0,0,0,0,20,20,20,0,0,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,0,0,0,0,0,0,16,20,20,0,0,0,0,0,0,43,20,16,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,43,20,16,43,20,16,16,43,20,16,43,16,43,20,16,20,20,20,20,0,0,43,20,16,43,20,16,43,20,16,0,0,0,0,0,0,43,20,16,43,20,16,43,20,16,43,20,16,20,43,20,16,43,20,16,43,20,16,43,20,16,0,0,0,43,16,0,0,43,16,43,16,20,43,16,0,33,33,43,16,0,43,16,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,16,33,33,16,0,0,0,0,0,43,16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,43,16,0,0,0,0,0,0,0,0,20,20,20,0,0,0,0,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,43,20,16,33,0,0,0,0,0,33,43,20,16,108,0,0,4,108,108,108,0,0,0,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,109,109,3,108,109,3,108,109,3,3,3,108,109,108,109,3,108,109,0,4,109,3,108,109,3,108,109,3,3,108,109,3,3,108,109,108,109,108,108,108,108,109,3,108,109,3,108,109,3,108,109,3,3,108,109,3,108,109,3,108,109,3,108,109,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,3,3,109,3,3,3,3,3,3,0,0,109,3,3,4,3,0,3,0,109,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,108,109,3,109,161,160,0,0,0,0,0,0,0,163,0,0,0,157,161,0,0,160,161,163,160,10,0,0,0,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,156,157,158,156,159,160,161,162,163,164,157,158,156,159,160,161,162,163,164,164,157,158,156,159,160,161,162,163,164,8,164,158,159,160,161,162,164,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,10,8,164,157,158,156,159,160,161,162,163,164,8,157,163,0,0,157,158,156,159,160,161,162,163,164,8,164,157,157,158,158,158,158,156,159,160,161,162,163,163,163,164,164,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,0,8,164,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,8,156,159,159,164,159,10,10,8,156,8,158,159,160,161,162,164,162,8,157,0,164,156,156,158,162,164,8,164,8,0,158,159,8,157,158,156,159,160,161,162,163,164,156,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,157,158,156,159,160,161,162,163,164,8,10,10,164,157,158,156,159,160,161,162,163,164,8,8,159,159,159,159,159,69,0,69,175,175,0,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,69,69,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,69,175,176,0,163,176,0,163,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,158,158,176,176,176,176,176,176,176,176,176,176,0,0,157,0,169,171,169,169,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,171,169,0,169,169,169,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,169,171,0,0,0,170,179,0,170,170,170,179,170,179,170,179,170,179,170,170,179,170,179,170,179,170,179,179,170,170,179,170,170,179,170,179,170,179,170,179,170,179,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,170,170,170,170,179,170,179,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,170,179,0,0,180,180,180,180,180,180,180,179,180,180,180,180,180,180,180,180,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,179,180,179,180,180,180,180,180,180,180,180,180,180,180,0,0,0,0,0,437,438,193,197,196,0,437,438,193,437,438,193,0,199,0,0,0,201,186,202,0,0,437,438,193,0,0,197,197,0,198,200,199,0,0,0,0,0,0,0,0,0,0,198,200,437,438,193,196,197,0,196,0,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,181,172,184,172,183,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,0,181,172,184,172,184,192,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,194,195,0,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,172,184,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,193,196,197,198,199,200,201,186,202,193,193,193,200,200,200,201,201,201,186,186,186,202,202,202,181,182,194,195,181,172,183,192,181,182,193,172,183,184,185,196,197,198,199,200,201,186,202,192,206,181,182,182,193,193,172,183,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,172,184,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,201,186,205,206,172,183,184,185,207,172,183,194,207,172,183,194,193,200,201,186,202,193,200,201,186,202,172,183,194,172,172,183,183,194,184,185,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,181,172,183,183,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,193,183,184,185,199,198,199,198,181,182,172,183,184,185,194,195,172,183,0,192,172,183,184,185,0,206,172,184,181,182,181,182,192,172,184,205,206,172,183,201,186,198,0,0,194,181,194,195,0,208,184,172,183,172,192,193,198,192,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,201,186,202,0,193,172,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,192,206,181,182,193,172,183,184,185,194,195,196,197,198,199,200,201,186,202,172,184,193,439,440,441,442,442,440,443,441,442,440,443,441,442,439,440,441,442,442,440,443,441,442,440,443,441,442,439,440,441,442,442,440,443,441,442,440,443,441,442,0,0,0,0,0,239,0,0,0,236,237,227,235,189,229,189,229,189,229,189,229,189,229,233,189,229,189,229,189,227,233,227,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,229,236,237,189,189,236,237,227,235,189,236,237,227,235,189,235,235,239,236,236,237,227,227,189,189,235,189,235,189,233,229,227,227,189,236,237,227,235,189,229,233,236,237,227,227,189,189,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,229,236,237,189,189,235,189,229,189,229,227,189,235,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,189,189,233,227,236,237,227,235,189,189,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,189,236,237,227,235,189,229,233,236,237,227,227,189,189,233,227,227,236,237,227,235,189,235,189,229,236,237,189,235,229,189,229,233,236,237,227,227,189,189,233,227,233,227,233,227,233,227,233,227,233,227,233,227,229,233,236,237,227,227,189,189,236,237,227,233,227,233,227,233,227,233,227,235,189,235,235,235,235,229,227,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,236,237,227,235,189,233,227,236,237,227,235,189,189,229,189,189,0,0,0,0,0,0,0,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,187,224,187,203,216,241,224,187,203,216,241,187,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,187,187,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,187,224,224,187,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,224,224,224,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,203,216,241,224,187,203,216,241,224,187,187,203,216,241,187,203,187,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,224,187,203,216,241,187,0,0,0,0,0,243,243,243,243,243,243,0,0,0,243,243,243,243,0,0,0,243,243,0,248,0,0,0,0,243,243,243,0,0,0,0,243,242,244,244,244,249,259,250,232,260,242,251,244,231,231,231,231,248,249,249,250,250,232,232,251,251,444,231,231,231,248,249,249,250,250,232,251,0,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,242,244,244,250,251,244,248,249,249,250,250,232,232,251,251,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,250,232,251,244,249,250,251,244,249,250,251,244,251,242,244,244,231,244,249,249,232,232,232,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,232,251,249,259,250,232,260,242,251,244,231,244,232,251,250,250,0,250,250,231,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,248,249,250,250,232,251,251,232,260,242,251,231,231,231,249,259,250,232,260,242,251,244,231,250,251,250,249,259,250,232,260,242,251,244,231,248,250,250,232,251,251,248,250,250,232,251,251,249,243,249,259,250,232,242,251,244,231,260,242,242,242,231,231,231,249,250,251,249,250,251,249,250,251,250,251,259,249,250,251,251,251,248,249,249,250,250,232,232,251,251,249,259,250,232,260,242,251,244,231,249,259,249,259,250,251,248,249,249,259,250,250,232,251,251,250,249,250,249,250,250,251,250,251,249,259,250,249,259,250,250,251,250,251,250,251,250,251,231,231,231,248,249,249,249,249,259,250,250,250,232,232,232,260,242,251,251,251,244,231,259,250,232,251,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,231,249,231,231,445,232,232,249,259,250,232,260,242,251,244,231,232,260,232,232,244,260,232,244,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,242,251,231,242,250,251,250,251,250,259,242,250,251,250,251,192,232,251,231,232,232,250,251,250,251,250,251,250,251,251,251,446,446,446,446,446,446,447,232,447,231,231,231,242,242,231,250,242,232,232,242,231,231,0,260,231,242,0,250,250,231,231,249,259,248,249,249,250,250,232,232,251,251,249,232,231,260,242,231,0,250,232,250,232,232,242,232,242,248,249,249,250,250,232,232,251,251,232,248,249,249,250,250,232,232,251,251,232,260,251,232,249,231,231,231,231,192,249,242,248,249,249,250,250,232,232,251,251,259,250,232,251,259,251,231,250,232,260,251,231,250,232,260,251,231,232,249,259,250,232,260,242,251,244,231,250,250,249,232,0,244,250,232,251,232,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,249,259,250,232,260,242,251,244,231,0,243,0,260,232,232,249,259,250,232,260,242,251,244,231,445,248,249,249,250,250,232,232,251,251,448,449,450,250,251,250,251,249,259,248,249,249,250,250,232,232,251,251,448,449,450,250,251,250,251,231,0,0,0,0,265,265,265,265,265,265,265,249,265,265,265,265,265,259,265,259,265,265,265,265,265,265,265,265,265,265,265,265,192,265,249,259,249,192,249,259,265,265,265,265,265,265,265,265,265,249,259,0,0,0,0,0,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,261,261,279,261,261,279,261,279,261,261,280,283,279,279,281,261,261,280,283,279,279,281,261,279,261,279,261,280,279,281,261,279,261,280,279,281,261,279,281,261,279,281,261,280,283,279,281,261,279,261,261,280,283,279,279,281,261,261,280,283,279,279,281,261,280,283,279,281,261,261,261,280,280,283,283,279,281,281,261,261,261,261,279,279,281,261,261,261,279,279,279,281,281,281,261,261,261,280,279,279,281,281,261,261,280,283,279,279,281,261,280,283,279,281,279,261,261,280,283,279,281,279,261,279,279,261,279,261,279,279,261,279,261,280,283,279,281,261,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,261,261,261,261,280,283,261,280,283,279,281,261,279,261,279,261,279,279,261,279,261,279,279,261,279,281,261,279,280,283,280,283,261,279,261,279,279,281,261,279,261,261,279,279,261,261,279,261,279,261,261,279,281,280,283,261,261,261,261,280,279,281,279,281,279,281,261,279,261,280,283,279,281,261,261,261,280,283,279,279,279,281,261,261,280,283,279,281,261,280,283,279,281,261,279,279,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,280,283,279,281,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,279,261,261,261,261,261,261,261,279,261,261,261,261,261,279,0,0,266,266,266,266,266,266,266,266,266,250,250,266,266,266,266,266,250,266,266,266,266,266,266,266,266,266,266,266,266,266,266,250,266,266,266,266,266,266,266,266,266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,275,299,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,301,301,204,204,302,302,303,304,275,275,299,299,305,306,230,230,300,300,301,204,204,302,302,304,275,299,305,306,230,300,204,302,307,308,307,308,313,230,230,300,307,308,301,204,302,310,174,309,230,300,174,309,301,204,302,310,174,174,309,309,230,300,0,0,234,311,275,310,310,310,310,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,304,0,0,0,234,312,301,204,302,311,303,275,299,174,309,230,300,234,312,301,204,302,311,313,310,275,299,230,300,314,204,204,302,302,275,275,299,299,230,230,300,300,234,312,311,204,302,303,275,299,230,300,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,301,303,173,301,303,173,230,300,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,311,275,299,234,312,311,262,230,300,314,0,234,312,301,204,302,311,303,304,275,299,174,309,305,306,230,300,173,262,312,299,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,174,309,204,302,234,234,312,312,301,301,301,204,204,302,302,311,311,304,304,275,275,299,299,230,230,300,300,234,234,312,312,301,204,204,302,302,311,311,304,304,275,275,299,299,230,230,300,300,204,302,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,275,299,230,300,234,234,234,312,312,312,317,317,317,301,301,301,204,204,204,302,302,302,311,311,311,313,313,313,310,310,310,303,303,303,304,304,304,275,275,275,299,299,299,174,174,174,309,309,309,305,305,305,306,306,306,230,230,230,300,300,300,314,314,314,307,307,307,308,308,308,173,173,173,310,204,230,262,204,204,302,302,275,275,299,299,230,230,300,300,234,312,317,301,204,302,311,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,234,312,312,317,317,317,317,317,301,204,204,204,302,302,302,311,311,313,310,303,304,275,275,275,275,299,299,299,299,174,309,305,305,306,306,230,230,230,230,300,300,300,314,314,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,230,174,309,174,309,304,204,302,304,275,299,230,300,234,234,312,311,314,309,234,312,311,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,314,234,312,204,302,311,313,310,275,299,174,309,305,306,230,300,314,304,304,301,303,313,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,275,299,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,311,275,299,304,310,313,310,303,174,309,305,306,314,234,312,311,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,311,234,312,311,234,312,234,312,311,234,312,317,301,204,204,204,302,302,302,311,313,310,303,304,275,275,275,299,299,299,174,309,305,305,305,306,306,306,230,230,230,300,300,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,313,310,303,174,309,305,306,314,309,309,234,312,311,275,299,234,312,204,302,311,275,299,230,300,303,305,306,174,309,234,312,310,275,299,304,310,310,304,230,300,234,312,301,204,302,311,310,275,299,230,300,275,299,230,300,174,309,174,309,309,309,174,309,174,309,309,309,174,309,174,309,309,309,309,309,309,309,301,204,302,311,303,275,299,230,300,234,312,311,311,301,204,302,311,303,275,299,230,300,234,312,311,311,234,234,312,312,301,301,204,204,302,302,311,311,303,304,304,275,275,299,299,230,230,300,300,234,234,312,312,301,204,204,302,302,311,311,304,304,275,275,299,299,230,230,300,300,309,301,204,302,304,275,299,230,300,234,312,317,301,204,302,311,313,303,304,275,299,174,309,305,306,230,300,314,309,304,314,307,308,310,310,230,300,307,308,275,299,230,300,234,312,301,204,302,311,303,304,275,299,174,309,305,306,230,300,173,0,303,230,300,307,308,204,302,311,309,234,311,174,309,309,174,309,301,303,173,309,0,0,204,174,309,174,309,174,309,230,300,309,310,310,313,231,262,0,230,300,204,302,304,230,300,174,309,314,234,312,204,204,302,302,311,275,275,299,299,230,230,300,300,234,312,311,234,312,311,301,301,234,312,311,174,309,307,308,307,308,307,308,234,262,234,312,311,0,0,309,310,204,302,275,299,305,306,230,300,230,300,310,301,204,204,204,302,302,302,303,304,275,299,305,306,230,300,301,204,204,302,302,304,275,299,305,306,230,300,301,301,275,275,299,299,230,230,300,300,262,313,310,174,309,314,174,309,174,309,174,309,302,309,300,204,313,174,230,204,302,275,299,174,309,305,306,230,300,302,300,174,309,174,309,309,311,234,312,204,302,311,275,299,230,300,234,312,204,302,311,275,299,230,300,234,312,204,302,311,275,299,230,300,234,312,204,302,311,275,299,230,300,234,312,311,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,230,300,317,317,234,230,313,310,305,306,230,300,314,204,302,275,299,305,306,230,300,302,300,234,312,204,302,311,275,299,230,300,311,275,234,312,204,302,311,313,310,275,299,174,309,305,306,230,300,314,234,312,204,302,311,275,299,230,300,204,302,275,299,305,306,304,305,303,306,303,306,313,313,303,303,174,174,305,305,310,309,306,309,310,303,309,306,309,303,305,306,303,305,306,313,313,303,303,174,174,305,310,309,310,309,234,312,311,174,309,314,234,312,301,204,302,311,303,275,299,174,309,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,230,300,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,234,312,311,310,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,0,0,310,304,312,299,234,312,317,301,204,302,311,313,310,303,304,275,299,174,309,305,306,230,300,314,307,308,173,317,234,312,311,275,299,174,309,230,230,300,230,300,174,309,317,204,302,305,306,230,300,307,308,234,312,311,302,300,308,312,302,300,308,312,317,204,302,305,306,230,300,307,308,234,312,311,204,230,302,300,308,312,317,302,306,300,308,312,234,312,301,204,204,302,302,311,304,275,275,299,299,230,230,300,300,0,257,257,257,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,451,452,453,445,453,454,454,454,452,455,456,455,456,456,456,455,456,455,456,456,456,455,456,455,456,456,456,456,456,456,456,447,457,447,457,458,454,452,459,458,452,459,460,445,453,449,461,450,462,460,463,464,449,461,450,462,460,463,464,461,462,460,464,0,0,0,0,0,315,320,316,321,318,0,0,0,0,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,251,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,251,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,267,268,323,267,268,323,267,268,267,268,251,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,323,267,268,248,0,0,248,248,248,248,248,248,248,248,248,248,248,248,248,228,228,248,248,0,0,0,0,0,0,0,0,0,0,0,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,325,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,326,327,324,226,326,327,324,324,326,325,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,326,327,324,226,0,0,0,0,0,0,0,0,0,465,466,467,467,467,467,467,467,468,468,0,469,0,0,466,470,471,472,470,471,472,0,0,0,0,0,0,0,0,0,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,188,191,191,225,188,191,217,222,213,225,188,191,217,222,213,188,191,191,188,191,217,222,213,188,191,217,222,213,225,188,191,217,222,213,188,191,191,188,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,188,191,191,188,191,213,222,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,217,222,213,225,225,188,191,217,222,213,188,191,191,188,191,225,217,222,213,188,188,191,191,222,188,191,191,188,191,191,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,225,188,191,217,222,213,188,188,0,0,0,0,0,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,190,328,328,190,328,219,190,328,219,190,190,328,328,219,219,190,328,219,190,190,328,328,190,328,219,190,328,219,190,328,219,190,328,219,190,190,328,328,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,219,190,328,219,190,190,328,328,328,219,219,190,328,190,190,328,328,190,190,328,328,219,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,328,219,190,0,0,0,0,0,0,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,194,195,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,214,221,220,223,214,214,194,195,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,221,220,223,214,0,0,0,239,0,229,229,229,229,229,233,229,229,233,229,239,233,229,229,233,229,229,229,325,233,229,233,233,229,229,229,233,233,233,233,233,233,233,233,229,233,233,233,233,233,229,325,233,229,161,160,163,0,0,0,161,160,161,163,160,0,0,159,159,159,162,162,159,159,106,0,0,14,106,106,0,0,0,0,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,107,107,12,330,106,107,12,330,106,107,12,330,106,107,330,106,107,330,12,330,106,107,0,14,12,330,106,107,12,330,106,107,12,330,106,107,12,12,330,106,107,330,106,106,106,106,330,106,107,12,330,12,330,106,107,12,330,106,107,12,330,106,107,12,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,12,12,12,12,12,0,0,330,12,12,330,12,12,14,12,0,12,107,12,12,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,330,106,107,12,473,474,475,0,0,0,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,24,24,27,24,32,32,27,24,27,24,27,24,27,27,24,24,27,27,24,27,24,27,24,27,27,24,27,27,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,27,27,27,27,27,24,27,27,27,27,27,27,27,27,27,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,24,27,24,0,35,0,0,0,0,34,336,126,34,34,34,336,126,34,336,126,34,336,126,34,336,126,126,126,0,34,336,126,34,336,126,34,34,34,34,34,336,126,336,126,34,336,126,35,126,34,336,126,34,336,126,34,34,336,126,34,0,34,336,126,336,336,336,336,336,126,34,336,126,126,126,126,34,336,126,34,336,126,336,336,34,34,34,336,126,34,336,126,34,336,126,34,336,126,336,126,34,336,126,34,336,126,34,336,126,34,336,126,0,34,34,34,34,34,336,126,34,34,34,34,0,126,34,34,35,34,34,126,336,126,0,34,336,126,34,336,126,34,336,126,34,336,126,34,336,126,34,336,126,34,336,126,336,34,336,126,0,34,336,126,34,126,126,0,0,0,340,340,0,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,339,340,339,340,55,55,339,340,339,340,55,339,340,55,339,340,55,0,55,339,340,55,339,340,339,339,339,340,340,340,55,339,340,55,339,339,340,55,339,340,55,339,339,339,339,340,55,339,340,339,340,55,339,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,0,55,55,340,55,339,340,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,339,340,55,0,0,339,340,55,55,0,0,349,350,349,350,349,350,349,350,349,350,349,350,349,350,350,350,349,350,350,349,350,349,350,349,350,349,349,350,349,350,349,350,349,350,349,350,349,0,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,350,350,349,349,349,349,349,350,350,349,349,349,349,349,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,350,349,0,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,81,0,0,0,0,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,103,103,353,352,103,353,352,103,103,103,353,352,103,0,81,352,81,353,352,103,353,352,103,353,352,103,353,352,103,352,103,353,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,352,353,353,103,103,81,103,353,353,353,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,352,103,353,372,0,368,365,0,367,358,0,0,0,0,361,0,0,365,0,366,367,0,359,361,368,0,372,0,0,360,362,366,0,365,0,0,361,368,0,360,362,0,0,0,0,0,368,361,359,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,354,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,370,370,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,355,356,357,356,354,357,359,360,361,362,363,364,365,366,367,368,369,121,370,371,359,360,361,362,363,364,365,366,367,368,369,121,370,371,363,364,371,363,364,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,354,0,358,367,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,357,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,359,361,363,364,121,370,371,359,359,359,361,361,361,363,363,363,364,364,364,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,359,362,363,364,359,362,363,364,357,121,121,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,354,372,357,372,357,356,354,357,367,357,357,357,357,357,357,354,362,363,364,121,369,357,357,359,369,359,362,362,0,357,358,356,354,357,357,356,359,360,361,362,363,364,365,366,367,368,369,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,356,354,357,359,360,361,362,363,364,365,366,367,368,369,372,121,370,371,357,371,476,476,476,476,477,478,479,478,480,480,480,480,480,0,376,376,0,376,0,373,375,376,373,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,373,375,376,373,375,376,373,375,376,373,375,376,373,373,375,376,376,373,375,376,373,375,376,373,375,376,375,373,375,376,373,373,373,375,376,373,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,373,373,373,375,373,373,373,373,373,373,376,376,373,373,373,373,373,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,375,376,373,481,482,482,481,118,378,0,80,378,0,118,0,378,118,0,378,0,0,0,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,119,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,378,379,118,119,379,76,378,379,118,119,0,80,378,80,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,76,378,379,118,119,378,379,118,118,118,118,378,379,118,119,76,379,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,379,76,76,378,76,76,76,76,76,76,119,379,76,379,76,80,76,76,119,76,76,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,378,379,118,119,76,483,483,484,0,85,84,0,0,0,84,124,84,124,84,124,84,124,84,124,124,124,124,84,124,84,124,84,124,124,84,124,0,85,84,124,84,124,84,124,84,84,124,124,84,124,84,124,84,124,84,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,84,0,0,84,85,84,0,124,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,124,84,0,88,0,382,0,0,381,382,382,382,381,381,380,380,0,381,0,0,382,0,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,125,87,86,380,381,382,125,87,86,380,381,382,125,125,87,87,380,381,382,125,380,381,382,125,87,86,380,381,382,125,0,88,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,87,86,380,381,382,125,380,381,382,125,380,380,380,381,381,381,382,382,382,86,380,381,382,382,125,87,86,380,381,382,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,87,86,87,87,88,87,87,380,381,382,125,382,382,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,87,86,380,381,382,125,86,86,104,0,91,89,89,104,0,0,0,0,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,105,105,105,89,104,105,89,104,105,89,104,105,104,105,89,104,105,0,91,89,104,105,89,104,105,105,89,104,105,89,89,104,105,104,104,104,104,104,105,89,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,89,89,89,89,89,89,89,91,89,89,105,89,89,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,104,105,89,485,486,385,0,54,0,385,385,385,0,0,0,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,120,385,120,52,120,385,0,54,52,120,385,52,120,385,52,120,385,52,52,120,385,385,120,120,385,52,120,385,52,120,385,52,120,385,52,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,52,54,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,120,385,52,52,120,385,120,0,127,0,391,0,93,0,127,390,389,391,127,0,0,0,390,0,0,0,389,0,0,0,391,0,386,386,92,387,390,391,388,389,392,386,127,128,393,394,388,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,393,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,386,92,92,387,390,391,388,389,392,386,127,128,393,394,387,390,391,388,389,392,386,127,128,393,394,394,92,387,390,391,388,389,392,386,127,128,393,394,128,386,0,93,387,390,391,388,389,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,92,387,390,391,388,389,392,386,127,128,393,394,92,92,387,390,391,388,389,392,386,127,128,393,394,387,390,391,388,389,392,127,389,389,389,392,392,392,127,127,127,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,128,392,392,92,391,128,92,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,388,92,92,388,392,387,390,391,388,389,92,92,92,92,386,0,393,388,92,0,92,93,92,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,92,387,390,391,388,389,392,386,127,128,393,394,392,92,387,390,391,388,389,392,386,127,128,393,394,391,128,92,387,390,391,388,389,392,386,127,128,393,394,92,388,92,387,390,387,390,487,487,488,489,488,489,0,396,396,0,95,0,396,0,95,0,396,0,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,396,395,396,395,397,94,396,397,395,397,94,396,395,397,94,396,395,397,94,396,95,94,395,397,94,396,396,395,397,396,395,397,94,396,395,397,94,396,395,397,94,396,397,397,397,94,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,94,395,95,95,94,94,397,94,395,395,395,399,395,399,395,94,94,397,94,395,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,395,397,94,396,95,95,395,397,94,396,0,94,395,114,0,409,101,97,114,0,0,114,0,409,0,0,0,0,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,408,407,408,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,114,115,407,408,409,408,407,97,114,115,407,408,409,0,101,97,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,97,114,115,407,408,409,114,114,114,114,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,115,97,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,97,97,97,97,115,408,97,97,97,97,101,97,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,114,115,407,408,409,97,407,115,490,491,490,0,132,0,110,110,0,0,0,0,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,130,131,110,111,131,110,111,111,131,130,110,111,130,131,132,111,131,130,110,111,131,130,110,111,131,130,110,111,130,131,130,110,111,131,110,111,131,131,131,110,110,110,131,110,111,131,131,130,413,110,111,131,130,110,111,131,131,130,131,130,110,111,131,131,130,131,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,130,130,111,130,132,130,131,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,131,130,110,111,130,331,332,332,492,0,136,0,0,0,492,331,0,0,0,0,0,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,129,332,331,129,129,332,331,414,129,136,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,0,332,331,414,129,332,331,332,332,332,332,331,414,129,332,331,331,331,414,129,332,331,414,129,332,331,414,129,332,331,332,331,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,135,332,331,414,129,0,332,331,414,129,136,331,332,331,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,332,331,414,129,0,112,418,0,140,417,0,418,112,419,419,419,417,0,417,419,418,112,419,112,418,419,0,417,419,419,418,419,417,417,417,417,0,0,0,0,0,419,419,419,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,113,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,417,418,419,112,113,417,418,419,112,113,139,137,417,418,419,421,112,113,137,0,140,137,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,419,139,137,417,418,419,421,112,113,139,139,137,417,418,419,421,112,113,417,418,419,112,112,112,112,137,417,418,419,421,112,113,139,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,139,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,417,418,419,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,417,421,139,137,137,139,137,139,139,137,137,139,139,139,137,113,137,113,139,139,139,140,139,139,137,417,418,419,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,139,137,417,418,419,421,112,113,113,139,137,417,418,419,421,112,113,419,137,493,116,0,142,0,0,116,116,116,0,0,425,425,0,0,0,0,0,0,0,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,117,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,424,333,425,426,427,116,117,333,141,424,333,425,426,427,116,117,0,427,0,142,427,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,141,424,333,425,426,427,116,117,141,141,141,424,333,425,426,427,116,117,426,116,426,426,426,116,116,116,424,424,333,425,426,427,116,117,0,427,427,427,141,333,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,426,426,141,117,141,141,424,333,425,426,427,116,117,424,424,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,424,427,427,141,141,424,141,141,0,427,427,0,427,427,0,427,427,141,424,426,427,424,427,141,141,141,141,141,141,117,424,424,424,141,424,424,0,427,427,117,333,141,141,333,333,141,142,141,141,424,333,425,426,427,116,117,424,424,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,141,424,333,425,426,427,116,117,427,427,426,424,141,424,333,425,426,427,116,117,117,141,424,333,425,426,427,116,117,141,0,429,429,0,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,428,428,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,428,429,494,494,36,36,36,36,20,20,20,20,0,20,36,36,20,20,36,20,36,36,20,20,36,36,36,20,20,20,36,20,36,20,36,36,20,20,36,20,0,36,36,20,20,36,36,36,0,20,20,20,36,430,36,430,36,430,36,430,36,430,36,36,430,36,430,36,430,36,430,36,430,36,36,430,36,430,36,430,36,430,36,430,36,430,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,430,0,36,36,36,36,430,430,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,36,430,430,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,36,37,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,431,37,431,432,433,434,435,436,36,37,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,36,37,37,432,433,434,435,436,36,37,36,431,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,37,431,432,433,434,435,436,432,433,434,435,436,122,0,145,144,122,0,0,0,0,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,123,123,123,144,122,123,144,122,123,144,122,123,122,123,144,122,123,0,145,144,122,123,144,122,123,144,122,123,144,144,122,123,122,122,122,122,122,123,144,123,123,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,144,144,144,144,144,144,144,145,144,144,144,144,144,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,122,123,144,495,496,146,146,146,0,146,0,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,147,146,146,147,146,146,147,146,147,146,147,147,146,147,147,146,146,146,146,146,146,147,146,147,146,147,146,147,147,146,147,146,147,146,147,146,146,147,146,147,146,147,146,147,146,147,147,147,146,147,147,147,147,147,147,147,147,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,0,150,0,0,0,0,0,0,150,150,150,150,150,150,150,150,150,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-4,[[3,[-1,-2,-3]]],[],4,5,[[7,[[6,[-1,-2,-3]]]]]],0,[-4,[[8,[-4,-1,-2,-3]]],[],[],9,[[10,[-1,-2,-3]]]],0,[[-1,11],[[12,[-2,-3,-4]]],[[7,[13]]],[],14,15],[[[16,[-1,-2,-3,-4,-5]]],[[18,[17]]],[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[20,20],[[-1,-2],21,[],[]],[-4,[[0,[-1,-2,-3]]],[],[],5,[[23,[],[[22,[[6,[-1,-2,-3]]]]]]]],0,0,0,[[[24,[-1]],25,[26,[-1]],-3],[[27,[-1,-2,-4,-5]]],[28,29],[],[[31,[-1],[[30,[-2]]]]],32,15],[-4,[[6,[-1,-2,-3]]],[],[],5,[[33,[-1,-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-4,[[34,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],0,[[13,36],20],[[13,36,-1],20,[[38,[36],[[30,[37]]]]]],[[],-1,[]],[[],-1,[]],[[],20],[[]],[[],-1,[]],[[],[[39,[20]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],[[40,[20]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],[[41,[20]]]],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[16,[-1,-2,-3,-4,-5]],17],21,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,-3,-2,44,45,46,47],21,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[42,21],[42,21],[42,21],[[20,20],11],[20,37],[[20,48],[[50,[21,49]]]],[[20,48],[[50,[21,49]]]],[[],[[51,[-1]]],[]],[[],[[51,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[52,[-2]]],[[7,[53]]],54],0,[[-4,-5],[[6,[-1,-2,-3]]],[],[],5,[[7,[[6,[-1,-2,-3]]]]],[[7,[[6,[-1,-2,-3]]]]]],0,[-2,[[55,[-1]]],[],[[7,[-1]]]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-5,[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[23,[],[[22,[[21,[-1,[6,[-2,-3,-4]]]]]]]]]],0,[[[43,[-1,-2,-3]],17,-3,62],63,[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,-3,62],63,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[[-1,-6],[[16,[-2,-3,-4,-1,-5]]],19,[],[],[],[[7,[[6,[-2,-3,-4]]]]],[[31,[-1],[[30,[-5]]]]]],[-4,[[0,[-1,-2,-3]]],[],[],5,[[7,[[6,[-1,-2,-3]]]]]],[[[43,[-1,-2,-3]],17,45,46,47,-3],64,[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,45,46,47,-3],64,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[-4,[[43,[-1,-2,-3]]],[],[],5,[[31,[65],[[30,[[6,[-1,-2,-3]]]]]]]],[[-1,-6],[[16,[-2,-3,-4,-1,-5]]],19,[],[],[],[[7,[[6,[-2,-3,-4]]]]],[[31,[-1],[[30,[-5]]]]]],[[],-1,[]],[[[43,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,66,45,46,-3,67,[68,[-1]],47],69,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[-4,[[6,[-1,-2,-3]]],[],[],5,[[7,[[6,[-1,-2,-3]]]]]],[[[33,[],[[70,[-1]],[71,[-2]]]],-1,72],21,73,[]],[[[33,[],[[70,[-1]],[71,[-2]]]],-1,72],21,73,[]],[[[43,[-1,-2,-3]],17,45,-3,72],21,[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,45,-3,72],21,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],0,[[[43,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],[],5],[[[16,[-1,-2,-3,-4,-5]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[20,36],0,0,[[-2,[26,[-3]],-5],[[76,[-1,-2,-3,-4,-6,-7]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,[[31,[-1],[[30,[-4]]]]],[80,81],15],0,[[[83,[82]],82],[[84,[-1]]],85],0,[86,[[87,[-1]]],88],0,[[-1,-2,[26,[-2]],-4],[[89,[-3,-5,-6]]],[[7,[13]]],[60,90],29,[[38,[-2],[[30,[-3]]]]],91,15],0,[-4,[[43,[-1,-2,-3]]],[],[],5,[[31,[65],[[30,[[6,[-1,-2,-3]]]]]]]],[-4,[[0,[-1,-2,-3]]],[],[],5,[[23,[],[[22,[[6,[-1,-2,-3]]]]]]]],0,0,0,0,0,[-4,[[92,[-1,-2,-3]]],[],93,5,[[7,[[6,[-1,-2,-3]]]]]],0,[-2,[[94,[-1,-2]]],[],[[95,[-1]]]],[[[43,[-1,-2,-3]]],[[65,[96]]],[],[],5],[[[16,[-1,-2,-3,-4,-5]]],[[65,[96]]],[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[[[33,[],[[70,[-1]],[71,[-2]]]]],[[65,[96]]],73,[]],[[[33,[],[[70,[-1]],[71,[-2]]]]],[[65,[96]]],73,[]],[[[16,[-1,-2,-3,-4,-5]]],[[65,[96]]],[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],0,[[[83,[-1]],-1,-3],[[97,[-1,-2,-4]]],[60,[99,[98]],100],29,[[31,[-1],[[30,[-2]]]]],101],[-4,[[0,[-1,-2,-3]]],[],[],5,[[23,[],[[22,[[6,[-1,-2,-3]]]]]]]],0,0,[[[43,[-1,-2,-3]]],102,[],[],5],[[[16,[-1,-2,-3,-4,-5]]],102,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],[[20,[39,[20]]],103],[[20,-1,104],105,[]],[[20,-1,106],107,[]],[[20,-1,108],109,[]],[[20,-1,110],111,[]],[[20,-1,112],113,[]],[[20,-1,114],115,[]],[[20,-1,116],117,[]],[[20,[41,[20]],118],119],[[20,-1],120,[]],[[20,[40,[20]]],121],[[20,-1,122],123,[]],[[20,-1],124,[]],[[20,-1],125,[]],[[20,-1],126,[]],[[20,-1,127],128,[]],[20,129],0,[-1,[[130,[-2]]],[[7,[131]]],132],[[[43,[-1,-2,-3]]],133,[],[],5],[[[16,[-1,-2,-3,-4,-5]]],133,[],[],5,19,[[7,[[6,[-1,-2,-3]]]]]],0,[-1,[[134,[-2,-3]]],135,136,15],0,[[[137,[-1]]],[[139,[138,-2,-3,-1]]],15,29,140],0,[[25,25],[[141,[-1,-2,-3]]],29,142,15],0,[[-1,-4],[[0,[-2,-5,-1,[0,[[31,[-5],[[30,[-1]]]]]],-3]]],29,[],5,[[7,[[6,[-2,-1,-3]]]]],[]],[-1,-2,[],[]],[-1,143,[]],[-1,13,[]],0,[[-1,11,-3],[[144,[-2,-4,-5]]],[[7,[[26,[13]]]]],[],[[31,[11],[[30,[-2]]]]],145,15],0,[[-4,-5,146],[[147,[-1,-2,-3]]],[],35,15,[[7,[[6,[-1,-2,-3]]]]],[[7,[[6,[-1,-2,-3]]]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[[33,[],[[70,[-1]],[71,[-2]]]],-1,-2],[[26,[-3]]],73,[],[]],[-1,[[134,[-2,-3]]],77,136,15],[-1,[[52,[-2]]],[[7,[53]]],54],0,[[[83,[-1]],-1,-3],[[150,[-1,-2,-4]]],[60,[99,[98]],100],29,[[31,[-1],[[30,[-2]]]]],101],0,[[[33,[],[[70,[-1]],[71,[-2]]]],-1],[[6,[-2,-3,-4]]],73,[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]]],[[18,[17]]],29,4,5],[[[3,[-1,-2,-3]],-4],[[3,[-1,-2,-3]]],[],4,5,7],[[[3,[-1,-2,-3]],11],[[3,[-1,-2,-3]]],[],4,5],[108,108],[109,109],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,108],109],[[],-1,[]],[[],109],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[3,[-1,-2,-3]],17],21,29,4,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,29,4,5],[42,21],[42,21],[42,21],[[108,108],11],[[109,109],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[108,48],151],[[109,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],-4],[[3,[-1,-2,-3]]],[],4,5,[[7,[96]]]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],17,-3,62],63,29,4,5],[[[3,[-1,-2,-3]],17,45,46,47,-3],64,29,4,5],[-4,[[3,[-1,-2,-3]]],[],4,5,[[7,[[6,[-1,-2,-3]]]]]],[[],-1,[]],[[[3,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,29,4,5],[[[3,[-1,-2,-3]],-1],[[3,[-1,-2,-3]]],[],4,5],[[[3,[-1,-2,-3]],[26,[-1]]],[[3,[-1,-2,-3]]],[],4,5],[[[3,[-1,-2,-3]],17,45,-3,72],21,29,4,5],[[[3,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],29,4,5],[[[3,[-1,-2,-3]],-4],[[3,[-1,-2,-3]]],[],4,5,[[7,[152]]]],[[20,108],109],[[20,108],109],0,[[[3,[-1,-2,-3]]],[[65,[96]]],29,4,5],[[[3,[-1,-2,-3]]],102,29,4,5],[[[4,[],[[153,[-1]]]],-1,108],109,[]],[[[3,[-1,-2,-3]],-4],[[3,[-1,-2,-3]]],[],4,5,[[31,[-2,108],[[30,[109]]]]]],[[20,108],109],[[[3,[-1,-2,-3]]],133,29,4,5],[[20,108],109],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2,-3]],-4],[[3,[-1,-2,-3]]],[],4,5,[[7,[96]]]],[[109,-1],109,[[7,[154]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[155,82],156],[157,157],[158,158],[156,156],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],158],[[],159],[[],160],[[],161],[[],162],[[],164],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[],[[70,[-1]]]],-1,-2,-3,47,46],[[18,[[165,[-2]]]]],73,9,[]],[[[8,[-4,-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],[],9,[[10,[-1,-2,-3]]]],[[164,-1],21,[[167,[156,166]]]],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[157,157],11],[[163,163],11],0,0,[[157,48],[[50,[21,49]]]],[[158,48],[[50,[21,49]]]],[[156,48],[[50,[21,49]]]],[[159,48],[[50,[21,49]]]],[[160,48],[[50,[21,49]]]],[[161,48],[[50,[21,49]]]],[[162,48],[[50,[21,49]]]],[[163,48],[[50,[21,49]]]],[[164,48],[[50,[21,49]]]],[[[8,[-4,-1,-2,-3]],48],151,168,168,[9,168],[[10,[-1,-2,-3]],168]],0,[169,157],[-1,-1,[]],[157,158],[166,158],[169,158],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[166,163],[157,163],[-1,-1,[]],[-1,-1,[]],[13,164],[25,164],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[8,[-4,-1,-2,-3]],-5],[[8,[-4,-1,-2,-3]]],[],[],9,[[10,[-1,-2,-3]]],[[7,[96]]]],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-4,-1,-2,-3]],17,-3,62],63,[],[],9,[[10,[-1,-2,-3]]]],[[155,155],156],0,0,0,0,[[[10,[],[[70,[-1]]]],-1,47,46],64,73],[[[10,[],[[70,[-1]]]],-1,47,46],64,73],[[[8,[-4,-1,-2,-3]],17,45,46,47,-3],64,[],[],9,[[10,[-1,-2,-3]]]],[-1,156,[[38,[170]]]],[-4,[[8,[-4,-1,-2,-3]]],[],[],9,[[10,[-1,-2,-3]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[[8,[-4,-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],[],9,[[10,[-1,-2,-3]]]],[157,171],0,0,[156,172],[[155,65],156],0,0,0,[[[8,[-4,-1,-2,-3]]],[[65,[96]]],[],[],9,[[10,[-1,-2,-3]]]],0,[[[8,[-4,-1,-2,-3]]],102,[],[],9,[[10,[-1,-2,-3]]]],0,0,0,[[[8,[-4,-1,-2,-3]]],133,[],[],9,[[10,[-1,-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[156,[174,[82,173,173]]],156],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[[10,[],[[70,[-1]]]],-1,175,47,46],[[21,[69,[26,[-2]]]]],73,[]],[[[10,[],[[70,[-1]]]],-1,175,47,46],[[21,[69,[26,[-2]]]]],73,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-4,-1,-2,-3]],-5],[[8,[-4,-1,-2,-3]]],[],[],9,[[10,[-1,-2,-3]]],[[7,[96]]]],0,[[159,166],159],[[159,160],159],[[159,161],159],[[159,82],159],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[175,175],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[[69,69],11],[[175,175],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[69,48],[[50,[21,49]]]],[[175,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[69,69],69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[176,176],[[-1,-2],21,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[42,21],[[176,176],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[176,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[169,82,166],169],[[169,-1],169,[[23,[],[[22,[177]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[169,169],[171,171],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],0,[[169,169],11],[[171,171],11],[[169,48],[[50,[21,49]]]],[[171,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[[155,155],169],[[178,47],171],[169,171],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[[170,179],21],[[170,155,155,82],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[170,155,155,155],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[170,156],0,[[170,155,82],21],[179,179],[[-1,-2],21,[],[]],[170,21],[-1,-2,[],[]],[-1,-2,[],[]],[[],170],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[[170,180],21],0,[[179,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[170,155],21],[[170,155],21],[[],170],[[],-1,[]],[[170,155,155],21],0,[[170,155,65],21],0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[180,180],[[-1,-2],21,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[42,21],0,0,[[180,48],[[50,[21,49]]]],[179,180],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[181,182],[172,183],[184,185],[[172,186],[[78,[82]]]],[[183,186],[[78,[82]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],187],[[],[[189,[188]]]],[184,190],[42,191],[184,21],[192,192],[181,181],[182,182],[[[193,[-1,-2]]],[[193,[-1,-2]]],29,29],[172,172],[183,183],[184,184],[185,185],[[[194,[-1]]],[[194,[-1]]],29],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[186,186],[202,202],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],192],[[],172],[[],184],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[192,192],11],[[[193,[-1,-2]],[193,[-1,-2]]],11,61,61],[[196,196],11],[[197,197],11],[[198,198],11],[[199,199],11],[[200,200],11],[[201,201],11],[[186,186],11],[[202,202],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[181,202],[[193,[186,201]]]],[[182,202],[[193,[186,201]]]],[[[194,[-1]],202],[[193,[-1,21]]],[]],[[195,202],[[193,[186,201]]]],[[181,[78,[-1]],[78,[-2]]],[[203,[-1,-2]]],[],[]],[172,[[26,[[21,[[204,[82,173]],[78,[82]]]]]]]],[183,[[26,[[21,[[204,[82,173]],[78,[82]]]]]]]],[[192,48],[[50,[21,49]]]],[[181,48],[[50,[21,49]]]],[[182,48],[[50,[21,49]]]],[[[193,[-1,-2]],48],[[50,[21,49]]],168,168],[[172,48],[[50,[21,49]]]],[[183,48],[[50,[21,49]]]],[[184,48],[[50,[21,49]]]],[[185,48],[[50,[21,49]]]],[[196,48],[[50,[21,49]]]],[[197,48],[[50,[21,49]]]],[[198,48],[[50,[21,49]]]],[[199,48],[[50,[21,49]]]],[[200,48],[[50,[21,49]]]],[[201,48],[[50,[21,49]]]],[[186,48],[[50,[21,49]]]],[[202,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[181,182],[-1,-1,[]],[-1,-1,[]],[[[193,[-1,-2]]],-1,29,[]],[-1,-1,[]],[-1,-1,[]],[172,183],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,172,[[23,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]]],[-1,184,[[23,[],[[22,[183]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,201],[42,186],[[205,186],[[78,[82]]]],[[206,186],[[78,[82]]]],[[172,186],[[78,[82]]]],[[183,186],[[78,[82]]]],[[184,42],183],[[185,42],183],[[207,201],[[204,[82,173]]]],[[172,201],[[204,[82,173]]]],[[183,201],[[204,[82,173]]]],[[[194,[-1]],201],[[204,[82,173]]],208],[[207,186],[[204,[82,173]]]],[[172,186],[[204,[82,173]]]],[[183,186],[[204,[82,173]]]],[[[194,[-1]],186],[[204,[82,173]]],208],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[[193,[-1,-2]],-3],21,19,19,212],[[200,-1],21,212],[[201,-1],21,212],[[186,-1],21,212],[[202,-1],21,212],[172,213],[183,213],[[[194,[-1]]],214,[]],[[172,201],[[204,[82,173]]]],[[172,186],[[204,[82,173]]]],[[183,186],[[204,[82,173]]]],[[183,201],[[204,[82,173]]]],[[[194,[-1]],186],-1,[]],[184,[[215,[42]]]],[185,[[215,[42]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,216],[172,217],[183,217],[183,217],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[193,[-1,-2]]],11,[],[]],[183,11],[184,11],[185,11],[[199,218],11],[198,11],[[199,218],11],[198,11],[181,216],[182,216],[172,217],[183,217],[184,219],[185,219],[[[194,[-1]]],[[220,[-1]]],[]],[195,221],[172,222],[183,222],0,0,[172,[[26,[[21,[[204,[82,173]],[78,[82]]]]]]]],[183,[[26,[[21,[[204,[82,173]],[78,[82]]]]]]]],[184,42],[185,42],0,[[[78,[82]],42],206],[[],172],[[],184],[[181,202],[[26,[202]]]],[[182,202],[[26,[202]]]],[[181,202],202],[[182,202],202],[[],-1,[]],[[],-1,[]],[[],-1,[]],[205,42],[206,42],[172,42],[183,42],[201,42],[186,42],[198,198],0,0,[[[194,[-1]]],[[223,[-1]]],208],[[181,[78,[-1]],[78,[-2]]],[[224,[-1,-2]]],[],[]],0,0,0,[208,[[204,[82,173]]]],[[184,42,42,42],21],[172,[[226,[225]]]],[183,[[226,[225]]]],[[],[[227,[188]]]],0,[[[193,[-1,-2]]],-1,29,[]],[198,82],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[201,42],[186,42],[202,42],0,[[[193,[[204,[82,173]],[204,[82,173]]]],-1],[[193,[[204,[82,173]],[204,[82,173]]]]],[[228,[82]]]],[[172,-1],172,[[228,[82]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,172],[[42,42,42],184],[[[193,[-1,-2]]],[[193,[[204,[82,173]],[204,[82,173]]]]],208,208],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[229,[204,[82,173]],82,200,[78,[82]]],21],[[[189,[-1]],[204,[82,173]],82,200],21,229],[[229,[204,[82,173]],[230,[82,173]],[231,[82]],200,[78,[82]]],21],[[[189,[-1]],[204,[82,173]],[230,[82,173]],[231,[82]],200],21,229],[[229,[232,[82]],[78,[82]]],[[21,[186,186]]]],[[[189,[-1]],[232,[82]]],[[21,[186,186]]],229],[[229,[204,[82,173]],[78,[82]]],186],[[[189,[-1]],[204,[82,173]]],186,229],[[229,[194,[[204,[82,173]]]],[78,[82]]],21],[[233,[194,[[204,[82,173]]]]],21],[[[189,[-1]],[194,[[204,[82,173]]]]],21,229],[[229,[234,[82,173]],200,[78,[82]]],21],[[[189,[-1]],[234,[82,173]],200],21,229],[[229,[234,[82,173]],235,200,[78,[82]]],21],[[[189,[-1]],[234,[82,173]],235,200],21,229],[[[227,[-1]],[204,[82,173]],[230,[82,173]],[231,[82]],[231,[82]]],21,229],[[233,[230,[82,173]],[231,[82]],192,[204,[82,173]]],21],[[[227,[-1]],[230,[82,173]],[231,[82]],192,[204,[82,173]]],21,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[229,[204,[82,173]],[78,[82]]],186],[[[236,[-1]],[204,[82,173]],[78,[82]]],186,229],[[[237,[-1,-2]],[204,[82,173]],[78,[82]]],186,229,[[228,[82]]]],[[[189,[-1]],[204,[82,173]]],186,229],[[[189,[-1]],[204,[82,173]],[78,[82]]],186,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[239,[],[[238,[-1]]]]],-1,[]],[[[236,[-1]]],[],[239,229]],[[[236,[-1]]],[],239],[[[237,[-1,-2]]],[],239,[]],[[[227,[-1]]],[],[239,229]],[[[227,[-1]]],[],[229,239]],[[[189,[-2]]],-1,[],[[239,[],[[238,[-1]]]],229]],[[[189,[-1]]],[],[229,239]],[235,235],[[[189,[-1]]],[[189,[-1]]],[29,229]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[233,21],[229,21],[[[227,[-1]]],21,229],[[[227,[-1]]],21,229],[[[189,[-1]]],21,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[229,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]],[204,[82,173]],[204,[82,173]]],21],[[[236,[-1]],[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229],[[[237,[-1,-2]],[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229,[[228,[82]]]],[[[227,[-1]],[204,[82,173]],[204,[82,173]],[204,[82,173]]],21,229],[[[227,[-1]],[204,[82,173]],[204,[82,173]],[204,[82,173]]],186,229],[[[189,[-1]],[204,[82,173]],[204,[82,173]],[204,[82,173]]],186,229],[[[189,[-1]],[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229],[[[227,[-1]]],[[204,[82,173]]],229],[[],235],[[],[[189,[-1]]],[229,73]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[[229,11],21],[[[236,[-1]],11],21,229],[[[237,[-1,-2]],11],21,229,[[228,[82]]]],[[[189,[-1]],11],21,229],[[[189,[-1]],11],21,229],[[235,235],11],[[[189,[-1]],[189,[-1]]],11,[61,229]],[[229,[193,[[21,[[204,[82,173]],[78,[82]]]],[204,[82,173]]]]],21],[[[189,[188]],[78,[183]]],21],[[229,82],[[236,[229]]]],[[[227,[-1]],82],[[227,[[236,[-1]]]]],229],[[[189,[-1]],82],[[189,[[236,[-1]]]]],229],[[235,48],[[50,[21,49]]]],[[235,48],[[50,[21,49]]]],[[[189,[-1]],48],[[50,[21,49]]],[168,229]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[[189,[-1]],-2],21,[19,229],212],[[233,82],21],[[[227,[-1]],82],21,229],[[],42],[[],42],[[],42],[[],42],[[],42],[[[189,[-1]]],-1,229],[[[189,[-1]]],-1,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[189,[-1]]],-1,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[229,[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]]],21],[[[236,[-1]],[204,[82,173]],[78,[82]]],186,229],[[[237,[-1,-2]],[204,[82,173]],[78,[82]]],186,229,[[228,[82]]]],[[[227,[-1]],[204,[82,173]]],186,229],[[[227,[-1]],[204,[82,173]]],21,229],[[[189,[-1]],[204,[82,173]]],186,229],[[[189,[-1]],[204,[82,173]],[78,[82]]],186,229],[[233,[204,[82,173]]],21],[[[227,[-1]],[204,[82,173]]],21,229],[[[227,[-1]],[204,[82,173]]],186,229],[[-1,82],[[236,[-1]]],229],[[-1,-2],[[237,[-1,-2]]],[],[]],[-1,[[227,[-1]]],229],[82,235],[[],[[189,[-1]]],[73,229]],[[],-1,[]],[[],-1,[]],[229,42],[[[236,[-1]]],42,229],[[[237,[-1,-2]]],42,229,[[228,[82]]]],[[[189,[-1]]],42,229],[[235,235],[[26,[240]]]],[[229,[193,[[204,[82,173]],[204,[82,173]]]],[78,[82]]],21],[[[189,[-1]],[193,[[204,[82,173]],[204,[82,173]]]]],21,229],[[229,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]],[204,[82,173]]],21],[[[236,[-1]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229],[[[237,[-1,-2]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229,[[228,[82]]]],[[[227,[-1]],[204,[82,173]],[204,[82,173]]],21,229],[[[227,[-1]],[204,[82,173]],[204,[82,173]]],186,229],[[[189,[-1]],[204,[82,173]],[204,[82,173]],[78,[82]]],186,229],[[[189,[-1]],[204,[82,173]],[204,[82,173]]],186,229],[[233,[230,[82,173]],[231,[82]],192,[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]],[231,[82]],192,[230,[82,173]]],21,229],[[233,[230,[82,173]],[230,[82,173]],[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]],[230,[82,173]],[230,[82,173]]],21,229],[[233,82],21],[[[227,[-1]],82],21,229],[[233,[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]]],21,229],[[233,[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]]],21,229],[[233,[230,[82,173]],[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]],[230,[82,173]]],21,229],[[233,82],21],[[[227,[-1]],82],21,229],[[229,42,42],21],[[233,42,42],21],[[[236,[-1]],42,42],21,229],[[[237,[-1,-2]],42,42],21,229,[[228,[82]]]],[[[227,[-1]],42,42],21,229],[[[227,[-1]],42,42],21,229],[[[189,[-1]],42,42],21,229],[[[189,[-1]],42,42],21,229],[[[236,[-1]],82],21,229],[[[237,[-1,-2]],-2],21,[],[]],[[[227,[[237,[-1,-2]]]],-2],21,229,[[228,[82]]]],[[233,[204,[82,173]],[204,[82,173]]],21],[[[227,[-1]],[204,[82,173]],[204,[82,173]]],21,229],[[233,[204,[82,173]]],21],[[[227,[-1]],[204,[82,173]]],21,229],[[233,[230,[82,173]],[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]],[230,[82,173]]],21,229],[[233,[230,[82,173]]],21],[[[227,[-1]],[230,[82,173]]],21,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,143,[]],[-1,13,[]],0,0,[[229,-1],[[237,[229,-1]]],[[228,[82]]]],[[[227,[-1]],-2],[[227,[[237,[-1,-2]]]]],229,[[228,[82]]]],[[[189,[-1]],-2],[[189,[[237,[-1,-2]]]]],229,[[228,[82]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[233,82],21],[[[227,[-1]],82],21,229],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[42,42],[[189,[-1]]],[73,229]],[229,[[227,[229]]]],[[[189,[-1]]],[[227,[-1]]],229],[-1,[[189,[-1]]],229],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[187,186],202],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[187,181],[[[224,[-1,-2]]],[[224,[-1,-2]]],29,29],[187,187],[[[203,[-1,-2]]],[[203,[-1,-2]]],29,29],[216,216],[[[241,[-1,-2]]],[[241,[-1,-2]]],29,29],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[187,201,201,186],202],[[],187],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[[187,11],[[26,[202]]]],[[[224,[-1,-2]]],[[203,[-1,-2]]],[],[]],[[[224,[-1,-2]],48],[[50,[21,49]]],168,168],[[187,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[224,[-1,-2]],201],[[204,[82,173]]],208,208],[[[224,[-1,-2]],186],[[204,[82,173]]],208,208],[[[224,[-1,-2]],186],-1,[],[]],[[[224,[-1,-2]],201],-2,[],[]],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[224,[-1,-2]]],216,[],[]],[[187,186],202],[[],187],[[[203,[-1,-2]]],[[26,[[193,[-1,-2]]]]],[],[]],[216,[[26,[[193,[186,201]]]]]],[[[241,[-1,-2]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],208,208],[[],-1,[]],[[[203,[-1,-2]]],[[241,[-1,-2]]],208,208],[[187,201,186],202],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,187],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[242,[-1]]],-1,243],0,[[[244,[-1]]],[[232,[-1]]],243],[[[244,[-1]]],[[232,[-1]]],243],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[231,[-1]],[231,[-1]]],[[231,[-1]]],[60,[245,[],[[30,[]]]]]],[[[231,[-1]],[231,[-1]]],[[231,[-1]]],[[245,[],[[30,[]]]]]],[[[231,[-1]],[231,[-1]]],21,246],[[[248,[],[[247,[-1]]]],-1],[[248,[],[[247,[-1]]]]],243],[[[249,[-1]],-1],[[249,[-1]]],243],[[[249,[-1]],-1],[[249,[-1]]],243],[[[250,[-1]],-1],[[250,[-1]]],243],[[[250,[-1]],-1],[[250,[-1]]],243],[[[232,[-1]],-1],[[232,[-1]]],243],[[[232,[-1]],-1],[[232,[-1]]],243],[[[251,[-1]],-1],[[251,[-1]]],243],[[[251,[-1]],-1],[[251,[-1]]],243],0,[[[231,[-1]],[231,[-1]]],[[231,[-1]]],[[252,[],[[30,[]]]],[253,[],[[30,[]]]],[245,[],[[30,[]]]],[254,[],[[30,[]]]],255,256,60]],[[],-1,257],[[[231,[-1]],[231,[-1]],-1],11,[]],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[242,[-1]]],-1,243],0,[[[244,[-1]]],[[232,[-1]]],243],[[[250,[-1]]],[[232,[-1]]],243],[[[251,[-1]]],[[232,[-1]]],243],[[[244,[-1]]],[[232,[-1]]],243],[[[248,[],[[247,[-1]]]],-1],[[248,[],[[247,[-1]]]]],243],[[[249,[-1]],-1],[[249,[-1]]],243],[[[249,[-1]],-1],[[249,[-1]]],243],[[[250,[-1]],-1],[[250,[-1]]],243],[[[250,[-1]],-1],[[250,[-1]]],243],[[[232,[-1]],-1],[[232,[-1]]],243],[[[232,[-1]],-1],[[232,[-1]]],243],[[[251,[-1]],-1],[[251,[-1]]],243],[[[251,[-1]],-1],[[251,[-1]]],243],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[249,[-1]]],[[234,[-1,173]]],243],[[[250,[-1]]],[[234,[-1,173]]],243],[[[232,[-1]]],[[234,[-1,173]]],243],[[[251,[-1]]],[[234,[-1,173]]],243],[[[244,[-1]]],[[234,[-1,173]]],243],[[[249,[-1]]],[[21,[-1,-1]]],243],[[[250,[-1]]],[[21,[-1,-1]]],243],[[[251,[-1]]],[[21,[-1,-1]]],243],[[[244,[-1]]],[[21,[-1,-1]]],243],[[[249,[-1]]],[[21,[-1,-1]]],243],[[[250,[-1]]],[[21,[-1,-1]]],243],[[[251,[-1]]],[[21,[-1,-1]]],243],[[[244,[-1]]],[[21,[-1,-1]]],243],[[[251,[-1]]],[[244,[-1]]],243],[[[242,[-1]]],-1,243],0,[[[244,[-1]]],[[232,[-1]]],243],[[[231,[-1]]],[[231,[-2]]],[258,60],258],[[[244,[-1]]],[[232,[-1]]],243],0,[[[204,[-1,173]],-1],[[249,[-1]]],243],[[[232,[-1]],[234,[-1,173]]],[[26,[[232,[-1]]]]],243],[[[232,[-1]],[215,[-1]]],[[26,[[232,[-1]]]]],243],[[[232,[-1]],[215,[-1]]],[[26,[[232,[-1]]]]],243],[[[249,[-1]]],[[249,[-1]]],29],[[[259,[-1]]],[[259,[-1]]],29],[[[250,[-1]]],[[250,[-1]]],29],[[[232,[-1]]],[[232,[-1]]],29],[[[260,[-1]]],[[260,[-1]]],29],[[[242,[-1]]],[[242,[-1]]],29],[[[251,[-1]]],[[251,[-1]]],29],[[[244,[-1]]],[[244,[-1]]],29],[[[231,[-1]]],[[231,[-1]]],29],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[[232,[-1]],[204,[-1,173]]],[[204,[-1,173]]],243],[[[251,[-1]],[204,[-1,173]]],-1,243],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[244,[-1]],[204,[-1,173]]],11,243],[[[232,[-1]],[232,[-1]]],11,243],0,0,0,0,[[[250,[-1]],[250,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[250,[-1]],[250,[-1]]],[[261,[[21,[-1,-1]]]]],243],[[],[[231,[-1]]],73],[-1,[[231,[-1]]],262],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[248,[],[[247,[-1]]]],-1],[[230,[-1,173]]],243],[[[249,[-1]],-1],[[230,[-1,173]]],243],[[[250,[-1]],-1],[[230,[-1,173]]],243],[[[250,[-1]],-1],[[230,[-1,173]]],243],[[[232,[-1]],-1],[[230,[-1,173]]],243],[[[251,[-1]],-1],[[230,[-1,173]]],243],[[[251,[-1]],-1],[[230,[-1,173]]],243],[[[232,[-1]],[204,[-1,173]]],-1,243],[[[260,[-1]],[204,[-1,173]]],-1,243],[[[242,[-1]],[204,[-1,173]]],-1,243],[[[251,[-1]],[204,[-1,173]]],-1,243],[[[231,[-1]],-1],[[231,[-1]]],[[263,[],[[30,[]]]]]],[[[231,[-1]],[231,[-1]]],-1,[[263,[],[[30,[]]]]]],[[[231,[-1]],-1],21,264],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[250,[-1]],-1,[204,[-1,173]]],[[250,[-1]]],243],[[[251,[-1]],-1,[204,[-1,173]]],[[251,[-1]]],243],[[[250,[-1]],-1,[204,[-1,173]],-1],[[250,[-1]]],243],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[249,[-1]]],[[231,[-1]]],243],[243,243],[[[249,[-1]],[249,[-1]]],11,61],[[[259,[-1]],[259,[-1]]],11,61],[[[250,[-1]],[250,[-1]]],11,61],[[[232,[-1]],[232,[-1]]],11,61],[[[242,[-1]],[242,[-1]]],11,61],[[[251,[-1]],[251,[-1]]],11,61],[[[244,[-1]],[244,[-1]]],11,61],[[[231,[-1]],[231,[-1]]],11,61],[[[260,[-1]]],[[242,[-1]]],243],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[249,[-1]]],[[234,[-1,173]]],243],[[[250,[-1]]],[[234,[-1,173]]],243],[[[251,[-1]]],[[234,[-1,173]]],243],[[[249,[-1]]],[[21,[-1,-1]]],243],[[[250,[-1]]],[[21,[-1,-1]]],243],[[[251,[-1]]],[[21,[-1,-1]]],243],[[[249,[-1]]],[[21,[-1,-1]]],243],[[[250,[-1]]],[[21,[-1,-1]]],243],[[[251,[-1]]],[[21,[-1,-1]]],243],[[[250,[-1]]],[[21,[[242,[-1]],[242,[-1]]]]],243],[[[251,[-1]]],[[21,[[242,[-1]],[242,[-1]]]]],243],0,[[[249,[-1]],-1],[[265,[-1]]],243],[[[250,[-1]],-1],[[266,[-1]]],243],[[[251,[-1]],-1],[[267,[-1]]],243],[[[251,[-1]],-1],[[268,[-1]]],243],[[[251,[-1]],-1],-1,243],[[[248,[],[[247,[-1]]]]],[[248,[],[[247,[-1]]]]],243],[[[249,[-1]]],[[249,[-1]]],243],[[[249,[-1]]],[[249,[-1]]],243],[[[250,[-1]]],[[250,[-1]]],243],[[[250,[-1]]],[[250,[-1]]],243],[[[232,[-1]]],[[232,[-1]]],243],[[[232,[-1]]],[[232,[-1]]],243],[[[251,[-1]]],[[251,[-1]]],243],[[[251,[-1]]],[[251,[-1]]],243],[[[249,[-1]],48],[[50,[21,49]]],168],[[[259,[-1]],48],[[50,[21,49]]],168],[[[250,[-1]],48],[[50,[21,49]]],168],[[[232,[-1]],48],[[50,[21,49]]],168],[[[260,[-1]],48],[[50,[21,49]]],168],[[[242,[-1]],48],[[50,[21,49]]],168],[[[251,[-1]],48],[[50,[21,49]]],168],[[[244,[-1]],48],[[50,[21,49]]],168],[[[231,[-1]],48],[[50,[21,49]]],168],[[[249,[-1]],-2],21,243,[[167,[[250,[-1]]]]]],[[[259,[-1]],-2],21,243,[[167,[[250,[-1]]]]]],[[[249,[-1]],-1,-2],21,243,[[167,[[232,[-1]]]]]],[[[259,[-1]],-1,-2],21,243,[[167,[[232,[-1]]]]]],[[[250,[-1]],-1,-2],21,243,[[167,[[232,[-1]]]]]],[[[251,[-1]],-1,-2],21,243,[[167,[[232,[-1]]]]]],[[[248,[],[[247,[-1]]]],-1,167],21,243],[[[249,[-1]],167],21,243],[[[249,[-1]],-1,-2],21,243,[[167,[[232,[-1]],[215,[-1]]]]]],[[[259,[-1]],-1,-2],21,243,[[167,[[232,[-1]],[215,[-1]]]]]],[[[250,[-1]],-1,-2],21,243,[[167,[[232,[-1]],[215,[-1]]]]]],[[[250,[-1]],167],21,243],[[[232,[-1]],167],21,243],[[[251,[-1]],167],21,243],[[[251,[-1]],-1,-2],21,243,[[167,[[232,[-1]],[215,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[-1]]]],[[[249,[-1]],-2],21,243,[[167,[-1]]]],[[[250,[-1]],-2],21,243,[[167,[-1]]]],[[[249,[-1]],-2],21,243,[[167,[-1]]]],[[[250,[-1]],-2],21,243,[[167,[-1]]]],[[[250,[-1]],-2],21,243,[[167,[[250,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[251,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[[249,[-1]],-2],21,243,[[167,[[251,[-1]]]]]],[[[259,[-1]],-2],21,243,[[167,[[251,[-1]]]]]],[[[250,[-1]],-1,-2],21,243,[[167,[[251,[-1]]]]]],[[[249,[-1]],-2],21,243,[[167,[[251,[-1]],[215,[-1]]]]]],[[[259,[-1]],-2],21,243,[[167,[[251,[-1]],[215,[-1]]]]]],[[[250,[-1]],-1,-2],21,243,[[167,[[251,[-1]],[215,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[[250,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[251,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[[250,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[251,[-1]]]]]],[[[250,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[[251,[-1]],-2],21,243,[[167,[[215,[-1]]]]]],[[],[[231,[-1]]],[256,[245,[],[[30,[]]]]]],[[],[[231,[-1]]],[256,[245,[],[[30,[]]]]]],[[],[[231,[-1]]],[256,[245,[],[[30,[]]]]]],[[[248,[],[[247,[-1]]]]],[[204,[-1,173]]],243],[-1,-1,[]],[[[249,[-1]]],[[204,[-1,173]]],243],[[[259,[-1]]],[[249,[-1]]],243],[[[249,[-1]]],[[204,[-1,173]]],243],[-1,-1,[]],[-1,-1,[]],[[[250,[-1]]],[[204,[-1,173]]],243],[[[250,[-1]]],[[204,[-1,173]]],243],[-1,-1,[]],[[[232,[-1]]],[[204,[-1,173]]],243],[[[232,[-1]]],[[204,[-1,173]]],243],[-1,-1,[]],[-1,-1,[]],[[[251,[-1]]],[[204,[-1,173]]],243],[[[251,[-1]]],[[204,[-1,173]]],243],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[259,[-1]]],[[249,[-1]]],243],[[[231,[-1]]],-1,[]],[[[249,[-1]],-1],[[231,[-1]]],243],[[-1,-2],209,[19,210],211],[[[231,[-1]],-2],21,19,212],0,[[[232,[-1]],-1],[[26,[[204,[-1,173]]]]],243],[[[232,[-1]],-1],[[26,[-1]]],243],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[[232,[-1]],[232,[-1]]],[[26,[[204,[-1,173]]]]],243],[[[260,[-1]],[260,[-1]]],[[26,[[204,[-1,173]]]]],243],[[[232,[-1]],[232,[-1]]],[[26,[[21,[-1,-1]]]]],243],[[[232,[-1]],[232,[-1]]],11,243],[[[244,[-1]],[244,[-1]]],11,243],[[[260,[-1]],[234,[-1,173]]],11,243],[[[232,[-1]],[260,[-1]]],11,243],[[[244,[-1]],[232,[-1]]],11,243],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[242,[-1]]],[[242,[-1]]],243],[[[251,[-1]],-1],11,243],[[[231,[-1]]],11,269],[[[242,[-1]]],11,243],[[[250,[-1]],-1],11,243],[[[251,[-1]],-1],11,243],[[[250,[-1]]],11,243],[[[251,[-1]]],11,243],[[[250,[-1]],-1],11,243],[[[259,[-1]]],11,243],[[[242,[-1]]],11,243],[[[250,[-1]]],11,243],[[[251,[-1]]],11,243],[[[250,[-1]]],11,243],[[[251,[-1]]],11,243],0,[[[232,[-1]]],-1,243],[[[251,[-1]]],-1,243],[[[231,[-1]],[231,[-1]],-1],[[231,[-1]]],[[252,[],[[30,[]]]],[253,[],[[30,[]]]],[245,[],[[30,[]]]],[254,[],[[30,[]]]],255,256,60]],[[[232,[-1]],[260,[-1]]],[[26,[[204,[-1,173]]]]],243],[[[232,[-1]],[260,[-1]]],[[26,[-1]]],243],[[[250,[-1]],[260,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[251,[-1]],[260,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[250,[-1]],[260,[-1]]],[[261,[-1]]],243],[[[251,[-1]],[260,[-1]]],[[261,[-1]]],243],[[[250,[-1]],[232,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[251,[-1]],[232,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[250,[-1]],[232,[-1]]],[[261,[[21,[-1,-1]]]]],243],[[[251,[-1]],[232,[-1]]],[[261,[[21,[-1,-1]]]]],243],[[[251,[-1]]],[[26,[-1]]],243],[[[251,[-1]]],[[26,[-1]]],243],0,0,0,0,0,0,0,[[[232,[-1]]],[[204,[-1,173]]],243],0,[[[231,[-1]],-1],[[231,[-1]]],[[254,[],[[30,[]]]]]],[[[231,[-1]],-1],21,270],[[[231,[-1]]],[[231,[-1]]],[[271,[],[[30,[]]]]]],[[-1,-1,-1],[[242,[-1]]],243],[[[242,[-1]]],[[230,[-1,173]]],243],[[],-1,[]],[[[250,[-1]],-1],272,243],[[[242,[-1]],-1],[[242,[-1]]],243],[[[232,[-1]],[260,[-1]]],11,243],[[[232,[-1]],[232,[-1]]],11,243],[[[242,[-1]],[204,[-1,173]]],[[242,[-1]]],243],[[[231,[-1]],[231,[-1]]],[[26,[240]]],100],[[],[[231,[-1]]],[256,[245,[],[[30,[]]]]]],[[-1,-1],[[204,[-1,173]]],[]],0,[[[231,[-1]]],[[231,[-1]]],[[253,[],[[30,[]]]],[252,[],[[30,[]]]],[245,[],[[30,[]]]],273,256,100,60]],[[[242,[-1]],[204,[-1,173]]],[[204,[-1,173]]],243],0,[[[250,[-1]],[251,[-1]]],[[261,[[204,[-1,173]]]]],243],[[[250,[-1]],[251,[-1]]],[[261,[[21,[-1,-1]]]]],243],[-1,[[231,[-1]]],[]],0,0,0,[[[248,[],[[247,[-1]]]],-1],[[204,[-1,173]]],243],[[[249,[-1]],-1],[[204,[-1,173]]],243],[[[249,[-1]],-1],[[204,[-1,173]]],243],[[[250,[-1]],-1],[[204,[-1,173]]],243],[[[250,[-1]],-1],[[204,[-1,173]]],243],[[[232,[-1]],-1],[[204,[-1,173]]],243],[[[232,[-1]],-1],[[204,[-1,173]]],243],[[[251,[-1]],-1],[[204,[-1,173]]],243],[[[251,[-1]],-1],[[204,[-1,173]]],243],[[[249,[-1]],-1],[[230,[-1,173]]],243],[[[232,[-1]],-1],21,243],[[[231,[-1]]],[[231,[-1]]],[[253,[],[[30,[]]]],[252,[],[[30,[]]]],[245,[],[[30,[]]]],273,256,100,60]],[[[260,[-1]],[204,[-1,173]]],-1,243],[[[242,[-1]],[204,[-1,173]]],-1,243],[[[231,[-1]]],[[21,[-1,-1]]],274],[[-1,-1],[[275,[-1,173]]],[]],[[[250,[-1]],-1],[[261,[-1]]],243],[[[232,[-1]],-1],-1,243],[[[250,[-1]],-1],[[261,[-1]]],243],[[[232,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[242,[-1]],-1],[[26,[-1]]],243],[[[232,[-1]],-1],-1,243],[[[242,[-1]],-1],[[26,[-1]]],243],[[[248,[],[[247,[-1]]]],-1],[[21,[[248,[],[[247,[-1]]]],[248,[],[[247,[-1]]]]]]],243],[[[249,[-1]],-1],[[21,[[249,[-1]],[249,[-1]]]]],243],[[[249,[-1]],-1],[[21,[[249,[-1]],[249,[-1]]]]],243],[[[250,[-1]],-1],[[21,[[250,[-1]],[250,[-1]]]]],243],[[[250,[-1]],-1],[[21,[[250,[-1]],[250,[-1]]]]],243],[[[232,[-1]],-1],[[21,[[232,[-1]],[232,[-1]]]]],243],[[[232,[-1]],-1],[[21,[[232,[-1]],[232,[-1]]]]],243],[[[251,[-1]],-1],[[21,[[251,[-1]],[251,[-1]]]]],243],[[[251,[-1]],-1],[[21,[[251,[-1]],[251,[-1]]]]],243],[[[232,[-1]],-1],[[21,[[232,[-1]],[232,[-1]]]]],243],[[[248,[],[[247,[-1]]]],[215,[-1]]],[[248,[],[[247,[-1]]]]],243],[[[249,[-1]],[215,[-1]]],[[249,[-1]]],243],[[[249,[-1]],[215,[-1]]],[[249,[-1]]],243],[[[250,[-1]],[215,[-1]]],[[250,[-1]]],243],[[[250,[-1]],[215,[-1]]],[[250,[-1]]],243],[[[232,[-1]],[215,[-1]]],[[232,[-1]]],243],[[[232,[-1]],[215,[-1]]],[[232,[-1]]],243],[[[251,[-1]],[215,[-1]]],[[251,[-1]]],243],[[[251,[-1]],[215,[-1]]],[[251,[-1]]],243],[[[232,[-1]],[204,[-1,173]]],-1,243],[[[260,[-1]],[204,[-1,173]]],-1,243],[[[251,[-1]],[204,[-1,173]]],-1,243],[[[232,[-1]]],-1,243],0,[[[231,[-1]],[231,[-1]]],[],[[253,[],[[30,[]]]]]],[[[231,[-1]],[231,[-1]]],21,276],[-2,[[231,[-1]]],[245,60,273],[[277,[],[[22,[[231,[-1]]]]]]]],[-2,[[231,[-1]]],[245,273],[[277,[],[[22,[[231,[-1]]]]]]]],0,0,[[[242,[-1]]],[[230,[-1,173]]],243],[[[248,[],[[247,[-1]]]]],[[204,[-1,173]]],243],[[[249,[-1]]],[[204,[-1,173]]],243],[[[249,[-1]]],[[204,[-1,173]]],243],[[[250,[-1]]],[[204,[-1,173]]],243],[[[250,[-1]]],[[204,[-1,173]]],243],[[[232,[-1]]],[[204,[-1,173]]],243],[[[232,[-1]]],[[204,[-1,173]]],243],[[[251,[-1]]],[[204,[-1,173]]],243],[[[251,[-1]]],[[204,[-1,173]]],243],0,0,0,0,[[[259,[-1]]],[[249,[-1]]],243],[[[251,[-1]]],[[250,[-1]]],243],[[[231,[-1]]],-1,262],[[[250,[-1]]],[[250,[82]]],243],[[[232,[-1]]],[[232,[82]]],243],[[[260,[-1]]],[[260,[82]]],243],[[[251,[-1]]],[[251,[82]]],243],[[[231,[-1]]],[[231,[82]]],[258,60]],[[[250,[-1]]],[[250,[278]]],243],[[[232,[-1]]],[[232,[278]]],243],[[[260,[-1]]],[[260,[278]]],243],[[[251,[-1]]],[[251,[278]]],243],[[[231,[-1]]],[[231,[278]]],[258,60]],[[[232,[-1]]],[[260,[-1]]],243],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[250,[-1]]],[[251,[-1]]],243],[[[250,[-1]]],-1,243],[[[249,[-1]]],[[259,[-1]]],243],[[[232,[-1]]],[[230,[-1,173]]],243],0,[[[244,[-1]],-2],[[244,[-1]]],243,[[228,[-1]]]],[[[250,[-1]],-2],[[250,[-1]]],243,[[228,[-1]]]],[[[232,[-1]],-2],[[232,[-1]]],243,[[228,[-1]]]],[[[251,[-1]],-2],[[251,[-1]]],243,[[228,[-1]]]],[[[232,[-1]],[230,[-1,173]]],[[232,[-1]]],243],[[[231,[-1]]],[[26,[[231,[-2]]]]],[258,60],258],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[[],[[231,[-1]]],[256,[245,[],[[30,[]]]]]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],0,[82,243],[[-1,-1],[[230,[-1,173]]],[]],0,[[[232,[-1]],-1],[[26,[[204,[-1,173]]]]],243],[[[232,[-1]],-1],[[26,[-1]]],243],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[248,[],[[247,[-1]]]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],0,0,0,[[[250,[-1]]],-1,243],[[[251,[-1]]],-1,243],[[[250,[-1]]],-1,243],[[[251,[-1]]],-1,243],0,0,[[[248,[],[[247,[-1]]]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[249,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[250,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[232,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],[[[251,[-1]],-1],-1,243],0,0,0,[[[250,[-1]]],-1,243],[[[251,[-1]]],-1,243],[[[250,[-1]]],-1,243],[[[251,[-1]]],-1,243],[[],[[231,[-1]]],273],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[42,21],0,[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[265,[-1]]],[[26,[[204,[-1,173]]]]],243],0,0,0,0,0,0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[261,[-1]]],[[78,[-1]]],[]],[[[261,[-1]]],[],[]],[[[261,[-1]]],[[78,[-1]]],[]],[279,25],[[[261,[-1]]],[],[]],[[[261,[-1]]],[[78,[-1]]],[]],[279,25],[[[261,[-1]]],[[78,[-1]]],[]],[279,25],[[[261,[-1]]],[[78,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[279,25],[-1,-2,[],[]],[-1,-2,[],[]],[[[261,[-1]]],[[78,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[279,25],[-1,-2,[],[]],[[[261,[-1]]],42,[]],[279,42],[[[261,[-1]]],21,[]],[279,21],[[[261,[-1]]],[[261,[-1]]],29],[[[280,[-1]]],[[280,[-1]]],29],[279,279],[[[281,[-1]]],[[281,[-1]]],29],[[[261,[-1]],[261,[-1]]],21,29],[[279,279],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[[261,[-1]],[261,[-1]]],240,282],[[279,279],240],[[[281,[-1]],[281,[-1]]],240,282],[[-1,-2],240,[],[]],[[-1,-2],240,[],[]],[[-1,-2],240,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[261,[-1]]],[]],[[],279],[42,-1,[]],[[[261,[-1]]],[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[279,25],[42,-1,[]],[42,-1,[]],[[[261,[-1]]],[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[279,25],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[261,[-1]],-2],[[283,[-1]]],[],[[284,[42]]]],[[[261,[-1]]],21,[]],[42,21],[[[280,[-1]]],21,[]],[42,21],[[[283,[-1]]],21,[]],[42,21],[42,21],[42,21],[[[281,[-1]]],-1,[]],[-1,-2,[],[[286,[285]]]],[-1,-2,[],[[286,[285]]]],[[[261,[-1]],[261,[-1]]],11,61],[[[261,[-1]],[78,[-1]]],11,61],[[279,25],11],[[279,279],11],[[[281,[-1]],[281,[-1]]],11,61],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[261,[-1]],-2],21,[],[[23,[],[[22,[-1]]]]]],[[[261,[98]]],[[50,[21,287]]]],[[[261,[-1]],48],[[50,[21,49]]],168],[[[280,[-1]],48],[[50,[21,49]]],168],[[279,48],[[50,[21,49]]]],[[279,48],[[50,[21,49]]]],[[[281,[-1]],48],[[50,[21,49]]],[]],[[[281,[-1]],48],[[50,[21,49]]],[]],[[[288,[-1]]],[[261,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,[[50,[279,[281,[25]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[288,[98]]],[[50,[279,289]]]],[-2,[[261,[-1]]],[],[[23,[],[[22,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[50,[279]]]],[[[261,[-1]],[261,[-1]]],11,100],[[279,279],11],[[279,25],11],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[[261,[-1]],[261,[-1]]],11,100],[[279,25],11],[[279,279],11],[[[261,[-1]],-2],21,19,212],[[279,-1],21,212],[[],42],[[],42],[[],42],[[],42],[[],42],[[[261,[-1]],42,-1],21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[261,[-1]]],[[50,[[288,[-1]],[261,[-1]]]]],[]],[[[261,[-1]]],[[288,[-1]]],[]],[[[261,[-1]]],[[280,[-1]]],[]],[[[261,[-1]]],[],[]],[[[261,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[261,[-1]]],11,[]],[279,11],[[[261,[-1]]],11,[]],[279,11],[[[261,[-1]],[261,[-1]]],11,100],[[279,279],11],[[279,25],11],[[[261,[-1]]],42,[]],[279,42],[[[261,[-1]],[261,[-1]]],11,100],[[279,279],11],[[279,25],11],[[],[[261,[-1]]],[]],[[],279],[-1,[[281,[-1]]],[]],[[],[[261,[-1]]],[]],[[],279],[[[280,[-1]]],26,[]],[[[283,[-1]]],26,[]],[[[280,[-1]]],26,[]],[[[283,[-1]]],26,[]],[[],-1,[]],[[],-1,[]],[[[261,[-1]],[261,[-1]]],[[26,[240]]],100],[[279,25],[[26,[240]]]],[[279,279],[[26,[240]]]],[[[281,[-1]],[281,[-1]]],[[26,[240]]],100],[[[261,[-1]]],[[26,[-1]]],[]],[279,[[26,[285]]]],[[[261,[-1]],42],[[26,[-1]]],[]],[[[261,[-1]],-1],21,[]],[[279,285],21],[[279,25],21],[[[261,[-1]],-1],21,[]],[[[261,[-1]]],42,[]],[279,42],[[[261,[-1]],42],-1,[]],[[279,42],285],[[[261,[-1]],-2],21,[],[[167,[-1],[[30,[11]]]]]],[[[261,[-1]],42],21,[]],[[279,42],21],[[[281,[-1]]],281,[]],[[[280,[-1]]],[[21,[42,[26,[42]]]]],[]],[[[283,[-1]]],[[21,[42,[26,[42]]]]],[]],[[[261,[-1]],42],[[26,[-1]]],[]],[[[261,[-1]],42],-1,[]],[[[261,[-1]]],[[261,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,143,[]],[-1,143,[]],[-1,13,[]],[-1,13,[]],[[[261,[-1]],42],21,[]],[[279,42],21],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[[[261,[-1]],[78,[-1]]],[[50,[21,281]]],60],[[[78,[-1]]],[[50,[[261,[-1]]]]],29],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[25,[[50,[279]]]],[290,[[50,[279]]]],[-1,[[50,[-2]]],[],[]],[[[261,[-1]],42,-1],[[50,[21,[281,[-1]]]]],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[[[261,[-1]],-1],[[50,[21,[281,[-1]]]]],[]],[[279,285],[[50,[21,[281,[285]]]]]],[[279,25],[[50,[21,[281,[25]]]]]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[261,[98]],[78,[98]]],[[50,[42,287]]]],[[-1,[78,[82]]],[[50,[21,287]]],[]],[[-1,[78,[291]]],[[50,[21,287]]],[]],[[-1,292],[[50,[21,287]]],[]],[[-1,[78,[218]]],[[50,[21,287]]],[]],[[-1,209],[[50,[21,287]]],[]],[[-1,293],[[50,[21,287]]],[]],[[-1,272],[[50,[21,287]]],[]],[[-1,[78,[294]]],[[50,[21,287]]],[]],[[-1,278],[[50,[21,287]]],[]],[[-1,[78,[272]]],[[50,[21,287]]],[]],[[-1,[78,[295]]],[[50,[21,287]]],[]],[[-1,295],[[50,[21,287]]],[]],[[-1,[78,[293]]],[[50,[21,287]]],[]],[[-1,294],[[50,[21,287]]],[]],[[-1,296],[[50,[21,287]]],[]],[[-1,[78,[278]]],[[50,[21,287]]],[]],[[-1,291],[[50,[21,287]]],[]],[[-1,[78,[292]]],[[50,[21,287]]],[]],[[-1,98],[[50,[21,287]]],[]],[[-1,[78,[296]]],[[50,[21,287]]],[]],[[-1,[78,[209]]],[[50,[21,287]]],[]],[[-1,82],[[50,[21,287]]],[]],[[-1,[78,[98]]],[[50,[21,287]]],[]],[[-1,218],[[50,[21,287]]],[]],[[-1,[78,[272]]],[[50,[21,287]]],[]],[[-1,272],[[50,[21,287]]],[]],[[-1,218],[[50,[21,287]]],[]],[[-1,[78,[218]]],[[50,[21,287]]],[]],[[-1,[78,[291]]],[[50,[21,287]]],[]],[[-1,[78,[209]]],[[50,[21,287]]],[]],[[-1,292],[[50,[21,287]]],[]],[[-1,293],[[50,[21,287]]],[]],[[-1,209],[[50,[21,287]]],[]],[[-1,[78,[296]]],[[50,[21,287]]],[]],[[-1,[78,[278]]],[[50,[21,287]]],[]],[[-1,[78,[294]]],[[50,[21,287]]],[]],[[-1,82],[[50,[21,287]]],[]],[[-1,[78,[82]]],[[50,[21,287]]],[]],[[-1,98],[[50,[21,287]]],[]],[[-1,[78,[295]]],[[50,[21,287]]],[]],[[-1,294],[[50,[21,287]]],[]],[[-1,278],[[50,[21,287]]],[]],[[-1,291],[[50,[21,287]]],[]],[[-1,[78,[98]]],[[50,[21,287]]],[]],[[-1,296],[[50,[21,287]]],[]],[[-1,295],[[50,[21,287]]],[]],[[-1,[78,[292]]],[[50,[21,287]]],[]],[[-1,[78,[293]]],[[50,[21,287]]],[]],[[279,285],[[50,[21,49]]]],[[-1,297,82],[[50,[21,287]]],[]],[[-1,297,278],[[50,[21,287]]],[]],[[-1,297,292],[[50,[21,287]]],[]],[[-1,297,218],[[50,[21,287]]],[]],[[-1,297,296],[[50,[21,287]]],[]],[[-1,297,293],[[50,[21,287]]],[]],[[-1,297,295],[[50,[21,287]]],[]],[[279,25],[[50,[21,49]]]],[[-1,297,291],[[50,[21,287]]],[]],[[-1,297,294],[[50,[21,287]]],[]],[[-1,297,272],[[50,[21,287]]],[]],[[-1,297,209],[[50,[21,287]]],[]],[[-1,297,98],[[50,[21,287]]],[]],[[],279],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[42,21],[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[266,[-1]]],[[26,[[204,[-1,173]]]]],243],[[[266,[-1]]],[[21,[42,[26,[42]]]]],243],0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[275,[-1,-2]]],[[275,[-1,-2]]],298,[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],298,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],298,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],298,[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[],[245,60],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[],245,[]],[[[204,[-1,-2]],[275,[-1,-2]]],[],245,[]],[[[204,[-1,-2]],[230,[-1,-2]]],[],245,[]],[[[302,[-1,-2]],[299,[-1,-2]]],[],245,[]],[[[302,[-1,-2]],[300,[-1,-2]]],[],245,[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[],245,[],[]],[[[304,[-1,-2]],[304,[-1,-2]]],[[304,[-1,-2]]],[[245,[],[[30,[]]]]],[]],[[[275,[-1,-2]],[275,[-1,-2]]],[],245,[]],[[[275,[-1,-2]],[275,[-1,-2]]],[[275,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[299,[-1,-2]],[299,[-1,-2]]],[[299,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[299,[-1,-2]],[299,[-1,-2]]],[],245,[]],[[[305,[-1,-2,-3]],[305,[-1,-3,-4]]],[],245,[],[],[]],[[[306,[-1,-2,-3]],[306,[-1,-3,-4]]],[],245,[],[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[],245,[]],[[[230,[-1,-2]],[230,[-1,-2]]],[],[245,60],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[],[245,60],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[],245,[]],[[[301,[-1,-2]],[301,[-1,-2]]],21,246,[]],[[[204,[-1,-2]],[275,[-1,-2]]],21,246,[]],[[[204,[-1,-2]],[230,[-1,-2]]],21,[60,[245,[],[[30,[]]]]],[]],[[[302,[-1,-2]],[299,[-1,-2]]],21,246,[]],[[[302,[-1,-2]],[300,[-1,-2]]],21,[60,[245,[],[[30,[]]]]],[]],[[[304,[-1,-2]],[304,[-1,-2]]],21,246,[]],[[[275,[-1,-2]],[275,[-1,-2]]],21,246,[]],[[[299,[-1,-2]],[299,[-1,-2]]],21,246,[]],[[[305,[-1,-2,-3]],[305,[-1,-3,-3]]],21,246,[],[]],[[[306,[-1,-2,-3]],[306,[-1,-3,-3]]],21,246,[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],21,[60,[245,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],21,[60,[245,[],[[30,[]]]]],[]],[[[204,[-1,-2]],[275,[-1,-2]]],[[204,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[302,[-1,-2]],[299,[-1,-2]]],[[302,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[307,11],[308,11],[[307,307],307],[[308,308],308],0,[[[230,[-1,-2]]],[[231,[-1]]],[262,60],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[231,[-1]]],[[253,[],[[30,[]]]],262,60,[254,[],[[30,[]]]],[245,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[231,[-1]]],[262,274],[]],[307,11],[308,11],[[],-1,257],[[],[[204,[-1,-2]]],[],[]],[[],[[302,[-1,-2]]],[],[]],[[],-1,[]],[[],-1,257],[[],-1,257],[[],[[230,[-1,-2]]],[],[]],[[],[[300,[-1,-2]]],[],[]],[[[174,[-1,-2,-3]],[174,[-1,-2,-3]]],11,[],[],[]],[[[309,[-1,-2,-3]],[309,[-1,-2,-3]]],11,[],[],[]],[[[301,[-1,-2]],[301,[-1,-2]],-1],11,[],[]],[[[204,[-1,-2]],[204,[-1,-2]],[204,[-1,-2]]],11,[],[]],[[[302,[-1,-2]],[302,[-1,-2]],[302,[-1,-2]]],11,[],[]],[[[310,[-1,-2,-3]],[310,[-1,-2,-3]],-1],11,[],[],[]],[[[174,[-1,-2,-3]],[174,[-1,-2,-3]],-1],11,[],[],[]],[[[174,[-1,-2,-3]],[174,[-1,-2,-3]],-1],11,[],[],[]],[[[309,[-1,-2,-3]],[309,[-1,-2,-3]],-1],11,[],[],[]],[[[309,[-1,-2,-3]],[309,[-1,-2,-3]],-1],11,[],[],[]],[[[230,[-1,-2]],[230,[-1,-2]],[230,[-1,-2]]],11,[],[]],[[[300,[-1,-2]],[300,[-1,-2]],[300,[-1,-2]]],11,[],[]],0,0,[[[234,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],-1,[60,[254,[],[[30,[]]]]],[]],[[[275,[-1,-2]]],[],[254,60],[]],[[[300,[-1,-2]],[231,[-1]]],[[310,[-1,-2,-3]]],274,[],[]],[[[231,[-1]]],[[310,[-1,-2,-3]]],274,[],[]],[[[231,[-1]]],[[310,[-1,-2,-3]]],274,[],[]],[[[231,[-1]]],[[310,[-1,-2,-3]]],274,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-1,-1,-1,-1,-1],[[312,[-1,-2]]],60,[]],[[11,11],307],[[11,11,11],308],[[[234,[-1,-2]]],[[234,[-3,-2]]],[258,60],[],258],[[[312,[-1,-2]]],[[312,[-3,-2]]],[258,60],[],258],[[[301,[-1,-2]]],[[301,[-3,-2]]],[258,29],[],258],[[[204,[-1,-2]]],[[204,[-3,-2]]],[258,60],[],258],[[[302,[-1,-2]]],[[302,[-3,-2]]],[258,60],[],258],[[[311,[-1,-2]]],[[311,[-3,-2]]],[258,60],[],258],[[[303,[-1,-2,-3]]],[[303,[-4,-2,-3]]],258,[],[],258],[[[275,[-1,-2]]],[[275,[-3,-2]]],[258,60],[],258],[[[299,[-1,-2]]],[[299,[-3,-2]]],[258,60],[],258],[[[174,[-1,-2,-3]]],[[174,[-4,-2,-3]]],[258,60],[],[],258],[[[309,[-1,-2,-3]]],[[309,[-4,-2,-3]]],[258,60],[],[],258],[[[230,[-1,-2]]],[[230,[-3,-2]]],[258,60],[],258],[[[300,[-1,-2]]],[[300,[-3,-2]]],[258,60],[],258],[[[234,[-1,-2]]],[[234,[-1,-3]]],60,[],[]],[[[312,[-1,-2]]],[[312,[-1,-3]]],60,[],[]],[[[301,[-1,-2]]],[[301,[-1,-3]]],29,[],[]],[[[204,[-1,-2]]],[[204,[-1,-3]]],60,[],[]],[[[302,[-1,-2]]],[[302,[-1,-3]]],60,[],[]],[[[311,[-1,-2]]],[[311,[-1,-3]]],60,[],[]],[[[313,[-1,-2,-3]]],[[313,[-1,-4,-5]]],60,[],[],[],[]],[[[310,[-1,-2,-3]]],[[310,[-1,-4,-5]]],60,[],[],[],[]],[[[275,[-1,-2]]],[[275,[-1,-3]]],60,[],[]],[[[299,[-1,-2]]],[[299,[-1,-3]]],60,[],[]],[[[230,[-1,-2]]],[[230,[-1,-3]]],60,[],[]],[[[300,[-1,-2]]],[[300,[-1,-3]]],60,[],[]],[[[314,[-1,-2,-3]]],[[314,[-1,-4,-5]]],60,[],[],[],[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],315,[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],[315,60],[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],315,[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],[315,60],[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],[315,60],[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],315,[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],[315,60],[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],315,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[315,60],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],315,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],[315,60],[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],315,[]],[[[234,[-1,-2]]],[[204,[-1,-2]]],[60,316,[245,[],[[30,[]]]],[263,[],[[30,[]]]]],[]],[[[312,[-1,-2]]],[[302,[-1,-2]]],[60,316,[245,[],[[30,[]]]],[263,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],[[204,[-1,-2]]],[60,316,[245,[],[[30,[]]]],[263,[],[[30,[]]]]],[]],[[[204,[-1,-2]],[204,[-1,-2]],[204,[-1,-2]]],[[204,[-1,-2]]],[60,100],[]],[[[302,[-1,-2]],[302,[-1,-2]],[302,[-1,-2]]],[[302,[-1,-2]]],[60,100],[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[[303,[-1,-2,-3]]],[60,100],[],[]],[[[275,[-1,-2]],[275,[-1,-2]],[275,[-1,-2]]],[[275,[-1,-2]]],[60,100],[]],[[[299,[-1,-2]],[299,[-1,-2]],[299,[-1,-2]]],[[299,[-1,-2]]],[60,100],[]],[[[230,[-1,-2]],[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[60,100],[]],[[[300,[-1,-2]],[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[60,100],[]],[[[230,[-1,-2]],-1,-1],[[230,[-1,-2]]],274,[]],[[[300,[-1,-2]],-1,-1],[[300,[-1,-2]]],274,[]],[[[234,[-1,-2]]],[[234,[-1,-2]]],29,[]],[[[312,[-1,-2]]],[[312,[-1,-2]]],29,[]],[[[317,[-1,-2]]],[[317,[-1,-2]]],29,[]],[[[301,[-1,-2]]],[[301,[-1,-2]]],29,[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],29,[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],29,[]],[[[311,[-1,-2]]],[[311,[-1,-2]]],29,[]],[[[313,[-1,-2,-3]]],[[313,[-1,-2,-3]]],29,[],[]],[[[310,[-1,-2,-3]]],[[310,[-1,-2,-3]]],29,[],[]],[[[303,[-1,-2,-3]]],[[303,[-1,-2,-3]]],29,[],[]],[[[304,[-1,-2]]],[[304,[-1,-2]]],29,[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],29,[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],29,[]],[[[174,[-1,-2,-3]]],[[174,[-1,-2,-3]]],29,[],[]],[[[309,[-1,-2,-3]]],[[309,[-1,-2,-3]]],29,[],[]],[[[305,[-1,-2,-3]]],[[305,[-1,-2,-3]]],29,[],[]],[[[306,[-1,-2,-3]]],[[306,[-1,-2,-3]]],29,[],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],29,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],29,[]],[[[314,[-1,-2,-3]]],[[314,[-1,-2,-3]]],29,[],[]],[307,307],[308,308],[173,173],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[[301,[-1,-2]],[301,[-1,-2]]],240,282,[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],240,282,[],[]],[[173,173],240],[[-1,-2],240,[],[]],[[-1,-2],240,[],[]],[[-1,-2],240,[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[[263,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[[263,[],[[30,[]]]],60],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[[254,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[[254,[],[[30,[]]]],60],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[234,[-1,-2]],[204,[-1,-2]]],11,100,[]],[[[312,[-1,-2]],[302,[-1,-2]]],11,100,[]],[[[311,[-1,-2]],[204,[-1,-2]]],11,[60,100,[245,[],[[30,[]]]]],[]],[[[275,[-1,-2]],[275,[-1,-2]]],11,100,[]],[[[299,[-1,-2]],[299,[-1,-2]]],11,100,[]],[[[234,[-1,-2]],[234,[-1,-2]]],11,100,[]],[[[312,[-1,-2]],[312,[-1,-2]]],11,100,[]],[[[311,[-1,-2]],[311,[-1,-2]]],11,[60,318,100,[245,[],[[30,[]]]]],[]],[262,262],[[[230,[-1,-2]],[230,[-1,-2]]],-1,[[253,[],[[30,[]]]],[254,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[314,[-1,-2,-3]]],[[21,[[300,[-1,-2]],[310,[-1,-2,-3]]]]],[],[],[]],0,[[],[[234,[-1,-2]]],73,[]],[[],[[312,[-1,-2]]],73,[]],[[],[[301,[-1,-2]]],73,[]],[[],[[204,[-1,-2]]],73,[]],[[],[[302,[-1,-2]]],73,[]],[[],[[311,[-1,-2]]],73,[]],[[],[[303,[-1,-2,-3]]],73,[],[]],[[],[[304,[-1,-2]]],73,[]],[[],[[275,[-1,-2]]],73,[]],[[],[[299,[-1,-2]]],73,[]],[[],[[174,[-1,-2,-3]]],[318,316],[],[]],[[],[[309,[-1,-2,-3]]],[318,316],[],[]],[[],[[305,[-1,-2,-3]]],318,[],[]],[[],[[306,[-1,-2,-3]]],318,[],[]],[[],[[230,[-1,-2]]],73,[]],[[],[[300,[-1,-2]]],73,[]],[[],173],[262,262],[[[312,[-1,-2]]],-1,[60,[253,[],[[30,[]]]]],[]],0,[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[174,[-1,-2,-3]]],-1,[60,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],61,318,316],[],[]],[[[309,[-1,-2,-3]]],-1,[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[204,[-1,-2]],[204,[-1,-2]]],-1,[[274,[],[[30,[]]]],253],[]],[[[302,[-1,-2]],[302,[-1,-2]]],-1,[[274,[],[[30,[]]]],253],[]],[[[234,[-1,-2]],-1],[],[60,263],[]],[[[234,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[312,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[312,[-1,-2]],-1],[],[60,263],[]],[[[301,[-1,-2]],-1],[],263,[]],[[[301,[-1,-2]],[301,[-1,-3]]],[],263,[],[]],[[[301,[-1,-2]],[303,[-1,-3,-2]]],[],263,[],[]],[[[204,[-1,-2]],-1],[],[60,263],[]],[[[204,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[302,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[302,[-1,-2]],-1],[],[60,263],[]],[[[311,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[311,[-1,-2]],-1],[],[60,263],[]],[[[304,[-1,-2]],-1],[],[60,263],[]],[[[304,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[275,[-1,-2]],-1],[],[60,263],[]],[[[275,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[299,[-1,-2]],-1],[],[60,263],[]],[[[299,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[230,[-1,-2]],-1],[],[60,263],[]],[[[230,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[300,[-1,-2]],[303,[-1,-3,-2]]],[],[60,263],[],[]],[[[300,[-1,-2]],-1],[],[60,263],[]],[[[234,[-1,-2]],-1],21,[60,264],[]],[[[234,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[312,[-1,-2]],-1],21,[60,264],[]],[[[312,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[301,[-1,-2]],-1],21,[60,[263,[],[[30,[]]]]],[]],[[[204,[-1,-2]],-1],21,[60,[263,[],[[30,[]]]]],[]],[[[204,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[302,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[302,[-1,-2]],-1],21,[60,264],[]],[[[311,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[311,[-1,-2]],-1],21,[60,264],[]],[[[304,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[304,[-1,-2]],-1],21,[60,264],[]],[[[275,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[275,[-1,-2]],-1],21,[60,264],[]],[[[299,[-1,-2]],-1],21,[60,264],[]],[[[299,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[230,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[230,[-1,-2]],-1],21,[60,[263,[],[[30,[]]]]],[]],[[[300,[-1,-2]],-1],21,[60,[263,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[303,[-1,-2,-2]]],21,[60,264],[]],[[[204,[-1,-2]],[275,[-1,-2]]],[[204,[-1,-2]]],319,[]],[[[302,[-1,-2]],[299,[-1,-2]]],[[302,[-1,-2]]],319,[]],[[[230,[-1,-2]],[230,[-1,-2]]],-1,[[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],-1,[[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[[234,[-1,-2]],[234,[-1,-2]]],11,61,[]],[[[312,[-1,-2]],[312,[-1,-2]]],11,61,[]],[[[317,[-1,-2]],[317,[-1,-2]]],11,61,[]],[[[301,[-1,-2]],[301,[-1,-2]]],11,61,[]],[[[204,[-1,-2]],[204,[-1,-2]]],11,61,[]],[[[302,[-1,-2]],[302,[-1,-2]]],11,61,[]],[[[311,[-1,-2]],[311,[-1,-2]]],11,61,[]],[[[313,[-1,-2,-3]],[313,[-1,-2,-3]]],11,61,[],[]],[[[310,[-1,-2,-3]],[310,[-1,-2,-3]]],11,61,[],[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],11,61,[],[]],[[[304,[-1,-2]],[304,[-1,-2]]],11,61,[]],[[[275,[-1,-2]],[275,[-1,-2]]],11,61,[]],[[[299,[-1,-2]],[299,[-1,-2]]],11,61,[]],[[[174,[-1,-2,-3]],[174,[-1,-2,-3]]],11,61,[],[]],[[[309,[-1,-2,-3]],[309,[-1,-2,-3]]],11,61,[],[]],[[[305,[-1,-2,-3]],[305,[-1,-2,-3]]],11,61,[],[]],[[[306,[-1,-2,-3]],[306,[-1,-2,-3]]],11,61,[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],11,61,[]],[[[300,[-1,-2]],[300,[-1,-2]]],11,61,[]],[[[314,[-1,-2,-3]],[314,[-1,-2,-3]]],11,61,61,61],[[307,307],11],[[308,308],11],[[173,173],11],[[[275,[-1,-2]],[275,[-1,-2]]],307,61,[]],[[[299,[-1,-2]],[299,[-1,-2]]],308,61,[]],[[[230,[-1,-2]],[230,[-1,-2]]],307,61,[]],[[[300,[-1,-2]],[300,[-1,-2]]],308,61,[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[231,[-1]],[231,[-1]],[231,[-1]]],[[310,[-1,-2,-3]]],274,[],[]],[[[204,[-1,-2]],-1],[[302,[-1,-2]]],60,[]],[[[230,[-1,-2]],-1],[[300,[-1,-2]]],60,[]],[[262,262],262],[[[204,[-1,-2]]],[[204,[-1,-2]]],320,[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],[320,60],[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],320,[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],[320,60],[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],320,[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],[320,60],[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],[320,60],[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],320,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[320,60],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],320,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],320,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],[320,60],[]],[[[234,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[312,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[317,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[301,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[204,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[302,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[311,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[310,[-1,-2,-3]],48],[[50,[21,49]]],168,[],[]],[[[303,[-1,-2,-3]],48],[[50,[21,49]]],168,[],[]],[[[304,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[275,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[299,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[174,[-1,-2,-3]],48],[[50,[21,49]]],[60,168,61,316,318],[],[]],[[[309,[-1,-2,-3]],48],[[50,[21,49]]],[60,168,61,316,318],[],[]],[[[305,[-1,-2,-3]],48],[[50,[21,49]]],168,[],[]],[[[306,[-1,-2,-3]],48],[[50,[21,49]]],168,[],[]],[[[230,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[300,[-1,-2]],48],[[50,[21,49]]],168,[]],[[[314,[-1,-2,-3]],48],[[50,[21,49]]],168,168,168],[[307,48],[[50,[21,49]]]],[[308,48],[[50,[21,49]]]],[[173,48],[[50,[21,49]]]],[-1,-1,[]],[[[275,[-1,-2]]],[[234,[-1,-2]]],[60,318,100],[]],[[[299,[-1,-2]]],[[312,[-1,-2]]],[60,318,100],[]],[-1,-1,[]],[[[230,[-1,-2]]],[[317,[-1,-2]]],318,[]],[-1,-1,[]],[[[204,[-1,-2]]],[[317,[-1,-2]]],[318,316],[]],[[[302,[-1,-2]]],[[317,[-1,-2]]],316,[]],[[[300,[-1,-2]]],[[317,[-1,-2]]],318,[]],[-1,-1,[]],[[[288,[-1]]],[[204,[-1,-2]]],[],[]],[[[21,[-1,-1]]],[[204,[-1,-2]]],[],[]],[-1,-1,[]],[[[21,[-1,-1,-1]]],[[302,[-1,-2]]],[],[]],[-1,-1,[]],[[[288,[-1]]],[[302,[-1,-2]]],[],[]],[-1,-1,[]],[[[275,[-1,-2]]],[[311,[-1,-2]]],318,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[21,[-1,-1]]],[[275,[-1,-2]]],[],[]],[[[230,[-1,-2]]],[[275,[-1,-2]]],[],[]],[[[288,[-1]]],[[275,[-1,-2]]],[],[]],[[[21,[-1,-1,-1]]],[[299,[-1,-2]]],[],[]],[-1,-1,[]],[[[300,[-1,-2]]],[[299,[-1,-2]]],[],[]],[[[288,[-1]]],[[299,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[230,[-1,-2]]],[[305,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[[[300,[-1,-2]]],[[306,[-1,-2,-3]]],[],[],[]],[[[21,[-1,-1]]],[[230,[-1,-2]]],[],[]],[-1,-1,[]],[[[275,[-1,-2]]],[[230,[-1,-2]]],[],[]],[[[288,[-1]]],[[230,[-1,-2]]],[],[]],[[[21,[-1,-1,-1]]],[[300,[-1,-2]]],[],[]],[[[288,[-1]]],[[300,[-1,-2]]],[],[]],[-1,-1,[]],[[[300,[-1,-2]]],[[314,[-1,-3,-2]]],[],[],[]],[[[310,[-1,-2,-3]]],[[314,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[231,[-1]],-1],[[230,[-1,-2]]],[262,[254,[],[[30,[]]]],60],[]],[[[288,[-1]]],[[174,[-1,-2,-3]]],60,[],[]],[[[288,[-1]]],[[309,[-1,-2,-3]]],60,[],[]],[[[288,[[288,[-1]]]]],[[174,[-1,-2,-3]]],60,[],[]],[[[288,[[288,[-1]]]]],[[309,[-1,-2,-3]]],60,[],[]],[[[301,[-1,-2]]],[[304,[-1,-2]]],60,[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[204,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]],[301,[-1,-2]]],[[302,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]],[301,[-1,-2]],[301,[-1,-2]]],[[304,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[275,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]],[301,[-1,-2]]],[[299,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[230,[-1,-2]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]],[301,[-1,-2]]],[[300,[-1,-2]]],[],[]],[[[204,[-1,-2]],[275,[-1,-2]]],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[-1,[[234,[-2,-3]]],23,[60,318,100],[]],[-1,[[312,[-2,-3]]],23,[60,318,100],[]],[-1,[[311,[-2,-3]]],23,[60,318,100,[253,[],[[30,[]]]]],[]],[[[310,[-1,-2,-3]]],[[314,[-1,-2,-3]]],[],[],[]],[[[303,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[275,[-1,-2]]],[[234,[-1,-2]]],318,[]],[[[299,[-1,-2]]],[[312,[-1,-2]]],318,[]],[[[275,[-1,-2]]],[[311,[-1,-2]]],318,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[300,[-1,-2]]],[[314,[-1,-3,-2]]],[],[],[]],[[[234,[-1,173]]],[[234,[-1,-2]]],60,[]],[[[312,[-1,173]]],[[312,[-1,-2]]],60,[]],[[[204,[-1,173]]],[[204,[-1,-2]]],[],[]],[[[302,[-1,173]]],[[302,[-1,-2]]],[],[]],[[[311,[-1,173]]],[[311,[-1,-2]]],60,[]],[[[313,[-1,173,173]]],[[313,[-1,-2,-3]]],60,[],[]],[[[310,[-1,173,173]]],[[310,[-1,-2,-3]]],60,[],[]],[[[275,[-1,173]]],[[275,[-1,-2]]],[],[]],[[[299,[-1,173]]],[[299,[-1,-2]]],[],[]],[[[174,[-1,173,173]]],[[174,[-1,-2,-3]]],60,[],[]],[[[309,[-1,173,173]]],[[309,[-1,-2,-3]]],60,[],[]],[[[305,[-1,173,173]]],[[305,[-1,-2,-3]]],60,[],[]],[[[306,[-1,173,173]]],[[306,[-1,-2,-3]]],60,[],[]],[[[230,[-1,173]]],[[230,[-1,-2]]],[],[]],[[[300,[-1,173]]],[[300,[-1,-2]]],[],[]],[[[314,[-1,173,173]]],[[314,[-1,-2,-3]]],[],[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[304,[-1,-2]]],[[271,[],[[30,[]]]]],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[304,[-1,-2]]],[[271,[],[[30,[]]]]],[]],[[[301,[-1,-2]]],-1,29,[]],[[[303,[-1,-2,-3]]],-1,[],[],[]],[[[313,[-1,-2,-3]]],[[231,[-1]]],60,[],[]],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[[275,[-1,-2]],[275,[-1,-2]]],307,100,[]],[[[299,[-1,-2]],[299,[-1,-2]]],308,100,[]],[[[230,[-1,-2]],[230,[-1,-2]]],307,100,[]],[[[300,[-1,-2]],[300,[-1,-2]]],308,100,[]],[[[234,[-1,-2]],-3],21,19,[],212],[[[312,[-1,-2]],-3],21,19,[],212],[[[317,[-1,-2]],-3],21,19,[],212],[[[301,[-1,-2]],-3],21,19,[],212],[[[204,[-1,-2]],-3],21,19,[],212],[[[302,[-1,-2]],-3],21,19,[],212],[[[311,[-1,-2]],-3],21,19,[],212],[[[313,[-1,-2,-3]],-4],21,19,[],[],212],[[[310,[-1,-2,-3]],-4],21,19,[],[],212],[[[303,[-1,-2,-3]],-4],21,19,[],[],212],[[[304,[-1,-2]],-3],21,19,[],212],[[[275,[-1,-2]],-3],21,19,[],212],[[[299,[-1,-2]],-3],21,19,[],212],[[[174,[-1,-2,-3]],-4],21,19,[],[],212],[[[309,[-1,-2,-3]],-4],21,19,[],[],212],[[[305,[-1,-2,-3]],-4],21,19,[],[],212],[[[306,[-1,-2,-3]],-4],21,19,[],[],212],[[[230,[-1,-2]],-3],21,19,[],212],[[[300,[-1,-2]],-3],21,19,[],212],[[[314,[-1,-2,-3]],-4],21,19,19,19,212],[[307,-1],21,212],[[308,-1],21,212],[[173,-1],21,212],[[[234,[-1,-2]]],-1,[60,[253,[],[[30,[]]]]],[]],[[[312,[-1,-2]]],-1,[60,[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],0,0,[[[304,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],0,[[],[[313,[-1,-2,-3]]],273,[],[]],[[],[[310,[-1,-2,-3]]],[273,255],[],[]],[[],[[303,[-1,-2,-3]]],316,[],[]],[[],[[174,[-1,-2,-3]]],[318,316],[],[]],[[],[[309,[-1,-2,-3]]],[318,316],[],[]],[[],[[305,[-1,-2,-3]]],318,[],[]],[[],[[306,[-1,-2,-3]]],318,[],[]],[[],[[314,[-1,-2,-3]]],[],[],[]],[[[234,[-1,-2]],-1,-1],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[312,[-1,-2]],-1,-1,-1],[[312,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]],-1,-1],[[311,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[[234,[-1,-2]],[304,[-1,-2]]],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]],[304,[-1,-2]]],[[311,[-1,-2]]],[60,318,100,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[234,[-1,-2]],[234,[-1,-2]]],[[26,[[234,[-1,-2]]]]],[60,100],[]],[[[312,[-1,-2]],[312,[-1,-2]]],[[26,[[312,[-1,-2]]]]],[60,100],[]],[[[311,[-1,-2]],[311,[-1,-2]]],[[26,[[311,[-1,-2]]]]],[60,100,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[234,[-1,-2]],[234,[-1,-2]]],[[234,[-1,-2]]],[60,100],[]],[[[312,[-1,-2]],[312,[-1,-2]]],[[312,[-1,-2]]],[60,100],[]],[[[234,[-1,-2]],[234,[-1,-2]]],11,100,[]],[[[312,[-1,-2]],[312,[-1,-2]]],11,100,[]],[[[311,[-1,-2]],[311,[-1,-2]]],11,[60,100,[245,[],[[30,[]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[204,[-1,-2]]],[[288,[-1]]],[],[]],[[[204,[-1,-2]]],[[21,[-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[302,[-1,-2]]],[[288,[-1]]],[],[]],[[[302,[-1,-2]]],[[21,[-1,-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[275,[-1,-2]]],[[21,[-1,-1]]],[],[]],[[[275,[-1,-2]]],[[288,[-1]]],[],[]],[-1,-2,[],[]],[[[299,[-1,-2]]],[[288,[-1]]],[],[]],[-1,-2,[],[]],[[[299,[-1,-2]]],[[21,[-1,-1,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[305,[-1,-2,-3]]],[[230,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[[[305,[-1,-2,-3]]],[[174,[-1,-2,-3]]],[318,316],[],[]],[[[306,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[318,316],[],[]],[-1,-2,[],[]],[[[306,[-1,-2,-3]]],[[300,[-1,-2]]],[],[],[]],[[[230,[-1,-2]]],[[21,[-1,-1]]],[],[]],[[[230,[-1,-2]]],[[288,[-1]]],[],[]],[-1,-2,[],[]],[[[300,[-1,-2]]],[[21,[-1,-1,-1]]],[],[]],[[[300,[-1,-2]]],[[288,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[313,[-1,-2,-3]]],[[313,[-1,-3,-2]]],274,[],[]],[[[310,[-1,-2,-3]]],[[310,[-1,-3,-2]]],274,[],[]],[[[303,[-1,-2,-3]]],[[303,[-3,-2]]],[316,263],[],[]],[[[174,[-1,-2,-3]]],[[26,[[174,[-1,-3,-2]]]]],[60,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],61,318,316],[],[]],[[[309,[-1,-2,-3]]],[[26,[[309,[-1,-3,-2]]]]],[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[305,[-1,-2,-3]]],[[305,[-3,-2]]],[271,60],[],[]],[[[306,[-1,-2,-3]]],[[306,[-3,-2]]],[271,60],[],[]],[[[314,[-1,-2,-3]]],[[314,[-1,-3,-2]]],[],[],[]],[[[309,[-1,-2,-3]]],11,[318,316,61],[],[]],[[[309,[-1,-2,-3]]],11,[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[234,[-1,-2]]],11,100,[]],[[[312,[-1,-2]]],11,100,[]],[[[311,[-1,-2]]],11,[60,318,100],[]],[[[275,[-1,-2]]],11,[318,100],[]],[[[299,[-1,-2]]],11,[318,100],[]],[[[234,[-1,-2]]],11,269,[]],[[[312,[-1,-2]]],11,269,[]],[[[204,[-1,-2]]],11,269,[]],[[[302,[-1,-2]]],11,269,[]],[[[311,[-1,-2]]],11,269,[]],[[[275,[-1,-2]]],11,269,[]],[[[299,[-1,-2]]],11,269,[]],[[[230,[-1,-2]]],11,269,[]],[[[300,[-1,-2]]],11,269,[]],[[[303,[-1,-2,-3]]],11,[61,316],[],[]],[[[305,[-1,-2,-3]]],11,[318,61],[],[]],[[[306,[-1,-2,-3]]],11,[318,61],[],[]],[[[174,[-1,-2,-3]]],11,[60,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],61,318,316],[],[]],[[[309,[-1,-2,-3]]],11,[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[234,[-1,-2]]],11,100,[]],[[[312,[-1,-2]]],11,100,[]],[[[310,[-1,-2,-3]]],11,[],[],[]],[[[275,[-1,-2]]],11,298,[]],[[[299,[-1,-2]]],11,298,[]],[[[304,[-1,-2]]],11,[318,61],[]],0,0,0,[[[230,[-1,-2]]],-1,274,[]],[[[300,[-1,-2]]],-1,274,[]],[[[234,[-1,-2]],[234,[-1,-2]],-1],[[234,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[312,[-1,-2]],[312,[-1,-2]],-1],[[312,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[301,[-1,-2]],[301,[-1,-2]],-1],[[301,[-1,-2]]],[316,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[245,[],[[30,[]]]],29],[]],[[[204,[-1,-2]],[204,[-1,-2]],-1],[[204,[-1,-2]]],[316,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[245,[],[[30,[]]]],60],[]],[[[302,[-1,-2]],[302,[-1,-2]],-1],[[302,[-1,-2]]],[316,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[245,[],[[30,[]]]],60],[]],[[[311,[-1,-2]],[311,[-1,-2]],-1],[[311,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[310,[-1,-2,-3]],[310,[-1,-2,-3]],-1],[[310,[-1,-2,-3]]],274,[],[]],[[[275,[-1,-2]],[275,[-1,-2]],-1],[[275,[-1,-2]]],[316,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[245,[],[[30,[]]]],60],[]],[[[299,[-1,-2]],[299,[-1,-2]],-1],[[299,[-1,-2]]],[316,[253,[],[[30,[]]]],[254,[],[[30,[]]]],[245,[],[[30,[]]]],60],[]],[[[230,[-1,-2]],[230,[-1,-2]],-1],[[230,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[300,[-1,-2]],[300,[-1,-2]],-1],[[300,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[275,[-1,-2]],[275,[-1,-2]]],307,100,[]],[[[299,[-1,-2]],[299,[-1,-2]]],308,100,[]],[[[230,[-1,-2]],[230,[-1,-2]]],307,100,[]],[[[300,[-1,-2]],[300,[-1,-2]]],308,100,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[301,[-1,-2]],[301,[-1,-2]]],[[301,[-1,-2]]],100,[]],[[[204,[-1,-2]],[204,[-1,-2]]],[[204,[-1,-2]]],100,[]],[[[302,[-1,-2]],[302,[-1,-2]]],[[302,[-1,-2]]],100,[]],[[[311,[-1,-2]]],[[204,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[[303,[-1,-2,-3]]],100,[],[]],[[[275,[-1,-2]],[275,[-1,-2]]],[[275,[-1,-2]]],100,[]],[[[299,[-1,-2]],[299,[-1,-2]]],[[299,[-1,-2]]],100,[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],100,[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],100,[]],0,0,[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[301,[-1,-2]]],100,[]],[[[204,[-1,-2]],[204,[-1,-2]]],[[204,[-1,-2]]],100,[]],[[[302,[-1,-2]],[302,[-1,-2]]],[[302,[-1,-2]]],100,[]],[[[311,[-1,-2]]],[[204,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[[303,[-1,-2,-3]]],100,[],[]],[[[275,[-1,-2]],[275,[-1,-2]]],[[275,[-1,-2]]],100,[]],[[[299,[-1,-2]],[299,[-1,-2]]],[[299,[-1,-2]]],100,[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],100,[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],100,[]],0,0,[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],[[[234,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[234,[-1,-2]],-1],[],[60,254],[]],[[[312,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[312,[-1,-2]],-1],[],[60,254],[]],[[[301,[-1,-2]],-1],[],254,[]],[[[301,[-1,-2]],[303,[-1,-2,-3]]],[],254,[],[]],[[[204,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[204,[-1,-2]],-1],[],[60,254],[]],[[[302,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[302,[-1,-2]],-1],[],[60,254],[]],[[[311,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[311,[-1,-2]],-1],[],[60,254],[]],[[[303,[-1,-2,-3]],[303,[-1,-3,-4]]],[],254,[],[],[]],[[[304,[-1,-2]],-1],[],[60,254],[]],[[[304,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[275,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[275,[-1,-2]],-1],[],[60,254],[]],[[[299,[-1,-2]],-1],[],[60,254],[]],[[[299,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[230,[-1,-2]],-1],[],[60,254],[]],[[[230,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[300,[-1,-2]],[303,[-1,-2,-3]]],[],[60,254],[],[]],[[[300,[-1,-2]],-1],[],[60,254],[]],[[[234,[-1,-2]],-1],21,[60,270],[]],[[[234,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[312,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[312,[-1,-2]],-1],21,[60,270],[]],[[[301,[-1,-2]],-1],21,[60,[254,[],[[30,[]]]]],[]],[[[204,[-1,-2]],-1],21,[60,[254,[],[[30,[]]]]],[]],[[[204,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[302,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[302,[-1,-2]],-1],21,[60,270],[]],[[[311,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[311,[-1,-2]],-1],21,[60,270],[]],[[[304,[-1,-2]],-1],21,[60,270],[]],[[[304,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[275,[-1,-2]],-1],21,[60,270],[]],[[[275,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[299,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[299,[-1,-2]],-1],21,[60,270],[]],[[[230,[-1,-2]],-1],21,[60,[254,[],[[30,[]]]]],[]],[[[230,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[300,[-1,-2]],-1],21,[60,[254,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[303,[-1,-2,-2]]],21,[60,270],[]],[[[309,[-1,-2,-3]],-1],[[309,[-1,-2,-3]]],[[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,[271,[],[[30,[]]]],[245,[],[[30,[]]]],100,316,318],[],[]],[[[301,[-1,-2]]],[],271,[]],[[[204,[-1,-2]]],[],271,[]],[[[302,[-1,-2]]],[],271,[]],[[[304,[-1,-2]]],[[304,[-1,-2]]],[[271,[],[[30,[]]]]],[]],[[[275,[-1,-2]]],[],271,[]],[[[299,[-1,-2]]],[],271,[]],[[[230,[-1,-2]]],[],271,[]],[[[300,[-1,-2]]],[],271,[]],[[[204,[-1,-2]],[204,[-1,-2]]],[[234,[-1,-2]]],[],[]],[[[302,[-1,-2]],[302,[-1,-2]]],[[312,[-1,-2]]],[],[]],[[-1,-1,-1,-1],[[317,[-1,-2]]],[],[]],[-1,[[301,[-1,-2]]],[],[]],[[-1,-1],[[204,[-1,-2]]],[],[]],[[-1,-1,-1],[[302,[-1,-2]]],[],[]],[[[204,[-1,-2]],[275,[-1,-2]]],[[311,[-1,-2]]],[],[]],[[[231,[-1]]],[[313,[-1,-2,-3]]],[],[],[]],[-1,[[303,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1],[[304,[-1,-2]]],[],[]],[[-1,-1],[[275,[-1,-2]]],[],[]],[[-1,-1,-1],[[299,[-1,-2]]],[],[]],[[-1,-1,-1,-1,-1,-1],[[174,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[[309,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[305,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1],[[306,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[230,[-1,-2]]],[],[]],[[-1,-1,-1],[[300,[-1,-2]]],[],[]],[[[310,[-1,-2,-3]],[300,[-1,-3]]],[[314,[-1,-2,-3]]],[],[],[]],[[-1,-1,-1,-1,-1,-1],[[309,[-1,-2,-3]]],[318,316],[],[]],[-1,[[304,[-1,-2]]],60,[]],[[[300,[-1,-2]],[310,[-1,-2,-3]]],[[314,[-1,-2,-3]]],[],[],[]],[307,11],[308,11],[[[310,[-1,-2,-3]]],-1,274,[],[]],[[[310,[-1,-2,-3]]],[[310,[-1,-2,-3]]],274,[],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],274,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],274,[]],[307,307],[308,308],[[[275,[-1,-2]],[275,[-1,-2]]],307,61,[]],[[[299,[-1,-2]],[299,[-1,-2]]],308,61,[]],[[[230,[-1,-2]],[230,[-1,-2]]],307,61,[]],[[[300,[-1,-2]],[300,[-1,-2]]],308,61,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[],[[303,[-1,-2,-3]]],316,[],[]],[[],[[230,[-1,-2]]],316,[]],[[],[[300,[-1,-2]]],316,[]],[[307,307],307],[[308,308],308],[[],[[204,[-1,-2]]],318,[]],[[],[[302,[-1,-2]]],318,[]],0,[[-1,-1,-1,-1,-1,-1],[[309,[-1,-2,-3]]],[],[],[]],[[[234,[-1,-2]],[304,[-1,-2]]],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]],[304,[-1,-2]]],[[311,[-1,-2]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[174,[-1,-2,-3]],[234,[-1,-2]]],[[234,[-1,-3]]],[[253,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[309,[-1,-2,-3]],[234,[-1,-2]]],[[26,[[234,[-1,-3]]]]],[[253,[],[[30,[]]]],[263,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[309,[-1,-2,-3]],[312,[-1,-2]]],[[26,[[312,[-1,-3]]]]],[[253,[],[[30,[]]]],[263,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[174,[-1,-2,-3]],[311,[-1,-2]]],[[311,[-1,-3]]],[[253,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[309,[-1,-2,-3]],[311,[-1,-2]]],[[26,[[311,[-1,-3]]]]],[[253,[],[[30,[]]]],[263,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[26,[240]]],100,[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[[26,[240]]],100,[],[]],[[173,173],[[26,[240]]]],[-1,[[309,[-1,-2,-3]]],[],[],[]],[[-1,-1],[[204,[-1,-2]]],[],[]],[[-1,-1,-1],[[302,[-1,-2]]],[],[]],[[[204,[82,-1]]],[[204,[82,173]]],[]],[[[174,[-1,-2,-3]],[231,[-1]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],318,262],[],[]],[[[309,[-1,-2,-3]],-1,-1,-1,[231,[-1]]],[[309,[-1,-2,-3]]],[[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,318,316,262],[],[]],[[[174,[-1,-2,-3]],-1,-1],[[174,[-1,-2,-3]]],[60,[254,[],[[30,[]]]]],[],[]],[[[309,[-1,-2,-3]],-1,-1,-1],[[309,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[174,[-1,-2,-3]],[230,[-1,-2]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[309,[-1,-2,-3]],[300,[-1,-2]]],[[309,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[[253,[],[[30,[]]]],[263,[],[[30,[]]]],60,[254,[],[[30,[]]]],[245,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[[253,[],[[30,[]]]],[263,[],[[30,[]]]],60,[254,[],[[30,[]]]],[245,[],[[30,[]]]]],[]],[[[309,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[60,[254,[],[[30,[]]]],[263,[],[[30,[]]]],318,316,61],[],[]],[[-1,-1,-1,-1],[[310,[-1,-2,-3]]],[],[],[]],0,[-1,[[313,[-1,-2,-3]]],[],[],[]],0,[262,262],[[-1,-1,-1,-1],[[311,[-1,-2]]],[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[316,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],60],[]],[[[204,[-1,-2]],[275,[-1,-2]]],[[204,[-1,-2]]],319,[]],[[[302,[-1,-2]],[299,[-1,-2]]],[[302,[-1,-2]]],319,[]],0,[[[230,[-1,-2]]],[[230,[-1,-2]]],269,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],269,[]],[[[231,[-1]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],318,262],[],[]],[[-1,-1,-1,[231,[-1]]],[[309,[-1,-2,-3]]],[],[],[]],0,[[[234,[-1,-2]]],[[234,[-1,-2]]],321,[]],[[[312,[-1,-2]]],[[312,[-1,-2]]],321,[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],[321,60],[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],321,[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],[321,60],[]],[[[302,[-1,-2]]],[[302,[-1,-2]]],321,[]],[[[311,[-1,-2]]],[[311,[-1,-2]]],[320,315,321,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],321,[]],[[[275,[-1,-2]]],[[275,[-1,-2]]],[321,60],[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],321,[]],[[[299,[-1,-2]]],[[299,[-1,-2]]],[321,60],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],[321,60],[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],321,[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],[321,60],[]],[[[300,[-1,-2]]],[[300,[-1,-2]]],321,[]],[[[234,[-1,-2]]],[[234,[-1,-2]]],[320,315],[]],[[[312,[-1,-2]]],[[312,[-1,-2]]],[320,315],[]],[[[311,[-1,-2]]],[[311,[-1,-2]]],[320,315,321,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[234,[-1,-2]]],[[234,[-1,-2]]],[320,315],[]],[[[312,[-1,-2]]],[[312,[-1,-2]]],[320,315],[]],[[[311,[-1,-2]]],[[311,[-1,-2]]],[320,315,321,[245,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[301,[-1,-2]]],322,[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[301,[-1,-2]]],322,[]],[[[234,[-2,-3]],-1,-1],[[234,[-2,-3]]],60,[[254,[-1],[[30,[]]]],60],[]],[[[312,[-2,-3]],-1,-1,-1],[[312,[-2,-3]]],60,[[254,[-1],[[30,[]]]],60],[]],[[[311,[-2,-3]],-1,-1],[[311,[-2,-3]]],60,[60,[254,[-1],[[30,[]]]]],[]],[[-1,-1],[[174,[-1,-2,-3]]],318,[],[]],[[-1,-1,-1],[[309,[-1,-2,-3]]],[318,316],[],[]],[[307,[204,[-1,-2]],[204,[-1,-2]]],[[204,[-1,-2]]],[],[]],[[308,[302,[-1,-2]],[302,[-1,-2]]],[[302,[-1,-2]]],[],[]],[[307,[275,[-1,-2]],[275,[-1,-2]]],[[275,[-1,-2]]],[],[]],[[308,[299,[-1,-2]],[299,[-1,-2]]],[[299,[-1,-2]]],[],[]],[[307,[230,[-1,-2]],[230,[-1,-2]]],[[230,[-1,-2]]],[],[]],[[308,[300,[-1,-2]],[300,[-1,-2]]],[[300,[-1,-2]]],[],[]],[[[234,[-1,-2]],[275,[-1,-2]]],21,[60,[253,[],[[30,[]]]]],[]],[262,262],[[[234,[-1,-2]]],[[275,[-1,-2]]],[60,[253,[],[[30,[]]]]],[]],[[[312,[-1,-2]]],[[299,[-1,-2]]],[60,[253,[],[[30,[]]]]],[]],0,[[-1,-1],[[275,[-1,-2]]],[],[]],[[-1,-1,-1],[[299,[-1,-2]]],[],[]],[[[231,[-1]],[231,[-1]]],[[309,[-1,-2,-3]]],[262,318,316],[],[]],[[[310,[-1,-2,-3]],[310,[-1,-2,-3]],-1],[[310,[-1,-2,-3]]],[],[],[]],[-1,[[204,[-1,-2]]],29,[]],[-1,[[302,[-1,-2]]],29,[]],[-1,[[275,[-1,-2]]],29,[]],[-1,[[299,[-1,-2]]],29,[]],[-1,[[305,[-1,-2,-3]]],29,[],[]],[-1,[[306,[-1,-2,-3]]],29,[],[]],[-1,[[230,[-1,-2]]],29,[]],[-1,[[300,[-1,-2]]],29,[]],[[[230,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[245,[],[[30,[]]]]],[]],[[[300,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[245,[],[[30,[]]]]],[]],[[[310,[-1,-2,-3]]],-1,274,[],[]],[[[301,[-1,-2]],[301,[-1,-2]]],[],253,[]],[[[204,[-1,-2]],[204,[-1,-2]]],[],253,[]],[[[204,[-1,-2]],[275,[-1,-2]]],[],253,[]],[[[204,[-1,-2]],[230,[-1,-2]]],[],253,[]],[[[302,[-1,-2]],[300,[-1,-2]]],[],253,[]],[[[302,[-1,-2]],[302,[-1,-2]]],[],253,[]],[[[302,[-1,-2]],[299,[-1,-2]]],[],253,[]],[[[303,[-1,-2,-3]],[303,[-1,-2,-3]]],[],253,[],[]],[[[304,[-1,-2]],[304,[-1,-2]]],[[304,[-1,-2]]],[[253,[],[[30,[]]]]],[]],[[[275,[-1,-2]],[275,[-1,-2]]],[],253,[]],[[[299,[-1,-2]],[299,[-1,-2]]],[],253,[]],[[[305,[-1,-2,-3]],[305,[-1,-4,-3]]],[],253,[],[],[]],[[[306,[-1,-2,-3]],[306,[-1,-4,-3]]],[],253,[],[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],[],253,[]],[[[300,[-1,-2]],[300,[-1,-2]]],[],253,[]],[[[301,[-1,-2]],[301,[-1,-2]]],21,276,[]],[[[204,[-1,-2]],[275,[-1,-2]]],21,276,[]],[[[204,[-1,-2]],[230,[-1,-2]]],21,[60,[253,[],[[30,[]]]]],[]],[[[302,[-1,-2]],[299,[-1,-2]]],21,276,[]],[[[302,[-1,-2]],[300,[-1,-2]]],21,[60,[253,[],[[30,[]]]]],[]],[[[304,[-1,-2]],[304,[-1,-2]]],21,276,[]],[[[275,[-1,-2]],[275,[-1,-2]]],21,276,[]],[[[299,[-1,-2]],[299,[-1,-2]]],21,276,[]],[[[305,[-1,-2,-3]],[305,[-1,-3,-3]]],21,276,[],[]],[[[306,[-1,-2,-3]],[306,[-1,-3,-3]]],21,276,[],[]],[[[230,[-1,-2]],[230,[-1,-2]]],21,[60,[253,[],[[30,[]]]]],[]],[[[300,[-1,-2]],[300,[-1,-2]]],21,[60,[253,[],[[30,[]]]]],[]],[-3,[[301,[-1,-2]]],[[245,[],[[30,[]]]],318],[],[[277,[],[[22,[[301,[-1,-2]]]]]]]],[-3,[[301,[-1,-2]]],[[245,[],[[30,[]]]],60,318],[],[[277,[],[[22,[[301,[-1,-2]]]]]]]],[-3,[[275,[-1,-2]]],[[245,[],[[30,[]]]],60,318],[],[[277,[],[[22,[[275,[-1,-2]]]]]]]],[-3,[[275,[-1,-2]]],[[245,[],[[30,[]]]],318],[],[[277,[],[[22,[[275,[-1,-2]]]]]]]],[-3,[[299,[-1,-2]]],[[245,[],[[30,[]]]],318],[],[[277,[],[[22,[[299,[-1,-2]]]]]]]],[-3,[[299,[-1,-2]]],[[245,[],[[30,[]]]],60,318],[],[[277,[],[[22,[[299,[-1,-2]]]]]]]],[-3,[[230,[-1,-2]]],[[245,[],[[30,[]]]],60,318],[],[[277,[],[[22,[[230,[-1,-2]]]]]]]],[-3,[[230,[-1,-2]]],[[245,[],[[30,[]]]],318],[],[[277,[],[[22,[[230,[-1,-2]]]]]]]],[-3,[[300,[-1,-2]]],[[245,[],[[30,[]]]],318],[],[[277,[],[[22,[[300,[-1,-2]]]]]]]],[-3,[[300,[-1,-2]]],[[245,[],[[30,[]]]],60,318],[],[[277,[],[[22,[[300,[-1,-2]]]]]]]],[262,262],[[[313,[-1,-2,-3]],[313,[-1,-4,-2]]],[[313,[-1,-4,-3]]],274,[],[],[]],[[[310,[-1,-2,-3]],[310,[-1,-3,-4]]],[[310,[-1,-2,-4]]],[],[],[],[]],[[[174,[-1,-2,-3]],[174,[-1,-3,-4]]],[[174,[-1,-2,-4]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[],[]],[[[309,[-1,-2,-3]],[309,[-1,-3,-4]]],[[309,[-1,-2,-4]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[],[]],[[[314,[-1,-2,-3]],[314,[-1,-3,-4]]],[[314,[-1,-2,-4]]],[],[],[],[]],[[[174,[-1,-2,-3]],[231,[-1]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],318,262],[],[]],[[[309,[-1,-2,-3]],-1,-1,-1,[231,[-1]]],[[309,[-1,-2,-3]]],[[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],[263,[],[[30,[]]]],60,318,316,262],[],[]],[[[174,[-1,-2,-3]],-1,-1],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318],[],[]],[[[309,[-1,-2,-3]],-1,-1,-1],[[309,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[174,[-1,-2,-3]],[230,[-1,-3]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[309,[-1,-2,-3]],[300,[-1,-3]]],[[309,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]],318,316],[],[]],[[[302,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[309,[-1,-2,-3]]],[[174,[-1,-2,-3]]],60,[],[]],[[[300,[-1,-2]]],[[230,[-1,-2]]],60,[]],[[[204,[-1,-2]]],[[302,[-1,-2]]],[318,60],[]],[[[313,[-1,-2,-3]]],[[310,[-1,-2,-3]]],274,[],[]],[[[174,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[318,316,60],[],[]],[[[230,[-1,-2]]],[[300,[-1,-2]]],[318,60],[]],[[[204,[-1,-2]]],[[288,[-1]]],60,[]],[[[302,[-1,-2]]],[[288,[-1]]],60,[]],[[[275,[-1,-2]]],[[288,[-1]]],60,[]],[[[299,[-1,-2]]],[[288,[-1]]],60,[]],[[[174,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[309,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[305,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[306,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[230,[-1,-2]]],[[288,[-1]]],60,[]],[[[300,[-1,-2]]],[[288,[-1]]],60,[]],[[[302,[-1,-2]]],[[288,[-1]]],[316,60],[]],[[[300,[-1,-2]]],[[288,[-1]]],[318,60],[]],[[[174,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[309,[-1,-2,-3]]],[[288,[-1]]],60,[],[]],[[[174,[-1,-2,-3]]],[[288,[[288,[-1]]]]],60,[],[]],[[[309,[-1,-2,-3]]],[[288,[[288,[-1]]]]],60,[],[]],[[[309,[-1,-2,-3]]],[[288,[[288,[-1]]]]],60,[],[]],[[[311,[-1,-2]]],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[234,[-1,-2]]],[[234,[82,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[82,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[82,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[82,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[82,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[82,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[82,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[82,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[82,-2]]],[258,60],[]],[[[234,[-1,-2]]],[[234,[278,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[278,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[278,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[278,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[278,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[278,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[278,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[278,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[278,-2]]],[258,60],[]],[[[234,[-1,-2]]],[[234,[296,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[296,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[296,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[296,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[296,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[296,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[296,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[296,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[296,-2]]],[258,60],[]],[[[234,[-1,-2]]],[[234,[293,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[293,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[293,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[293,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[293,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[293,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[293,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[293,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[293,-2]]],[258,60],[]],[[[234,[-1,-2]]],[[26,[[234,[-1,-2]]]]],[60,100],[]],[[[312,[-1,-2]]],[[26,[[312,[-1,-2]]]]],[60,100],[]],[[[311,[-1,-2]]],[[26,[[311,[-1,-2]]]]],[60,318,100],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[230,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[300,[-1,-2]]],[[302,[-1,-2]]],60,[]],[[[317,[-1,-2]]],[[26,[[204,[-1,-2]]]]],[60,[263,[],[[30,[]]]],318,100],[]],[[[317,[-1,-2]]],[[26,[[302,[-1,-2]]]]],[60,[263,[],[[30,[]]]],318,100],[]],[[[234,[-1,-2]]],[[311,[-1,-2]]],[60,[253,[],[[30,[]]]]],[]],[[[230,[-1,-2]]],[[275,[-1,-2]]],60,[]],[[[313,[-1,-2,-3]]],[[174,[-1,-2,-3]]],[60,[245,[],[[30,[]]]],[253,[],[[30,[]]]],[254,[],[[30,[]]]],273,262],[],[]],[[[310,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[],[],[]],[[[305,[-1,-2,-3]]],[[174,[-1,-2,-3]]],[318,316,60],[],[]],[[[306,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[318,316,60],[],[]],[[[230,[-1,-2]]],[[174,[-1,-2,-2]]],[318,316,60],[]],[[[300,[-1,-2]]],[[309,[-1,-2,-2]]],[318,316,60],[]],[[[314,[-1,-2,-3]]],[[309,[-1,-2,-3]]],[],[],[]],[[[204,[-1,-2]]],[[21,[-1,-1]]],60,[]],[[[302,[-1,-2]]],[[21,[-1,-1,-1]]],60,[]],[[[275,[-1,-2]]],[[21,[-1,-1]]],60,[]],[[[299,[-1,-2]]],[[21,[-1,-1,-1]]],60,[]],[[[305,[-1,-2,-3]]],[[21,[-1,-1]]],60,[],[]],[[[306,[-1,-2,-3]]],[[21,[-1,-1,-1]]],60,[],[]],[[[230,[-1,-2]]],[[21,[-1,-1]]],60,[]],[[[300,[-1,-2]]],[[21,[-1,-1,-1]]],60,[]],[[[302,[-1,-2]]],[[21,[-1,-1,-1,-1]]],[316,60],[]],[[[300,[-1,-2]]],[[21,[-1,-1,-1,-1]]],[318,60],[]],[[[234,[-1,-2]]],[[234,[272,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[272,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[272,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[272,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[272,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[272,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[272,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[272,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[272,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[209,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[209,-2]]],[258,60],[]],[[[234,[-1,-2]]],[[234,[-1,173]]],60,[]],[[[312,[-1,-2]]],[[312,[-1,173]]],60,[]],[[[204,[-1,-2]]],[[204,[-1,173]]],60,[]],[[[302,[-1,-2]]],[[302,[-1,173]]],60,[]],[[[311,[-1,-2]]],[[311,[-1,173]]],60,[]],[[[313,[-1,-2,-3]]],[[313,[-1,173,173]]],60,[],[]],[[[310,[-1,-2,-3]]],[[310,[-1,173,173]]],60,[],[]],[[[275,[-1,-2]]],[[275,[-1,173]]],60,[]],[[[299,[-1,-2]]],[[299,[-1,173]]],60,[]],[[[174,[-1,-2,-3]]],[[174,[-1,173,173]]],60,[],[]],[[[309,[-1,-2,-3]]],[[309,[-1,173,173]]],60,[],[]],[[[305,[-1,-2,-3]]],[[305,[-1,173,173]]],60,[],[]],[[[306,[-1,-2,-3]]],[[306,[-1,173,173]]],60,[],[]],[[[230,[-1,-2]]],[[230,[-1,173]]],60,[]],[[[300,[-1,-2]]],[[300,[-1,173]]],60,[]],[[[314,[-1,-2,-3]]],[[314,[-1,173,173]]],[],[],[]],[[[234,[-1,-2]]],[[234,[42,-2]]],[258,60],[]],[[[312,[-1,-2]]],[[312,[42,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[204,[42,-2]]],[258,60],[]],[[[302,[-1,-2]]],[[302,[42,-2]]],[258,60],[]],[[[311,[-1,-2]]],[[311,[42,-2]]],[258,60],[]],[[[275,[-1,-2]]],[[275,[42,-2]]],[258,60],[]],[[[299,[-1,-2]]],[[299,[42,-2]]],[258,60],[]],[[[230,[-1,-2]]],[[230,[42,-2]]],[258,60],[]],[[[300,[-1,-2]]],[[300,[42,-2]]],[258,60],[]],[[[204,[-1,-2]]],[[230,[-1,-2]]],60,[]],[[[302,[-1,-2]]],[[300,[-1,-2]]],60,[]],[[[275,[-1,-2]]],[[230,[-1,-2]]],60,[]],[[[299,[-1,-2]]],[[300,[-1,-2]]],60,[]],[[[305,[-1,-2,-3]]],[[230,[-1,-2]]],60,[],[]],[[[306,[-1,-2,-3]]],[[300,[-1,-2]]],60,[],[]],0,[[[305,[-1,-2,-3]],[234,[-1,-2]]],[[234,[-3]]],[245,60],[],[]],[[[303,[-1,-2,-3]],[234,[-1,-2]]],[[234,[-3]]],[60,254],[],[]],[[[306,[-1,-2,-3]],[234,[-1,-2]]],[[234,[-3]]],[245,60],[],[]],[[[303,[-1,-2,-3]],[312,[-1,-2]]],[[312,[-3]]],[60,254],[],[]],[[[306,[-1,-2,-3]],[312,[-1,-2]]],[[312,[-3]]],[245,60],[],[]],[[[313,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-1,-3]]],274,[],[]],[[[313,[-1,173,173]],[204,[-1,173]]],[[204,[-1,173]]],243],[[[303,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-3]]],[60,254],[],[]],[[[303,[-1,173,173]],[204,[-1,173]]],[[204,[-1,173]]],243],[[[174,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[174,[-1,173,173]],[204,[-1,173]]],[[204,[-1,173]]],243],[[[305,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-3]]],[245,60],[],[]],[[[305,[-1,173,173]],[204,[-1,173]]],[[204,[-1,173]]],243],[[[310,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-1,-3]]],[],[],[]],[[[309,[-1,-2,-3]],[204,[-1,-2]]],[[26,[[204,[-1,-3]]]]],[[263,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[306,[-1,-2,-3]],[204,[-1,-2]]],[[204,[-3]]],[245,60],[],[]],[[[309,[-1,-2,-3]],[204,[-1,-2]]],[[317,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[310,[-1,-2,-3]],[302,[-1,-2]]],[[302,[-1,-3]]],[],[],[]],[[[303,[-1,-2,-3]],[302,[-1,-2]]],[[302,[-3]]],[60,254],[],[]],[[[309,[-1,-2,-3]],[302,[-1,-2]]],[[26,[[302,[-1,-3]]]]],[[263,[],[[30,[]]]],318,100,60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[306,[-1,-2,-3]],[302,[-1,-2]]],[[302,[-3]]],[245,60],[],[]],[[[309,[-1,-2,-3]],[302,[-1,-2]]],[[317,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[303,[-1,-2,-3]],[311,[-1,-2]]],[[311,[-3]]],[60,254],[],[]],[[[305,[-1,-2,-3]],[311,[-1,-2]]],[[311,[-3]]],[[245,[],[[30,[]]]],60],[],[]],[[[306,[-1,-2,-3]],[311,[-1,-2]]],[[311,[-1,-3]]],[[245,[],[[30,[]]]],60],[],[]],[[[303,[-1,-2,-3]],[275,[-1,-2]]],[[275,[-3]]],[60,254],[],[]],[[[305,[-1,-2,-3]],[275,[-1,-2]]],[[275,[-1,-3]]],[],[],[]],[[[306,[-1,-2,-3]],[275,[-1,-2]]],[[275,[-1,-3]]],[],[],[]],[[[313,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],274,[],[]],[[[313,[-1,173,173]],[230,[-1,173]]],[[230,[-1,173]]],243],[[[303,[-1,173,173]],[230,[-1,173]]],[[230,[-1,173]]],243],[[[303,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-3]]],[60,254],[],[]],[[[174,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[174,[-1,173,173]],[230,[-1,173]]],[[230,[-1,173]]],243],[[[305,[-1,173,173]],[230,[-1,173]]],[[230,[-1,173]]],243],[[[310,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],[],[],[]],[[[309,[-1,-2,-3]],[230,[-1,-2]]],[[230,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[310,[-1,-2,-3]],[300,[-1,-2]]],[[300,[-1,-3]]],[],[],[]],[[[309,[-1,-2,-3]],[300,[-1,-2]]],[[300,[-1,-3]]],[60,[245,[],[[30,[]]]],[254,[],[[30,[]]]]],[],[]],[[[234,[-1,-2]],[230,[-1,-2]]],[[234,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[312,[-1,-2]],[300,[-1,-2]]],[[312,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[[311,[-1,-2]],[230,[-1,-2]]],[[311,[-1,-2]]],[60,[245,[],[[30,[]]]]],[]],[[-1,-1],[[174,[-1,-2,-3]]],[318,316],[],[]],[[-1,-1,-1],[[309,[-1,-2,-3]]],[318,316],[],[]],0,[[[234,[-1,-2]]],[[26,[[234,[-3,-2]]]]],[258,60],[],258],[[[312,[-1,-2]]],[[26,[[312,[-3,-2]]]]],[258,60],[],258],[[[301,[-1,-2]]],[[26,[[301,[-3,-2]]]]],[258,29],[],258],[[[204,[-1,-2]]],[[26,[[204,[-3,-2]]]]],[258,60],[],258],[[[302,[-1,-2]]],[[26,[[302,[-3,-2]]]]],[258,60],[],258],[[[311,[-1,-2]]],[[26,[[311,[-3,-2]]]]],[258,60],[],258],[[[303,[-1,-2,-3]]],[[26,[[303,[-4,-2,-3]]]]],258,[],[],258],[[[275,[-1,-2]]],[[26,[[275,[-3,-2]]]]],[258,60],[],258],[[[299,[-1,-2]]],[[26,[[299,[-3,-2]]]]],[258,60],[],258],[[[174,[-1,-2,-3]]],[[26,[[174,[-4,-2,-3]]]]],[258,60],[],[],258],[[[309,[-1,-2,-3]]],[[26,[[309,[-4,-2,-3]]]]],[258,60],[],[],258],[[[230,[-1,-2]]],[[26,[[230,[-3,-2]]]]],[258,60],[],258],[[[300,[-1,-2]]],[[26,[[300,[-3,-2]]]]],[258,60],[],258],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[[[230,[-1,-2]]],[[26,[[230,[-1,-2]]]]],274,[]],[[[300,[-1,-2]]],[[26,[[300,[-1,-2]]]]],274,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[234,[-1,-2]],[234,[-1,-2]]],[[234,[-1,-2]]],[60,100],[]],[[[312,[-1,-2]],[312,[-1,-2]]],[[312,[-1,-2]]],[60,100],[]],[[[311,[-1,-2]],[311,[-1,-2]]],[[311,[-1,-2]]],[60,100,[245,[],[[30,[]]]],[253,[],[[30,[]]]],318],[]],[[-1,-1,-1,-1],[[310,[-1,-2,-3]]],274,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[-1,-1],[[230,[-1,-2]]],[],[]],[[-1,-1,-1],[[300,[-1,-2]]],[],[]],[[[310,[-1,-2,-3]]],[[300,[-1,173]]],60,[],[]],[[[304,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],[[[312,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[299,[-1,-2]]],-1,[[254,[],[[30,[]]]],60],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[234,[-1,-2]]],-1,[60,[253,[],[[30,[]]]]],[]],[[[312,[-1,-2]]],-1,[60,[253,[],[[30,[]]]]],[]],[[[311,[-1,-2]]],-1,[60,[245,[],[[30,[]]]]],[]],0,0,[[[174,[-1,-2,-3]]],[[174,[-1,-2,-4]]],60,[],[],[]],[[[309,[-1,-2,-3]]],[[309,[-1,-2,-4]]],60,[],[],[]],[[[230,[-1,-2]],-1],[[230,[-1,-2]]],274,[]],[[[230,[-1,-2]],-1],[[230,[-1,-2]]],274,[]],[[[300,[-1,-2]],-1],[[300,[-1,-2]]],274,[]],[[[230,[-1,-2]],-1],[[230,[-1,-2]]],274,[]],[[[300,[-1,-2]],-1],[[300,[-1,-2]]],274,[]],[[[174,[-1,-2,-3]]],[[174,[-1,-4,-3]]],60,[],[],[]],[[[309,[-1,-2,-3]]],[[309,[-1,-4,-3]]],60,[],[],[]],0,0,0,0,0,0,0,0,0,[[[234,[-1,-2]]],[[215,[-1]]],60,[]],[[[312,[-1,-2]]],[[215,[-1]]],60,[]],[[[311,[-1,-2]]],[[215,[-1]]],[60,[245,[],[[30,[]]]]],[]],[[[302,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[300,[-1,-2]]],[[230,[-1,-2]]],60,[]],[308,307],[[[312,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],[[[302,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[300,[-1,-2]]],[[230,[-1,-2]]],60,[]],[308,307],[[[312,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],0,0,0,0,0,0,0,0,0,[[[234,[-1,-2]]],[[215,[-1]]],60,[]],[[[312,[-1,-2]]],[[215,[-1]]],60,[]],[[[311,[-1,-2]]],[[215,[-1]]],[60,[245,[],[[30,[]]]]],[]],[[[204,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[230,[-1,-2]]],[[230,[-1,-2]]],60,[]],[[[302,[-1,-2]]],[[204,[-1,-2]]],60,[]],[[[300,[-1,-2]]],[[230,[-1,-2]]],60,[]],[308,307],[[[312,[-1,-2]]],-1,[60,[254,[],[[30,[]]]],[253,[],[[30,[]]]]],[]],0,0,0,0,0,[[[312,[-1,-2]]],[[215,[-1]]],60,[]],[[],[[234,[-1,-2]]],318,[]],[[],[[312,[-1,-2]]],318,[]],[[],[[301,[-1,-2]]],318,[]],[[],[[204,[-1,-2]]],318,[]],[[],[[204,[-1,-2]]],318,[]],[[],[[302,[-1,-2]]],318,[]],[[],[[302,[-1,-2]]],318,[]],[[],[[311,[-1,-2]]],318,[]],[[],[[304,[-1,-2]]],318,[]],[[],[[275,[-1,-2]]],318,[]],[[],[[275,[-1,-2]]],318,[]],[[],[[299,[-1,-2]]],318,[]],[[],[[299,[-1,-2]]],318,[]],[[],[[230,[-1,-2]]],318,[]],[[],[[230,[-1,-2]]],318,[]],[[],[[300,[-1,-2]]],318,[]],[[],[[300,[-1,-2]]],318,[]],0,[[],-1,[]],[[257,257],11],[[257,257,-1],11,[]],[[-1,-1],-1,100],[[-1,-1],-1,100],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[315,315],[320,320],[[],316],[321,321],[[],318],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[251,[-1]],-1],[[323,[-1]]],243],[[[267,[-1]]],[[26,[[204,[-1,173]]]]],243],[[[268,[-1]]],[[26,[-1]]],243],[[[267,[-1]]],[[21,[42,[26,[42]]]]],243],[[[268,[-1]]],[[21,[42,[26,[42]]]]],243],0,[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[248,[],[[247,[-1]]]],-1],[[248,[],[[247,[-1]]]]],243],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[248,[],[[247,[-1]]]],-1],[[248,[],[[247,[-1]]]]],243],[[[248,[],[[247,[-1]]]],-1],[[230,[-1,173]]],243],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[248,[],[[247,[-1]]]]],[[248,[],[[247,[-1]]]]],243],[[[248,[],[[247,[-1]]]],-1,167],21,243],[[[248,[],[[247,[-1]]]]],[[204,[-1,173]]],243],[[[248,[],[[247,[-1]]]],-1],[[204,[-1,173]]],243],[[[248,[],[[247,[-1]]]],-1],[[21,[[248,[],[[247,[-1]]]],[248,[],[[247,[-1]]]]]]],243],[[[248,[],[[247,[-1]]]],[215,[-1]]],[[248,[],[[247,[-1]]]]],243],[[[248,[],[[247,[-1]]]]],[[204,[-1,173]]],243],[[228,[204,[-1,173]]],[[204,[-1,173]]],[]],[[228,[230,[-1,173]]],[[230,[-1,173]]],[]],[[[248,[],[[247,[-1]]]],-1],-1,243],[[[248,[],[[247,[-1]]]],-1],-1,243],[[-1,-1,-1,-1],[[261,[-1]]],243],[[[230,[-1,173]],[230,[-1,173]]],-1,243],[[[204,[-1,173]],[204,[-1,173]],[204,[-1,173]]],-1,243],[[-1,-1],[[21,[-1,-1]]],269],[[[230,[-1,173]]],[[230,[-1,173]]],243],[[[230,[-1,173]]],[[230,[-1,173]]],269],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[324,[-1]]],[[277,[],[[22,[[204,[82,173]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[[325,82],[[326,[325]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,-1],[[326,[-1]]],[[277,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]]],[[-1,-2],[[327,[-2,-1]]],[[228,[82]]],[[277,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]]],[[11,-1],[[324,[-1]]],[[277,[],[[22,[[204,[82,173]]]]]]]],[[[226,[-1]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],[[277,[],[[22,[[193,[[21,[[204,[82,173]],[78,[82]]]],[204,[82,173]]]]]]]]]],[[[326,[-1]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],[[277,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]]],[[[327,[-1,-2]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],[[277,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]],[[228,[82]]]],[[[324,[-1]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],[[277,[],[[22,[[204,[82,173]]]]]]]],[-1,[[324,[-1]]],[[277,[],[[22,[[204,[82,173]]]]]]]],[[[326,[-1]]],[[21,[42,[26,[42]]]]],[[277,[],[[22,[[193,[[204,[82,173]],[204,[82,173]]]]]]]]]],[[325,-1],[[327,[325,-1]]],[[228,[82]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[226,[-1]]],-1,[[277,[],[[22,[[193,[[21,[[204,[82,173]],[78,[82]]]],[204,[82,173]]]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[82,82],[[204,[82,173]]]],0,[[82,82],[[275,[82,173]]]],[[82,82],[[230,[82,173]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[188,[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[78,[82]]],186],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[188,172],[191,172],[191,172],[188,188],[191,191],[217,217],[222,222],[213,213],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[188,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[],188],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[188,11],21],[[191,11],21],[[191,11],21],[[188,[78,[183]]],21],[[191,[78,[183]]],21],[[213,48],[[50,[21,49]]]],[[222,82,-1],21,[[167,[[193,[[21,[[204,[82,173]],[78,[82]]]],[204,[82,173]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[225,172],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[188,[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[78,[82]]],186],[[],188],[42,191],[225,26],[217,[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]]],[222,26],[213,[[26,[[193,[186,201]]]]]],[[],-1,[]],[188,42],[191,42],[191,42],[222,217],[[188,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[191,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[188,42,42],21],[[191,42,42],21],[[191,42,42],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[42,42],188],[188,[[227,[188]]]],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[190,[204,[82,173]]],186],[[190,[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[78,[82]]],186],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[190,42],[190,42],[328,42],[328,42],[219,219],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[190,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[190,[204,[82,173]],[204,[82,173]],[204,[82,173]]],186],[[328,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[[190,11],21],[[190,11],21],[[328,11],21],[[328,11],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[190,[204,[82,173]],[78,[82]]],186],[[190,[204,[82,173]]],186],[[328,[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[78,[82]]],186],[[184,42],328],[219,[[26,[183]]]],[219,[[26,[183]]]],[190,42],[328,42],[[190,[204,[82,173]],[204,[82,173]]],186],[[190,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[328,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[190,42,42],21],[[190,42,42],21],[[328,42,42],21],[[328,42,42],21],[219,[[21,[42,[26,[42]]]]]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[190,42],328],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[221,221],[[[220,[-1]]],[[220,[-1]]],29],[[[223,[-1]]],[[223,[-1]]],29],[214,214],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[215,[272]],11],214],[221,[[26,[[193,[186,201]]]]]],[[[220,[-1]]],[[26,[[193,[-1,21]]]]],[]],[[[223,[-1]]],[[26,[[193,[[204,[82,173]],[204,[82,173]]]]]]],208],[214,[[26,[[193,[186,201]]]]]],[-1,[[329,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[229,[204,[82,173]],82,200,[78,[82]]],21],[[229,[204,[82,173]],[230,[82,173]],[231,[82]],200,[78,[82]]],21],[[229,[232,[82]],[78,[82]]],[[21,[186,186]]]],[[229,[204,[82,173]],[78,[82]]],186],[[229,[194,[[204,[82,173]]]],[78,[82]]],21],[[233,[194,[[204,[82,173]]]]],21],[[229,[234,[82,173]],200,[78,[82]]],21],[[229,[234,[82,173]],235,200,[78,[82]]],21],[[233,[230,[82,173]],[231,[82]],192,[204,[82,173]]],21],[[229,[204,[82,173]],[78,[82]]],186],[[[239,[],[[238,[-1]]]]],-1,[]],[233,21],[229,21],[[229,[204,[82,173]],[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]],[204,[82,173]],[204,[82,173]]],21],[[229,11],21],[[229,[193,[[21,[[204,[82,173]],[78,[82]]]],[204,[82,173]]]]],21],[[229,82],[[236,[229]]]],[[325,82],[[326,[325]]]],[[233,82],21],[[229,[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]]],21],[[233,[204,[82,173]]],21],[229,42],[[229,[193,[[204,[82,173]],[204,[82,173]]]],[78,[82]]],21],[[229,[204,[82,173]],[204,[82,173]],[78,[82]]],186],[[233,[204,[82,173]],[204,[82,173]]],21],[[233,[230,[82,173]],[231,[82]],192,[230,[82,173]]],21],[[233,[230,[82,173]],[230,[82,173]],[230,[82,173]]],21],[[233,82],21],[[233,[230,[82,173]]],21],[[233,[230,[82,173]]],21],[[233,[230,[82,173]],[230,[82,173]]],21],[[233,82],21],[[229,42,42],21],[[233,42,42],21],[[233,[204,[82,173]],[204,[82,173]]],21],[[233,[204,[82,173]]],21],[[233,[230,[82,173]],[230,[82,173]]],21],[[233,[230,[82,173]]],21],[[229,-1],[[237,[229,-1]]],[[228,[82]]]],[[325,-1],[[327,[325,-1]]],[[228,[82]]]],[[233,82],21],[229,[[227,[229]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,7],[[[330,[-1]]],[[330,[-1]]],29],[106,106],[107,107],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,106],107],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],14,15],[42,21],[42,21],[42,21],[42,21],[[[330,[-1]],[330,[-1]]],11,61],[[106,106],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[330,[-1]],48],151,168],[[106,48],151],[[107,48],151],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,7],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2,-3]],330],[[12,[-1,-2,-3]]],[],14,15],0,[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2,-3]],17,-3,62],63,[],14,15],0,[[[12,[-1,-2,-3]],17,45,46,47,-3],64,[],14,15],[[-1,11],[[12,[-2,-3,-4]]],[[7,[13]]],[],14,15],[[[12,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],14,15],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[31,[11],[[30,[-1]]]]]],[[[12,[-1,-2,-3]],[26,[-4]]],[[12,[-1,-2,-3]]],[],14,15,[[31,[11],[[30,[-1]]]]]],[[20,106],107],[[20,106],107],0,[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[7,[53]]]],[[[12,[-1,-2,-3]]],[[65,[96]]],[],14,15],0,[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[7,[53]]]],[[[12,[-1,-2,-3]]],102,[],14,15],[[[14,[],[[153,[-1]]]],-1,106],107,[]],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[31,[-2,106],[[30,[107]]]]]],[[20,106],107],[[[12,[-1,-2,-3]]],133,[],14,15],0,[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[7,[331]]]],[[[12,[-1,-2,-3]],332],[[12,[-1,-2,-3]]],[],14,15],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[7,[53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2,-3]],-4],[[12,[-1,-2,-3]]],[],14,15,[[7,[96]]]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2,-3,-4]]],[[18,[17]]],[28,29],29,32,15],[[[24,[-1]]],[[24,[-1]]],29],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2,-3,-4]],17,-4,-3,44,45,46,47],21,[28,29],29,32,15],[42,21],[42,21],[[[24,[-1]],48],151,168],[[[27,[-1,-2,-3,-4]]],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2,-3,-4]],333],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15],[[],42],[[],42],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,7],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[31,[-3,116],[[30,[117]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2,-3,-4]],17,-4,62],63,[28,29],29,32,15],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[7,[331]]]],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,7],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[31,[-3],[[30,[103]]]]]],[[[27,[-1,-2,-3,-4]],17,45,46,47,-4],64,[28,29],29,32,15],[[[24,[-1]],25,[26,[-1]],-3],[[27,[-1,-2,-4,-5]]],[28,29],[],[[31,[-1],[[30,[-2]]]]],32,15],[[[18,[-1]]],[[24,[-1]]],[28,29]],[[[27,[-1,-2,-3,-4]],-2],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15],[[[27,[-1,-2,-3,-4]],17,66,45,46,-4,67,[68,[-2]],47],69,[28,29],29,32,15],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[31,[13],[[30,[-2]]]]]],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[31,[-1],[[30,[-2]]]]]],[[[27,[-1,-2,-3,-4]],17,45,-4,74],[[26,[[75,[-2,-3,-4]]]]],[28,29],29,32,15],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[7,[152]]]],[[[27,[-1,-2,-3,-4]]],[[65,[96]]],[28,29],29,32,15],[[[27,[-1,-2,-3,-4]],82],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15],[[[27,[-1,-2,-3,-4]]],102,[28,29],29,32,15],[[[27,[-1,-2,-3,-4]]],133,[28,29],29,32,15],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,-2,-3,-4]],-5],[[27,[-1,-2,-3,-4]]],[28,29],[],32,15,[[7,[96]]]],[[[18,[-1]],[26,[-1]]],[[24,[-1]]],[28,29]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[34,[-1,-2,-3]],334],[[34,[-1,-2,-3]]],[],35,5],[[[34,[-1,-2,-3]],335],[[34,[-1,-2,-3]]],[],35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[20,126],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1,-2,-3]]],[[34,[-1,-2,-3]]],[],35,5],[[[34,[-1,-2,-3]]],[[34,[-1,-2,-3]]],[],35,5],[[[34,[-1,-2,-3]]],[[18,[17]]],[],35,5],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,7],[[[34,[-1,-2,-3]],11],[[34,[-1,-2,-3]]],[],35,5],[336,336],[126,126],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],126],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[34,[-1,-2,-3]],17],21,[],35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],35,5],[[-1,126,47],21,5],[42,21],[42,21],[42,21],[[336,336],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[336,48],151],[[126,48],151],[-1,-1,[]],[-1,-1,[]],[178,126],[-1,-1,[]],[166,126],[337,126],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[336,-1],21,212],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[7,[96]]]],[[[34,[-1,-2,-3]],336],[[34,[-1,-2,-3]]],[],35,5],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,96,96,82,82,152,334,335,-1],63,[[38,[62],[[30,[63]]]]]],[[[34,[-1,-2,-3]],17,-3,62],63,[],35,5],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[7,[53]]]],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[7,[53]]]],[[[34,[-1,-2,-3]],17,45,46,47,-3],64,[],35,5],[-4,[[34,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],[-1,336,[[7,[[338,[25]]]]]],[[],-1,[]],[[[34,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],35,5],[[[34,[-1,-2,-3]],17,45,-3,72],21,[],35,5],[[[34,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],35,5],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[7,[152]]]],[20,126],0,[[[34,[-1,-2,-3]]],[[65,[96]]],[],35,5],[[[34,[-1,-2,-3]]],102,[],35,5],[[[35,[],[[153,[-1]]]],-1],126,[]],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[31,[-2],[[30,[126]]]]]],[[[34,[-1,-2,-3]]],133,[],35,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,126,[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],336],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[336,[[51,[[26,[47]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1,-2,-3]],-4],[[34,[-1,-2,-3]]],[],35,5,[[7,[96]]]],[[126,-1],126,[[7,[154]]]],[[126,-1,-2],126,[[7,[166]]],[[7,[53]]]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[339,339],[340,340],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]],341],[[55,[-1]]],[]],[339,342],[[],340],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,45,-1,341,340],21,[29,19],[[344,[],[[343,[-1]]]]]],[[[55,[-1]],17,-2,-3,44,45,46,47],21,[29,19],[[344,[],[[343,[-1]]]]],[]],[42,21],[42,21],[42,21],[[339,339],11],[[340,340],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[55,[-1]],340],[[55,[-1]]],[]],[[339,48],[[50,[21,49]]]],[[340,48],[[50,[21,49]]]],[[[55,[-1]],48],151,168],[-1,339,[[7,[345]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,339,[[346,[[78,[98]]]],347,348]],[-1,339,[[7,[345]]]],[[272,272,-1],339,[[346,[[78,[98]]]],347,348]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[339,-1],21,212],[[340,-1],21,212],[[[55,[-1]],-2],[[55,[-1]]],[],[[7,[96]]]],[339,209],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,62,-1,96,96,341],63,[],[[344,[],[[343,[-1]]]]]],[[[55,[-1]],17,-2,62],63,[29,19],[[344,[],[[343,[-1]]]]]],[-2,[[55,[-1]]],[],[[7,[-1]]]],[[],-1,[]],[[[55,[-1]]],[[65,[96]]],[29,19]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],0,[-1,[[349,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]],-2],[[55,[-1]]],[],[[7,[96]]]],0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[350,350],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],350],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[349,[-1]],17,-2,-3,44,45,46,47],21,[29,19],[[344,[],[[343,[-1]]]]],[]],[42,21],[42,21],[[[349,[-1]],340],[[349,[-1]]],[]],[[350,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[349,[-1]],-2],[[349,[-1]]],[],[[7,[96]]]],[[-1,350,65],65,344],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[350,11],[[[349,[-1]],17,-2,62],63,[29,19],[[344,[],[[343,[-1]]]]]],[[[349,[-1]],82],[[349,[-1]]],[]],[[[349,[-1]],82],[[349,[-1]]],[]],[[[349,[-1]],17,45,46,47,-2],64,[29,19],[[344,[],[[343,[-1]]]]]],[-1,[[349,[-1]]],[]],[[],350],[[],-1,[]],[[[349,[-1]],17,66,45,46,-2,67,[68,[-3]],47],69,[29,19],[[344,[],[[343,[-1]]]]],[]],[[[349,[-1]],-2],[[349,[-1]]],[],[[7,[53]]]],[[[349,[-1]],82],[[349,[-1]]],[]],[[[349,[-1]]],[[65,[96]]],[29,19]],[[[349,[-1]]],102,[29,19]],[[[349,[-1]]],133,[29,19]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[349,[-1]],-2],[[349,[-1]]],[],[[7,[96]]]],0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[59,[-1,-2,-3,-4]],351],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1,-2,-3,-4]]],[[18,[17]]],[60,61],[],[],5],[-1,-2,[],[]],[[],[[59,[-1,-2,-3]]],[60,61],[],5],[42,-1,[]],[42,-1,[]],[[[59,[-1,-2,-3,-4]],17],21,[60,61],[],[],5],[-1,-2,[],[]],[[[59,[-1,-2,-3,-4]],17,-4,-3,44,45,46,47],21,[60,61],[],[],5],[42,21],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[23,[],[[22,[[21,[-1,[6,[-2,-3,-4]]]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[18,[-1]],[18,[[6,[-2,-3,-4]]]]],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[96]]]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1,-2,-3,-4]],17,-4,62],63,[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[53]]]],[[[59,[-1,-2,-3,-4]],17,45,46,47,-4],64,[60,61],[],[],5],[[],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5],[[],-1,[]],[[[59,[-1,-2,-3,-4]],17,66,45,46,-4,67,[68,[-2]],47],69,[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],17,45,-4,72],21,[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],17,45,-4,74],[[26,[[75,[-2,-3,-4]]]]],[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[152]]]],[[[59,[-1,-2,-3,-4]],-1,-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[[6,[-2,-3,-4]]]]]],[[[59,[-1,-2,-3,-4]],-1,[26,[-5]]],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[[6,[-2,-3,-4]]]]]],[[[59,[-1,-2,-3,-4]]],[[65,[96]]],[60,61],[],[],5],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[53]]]],[[[59,[-1,-2,-3,-4]]],102,[60,61],[],[],5],[[[59,[-1,-2,-3,-4]]],133,[60,61],[],[],5],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[[[59,[-1,-2,-3,-4]],-5],[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[7,[96]]]],[42,[[59,[-1,-2,-3,-4]]],[60,61],[],[],5],[-5,[[59,[-1,-2,-3,-4]]],[60,61],[],[],5,[[23,[],[[22,[[21,[-1,[6,[-2,-3,-4]]]]]]]]]],0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,103],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,103],[[],-1,[]],[[],352],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[[352,48],151],[[103,48],151],[[[353,[-1,-2,-3,-4]],-5],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[352,[78,[-1]],[26,[42]],-3,[26,[31]]],[[353,[-1,-2,-4,-5]]],[77,29],[],[[167,[-1],[[30,[-2]]]]],81,15],[[],352],[[],-1,[]],[[[353,[-1,-2,-3,-4]],155,82],[[75,[-2,-3,-4]]],[77,29],[],81,15],[[[353,[-1,-2,-3,-4]],-5],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15,[[7,[152]]]],0,0,[[[81,[],[[153,[-1]]]],-1],103,[]],0,[[[353,[-1,-2,-3,-4]],-5],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15,[[7,[331]]]],[[[353,[-1,-2,-3,-4]],332],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15],[[[353,[-1,-2,-3,-4]],-5],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15,[[7,[53]]]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[353,[-1,-2,-3,-4]],82],[[353,[-1,-2,-3,-4]]],[77,29],[],81,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[354,[-1,-2,-3]]],[[354,[-1,-2,-3]]],[],35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[355,45,155],11],[[[356,[-1,-2,-3]],45,155],11,[],35,5],[[[357,[-1,-2,-3]]],[[18,[17]]],[],358,5],[[[356,[-1,-2,-3]],-4],[[356,[-1,-2,-3]]],[],35,5,7],[[[354,[-1,-2,-3]],-4],[[354,[-1,-2,-3]]],[],35,5,7],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,7],[359,359],[[[360,[-1]]],[[360,[-1]]],29],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[368,368],[369,369],[121,121],[370,370],[371,371],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[363,363],240],[[364,364],240],0,[[-1,-2],240,[],[]],[[-1,-2],240,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[354,[-1,-2,-3]],-4],[[354,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],[20,121],[[],-1,[]],[[],367],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[357,[-1,-2,-3]],17],21,[],358,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[356,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],35,5],[[[354,[-1,-2,-3]],17,-3,-2,44,45,46,47,11],21,[],35,5],[[[357,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],358,5],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[359,359],11],[[361,361],11],[[363,363],11],[[364,364],11],[[121,121],11],[[370,370],11],[[371,371],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[359,48],151],[[[360,[-1]],48],151,168],[[361,48],151],[[362,48],151],[[363,48],151],[[364,48],151],[[365,48],151],[[366,48],151],[[367,48],151],[[368,48],151],[[369,48],151],[[[372,[-1]],48],151,168],[[121,48],151],[[370,48],151],[[371,48],151],[-1,-1,[]],[-4,[[356,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[359,-1],21,212],[[362,-1],21,212],[[363,-1],21,212],[[364,-1],21,212],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[7,[96]]]],0,0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[354,[-1,-2,-3]],45,155],11,[],35,5],[[[372,[-1]]],[[56,[277]]],[]],[[[357,[-1,-2,-3]],17,-3,62],63,[],358,5],[[[372,[-1]]],362,[]],[[[357,[-1,-2,-3]],17,45,46,47,-3],64,[],358,5],[-4,[[356,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],[-4,[[354,[-1,-2,-3]]],[],35,5,[[7,[[6,[-1,-2,-3]]]]]],[[[373,[-1]],-5],[[357,[-2,-3,-4]]],[],[],358,5,[[31,[363,-1,11],[[30,[[356,[-2,-3,-4]]]]]]]],[[],-1,[]],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[31,[363],[[30,[-1]]]]]],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[31,[365],[[30,[-1]]]]]],[[[357,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],358,5],[[[357,[-1,-2,-3]],-4,-5],[[357,[-1,-2,-3]]],[],358,5,[[7,[53]]],[[31,[369],[[30,[-1]]]]]],[[[357,[-1,-2,-3]],17,45,-3,72],21,[],358,5],[[[357,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],358,5],[[[354,[-1,-2,-3]],-4],[[354,[-1,-2,-3]]],[],35,5,[[7,[152]]]],[[362,82,65],[[374,[363,47]]]],[[363,363],[[26,[240]]]],[[364,364],[[26,[240]]]],0,0,[[[357,[-1,-2,-3]]],[[65,[96]]],[],358,5],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[7,[53]]]],[[359,47,82,82],[[21,[47,47]]]],0,[[359,47,82,82],47],[[362,82,65],[[374,[364,[21,[359,47,82]]]]]],[362,[[0,[[277,[],[[22,[364]]]]]]]],0,[[[357,[-1,-2,-3]]],102,[],358,5],[[[358,[],[[153,[-1]]]],-1],121,[]],[[[356,[-1,-2,-3]],-4],[[356,[-1,-2,-3]]],[],35,5,[[31,[-2],[[30,[126]]]]]],[[[354,[-1,-2,-3]],-4],[[354,[-1,-2,-3]]],[],35,5,[[31,[-2],[[30,[126]]]]]],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[31,[-2],[[30,[121]]]]]],[[[357,[-1,-2,-3]]],133,[],358,5],[[[356,[-1,-2,-3]],[354,[-1,-2,-3]]],[[356,[-1,-2,-3]]],[],35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[357,[-1,-2,-3]],-4],[[357,[-1,-2,-3]]],[],358,5,[[7,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[[373,[-1]],363,361],[[26,[363]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[373,[-1]]],[[373,[-1]]],29],[375,375],[376,376],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[[373,[-1]],363],[[26,[[21,[-1,363]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[[[373,[-1]],363,366],21,[]],[42,21],[42,21],[[376,376],11],[[[373,[-1]],48],151,168],[[375,48],151],[[376,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[377,[363,-1]],[360,[-1]],42],375,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[373,[-1]],363],[[26,[-1]]],[]],[[[373,[-1]],363],[[26,[-1]]],[]],[[],42],[[],42],[[],42],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[373,[-1]]],11,[]],[[[373,[-1]]],[[0,[[277,[],[[22,[[21,[363,-1]]]]]]]]],[]],[[[373,[-1]]],[[0,[[277,[],[[22,[[21,[363,-1]]]]]]]]],[]],[[[373,[-1]]],362,[]],[375,362],[[[373,[-1]]],42,[]],[[[373,[-1]],363],21,[]],[[[373,[-1]]],[[26,[363]]],[]],[[[373,[-1]],363,368],21,[]],[-1,[[21,[[373,[-1]],363]]],[]],0,[376,[[26,[[21,[363,155]]]]]],[376,[[26,[[21,[364,359]]]]]],[[[373,[-1]],364,82],21,[]],[[[373,[-1]]],21,[]],[[[373,[-1]],359,363,-1],[[26,[[21,[363,364]]]]],[]],[[[373,[-1]],363,363,367],21,[]],[[[373,[-1]],363,363],21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[373,[-1]]],[],[[7,[[360,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,7],[[[378,[-1]]],[[378,[-1]]],29],[[[379,[-1]]],[[379,[-1]]],29],[118,118],[119,119],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,118],119],[[],-1,[]],[[],[[378,[-1]]],[]],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2,-3,-4,-5,-6]],17,-6,-5,44,45,46,47],21,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[42,21],[42,21],[42,21],[42,21],[42,21],[[[378,[-1]],[378,[-1]]],11,61],[[[379,[-1]],[379,[-1]]],11,61],[[118,118],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[378,[-1]],48],151,168],[[[379,[-1]],48],151,168],[[118,48],151],[[119,48],151],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,7],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2,-3,-4,-5,-6]],378],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],0,[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2,-3,-4,-5,-6]],17,-6,62],63,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],0,[[[76,[-1,-2,-3,-4,-5,-6]],17,45,46,47,-6],64,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[-2,[26,[-3]],-5],[[76,[-1,-2,-3,-4,-6,-7]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,[[31,[-1],[[30,[-4]]]]],80,15],[[],-1,[]],[[[76,[-1,-2,-3,-4,-5,-6]],-4],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[76,[-1,-2,-3,-4,-5,-6]],17,66,45,46,-6,67,[68,[-4]],47],69,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[76,[-1,-2,-3,-4,-5,-6]],-4],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[76,[-1,-2,-3,-4,-5,-6]],17,45,-6,74],[[26,[[75,[-4,-5,-6]]]]],[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[7,[152]]]],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[7,[13]]]],0,0,[[[76,[-1,-2,-3,-4,-5,-6]]],[[65,[96]]],[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],0,[[[76,[-1,-2,-3,-4,-5,-6]]],102,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[80,[],[[153,[-1]]]],-1,118],119,[]],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[31,[-5,118],[[30,[119]]]]]],[[[76,[-1,-2,-3,-4,-5,-6]]],133,[29,77,61],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],0,[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[7,[331]]]],[[[76,[-1,-2,-3,-4,-5,-6]],332],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[7,[53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1,-2,-3,-4,-5,-6]],-7],[[76,[-1,-2,-3,-4,-5,-6]]],[77,61,29],[[79,[[78,[-1]]]]],[[79,[-1]]],29,80,15,[[7,[96]]]],0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],-2],[[84,[-1]]],85,7],[124,124],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,124],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],17,-2,-1,44,45,46,47],21,85,5],[42,21],[42,21],[[124,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],-2],[[84,[-1]]],85,[[7,[96]]]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],17,-2,62],63,85,5],[[[83,[82]],82],[[84,[-1]]],85],[20,124],[20,124],[[[84,[-1]]],[[65,[96]]],85],[[[85,[],[[153,[-1]]]],-1],124,[]],[[[84,[-1]],-2],[[84,[-1]]],85,[[31,[-1],[[30,[124]]]]]],[20,124],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],-2],[[84,[-1]]],85,[[7,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[87,[-1]],294],[[87,[-1]]],88],[[[87,[-1]],-2],[[87,[-1]]],88,7],[380,380],[381,381],[382,382],[125,125],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,125],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[-1]],17,383,-1,44,45,46,47],21,88],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[380,380],11],[[381,381],11],[[382,382],11],[[125,125],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[86,48],151],[[380,48],151],[[381,48],151],[[382,48],151],[[382,48],151],[[125,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[384,382],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[-1]],17,383,62],63,88],[86,[[87,[-1]]],88],[-1,[[50,[86,382]]],[[346,[[78,[98]]]]]],[[[87,[-1]]],[[65,[96]]],88],[[[87,[-1]]],102,88],[[[88,[],[[153,[-1]]]],-1],125,[]],[[[87,[-1]],-2],[[87,[-1]]],88,[[31,[-1],[[30,[125]]]]]],[[[87,[-1]]],133,88],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,143,[]],[-1,13,[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,381],[[50,[86,382]]],[[346,[[78,[98]]]]]],[[-1,380,381],[[50,[86,382]]],[[346,[[78,[98]]]]]],0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,7],[104,104],[105,105],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,104],105],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,29,91,15],[42,21],[42,21],[42,21],[[104,104],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[104,48],151],[[105,48],151],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2,-3]],17,-3,62],63,29,91,15],[[[89,[-1,-2,-3]],17,45,46,47,-3],64,29,91,15],[[-1,-2,[26,[-2]],-4],[[89,[-3,-5,-6]]],[[7,[13]]],[90,60],29,[[38,[-2],[[30,[-3]]]]],91,15],[[[89,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,29,91,15],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[7,[53]]]],[[[89,[-1,-2,-3]]],[[65,[96]]],29,91,15],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[7,[53]]]],[[[89,[-1,-2,-3]]],102,29,91,15],[[[91,[],[[153,[-1]]]],-1,104],105,[]],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[31,[-2,104],[[30,[105]]]]]],[[[89,[-1,-2,-3]]],133,29,91,15],0,[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[7,[331]]]],[[[89,[-1,-2,-3]],332],[[89,[-1,-2,-3]]],29,91,15],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[7,[53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2,-3]],-4],[[89,[-1,-2,-3]]],29,91,15,[[7,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1]],-2],[[52,[-1]]],54,7],[120,120],[385,385],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,120],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1]],17,-2,-1,44,45,46,47],21,54,5],[42,21],[42,21],[42,21],[[385,82],[[21,[82,82]]]],0,[[120,48],151],[[385,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[52,[-2]]],[[7,[53]]],54],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1]],17,-2,62],63,54,5],0,[[[52,[-1]]],[[65,[96]]],54],[[[54,[],[[153,[-1]]]],-1],120,[]],[[[52,[-1]],-2],[[52,[-1]]],54,[[31,[-1],[[30,[120]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[52,[-2]]],[[7,[53]]],54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[386,387],[386,387],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[388,389],388],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[386,47],[[[92,[-1,-2,-3]]],[[18,[17]]],[],93,5],[[[92,[-1,-2,-3]],-4],[[92,[-1,-2,-3]]],[],93,5,7],[387,387],[390,390],[391,391],[388,388],[389,389],[392,392],[386,386],[127,127],[128,128],[393,393],[394,394],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[386,47],[[20,127],128],[[],-1,[]],[[],387],[[],390],[[],391],[[],388],[[],389],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[92,[-1,-2,-3]],17],21,[],93,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[92,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],93,5],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[387,387],11],[[390,390],11],[[391,391],11],[[388,388],11],[[389,389],11],[[392,392],11],[[127,127],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[387,48],[[50,[21,49]]]],[[390,48],[[50,[21,49]]]],[[391,48],151],[[388,48],151],[[389,48],151],[[392,48],151],[[386,48],151],[[127,48],151],[[128,48],151],[[393,48],151],[[394,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2],209,[19,210],211],[[392,-1],21,212],[[[92,[-1,-2,-3]],-4],[[92,[-1,-2,-3]]],[],93,5,[[7,[96]]]],[391,[[26,[388]]]],0,[[[92,[-1,-2,-3]],392],[[92,[-1,-2,-3]]],[],93,5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[92,[-1,-2,-3]],17,-3,62],63,[],93,5],[[388,-1],388,[[7,[53]]]],[[[92,[-1,-2,-3]],17,45,46,47,-3],64,[],93,5],[-4,[[92,[-1,-2,-3]]],[],93,5,[[7,[[6,[-1,-2,-3]]]]]],[[],388],[-1,392,[[7,[[338,[25]]]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[92,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],93,5],[[[92,[-1,-2,-3]],-4],[[92,[-1,-2,-3]]],[],93,5,[[31,[386],[[30,[-1]]]]]],[[[92,[-1,-2,-3]],17,45,-3,72],21,[],93,5],[[[92,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],93,5],[386,390],[[392,387],[[51,[-1]]],[]],0,[[388,-1],388,[[7,[53]]]],[[[92,[-1,-2,-3]]],[[65,[96]]],[],93,5],[[392,390],[[51,[-1]]],[]],[[[92,[-1,-2,-3]]],102,[],93,5],[[[93,[],[[153,[-1]]]],-1,127],128,[]],[[[92,[-1,-2,-3]],-4],[[92,[-1,-2,-3]]],[],93,5,[[31,[-2,127],[[30,[128]]]]]],[[[92,[-1,-2,-3]]],133,[],93,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],392],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[391,[[26,[388]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[92,[-1,-2,-3]],-4],[[92,[-1,-2,-3]]],[],93,5,[[7,[96]]]],[[388,-1],388,[[7,[53]]]],[[-4,391],[[92,[-1,-2,-3]]],[],93,5,[[7,[[6,[-1,-2,-3]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[395,395],[396,396],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],397],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[],[[70,[-1]],[398,[-2]]]],-1,46,47],-2,73,399],[[[94,[-1,-2]],17,-3,-4,44,45,46,47],21,[],[[95,[-1]]],400,[]],[42,21],[42,21],[42,21],[42,21],[[396,396],11],[[395,48],[[50,[21,49]]]],[[397,48],[[50,[21,49]]]],[[396,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[397,[[26,[-1]]],[]],[397,[[26,[-1]]],[]],[397,11],[[[94,[-1,-2]],-3],[[94,[-1,-2]]],[],[[95,[-1]]],[[7,[96]]]],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1,-2]],17,-3,62],63,[],[[95,[-1]]],400],[395,65],[[[95,[],[[70,[-1]],[398,[-2]]]],-1,47,46],64,73,399],[[[95,[],[[70,[-1]],[398,[-2]]]],-1,47,46],64,73,399],[[[94,[-1,-2]],17,45,46,47,-3],64,[],[[95,[-1]]],400],[-2,[[94,[-1,-2]]],[],[[95,[-1]]]],[[],-1,[]],[[[94,[-1,-2]],17,66,45,46,-3,67,[68,[-1]],47],69,[],[[95,[-1]]],400],[395,272],[395,[[65,[272]]]],[395,272],[[399,401,402,403,397,47,395],21],[395,404],[[399,405,397,406,[47,[272]]],21],[395,278],[[[94,[-1,-2]]],[[65,[96]]],[],[[95,[-1]]]],[[[94,[-1,-2]]],102,[],[[95,[-1]]]],[[397,-1],21,347],[[[94,[-1,-2]]],133,[],[[95,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[[95,[],[[70,[-1]],[398,[-2]]]],-1,396,47,46,[68,[-3]]],[[21,[69,[26,[-3]]]]],73,399,[]],[[[95,[],[[70,[-1]],[398,[-2]]]],-1,396,47,46,[68,[-3]]],[[21,[69,[26,[-3]]]]],73,399,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[94,[-1,-2]],-3],[[94,[-1,-2]]],[],[[95,[-1]]],[[7,[96]]]],[[[65,[272]],278],395],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,7],[114,114],[115,115],[407,407],[408,408],[409,409],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,114],115],[[],-1,[]],[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[-1]]]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[97,[-1,-2,-3]],17,-4,-3,44,45,46,47],21,[60,[7,[278]],410],29,101,5],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[114,114],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[114,48],151],[[115,48],151],[[407,48],151],[[408,48],151],[[409,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[53]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[97,[-1,-2,-3]],17,-4,62],63,[60,[7,[278]],410],29,101,5],[[[97,[-1,-2,-3]],17,45,46,47,-4],64,[60,[7,[278]],410],29,101,5],[[[83,[-1]],-1,-3],[[97,[-1,-2,-4]]],[60,[99,[98]],100],29,[[31,[-1],[[30,[-2]]]]],101],[[[97,[-1,-2,-3]],17,66,45,46,-4,67,[68,[-2]],47],69,[60,[7,[278]],410],29,101,5],[[[97,[-1,-2,-3]],-2],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101],0,0,[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[-1]]]],[[[97,[-1,-2,-3]]],[[65,[96]]],[60,[7,[278]],410],29,101],[[[97,[-1,-2,-3]]],102,[60,[7,[278]],410],29,101],[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[-1]]]],[[[101,[],[[153,[-1]]]],-1,114],115,[]],[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[31,[-3,114],[[30,[115]]]]]],[[[97,[-1,-2,-3]]],133,[60,[7,[278]],410],29,101],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[97,[-1,-2,-3]],-4],[[97,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[96]]]],0,[[115,-1],115,[[7,[53]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]],-2],[[130,[-1]]],132,7],[131,131],[110,110],[111,111],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]],341],[[130,[-1]]],132],[131,411],[[],-1,[]],[[],111],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]],17,-2,-1,44,45,46,47],21,132,412],[42,21],[42,21],[42,21],[42,21],[[131,131],11],[[110,110],11],[[111,111],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[131,48],[[50,[21,49]]]],[[110,48],151],[[111,48],151],[-1,131,[[7,[345]]]],[-1,-1,[]],[-1,-1,[]],[111,[[413,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,131,[[7,[[338,[[78,[98]]]]]]]],[-1,131,[[7,[345]]]],[-1,[[130,[-2]]],[[7,[345]]],132],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[131,-1],21,212],[[[130,[-1]],-2],[[130,[-1]]],132,[[7,[96]]]],[131,209],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]],17,-2,62],63,132,412],[-1,[[130,[-2]]],[[7,[131]]],132],[[],-1,[]],[[[130,[-1]]],[[65,[96]]],132],[[[132,[],[[153,[-1]]]],-1,110],111,[]],[[[130,[-1]],-2],[[130,[-1]]],132,[[31,[-1,110],[[30,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]],-2],[[130,[-1]]],132,[[7,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[332,332],[331,331],[129,129],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],332],[[],331],[[],[[414,[-1]]],[73,415]],[[],129],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,44,45,414,129,47],21,15],[42,21],[42,21],[42,21],[42,21],[[332,332],11],[[331,331],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[332,48],[[50,[21,49]]]],[[331,48],[[50,[21,49]]]],[[[414,[-1]],48],[[50,[21,49]]],[168,415]],[[129,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[82,331],[53,331],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[-1,-2],209,[19,210],211],[[332,-1],21,212],[[331,-1],21,212],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,[[338,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[414,-1,62,96,96,25,331,[26,[53]],26,334,335,332],63,15],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[136,[],[[153,[-1]]]],-1],129,[]],[[331,53],53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,7],[417,417],[418,418],[419,419],[112,112],[113,113],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[137,[-1]]],[[21,[42,42]]],15],[[20,112],113],[[],-1,[]],[[],[[137,[-1]]],15],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[419,420],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[139,[-1,-2,-3,-4]],17,-4,-3,44,45,46,47],21,416,[],140,15],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[417,417],11],[[418,418],11],[[419,419],11],[[112,112],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[137,[-1]],48],151,15],[[417,48],[[50,[21,49]]]],[[418,48],[[50,[21,49]]]],[[419,48],[[50,[21,49]]]],[[[421,[-1]],48],151,[168,416]],[[112,48],151],[[113,48],151],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[7,[96]]]],[[[139,[-1,-2,-3,-4]]],[[139,[-5,-2,-3,-4]]],416,[],140,15,416],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[417,11],[[[421,[-1]]],11,416],[[[139,[-1,-2,-3,-4]],17,-4,62],63,416,[],140,15],[[[137,[-1]],42],[[26,[[0,[[423,[],[[422,[25]]]]]]]]],15],[[[137,[-1]]],42,15],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[7,[331]]]],[[[137,[-1]]],[[0,[[277,[],[[22,[[0,[[423,[],[[422,[25]]]]]]]]]]]]],15],[[[139,[-1,-2,-3,-4]],17,45,46,47,-4],64,416,[],140,15],[[[137,[-1]]],[[139,[138,-2,-3,-1]]],15,[],140],[[],[[137,[-1]]],15],[[],-1,[]],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[31,[417],[[30,[-2]]]]]],[[[139,[-1,-2,-3,-4]],17,66,45,46,-4,67,[68,[-2]],47],69,416,[],140,15],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[7,[152]]]],[[[137,[-1]],417],21,15],0,[[[137,[-1]]],[[26,[13]]],15],0,[[[139,[-1,-2,-3,-4]]],[[65,[96]]],416,[],140,15],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[7,[53]]]],[[[139,[-1,-2,-3,-4]]],102,416,[],140,15],[[[140,[],[[153,[-1]]]],-1,112],113,[]],[[[139,[-1,-2,-3,-4]],-5],[[139,[-1,-2,-3,-4]]],416,[],140,15,[[31,[-3,112],[[30,[113]]]]]],[[[139,[-1,-2,-3,-4]]],133,416,[],140,15],[[[137,[-1]]],13,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[419,419],[25,[[137,[-1]]],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,7],[424,424],[[[333,[-1]]],[[333,[-1]]],29],[425,425],[426,426],[[[427,[-1]]],[[427,[-1]]],[29,415]],[116,116],[117,117],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[427,[-1]]],428,415],[[20,116],117],[[],-1,[]],[[],[[427,[-1]]],[73,415]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[141,[-1,-2,-3]],17],21,29,142,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1,-2,-3]],17,-3,-2,45,46,[26,[424]],47],21,29,142,15],[[[141,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,29,142,15],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[426,426],11],[[116,116],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[424,48],151],[[424,48],151],[[[333,[-1]],48],151,168],[[425,48],151],[[426,48],151],[[[427,[-1]],48],151,[168,415]],[[116,48],151],[[117,48],151],[426,[[51,[-1]]],[]],[[[427,[-1]]],21,415],[[[427,[-1]]],21,415],[[],[[427,[-1]]],415],[[[141,[-1,-2,-3]]],[[141,[-1,-2,-3]]],29,142,15],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],209,[19,210],211],[[426,-1],21,212],[[[141,[-1,-2,-3]],333],[[141,[-1,-2,-3]]],29,142,15],0,[[[141,[-1,-2,-3]],426],[[141,[-1,-2,-3]]],29,142,15],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[424,42,285],21],[[424,42,424],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[424,11],[[[427,[-1]]],11,415],[[[427,[-1]]],11,415],[[[141,[-1,-2,-3]],17,-3,62],63,29,142,15],[[[141,[-1,-2,-3]],17,-3,62,[26,[424]]],63,29,142,15],[424,42],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[7,[331]]]],[[[141,[-1,-2,-3]],17,45,46,47,-3],64,29,142,15],[[426,42],[[51,[-1]]],[]],[[[427,[-1]],42],21,415],[[[427,[-1]],42],21,415],[426,[[51,[-1]]],[]],[[[427,[-1]]],21,415],[[[427,[-1]]],21,415],[426,[[51,[-1]]],[]],[[[427,[-1]]],21,415],[[[427,[-1]]],21,415],[[25,25],[[141,[-1,-2,-3]]],29,142,15],[25,424],[-1,426,[[7,[[338,[25]]]]]],[[],[[427,[-1]]],415],[[424,42],42],[[],-1,[]],[[[141,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,29,142,15],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[31,[13],[[30,[-1]]]]]],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[31,[13],[[30,[-1]]]]]],[[[141,[-1,-2,-3]],-1],[[141,[-1,-2,-3]]],29,142,15],[[[141,[-1,-2,-3]],17,45,-3,72],21,29,142,15],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[7,[152]]]],0,[[424,42],42],[[424,42],21],[[424,42,42],21],[[[141,[-1,-2,-3]],11],[[141,[-1,-2,-3]]],29,142,15],[424,424],[[424,42,42],424],[426,[[51,[-1]]],[]],[[[427,[-1]]],21,415],[[[427,[-1]]],21,415],0,0,[[[141,[-1,-2,-3]]],[[65,[96]]],29,142,15],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[7,[53]]]],0,0,[[[141,[-1,-2,-3]]],102,29,142,15],[[[142,[],[[153,[-1]]]],-1,116],117,[]],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[31,[-2,116],[[30,[117]]]]]],[[[141,[-1,-2,-3]]],133,29,142,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,143,[]],[-1,13,[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[427,[-1]]],21,415],[[[427,[-1]]],21,415],[[],426],[[424,42],424],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1,-2,-3]],-4],[[141,[-1,-2,-3]]],29,142,15,[[7,[96]]]],0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[428,428],[429,429],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],428],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[[428,48],151],[[429,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[428,424],[[26,[[21,[42,42]]]]]],[[428,424],429],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[430,430],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[[36,36],11],[[430,430],11],[[36,48],[[50,[21,49]]]],[[430,48],[[50,[21,49]]]],[[430,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,36],430],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,143,[]],[-1,13,[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,36,-1],430,[[38,[36],[[30,[37]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[431,431],[432,432],[433,433],[434,434],[435,435],[436,436],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[42,21],[[37,37],11],[[431,431],11],[[432,432],11],[[433,433],11],[[434,434],11],[[435,435],11],[[436,436],11],[[37,48],[[50,[21,49]]]],[[431,48],[[50,[21,49]]]],[[432,48],[[50,[21,49]]]],[[433,48],[[50,[21,49]]]],[[434,48],[[50,[21,49]]]],[[435,48],[[50,[21,49]]]],[[436,48],[[50,[21,49]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,37],[[166,166,166],433],[[166,166],434],[[166,166,166],435],[[166,166,166],436],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[166,166],431],[[166,166],432],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,7],[122,122],[123,123],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,122],123],[[],-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],145,15],[42,21],[42,21],[42,21],[[122,122],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[122,48],151],[[123,48],151],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,7],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],42],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[-1,-2,-3]],17,-3,62],63,[],145,15],[[[144,[-1,-2,-3]],17,45,46,47,-3],64,[],145,15],[[-1,11,-3],[[144,[-2,-4,-5]]],[[7,[[26,[13]]]]],[],[[31,[11],[[30,[-2]]]]],145,15],[[[144,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],145,15],[[[144,[-1,-2,-3]]],[[65,[96]]],[],145,15],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[7,[53]]]],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[7,[53]]]],[[[144,[-1,-2,-3]]],102,[],145,15],[[[145,[],[[153,[-1]]]],-1,122],123,[]],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[31,[-2,122],[[30,[123]]]]]],[[[144,[-1,-2,-3]]],133,[],145,15],[[[144,[-1,-2,-3]],334],[[144,[-1,-2,-3]]],[],145,15],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[7,[331]]]],[[[144,[-1,-2,-3]],332],[[144,[-1,-2,-3]]],[],145,15],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[7,[53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[-1,-2,-3]],-4],[[144,[-1,-2,-3]]],[],145,15,[[7,[96]]]],0,0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1,-2,-3]]],[[18,[17]]],[],35,15],[[[147,[-1,-2,-3]],-4],[[147,[-1,-2,-3]]],[],35,15,7],[146,146],[[-1,-2],21,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],146],[42,-1,[]],[42,-1,[]],[42,-1,[]],[42,-1,[]],[[[147,[-1,-2,-3]],17],21,[],35,15],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1,-2,-3]],17,-3,-2,44,45,46,47],21,[],35,15],[42,21],[42,21],[[146,146],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[146,48],151],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1,-2,-3]],-4],[[147,[-1,-2,-3]]],[],35,15,[[7,[53]]]],[[],42],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[57,[-1]]],[[57,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1,-2,-3]],17,-3,62],63,[],35,15],[[[147,[-1,-2,-3]],17,45,46,47,-3],64,[],35,15],[[-4,-5,146],[[147,[-1,-2,-3]]],[],35,15,[[7,[[6,[-1,-2,-3]]]]],[[7,[[6,[-1,-2,-3]]]]]],[[],-1,[]],[[[147,[-1,-2,-3]],17,66,45,46,-3,67,[68,[-1]],47],69,[],35,15],[[[147,[-1,-2,-3]],17,45,-3,74],[[26,[[75,[-1,-2,-3]]]]],[],35,15],[[[147,[-1,-2,-3]],-4],[[147,[-1,-2,-3]]],[],35,15,[[7,[53]]]],[[[147,[-1,-2,-3]]],[[65,[96]]],[],35,15],[[[147,[-1,-2,-3]]],[[65,[96]]],[],35,15],[[[147,[-1,-2,-3]],11],[[147,[-1,-2,-3]]],[],35,15],[[[147,[-1,-2,-3]]],102,[],35,15],[[[147,[-1,-2,-3]],-4],[[147,[-1,-2,-3]]],[],35,15,[[31,[-2],[[30,[126]]]]]],[[[147,[-1,-2,-3]]],133,[],35,15],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,7],[-1,-2,[],[]],0,[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[-1]]]],[42,-1,[]],[42,-1,[]],[-1,-2,[],[]],[[[150,[-1,-2,-3]],17,-4,-3,44,45,46,47],21,[60,[7,[278]],410],29,101,5],[42,21],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[96]]]],[[],42],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[2]]],[]],[[[58,[-1]]],[[58,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1,-2,-3]],17,-4,62],63,[60,[7,[278]],410],29,101,5],[[[150,[-1,-2,-3]],17,45,46,47,-4],64,[60,[7,[278]],410],29,101,5],[[[83,[-1]],-1,-3],[[150,[-1,-2,-4]]],[60,[99,[98]],100],29,[[31,[-1],[[30,[-2]]]]],101],[[[150,[-1,-2,-3]],17,66,45,46,-4,67,[68,[-2]],47],69,[60,[7,[278]],410],29,101,5],[[[150,[-1,-2,-3]],-2],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101],[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[-1]]]],[[[150,[-1,-2,-3]]],[[65,[96]]],[60,[7,[278]],410],29,101],[[[150,[-1,-2,-3]]],102,[60,[7,[278]],410],29,101],[[[150,[-1,-2,-3]],-1],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101],[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[31,[-3,114],[[30,[115]]]]]],[[[150,[-1,-2,-3]]],133,[60,[7,[278]],410],29,101],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2,[148,[-2]]]]],[],[]],[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,-2,[],[]],[[[150,[-1,-2,-3]],-4],[[150,[-1,-2,-3]]],[60,[99,[98]],100],29,101,[[7,[53]]]]],"c":[],"p":[[10,"TransformMatrix",12849],[10,"Any",12850],[5,"Button",309],[10,"Catalog",309],[10,"Renderer",12851],[5,"Element",12852],[10,"Into",12853],[5,"Canvas",464],[10,"Renderer",12854],[10,"Program",464],[1,"bool"],[5,"Checkbox",7136],[5,"String",12855],[10,"Catalog",7136],[10,"Renderer",12856],[5,"Lazy",0],[5,"Tree",12857],[5,"Vec",12858],[10,"Hash",12859],[6,"Theme",0],[1,"tuple"],[17,"Item"],[10,"IntoIterator",12860],[5,"State",7332],[1,"str"],[6,"Option",12861],[5,"ComboBox",7332],[10,"Display",12862],[10,"Clone",12863],[17,"Output"],[10,"Fn",12864],[10,"Catalog",7332],[10,"Component",0],[5,"Container",7430],[10,"Catalog",7430],[5,"Palette",12079],[5,"Extended",12214],[10,"FnOnce",12864],[8,"StyleFn",7894],[8,"StyleFn",8022],[8,"StyleFn",8968],[1,"usize"],[5,"Responsive",0],[5,"Style",12851],[5,"Layout",12865],[6,"Cursor",12866],[5,"Rectangle",12867],[5,"Formatter",12862],[5,"Error",12862],[6,"Result",12868],[5,"Command",12869],[5,"Rule",9717],[5,"Pixels",12870],[10,"Catalog",9717],[5,"Image",7594],[5,"Box",12871],[5,"Arc",12872],[5,"Rc",12873],[5,"Column",7834],[10,"Copy",12874],[10,"PartialEq",12875],[5,"Limits",12876],[5,"Node",12877],[6,"Interaction",12878],[5,"Size",12879],[6,"Event",12880],[10,"Clipboard",12881],[5,"Shell",12882],[6,"Status",928],[17,"State"],[17,"Event"],[10,"Operation",12883],[10,"Default",12884],[5,"Vector",12885],[5,"Element",12886],[5,"PickList",8968],[10,"ToString",12855],[1,"slice"],[10,"Borrow",12887],[10,"Catalog",8968],[10,"Catalog",7894],[1,"f32"],[5,"RangeInclusive",12888],[5,"ProgressBar",9209],[10,"Catalog",9209],[5,"Data",9302],[5,"QRCode",9302],[10,"Catalog",9302],[5,"Radio",9569],[10,"Eq",12875],[10,"Catalog",9569],[5,"Scrollable",9849],[10,"Catalog",9849],[5,"Shader",10398],[10,"Program",10398],[6,"Length",12889],[5,"Slider",10582],[1,"u8"],[10,"From",12853],[10,"PartialOrd",12875],[10,"Catalog",10582],[6,"State",12857],[5,"Style",7894],[6,"Status",9569],[5,"Style",9569],[6,"Status",7136],[5,"Style",7136],[6,"Status",309],[5,"Style",309],[6,"Status",10850],[5,"Style",10850],[6,"Status",11222],[5,"Style",11222],[6,"Status",10582],[5,"Style",10582],[6,"Status",11594],[5,"Style",11594],[6,"Status",8968],[5,"Style",8968],[5,"Style",9717],[5,"Style",8022],[6,"Status",12545],[5,"Style",12545],[5,"Style",9209],[5,"Style",9302],[5,"Style",7430],[6,"Status",9849],[5,"Style",9849],[5,"Style",11035],[5,"Svg",10850],[5,"Handle",10850],[10,"Catalog",10850],[5,"Tag",12857],[8,"Text",11035],[10,"IntoFragment",11035],[10,"Catalog",11035],[5,"Content",11222],[5,"PlainText",12890],[5,"TextEditor",11222],[10,"Catalog",11222],[5,"TextInput",11594],[10,"Catalog",11594],[5,"SmolStr",12891],[5,"Toggler",12545],[10,"Catalog",12545],[6,"Position",12693],[5,"Tooltip",12693],[5,"OutOfBounds",12892],[5,"TypeId",12850],[5,"VerticalSlider",12792],[8,"Result",12862],[5,"Padding",12893],[17,"Class"],[6,"Background",12894],[5,"Point",12895],[5,"Path",464],[6,"Gradient",464],[5,"Fill",464],[5,"Stroke",464],[6,"LineCap",464],[6,"LineJoin",464],[5,"LineDash",464],[6,"Style",464],[5,"Text",464],[8,"Geometry",464],[5,"Color",12896],[10,"FnMut",12864],[10,"Debug",12862],[5,"Linear",1065],[5,"Builder",1154],[5,"Packed",1065],[5,"Path",1295],[5,"UnknownUnit",4064],[5,"Transform2D",4064],[6,"Event",928],[6,"Rule",1015],[5,"ColorStop",12897],[6,"Gradient",12897],[5,"Arc",1154],[5,"Elliptical",1246],[5,"PathCommands",1295],[5,"PathCommandsSlice",1295],[5,"PathSlice",1295],[5,"PathBuffer",1295],[5,"PathBufferSlice",1295],[5,"EndpointId",1295],[5,"PathCommandsBuilder",2579],[5,"BuilderImpl",6496],[5,"NoAttributes",2249],[5,"Builder",6760],[5,"BuilderWithAttributes",6496],[5,"ArcFlags",1295],[6,"Event",1295],[5,"Polygon",1295],[5,"IdPolygon",1295],[6,"LineCap",1295],[6,"LineJoin",1295],[6,"Side",1295],[6,"FillRule",1295],[6,"Winding",1295],[5,"ControlPointId",1295],[5,"EventId",1295],[5,"Events",2579],[5,"Point2D",4064],[10,"AttributeStore",1295],[5,"AttributeSlice",1295],[10,"PositionStore",1295],[10,"Position",1295],[1,"u64"],[10,"Sized",12874],[10,"BuildHasher",12859],[10,"Hasher",12859],[5,"IdIter",6496],[5,"PolygonIdIter",6903],[5,"Range",12888],[5,"Iter",2579],[5,"Iter",6496],[1,"i16"],[5,"Iter",6760],[5,"PolygonIter",6903],[5,"IdPolygonIter",6903],[5,"IterWithAttributes",6496],[5,"PathEvents",6903],[5,"CommandsPathSlice",2579],[5,"Reversed",6496],[5,"NoAttributes",6312],[5,"WithSvg",2249],[10,"Transformation",6286],[10,"PathBuilder",7067],[5,"Vector2D",4064],[5,"Angle",2788],[5,"LineSegment",2788],[10,"SvgPathBuilder",7067],[5,"Box2D",4064],[5,"BorderRadii",2249],[5,"Flattened",2249],[5,"Transformed",2249],[17,"PathType"],[10,"Build",7067],[6,"Ordering",12875],[5,"PointEvents",2579],[5,"LineEquation",2788],[10,"Scalar",2788],[5,"Triangle",2788],[10,"Add",12898],[10,"AddAssign",12898],[17,"Scalar"],[10,"Segment",2788],[5,"Arc",2788],[5,"CubicBezierSegment",2788],[5,"QuadraticBezierSegment",2788],[10,"Rem",12898],[10,"Sub",12898],[10,"Mul",12898],[10,"One",12899],[10,"FloatConst",12900],[10,"ApproxEq",6074],[10,"NumCast",12901],[5,"SvgArc",2788],[5,"Line",2788],[5,"ArrayVec",3631],[10,"Trig",4064],[10,"Div",12898],[10,"DivAssign",12898],[5,"Flattened",3580],[5,"Flattened",4021],[5,"Flattened",6173],[5,"FlattenedT",6173],[10,"Float",12900],[10,"MulAssign",12898],[10,"Neg",12898],[1,"u32"],[10,"Zero",12899],[10,"Real",12902],[5,"Size2D",4064],[10,"SubAssign",12898],[10,"Iterator",12903],[1,"f64"],[5,"ArrayString",3631],[5,"IntoIter",3631],[5,"CapacityError",3631],[10,"Ord",12875],[5,"Drain",3631],[10,"RangeBounds",12888],[1,"char"],[10,"FromIterator",12860],[5,"Error",12904],[1,"array"],[5,"Utf8Error",12905],[5,"Arguments",12862],[1,"u128"],[1,"i128"],[1,"i64"],[1,"u16"],[1,"i8"],[1,"i32"],[6,"Endian",12906],[10,"Signed",12907],[5,"Size3D",4064],[5,"Vector3D",4064],[5,"Length",4064],[5,"Point3D",4064],[5,"Scale",4064],[5,"SideOffsets2D",4064],[5,"Translation2D",4064],[5,"Translation3D",4064],[5,"BoolVector2D",4064],[5,"BoolVector3D",4064],[5,"Transform3D",4064],[5,"Rotation3D",4064],[5,"Rect",4064],[5,"Box3D",4064],[5,"Rotation2D",4064],[5,"RigidTransform3D",4064],[10,"Ceil",6163],[10,"One",6163],[5,"HomogeneousVector",4064],[10,"Zero",6163],[10,"Euclid",12908],[10,"Floor",6163],[10,"Round",6163],[10,"Saturating",12909],[5,"FlatteningParameters",6173],[5,"FromPolyline",6312],[10,"PathIterator",7067],[5,"Flattened",6312],[5,"Transformed",6312],[5,"BuilderWithAttributes",6760],[5,"IterBridge",12910],[5,"Icon",7136],[6,"LineHeight",11035],[6,"Shaping",11035],[5,"Icon",11594],[6,"Horizontal",12911],[6,"Vertical",12911],[5,"Id",7430],[5,"Linear",12897],[6,"Cow",12912],[5,"Handle",7594],[6,"FilterMethod",7594],[6,"ContentFit",12913],[6,"Data",12914],[17,"Handle"],[10,"Renderer",12914],[5,"PathBuf",12915],[10,"AsRef",12853],[10,"Send",12874],[10,"Sync",12874],[5,"Viewer",7740],[5,"State",7740],[6,"Alignment",12911],[5,"State",7894],[5,"Menu",7894],[5,"TitleBar",8022],[10,"Draggable",8022],[5,"Content",8022],[5,"PaneGrid",8022],[10,"Catalog",8022],[6,"Axis",8022],[6,"Configuration",8022],[6,"Direction",8022],[6,"Node",8022],[5,"Pane",8022],[5,"Split",8022],[6,"DragEvent",8022],[6,"Target",8022],[6,"Region",8022],[6,"Edge",8022],[5,"ResizeEvent",8022],[5,"Highlight",8022],[5,"Line",8022],[6,"Contents",8022],[5,"State",8820],[5,"BTreeMap",12916],[5,"Internal",8820],[6,"Action",8820],[8,"FxHashMap",12917],[6,"Handle",8968],[5,"Icon",8968],[6,"Version",9302],[6,"ErrorCorrection",9302],[6,"Error",9302],[8,"Renderer",0],[6,"QrError",12918],[6,"FillMode",9717],[5,"Viewport",9849],[5,"AbsoluteOffset",9849],[5,"Properties",9849],[6,"Alignment",9849],[5,"RelativeOffset",9849],[6,"Direction",9849],[5,"Id",9849],[5,"Scrollbar",9849],[5,"Scroller",9849],[5,"Viewport",10398],[6,"Event",10398],[5,"Storage",10398],[17,"Primitive"],[10,"Primitive",10398],[10,"Renderer",12919],[5,"Device",12920],[5,"Queue",12920],[6,"TextureFormat",12921],[5,"Transformation",12922],[5,"CommandEncoder",12920],[5,"TextureView",12920],[5,"Rail",10582],[5,"Handle",10582],[6,"HandleShape",10582],[10,"FromPrimitive",12901],[6,"Data",12923],[10,"Renderer",12923],[8,"StyleFn",10850],[5,"State",11035],[10,"Paragraph",12924],[10,"Highlighter",12890],[6,"Action",11222],[6,"Edit",11222],[6,"Motion",11222],[6,"Direction",12925],[5,"State",11222],[17,"Target"],[10,"Deref",12926],[5,"Value",11594],[6,"Side",11594],[5,"Id",11594],[5,"State",11594],[5,"Cursor",11995],[6,"State",11995],[5,"Custom",12079],[5,"Pair",12214],[5,"Background",12214],[5,"Primary",12214],[5,"Secondary",12214],[5,"Success",12214],[5,"Danger",12214],[8,"PathEvent",1295],[8,"IdEvent",1295],[15,"Begin",2210],[15,"End",2210],[15,"Quadratic",2210],[15,"Cubic",2210],[15,"Line",2210],[8,"Rotation",2788],[8,"Size",2788],[8,"Transform",2788],[8,"Box2D",2788],[8,"Translation",2788],[8,"Point",2788],[8,"Vector",2788],[8,"Rotation2D",6080],[8,"SideOffsets2D",6080],[8,"Size3D",6080],[8,"Rotation3D",6080],[8,"Transform2D",6080],[8,"Transform3D",6080],[8,"Box3D",6080],[8,"Rect",6080],[8,"RigidTransform3D",6080],[8,"HomogeneousVector",6080],[8,"Point3D",6080],[8,"Vector3D",6080],[8,"Translation2D",6080],[8,"Translation3D",6080],[8,"Rotation",6466],[8,"Size",6466],[8,"Transform",6466],[8,"Box2D",6466],[8,"Angle",6466],[8,"Point",6466],[8,"Vector",6466],[8,"Translation",6466],[15,"Active",7329],[15,"Hovered",7329],[15,"Disabled",7329],[15,"Split",8807],[15,"Picked",8811],[15,"Dropped",8811],[15,"Canceled",8811],[15,"Split",8815],[15,"Resizing",8964],[15,"Dragging",8964],[15,"Dynamic",9206],[15,"Arrow",9206],[15,"Active",9715],[15,"Hovered",9715],[15,"Both",10392],[15,"Dragged",10394],[15,"Hovered",10394],[15,"Rectangle",10847],[15,"Circle",10847],[8,"Fragment",11035],[15,"Scroll",11593],[15,"Selection",12077],[15,"Active",12691],[15,"Hovered",12691]],"b":[[105,"impl-Catalog-for-Theme"],[106,"impl-Catalog-for-Theme"],[107,"impl-Default-for-Theme"],[108,"impl-Catalog-for-Theme"],[109,"impl-Catalog-for-Theme"],[110,"impl-Catalog-for-Theme"],[111,"impl-Catalog-for-Theme"],[112,"impl-Catalog-for-Theme"],[113,"impl-Catalog-for-Theme"],[114,"impl-Catalog-for-Theme"],[115,"impl-Catalog-for-Theme"],[116,"impl-Catalog-for-Theme"],[117,"impl-Catalog-for-Theme"],[118,"impl-Catalog-for-Theme"],[119,"impl-Catalog-for-Theme"],[120,"impl-Catalog-for-Theme"],[121,"impl-Catalog-for-Theme"],[122,"impl-Catalog-for-Theme"],[140,"impl-Debug-for-Theme"],[141,"impl-Display-for-Theme"],[239,"impl-Catalog-for-Theme"],[240,"impl-Catalog-for-Theme"],[241,"impl-Catalog-for-Theme"],[242,"impl-Catalog-for-Theme"],[243,"impl-Catalog-for-Theme"],[244,"impl-Catalog-for-Theme"],[245,"impl-Catalog-for-Theme"],[246,"impl-Catalog-for-Theme"],[247,"impl-Catalog-for-Theme"],[248,"impl-Catalog-for-Theme"],[249,"impl-Catalog-for-Theme"],[250,"impl-Catalog-for-Theme"],[251,"impl-Catalog-for-Theme"],[252,"impl-Catalog-for-Theme"],[253,"impl-Catalog-for-Theme"],[254,"impl-Catalog-for-Theme"],[255,"impl-Catalog-for-Theme"],[656,"impl-From%3CGradient%3E-for-Fill"],[657,"impl-From%3CColor%3E-for-Fill"],[658,"impl-From%3CLinear%3E-for-Fill"],[665,"impl-From%3CColor%3E-for-Style"],[666,"impl-From%3CGradient%3E-for-Style"],[669,"impl-From%3CString%3E-for-Text"],[670,"impl-From%3C%26str%3E-for-Text"],[1773,"impl-Index%3CControlPointId%3E-for-Path"],[1774,"impl-Index%3CEndpointId%3E-for-Path"],[1775,"impl-Index%3CEndpointId%3E-for-PathSlice%3C\'l%3E"],[1776,"impl-Index%3CControlPointId%3E-for-PathSlice%3C\'l%3E"],[1934,"impl-IntoIterator-for-PathSlice%3C\'l%3E"],[1935,"impl-IntoIterator-for-%26PathSlice%3C\'l%3E"],[2304,"impl-NoAttributes%3CB%3E"],[2305,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2319,"impl-Flattened%3CBuilder%3E"],[2320,"impl-Build-for-Flattened%3CBuilder%3E"],[2322,"impl-WithSvg%3CBuilder%3E"],[2323,"impl-Build-for-WithSvg%3CBuilder%3E"],[2324,"impl-NoAttributes%3CB%3E"],[2325,"impl-Build-for-NoAttributes%3CB%3E"],[2332,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2333,"impl-WithSvg%3CBuilder%3E"],[2344,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2345,"impl-WithSvg%3CBuilder%3E"],[2346,"impl-NoAttributes%3CB%3E"],[2347,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2374,"impl-NoAttributes%3CB%3E"],[2375,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2383,"impl-Display-for-BorderRadii"],[2384,"impl-Debug-for-BorderRadii"],[2457,"impl-WithSvg%3CBuilder%3E"],[2458,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2459,"impl-NoAttributes%3CB%3E"],[2460,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2462,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2463,"impl-WithSvg%3CBuilder%3E"],[2482,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2483,"impl-WithSvg%3CBuilder%3E"],[2484,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2485,"impl-NoAttributes%3CB%3E"],[2504,"impl-WithSvg%3CBuilder%3E"],[2505,"impl-SvgPathBuilder-for-WithSvg%3CBuilder%3E"],[2506,"impl-PathBuilder-for-NoAttributes%3CB%3E"],[2507,"impl-NoAttributes%3CB%3E"],[2681,"impl-Index%3CEndpointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[2682,"impl-Index%3CControlPointId%3E-for-CommandsPathSlice%3C\'l,+Endpoint,+ControlPoint%3E"],[2838,"impl-Add%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[2839,"impl-Add-for-Angle%3CT%3E"],[2842,"impl-Arc%3CS%3E"],[2843,"impl-Segment-for-Arc%3CS%3E"],[2844,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2845,"impl-CubicBezierSegment%3CS%3E"],[2846,"impl-Segment-for-LineSegment%3CS%3E"],[2847,"impl-LineSegment%3CS%3E"],[2848,"impl-QuadraticBezierSegment%3CS%3E"],[2849,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2855,"impl-Arc%3CS%3E"],[2856,"impl-Segment-for-Arc%3CS%3E"],[2857,"impl-CubicBezierSegment%3CS%3E"],[2858,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2905,"impl-Segment-for-Arc%3CS%3E"],[2906,"impl-Arc%3CS%3E"],[2907,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[2908,"impl-CubicBezierSegment%3CS%3E"],[2909,"impl-LineSegment%3CS%3E"],[2910,"impl-Segment-for-LineSegment%3CS%3E"],[2911,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[2912,"impl-QuadraticBezierSegment%3CS%3E"],[3014,"impl-CubicBezierSegment%3CS%3E"],[3015,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3017,"impl-QuadraticBezierSegment%3CS%3E"],[3018,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3023,"impl-Div%3CT%3E-for-Angle%3CT%3E"],[3024,"impl-Div-for-Angle%3CT%3E"],[3048,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3049,"impl-CubicBezierSegment%3CS%3E"],[3051,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3052,"impl-QuadraticBezierSegment%3CS%3E"],[3054,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3055,"impl-CubicBezierSegment%3CS%3E"],[3057,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3058,"impl-QuadraticBezierSegment%3CS%3E"],[3094,"impl-Segment-for-Arc%3CS%3E"],[3095,"impl-Arc%3CS%3E"],[3096,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3097,"impl-CubicBezierSegment%3CS%3E"],[3098,"impl-LineSegment%3CS%3E"],[3099,"impl-Segment-for-LineSegment%3CS%3E"],[3100,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3101,"impl-QuadraticBezierSegment%3CS%3E"],[3118,"impl-Segment-for-Arc%3CS%3E"],[3119,"impl-Arc%3CS%3E"],[3121,"impl-CubicBezierSegment%3CS%3E"],[3122,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3124,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3125,"impl-QuadraticBezierSegment%3CS%3E"],[3154,"impl-Segment-for-Arc%3CS%3E"],[3155,"impl-From%3CSvgArc%3CS%3E%3E-for-Arc%3CS%3E"],[3156,"impl-Arc%3CS%3E"],[3159,"impl-CubicBezierSegment%3CS%3E"],[3160,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3162,"impl-LineSegment%3CS%3E"],[3163,"impl-Segment-for-LineSegment%3CS%3E"],[3166,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3167,"impl-QuadraticBezierSegment%3CS%3E"],[3355,"impl-Arc%3CS%3E"],[3356,"impl-Segment-for-Arc%3CS%3E"],[3357,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3358,"impl-CubicBezierSegment%3CS%3E"],[3359,"impl-LineSegment%3CS%3E"],[3360,"impl-Segment-for-LineSegment%3CS%3E"],[3361,"impl-QuadraticBezierSegment%3CS%3E"],[3362,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3379,"impl-Arc%3CS%3E"],[3380,"impl-Segment-for-Arc%3CS%3E"],[3381,"impl-CubicBezierSegment%3CS%3E"],[3382,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3383,"impl-LineSegment%3CS%3E"],[3384,"impl-Segment-for-LineSegment%3CS%3E"],[3385,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3386,"impl-QuadraticBezierSegment%3CS%3E"],[3389,"impl-Arc%3CS%3E"],[3390,"impl-Segment-for-Arc%3CS%3E"],[3391,"impl-CubicBezierSegment%3CS%3E"],[3392,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3393,"impl-LineSegment%3CS%3E"],[3394,"impl-Segment-for-LineSegment%3CS%3E"],[3395,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3396,"impl-QuadraticBezierSegment%3CS%3E"],[3404,"impl-Sum%3C%26Angle%3CT%3E%3E-for-Angle%3CT%3E"],[3405,"impl-Sum-for-Angle%3CT%3E"],[3410,"impl-Segment-for-Arc%3CS%3E"],[3411,"impl-Arc%3CS%3E"],[3412,"impl-CubicBezierSegment%3CS%3E"],[3413,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3414,"impl-LineSegment%3CS%3E"],[3415,"impl-Segment-for-LineSegment%3CS%3E"],[3416,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3417,"impl-QuadraticBezierSegment%3CS%3E"],[3546,"impl-Segment-for-Arc%3CS%3E"],[3547,"impl-Arc%3CS%3E"],[3548,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3549,"impl-CubicBezierSegment%3CS%3E"],[3550,"impl-Segment-for-LineSegment%3CS%3E"],[3551,"impl-LineSegment%3CS%3E"],[3552,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3553,"impl-QuadraticBezierSegment%3CS%3E"],[3564,"impl-Arc%3CS%3E"],[3565,"impl-Segment-for-Arc%3CS%3E"],[3566,"impl-Segment-for-CubicBezierSegment%3CS%3E"],[3567,"impl-CubicBezierSegment%3CS%3E"],[3568,"impl-LineSegment%3CS%3E"],[3569,"impl-Segment-for-LineSegment%3CS%3E"],[3570,"impl-Segment-for-QuadraticBezierSegment%3CS%3E"],[3571,"impl-QuadraticBezierSegment%3CS%3E"],[3742,"impl-PartialEq-for-ArrayVec%3CT,+CAP%3E"],[3743,"impl-PartialEq%3C%5BT%5D%3E-for-ArrayVec%3CT,+CAP%3E"],[3744,"impl-PartialEq%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3745,"impl-PartialEq-for-ArrayString%3CCAP%3E"],[3760,"impl-Debug-for-ArrayString%3CCAP%3E"],[3761,"impl-Display-for-ArrayString%3CCAP%3E"],[3762,"impl-Display-for-CapacityError%3CT%3E"],[3763,"impl-Debug-for-CapacityError%3CT%3E"],[3785,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3786,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3790,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3791,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3837,"impl-IntoIterator-for-ArrayVec%3CT,+CAP%3E"],[3838,"impl-IntoIterator-for-%26mut+ArrayVec%3CT,+CAP%3E"],[3839,"impl-IntoIterator-for-%26ArrayVec%3CT,+CAP%3E"],[3852,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3853,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3857,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3858,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3871,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[3872,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[3915,"impl-TryFrom%3C%26str%3E-for-ArrayString%3CCAP%3E"],[3916,"impl-TryFrom%3CArguments%3C\'a%3E%3E-for-ArrayString%3CCAP%3E"],[4116,"impl-Add%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[4117,"impl-Add-for-Length%3CT,+U%3E"],[4118,"impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4119,"impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4120,"impl-Add%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4121,"impl-Add%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4124,"impl-Add-for-Size2D%3CT,+U%3E"],[4125,"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[4126,"impl-Add%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[4127,"impl-Add-for-Size3D%3CT,+U%3E"],[4130,"impl-Add-for-Vector2D%3CT,+U%3E"],[4131,"impl-Add%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[4132,"impl-Add%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[4133,"impl-Add-for-Vector3D%3CT,+U%3E"],[4135,"impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4136,"impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4137,"impl-AddAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4138,"impl-AddAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4172,"impl-ApproxEq%3CT%3E-for-Transform2D%3CT,+Src,+Dst%3E"],[4173,"impl-Transform2D%3CT,+Src,+Dst%3E"],[4174,"impl-ApproxEq%3CT%3E-for-Transform3D%3CT,+Src,+Dst%3E"],[4175,"impl-Transform3D%3CT,+Src,+Dst%3E"],[4355,"impl-Ceil-for-Point2D%3CT,+U%3E"],[4356,"impl-Point2D%3CT,+U%3E"],[4357,"impl-Ceil-for-Point3D%3CT,+U%3E"],[4358,"impl-Point3D%3CT,+U%3E"],[4359,"impl-Size2D%3CT,+U%3E"],[4360,"impl-Ceil-for-Size2D%3CT,+U%3E"],[4361,"impl-Size3D%3CT,+U%3E"],[4362,"impl-Ceil-for-Size3D%3CT,+U%3E"],[4363,"impl-Vector2D%3CT,+U%3E"],[4364,"impl-Ceil-for-Vector2D%3CT,+U%3E"],[4365,"impl-Vector3D%3CT,+U%3E"],[4366,"impl-Ceil-for-Vector3D%3CT,+U%3E"],[4541,"impl-Div%3CT%3E-for-Box2D%3CT,+U%3E"],[4542,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U2%3E"],[4543,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U2%3E"],[4544,"impl-Div%3CT%3E-for-Box3D%3CT,+U%3E"],[4545,"impl-Div%3CT%3E-for-Length%3CT,+U%3E"],[4546,"impl-Div%3CLength%3CT,+Src%3E%3E-for-Length%3CT,+Dst%3E"],[4547,"impl-Div%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Dst%3E"],[4548,"impl-Div%3CT%3E-for-Point2D%3CT,+U%3E"],[4549,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E"],[4550,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U2%3E"],[4551,"impl-Div%3CT%3E-for-Point3D%3CT,+U%3E"],[4552,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U2%3E"],[4553,"impl-Div%3CT%3E-for-Rect%3CT,+U%3E"],[4554,"impl-Div%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[4555,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U2%3E"],[4556,"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E"],[4557,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E"],[4558,"impl-Div%3CT%3E-for-Size3D%3CT,+U%3E"],[4559,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U2%3E"],[4560,"impl-Div%3CT%3E-for-Vector2D%3CT,+U%3E"],[4561,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U2%3E"],[4562,"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U2%3E"],[4563,"impl-Div%3CT%3E-for-Vector3D%3CT,+U%3E"],[4564,"impl-DivAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[4565,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[4566,"impl-DivAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[4567,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[4569,"impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[4570,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[4571,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[4572,"impl-DivAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[4573,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[4574,"impl-DivAssign%3CT%3E-for-Rect%3CT,+U%3E"],[4575,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[4576,"impl-DivAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[4577,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[4578,"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[4579,"impl-DivAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[4580,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[4581,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[4582,"impl-DivAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[4583,"impl-DivAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[4584,"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[4735,"impl-Floor-for-Point2D%3CT,+U%3E"],[4736,"impl-Point2D%3CT,+U%3E"],[4737,"impl-Floor-for-Point3D%3CT,+U%3E"],[4738,"impl-Point3D%3CT,+U%3E"],[4739,"impl-Floor-for-Size2D%3CT,+U%3E"],[4740,"impl-Size2D%3CT,+U%3E"],[4741,"impl-Size3D%3CT,+U%3E"],[4742,"impl-Floor-for-Size3D%3CT,+U%3E"],[4743,"impl-Vector2D%3CT,+U%3E"],[4744,"impl-Floor-for-Vector2D%3CT,+U%3E"],[4745,"impl-Floor-for-Vector3D%3CT,+U%3E"],[4746,"impl-Vector3D%3CT,+U%3E"],[4773,"impl-From%3CVector2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4775,"impl-From%3CPoint2D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4776,"impl-From%3CPoint3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4777,"impl-From%3CVector3D%3CT,+U%3E%3E-for-HomogeneousVector%3CT,+U%3E"],[4779,"impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[4780,"impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[4782,"impl-From%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[4784,"impl-From%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[4792,"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[4793,"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[4794,"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[4795,"impl-From%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[4797,"impl-From%3CVector3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[4798,"impl-From%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[4805,"impl-From%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[4807,"impl-From%3CSize2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[4808,"impl-From%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[4809,"impl-From%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[4810,"impl-From%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[4812,"impl-From%3CVector3D%3CT,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[4813,"impl-From%3CRotation3D%3CT,+Src,+Dst%3E%3E-for-RigidTransform3D%3CT,+Src,+Dst%3E"],[5013,"impl-Into%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E"],[5014,"impl-Into%3C(T,+T)%3E-for-Point2D%3CT,+U%3E"],[5017,"impl-Into%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E"],[5018,"impl-Into%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E"],[5024,"impl-Into%3C(T,+T)%3E-for-Size2D%3CT,+U%3E"],[5025,"impl-Into%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E"],[5027,"impl-Into%3C%5BT;+3%5D%3E-for-Size3D%3CT,+U%3E"],[5029,"impl-Into%3C(T,+T,+T)%3E-for-Size3D%3CT,+U%3E"],[5032,"impl-Into%3CVector2D%3CT,+Src%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[5034,"impl-Into%3CTransform2D%3CT,+Src,+Dst%3E%3E-for-Translation2D%3CT,+Src,+Dst%3E"],[5035,"impl-Into%3CTransform3D%3CT,+Src,+Dst%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[5037,"impl-Into%3CVector3D%3CT,+Src%3E%3E-for-Translation3D%3CT,+Src,+Dst%3E"],[5038,"impl-Into%3C(T,+T)%3E-for-Vector2D%3CT,+U%3E"],[5039,"impl-Into%3C%5BT;+2%5D%3E-for-Vector2D%3CT,+U%3E"],[5041,"impl-Into%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E"],[5042,"impl-Into%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E"],[5312,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box2D%3CT,+U1%3E"],[5313,"impl-Mul%3CT%3E-for-Box2D%3CT,+U%3E"],[5314,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Box3D%3CT,+U1%3E"],[5315,"impl-Mul%3CT%3E-for-Box3D%3CT,+U%3E"],[5316,"impl-Mul%3CT%3E-for-Length%3CT,+U%3E"],[5317,"impl-Mul%3CScale%3CT,+Src,+Dst%3E%3E-for-Length%3CT,+Src%3E"],[5318,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E"],[5319,"impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E"],[5320,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U1%3E"],[5321,"impl-Mul%3CT%3E-for-Point3D%3CT,+U%3E"],[5322,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Rect%3CT,+U1%3E"],[5323,"impl-Mul%3CT%3E-for-Rect%3CT,+U%3E"],[5325,"impl-Mul%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[5326,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-SideOffsets2D%3CT,+U1%3E"],[5327,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E"],[5328,"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E"],[5329,"impl-Mul%3CT%3E-for-Size3D%3CT,+U%3E"],[5330,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size3D%3CT,+U1%3E"],[5331,"impl-Mul%3CT%3E-for-Vector2D%3CT,+U%3E"],[5332,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector2D%3CT,+U1%3E"],[5333,"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U1%3E"],[5334,"impl-Mul%3CT%3E-for-Vector3D%3CT,+U%3E"],[5335,"impl-MulAssign%3CT%3E-for-Box2D%3CT,+U%3E"],[5336,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box2D%3CT,+U%3E"],[5337,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Box3D%3CT,+U%3E"],[5338,"impl-MulAssign%3CT%3E-for-Box3D%3CT,+U%3E"],[5340,"impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E"],[5341,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5342,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5343,"impl-MulAssign%3CT%3E-for-Point3D%3CT,+U%3E"],[5344,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Rect%3CT,+U%3E"],[5345,"impl-MulAssign%3CT%3E-for-Rect%3CT,+U%3E"],[5346,"impl-MulAssign%3CT%3E-for-SideOffsets2D%3CT,+U%3E"],[5347,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-SideOffsets2D%3CT,+U%3E"],[5348,"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E"],[5349,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E"],[5350,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size3D%3CT,+U%3E"],[5351,"impl-MulAssign%3CT%3E-for-Size3D%3CT,+U%3E"],[5352,"impl-MulAssign%3CT%3E-for-Vector2D%3CT,+U%3E"],[5353,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[5354,"impl-MulAssign%3CT%3E-for-Vector3D%3CT,+U%3E"],[5355,"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[5467,"impl-Point2D%3CT,+U%3E"],[5468,"impl-Round-for-Point2D%3CT,+U%3E"],[5469,"impl-Point3D%3CT,+U%3E"],[5470,"impl-Round-for-Point3D%3CT,+U%3E"],[5472,"impl-Round-for-Size2D%3CT,+U%3E"],[5473,"impl-Size2D%3CT,+U%3E"],[5474,"impl-Round-for-Size3D%3CT,+U%3E"],[5475,"impl-Size3D%3CT,+U%3E"],[5476,"impl-Vector2D%3CT,+U%3E"],[5477,"impl-Round-for-Vector2D%3CT,+U%3E"],[5478,"impl-Vector3D%3CT,+U%3E"],[5479,"impl-Round-for-Vector3D%3CT,+U%3E"],[5520,"impl-Sub-for-Point2D%3CT,+U%3E"],[5521,"impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5522,"impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5523,"impl-Sub%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5524,"impl-Sub-for-Point3D%3CT,+U%3E"],[5525,"impl-Sub%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5535,"impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5536,"impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E"],[5537,"impl-SubAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5538,"impl-SubAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E"],[5546,"impl-Sum-for-Length%3CT,+U%3E"],[5547,"impl-Sum%3C%26Length%3CT,+U%3E%3E-for-Length%3CT,+U%3E"],[5548,"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E"],[5549,"impl-Sum-for-Size2D%3CT,+U%3E"],[5550,"impl-Sum-for-Size3D%3CT,+U%3E"],[5551,"impl-Sum%3C%26Size3D%3CT,+U%3E%3E-for-Size3D%3CT,+U%3E"],[5552,"impl-Sum%3C%26Vector2D%3CT,+U%3E%3E-for-Vector2D%3CT,+U%3E"],[5553,"impl-Sum-for-Vector2D%3CT,+U%3E"],[5554,"impl-Sum-for-Vector3D%3CT,+U%3E"],[5555,"impl-Sum%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E"],[5726,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[5727,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5728,"impl-Scale%3CT,+Src,+Dst%3E"],[5729,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[5730,"impl-Transform2D%3CT,+Src,+Dst%3E"],[5731,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5732,"impl-Translation2D%3CT,+Src,+Dst%3E"],[5733,"impl-Transformation%3CS%3E-for-Translation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5749,"impl-Rotation2D%3CT,+Src,+Dst%3E"],[5750,"impl-Transformation%3CS%3E-for-Rotation2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[5751,"impl-Transformation%3CS%3E-for-Scale%3CS,+UnknownUnit,+UnknownUnit%3E"],[5752,"impl-Scale%3CT,+Src,+Dst%3E"],[5753,"impl-Transform2D%3CT,+Src,+Dst%3E"],[5754,"impl-Transformation%3CS%3E-for-Transform2D%3CS,+UnknownUnit,+UnknownUnit%3E"],[6060,"impl-Point2D%3CT,+U%3E"],[6061,"impl-Zero-for-Point2D%3CT,+U%3E"],[6062,"impl-Point3D%3CT,+U%3E"],[6063,"impl-Zero-for-Point3D%3CT,+U%3E"],[6066,"impl-Zero-for-Size2D%3CT,+U%3E"],[6067,"impl-Size2D%3CT,+U%3E"],[6068,"impl-Zero-for-Size3D%3CT,+U%3E"],[6069,"impl-Size3D%3CT,+U%3E"],[6070,"impl-Vector2D%3CT,+U%3E"],[6071,"impl-Zero-for-Vector2D%3CT,+U%3E"],[6072,"impl-Zero-for-Vector3D%3CT,+U%3E"],[6073,"impl-Vector3D%3CT,+U%3E"],[6536,"impl-BuilderWithAttributes"],[6537,"impl-PathBuilder-for-BuilderWithAttributes"],[6551,"impl-Build-for-BuilderWithAttributes"],[6552,"impl-BuilderWithAttributes"],[6570,"impl-BuilderWithAttributes"],[6571,"impl-PathBuilder-for-BuilderWithAttributes"],[6598,"impl-BuilderWithAttributes"],[6599,"impl-PathBuilder-for-BuilderWithAttributes"],[6680,"impl-BuilderWithAttributes"],[6681,"impl-PathBuilder-for-BuilderWithAttributes"],[6690,"impl-PathBuilder-for-BuilderWithAttributes"],[6691,"impl-BuilderWithAttributes"],[6694,"impl-BuilderWithAttributes"],[6695,"impl-PathBuilder-for-BuilderWithAttributes"],[6697,"impl-PathBuilder-for-BuilderWithAttributes"],[6698,"impl-BuilderWithAttributes"],[6780,"impl-Builder%3C\'l%3E"],[6781,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6782,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6783,"impl-BuilderWithAttributes%3C\'l%3E"],[6790,"impl-Build-for-Builder%3C\'l%3E"],[6791,"impl-Builder%3C\'l%3E"],[6792,"impl-BuilderWithAttributes%3C\'l%3E"],[6793,"impl-Build-for-BuilderWithAttributes%3C\'l%3E"],[6799,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6800,"impl-Builder%3C\'l%3E"],[6801,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6802,"impl-BuilderWithAttributes%3C\'l%3E"],[6815,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6816,"impl-Builder%3C\'l%3E"],[6817,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6818,"impl-BuilderWithAttributes%3C\'l%3E"],[6856,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6857,"impl-Builder%3C\'l%3E"],[6858,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6859,"impl-BuilderWithAttributes%3C\'l%3E"],[6865,"impl-Builder%3C\'l%3E"],[6866,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6867,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6868,"impl-BuilderWithAttributes%3C\'l%3E"],[6869,"impl-PathBuilder-for-Builder%3C\'l%3E"],[6870,"impl-Builder%3C\'l%3E"],[6871,"impl-PathBuilder-for-BuilderWithAttributes%3C\'l%3E"],[6872,"impl-BuilderWithAttributes%3C\'l%3E"],[7276,"impl-Checkbox%3C\'a,+Message,+Theme,+Renderer%3E"],[7277,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Checkbox%3C\'a,+Message,+Theme,+Renderer%3E"],[7405,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-ComboBox%3C\'a,+T,+Message,+Theme,+Renderer%3E"],[7406,"impl-ComboBox%3C\'a,+T,+Message,+Theme,+Renderer%3E"],[7499,"impl-From%3CGradient%3E-for-Style"],[7501,"impl-From%3CColor%3E-for-Style"],[7502,"impl-From%3CLinear%3E-for-Style"],[9425,"impl-Debug-for-Error"],[9426,"impl-Display-for-Error"],[9674,"impl-Radio%3C\'a,+Message,+Theme,+Renderer%3E"],[9675,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Radio%3C\'a,+Message,+Theme,+Renderer%3E"],[11123,"impl-From%3Cf32%3E-for-LineHeight"],[11124,"impl-From%3CPixels%3E-for-LineHeight"],[11506,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextEditor%3C\'a,+Highlighter,+Message,+Theme,+Renderer%3E"],[11507,"impl-TextEditor%3C\'a,+Highlighter,+Message,+Theme,+Renderer%3E"],[11725,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11726,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11743,"impl-Display-for-Value"],[11744,"impl-Debug-for-Value"],[11752,"impl-Focusable-for-State%3CP%3E"],[11753,"impl-State%3CP%3E"],[11860,"impl-Focusable-for-State%3CP%3E"],[11861,"impl-State%3CP%3E"],[11862,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11863,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11868,"impl-State%3CP%3E"],[11869,"impl-TextInput-for-State%3CP%3E"],[11871,"impl-TextInput-for-State%3CP%3E"],[11872,"impl-State%3CP%3E"],[11874,"impl-State%3CP%3E"],[11875,"impl-TextInput-for-State%3CP%3E"],[11896,"impl-TextInput-for-State%3CP%3E"],[11897,"impl-State%3CP%3E"],[11900,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11901,"impl-TextInput%3C\'a,+Message,+Theme,+Renderer%3E"],[11973,"impl-Focusable-for-State%3CP%3E"],[11974,"impl-State%3CP%3E"],[12160,"impl-Debug-for-Custom"],[12161,"impl-Display-for-Custom"],[12650,"impl-Widget%3CMessage,+Theme,+Renderer%3E-for-Toggler%3C\'a,+Message,+Theme,+Renderer%3E"],[12651,"impl-Toggler%3C\'a,+Message,+Theme,+Renderer%3E"]]},\
"iced_winit":{"doc":"A windowing shell for Iced, on top of <code>winit</code>.","t":"EEGPPFEPNNCNNNNNNNNNNNNCNNNNCENNNNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNCNNNNENCNCNNNNNNNNNNNNNNNNNNNEFKKRFNNNNNNNNNNNONNNNHNNNNNHMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNHHHNNNNNNOMNMNNNNNNNNNNNNNNNHNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHEKERFNNNNNNNNHNNENNNNNNNNNNNNNNNNNNMNNHNNNNNNMNMNNNNNNNNHNNNFNNNNNNNNNNNNNNONONNNONNNNNNNNNNNNNNNNNNNOH","n":["Application","Clipboard","Error","ExecutorCreationFailed","GraphicsCreationFailed","Proxy","Settings","WindowCreationFailed","adapt_into_using","adapt_into_using","application","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clipboard","clone","clone_into","components_from","components_from","conversion","core","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","free_slots","from","from","from","from_angle","from_angle","from_stimulus","from_stimulus","futures","graphics","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","multi_window","new","poll_close","poll_flush","poll_ready","runtime","send","settings","start_send","system","to_owned","to_smolstr","to_string","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","vzip","vzip","winit","Appearance","Application","DefaultStyle","Flags","State","adapt_into_using","adapt_into_using","arrays_from","arrays_from","arrays_into","arrays_into","as_any","as_any","as_any_mut","as_any_mut","background_color","background_color","borrow","borrow","borrow_mut","borrow_mut","build_user_interface","clone","clone_into","components_from","components_from","cursor","default","default_style","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","from_angle","from_angle","from_stimulus","from_stimulus","init","init","into","into","into_angle","into_angle","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_color","into_color","into_color_unclamped","into_color_unclamped","into_stimulus","into_stimulus","logical_size","modifiers","new","new","physical_size","requests_exit","run","run_command","scale_factor","scale_factor","style","subscription","synchronize","text_color","text_color","theme","theme","title","to_owned","try_components_into","try_components_into","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","uints_from","uints_from","uints_into","uints_into","update","update","viewport","viewport_version","vzip","vzip","Clipboard","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","components_from","connect","deref","deref_mut","drop","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_rc","into_color","into_color_unclamped","into_stimulus","read","read","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","unconnected","vzip","write","write","cursor_position","fullscreen","icon","key","mode","modifiers","mouse_button","mouse_interaction","position","touch_event","user_attention","visible","window_event","window_level","window_settings","Appearance","Application","DefaultStyle","Flags","State","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","background_color","borrow","borrow_mut","build_user_interfaces","components_from","cursor","default","deref","deref_mut","drop","fmt","from","from_angle","from_stimulus","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","logical_size","modifiers","new","new","physical_size","run","scale_factor","scale_factor","style","subscription","synchronize","text_color","theme","theme","title","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","update","user_force_quit","viewport","viewport_version","vzip","Settings","adapt_into_using","arrays_from","arrays_into","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","components_from","default","deref","deref_mut","drop","flags","fmt","fonts","from","from_angle","from_stimulus","id","init","into","into_angle","into_any","into_any_arc","into_any_rc","into_color","into_color_unclamped","into_stimulus","null_value","to_owned","try_components_into","try_from","try_into","try_into_color","type_id","uints_from","uints_into","vzip","window","fetch_information"],"q":[[0,"iced_winit"],[97,"iced_winit::application"],[197,"iced_winit::clipboard"],[234,"iced_winit::conversion"],[249,"iced_winit::multi_window"],[309,"iced_winit::settings"],[351,"iced_winit::system"],[352,"palette::chromatic_adaptation"],[353,"core::any"],[354,"core::fmt"],[355,"core::fmt"],[356,"alloc::boxed"],[357,"alloc::sync"],[358,"alloc::rc"],[359,"winit::event_loop"],[360,"core::future::future"],[361,"core::pin"],[362,"core::task::wake"],[363,"core::result"],[364,"core::task::poll"],[365,"smol_str"],[366,"alloc::string"],[367,"palette::convert::try_from_into_color"],[368,"core::any"],[369,"iced_runtime::user_interface"],[370,"iced_core::size"],[371,"iced_runtime::debug"],[372,"iced_runtime::user_interface"],[373,"iced_core::theme"],[374,"winit::keyboard"],[375,"iced_runtime::command"],[376,"winit::window"],[377,"winit::event"],[378,"iced_graphics::settings"],[379,"iced_futures::runtime"],[380,"iced_graphics::compositor"],[381,"iced_futures::executor"],[382,"iced_futures::subscription"],[383,"alloc::vec"],[384,"iced_graphics::viewport"],[385,"iced_core::clipboard"],[386,"core::option"],[387,"winit::dpi"],[388,"iced_core::point"],[389,"winit::monitor"],[390,"iced_core::window::mode"],[391,"winit::window"],[392,"winit::icon"],[393,"winit::keyboard"],[394,"iced_core::keyboard::modifiers"],[395,"winit::event"],[396,"iced_core::mouse::interaction"],[397,"cursor_icon"],[398,"iced_core::window::position"],[399,"winit::dpi"],[400,"iced_core::window::user_attention"],[401,"winit::window"],[402,"iced_core::event"],[403,"iced_core::window::level"],[404,"winit::window"],[405,"winit::window"],[406,"core::clone"],[407,"core::default"],[408,"iced_runtime::system::information"],[409,"core::ops::function"],[410,"core::marker"]],"d":["","","An error that occurred while running an application.","The futures executor could not be created.","The application graphics context could not be created.","An event loop proxy with backpressure that implements <code>Sink</code>.","","The application window could not be created.","","","Create interactive, native cross-platform applications.","","","","","","","","","","","","","Access the clipboard.","","","","","Convert <code>winit</code> types into <code>iced_runtime</code> types, and viceversa.","","","","","","","","","","","Frees an amount of slots for additional messages to be …","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Create interactive, native cross-platform applications for …","Creates a new <code>Proxy</code> from an <code>EventLoopProxy</code>.","","","","","Sends a <code>Message</code> to the event loop.","Configure your application.","","Access the native system.","","","","","","","","","","","","","","","","","","","","","The appearance of an application.","An interactive, native cross-platform application.","The default style of an <code>Application</code>.","The data needed to initialize your <code>Application</code>.","The state of a windowed <code>Application</code>.","","","","","","","","","","","Returns the current background <code>Color</code> of the <code>State</code>.","The background <code>Color</code> of the application.","","","","","Builds a <code>UserInterface</code> for the provided <code>Application</code>, …","","","","","Returns the current cursor position of the <code>State</code>.","The default <code>Appearance</code> of an <code>Application</code> with the built-in …","Returns the default style of an <code>Application</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the logical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.","Returns the current keyboard modifiers of the <code>State</code>.","Initializes the <code>Application</code> with the flags provided to <code>run</code> …","Creates a new <code>State</code> for the provided <code>Application</code> and …","Returns the physical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.","Returns true if the provided event should cause an …","Runs an <code>Application</code> with an executor, compositor, and the …","Runs the actions of a <code>Command</code>.","Returns the current scale factor of the <code>Viewport</code> of the …","Returns the scale factor of the <code>Application</code>.","Returns the <code>Style</code> variation of the <code>Theme</code>.","Returns the event <code>Subscription</code> for the current state of the","Synchronizes the <code>State</code> with its <code>Application</code> and its …","Returns the current text <code>Color</code> of the <code>State</code>.","The default text <code>Color</code> of the application.","Returns the current <code>Theme</code> of the <code>Application</code>.","Returns the current theme of the <code>State</code>.","Returns the current title of the <code>Application</code>.","","","","","","","","","","","","","","","","Updates an <code>Application</code> by feeding it the provided …","Processes the provided window event and updates the <code>State</code> …","Returns the current <code>Viewport</code> of the <code>State</code>.","Returns the version of the <code>Viewport</code> of the <code>State</code>.","","","A buffer for short-term storage and transfer within and …","","","","","","","","","Creates a new <code>Clipboard</code> for the given window.","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Reads the current content of the <code>Clipboard</code> as text.","","","","","","","","","Creates a new <code>Clipboard</code> that isn’t associated with a …","","Writes the given text contents to the <code>Clipboard</code>.","","Converts a physical cursor position to a logical <code>Point</code>.","Converts a <code>window::Mode</code> to a <code>winit</code> fullscreen mode.","Converts some <code>window::Icon</code> into it’s <code>winit</code> counterpart.","Converts a <code>VirtualKeyCode</code> from <code>winit</code> to an <code>iced</code> key code.","Converts a <code>winit</code> fullscreen mode to a <code>window::Mode</code>.","Converts some <code>ModifiersState</code> from <code>winit</code> to an <code>iced</code> …","Converts a <code>MouseButton</code> from <code>winit</code> to an <code>iced</code> mouse button.","Converts a <code>mouse::Interaction</code> to a <code>winit</code> cursor icon.","Converts a <code>window::Position</code> to a <code>winit</code> logical position …","Converts a <code>Touch</code> from <code>winit</code> to an <code>iced</code> touch event.","Converts some <code>UserAttention</code> into it’s <code>winit</code> counterpart.","Converts a <code>window::Mode</code> to a visibility flag.","Converts a winit window event into an iced event.","Converts a <code>window::Level</code> to a <code>winit</code> window level.","Converts some <code>window::Settings</code> into a <code>WindowBuilder</code> from …","","An interactive, native, cross-platform, multi-windowed …","","The data needed to initialize your <code>Application</code>.","The state of a multi-windowed <code>Application</code>.","","","","","","Returns the current background <code>Color</code> of the <code>State</code>.","","","Build the user interface for every window.","","Returns the current cursor position of the <code>State</code>.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns the logical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.","Returns the current keyboard modifiers of the <code>State</code>.","Initializes the <code>Application</code> with the flags provided to <code>run</code> …","Creates a new <code>State</code> for the provided <code>Application</code>’s <code>window</code>…","Returns the physical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.","Runs an <code>Application</code> with an executor, compositor, and the …","Returns the current scale factor of the <code>Viewport</code> of the …","Returns the scale factor of the window of the <code>Application</code>.","Returns the <code>Style</code> variation of the <code>Theme</code>.","Returns the event <code>Subscription</code> for the current state of the","Synchronizes the <code>State</code> with its <code>Application</code> and its …","Returns the current text <code>Color</code> of the <code>State</code>.","Returns the current <code>Theme</code> of the <code>Application</code>.","Returns the current theme of the <code>State</code>.","Returns the current title of the <code>Application</code>.","","","","","","","","Processes the provided window event and updates the <code>State</code> …","Returns true if the provided event should cause an …","Returns the current <code>Viewport</code> of the <code>State</code>.","Returns the version of the <code>Viewport</code> of the <code>State</code>.","","The settings of an application.","","","","","","","","","","","","","","","The data needed to initialize an <code>Application</code>.","","The fonts to load on boot.","Returns the argument unchanged.","","","The identifier of the application.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The <code>window::Settings</code>.","Query for available system information."],"i":[0,0,0,6,6,0,0,6,6,3,0,6,3,6,3,6,3,6,3,6,3,6,3,0,3,3,6,3,0,0,6,3,6,3,6,3,6,6,3,3,6,6,3,6,3,6,3,0,0,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,0,3,3,3,3,0,3,0,3,0,3,6,6,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,0,0,0,0,27,0,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,0,32,32,25,32,25,0,35,25,32,25,32,25,32,32,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,25,25,27,25,25,0,0,0,25,27,27,27,25,25,32,27,25,27,32,25,32,25,32,25,32,25,32,25,32,25,32,25,32,0,25,25,25,25,32,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,0,84,84,84,84,84,84,84,84,0,84,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,85,84,84,0,84,85,85,85,84,84,85,84,85,84,84,84,84,84,84,84,84,0,84,84,84,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0],"f":[0,0,0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[3,[-1]]],[[3,[-1]]],[]],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,4],[5,4],[[6,7],8],[[6,7],8],[[[3,[-1]],7],8,9],[[[3,[-1]],5],4,[]],[-1,-1,[]],[10,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[14,[-1]]],[[4,[[3,[-1]],[0,[[16,[],[[15,[4]]]]]]]]],[]],[[[17,[[3,[-1]]]],18],[[20,[[19,[4,-2]]]]],[],[]],[[[17,[[3,[-1]]]],18],[[20,[[19,[4,-2]]]]],[],[]],[[[17,[[3,[-1]]]],18],[[20,[[19,[4,-2]]]]],[],[]],0,[[[3,[-1]],-1],4,9],0,[[[17,[[3,[-1]]]],-1],[[19,[4,-2]]],[],[]],0,[-1,-2,[],[]],[-1,21,[]],[-1,22,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[25,[-1]]],26,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28,29,30],31,27],[32,32],[[-1,-2],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],33,27],[34,32],[35,32],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,4],[5,4],[[32,32],36],[[32,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],[[29,[37]]],27],[[[25,[-1]]],38,27],[-1,[[4,[[27,[],[[39,[-1]]]],[40,[-2]]]]],[],[]],[[-1,41],[[25,[-1]]],27],[[[25,[-1]]],[[29,[42]]],27],[[43,38],36],[[44,45],[[19,[4,6]]]],[[-1,-2,28,[25,[-1]],40,[46,[-3,3]],47,36,3,30,41],4,27,[[49,[],[[48,[]]]]],50],[[[25,[-1]]],51,27],[[[27,[],[[39,[-1]]]]],51,[]],[[[27,[],[[39,[-1]]]],-2],32,[],[]],[[[27,[],[[39,[-1]]]]],[[52,[-2]]],[],[]],[[[25,[-1]],-1,41],4,27],[[[25,[-1]]],26,27],0,[[[27,[],[[39,[-1]]]]],-2,[],[]],[[[25,[-1]]],[],27],[[[27,[],[[39,[-1]]]]],22,[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,28,[25,[-1]],[46,[-3,3]],47,36,3,30,53,41],4,27,[[49,[],[[48,[]]]]],50],[[[25,[-1]],41,43,30],4,27],[[[25,[-1]]],54,27],[[[25,[-1]]],5,27],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,47],[5,-1,[]],[5,-1,[]],[5,4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,55],[[56,[22]]]],[[47,55],[[56,[22]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],47],[-1,-2,[],[]],[[47,55,22],4],[[47,55,22],4],[[[57,[51]],51],58],[[[56,[59]],60],[[56,[61]]]],[62,[[56,[63]]]],[64,65],[[[56,[61]]],60],[38,66],[67,68],[69,70],[[[56,[59]],29,71],[[56,[72]]]],[[73,51],74],[75,76],[60,36],[[77,43,51,38],[[56,[78]]]],[79,80],[[81,82,[56,[59]],[56,[22]]],83],0,0,0,0,0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[[[84,[-1]]],26,85],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,30,[0,[-1,-2]],[86,[77,28]]],[[86,[77,31]]],85,[[49,[],[[48,[]]]],49]],[-1,-2,[],[]],[[[84,[-1]]],33,85],0,[5,-1,[]],[5,-1,[]],[5,4],[[[84,[-1]],7],8,85],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]]],[[29,[37]]],85],[[[84,[-1]]],38,85],[-1,[[4,[[85,[],[[39,[-1]]]],[40,[-2]]]]],[],[]],[[-1,77,41],[[84,[-1]]],85],[[[84,[-1]]],[[29,[42]]],85],[[44,45],[[19,[4,6]]]],[[[84,[-1]]],51,85],[[[85,[],[[39,[-1]]]],77],51,[]],[[[85,[],[[39,[-1]]]],-2],32,[],[]],[[[85,[],[[39,[-1]]]]],[[52,[-2]]],[],[]],[[[84,[-1]],-1,77,41],4,85],[[[84,[-1]]],26,85],[[[85,[],[[39,[-1]]]],77],-2,[],[]],[[[84,[-1]]],[],85],[[[85,[],[[39,[-1]]]],77],22,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[84,[-1]],41,43,30],4,85],[[43,38],36],[[[84,[-1]]],54,85],[[[84,[-1]]],87,85],[-1,-2,[],[]],0,[[-1,-3],-4,[],[],[[1,[-2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],[[44,[-1]]],88],[[-1,-2],4,[],[]],[-1,-2,[],[]],[[],[[44,[-1]]],89],[5,-1,[]],[5,-1,[]],[5,4],0,[[[44,[-1]],7],8,9],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[11,[2]]],[]],[[[12,[-1]]],[[12,[2]]],[]],[[[13,[-1]]],[[13,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,[23,[-2]]]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-2,[[40,[-1]]],[],[[91,[90],[[15,[-1]]]],92]]],"c":[],"p":[[10,"TransformMatrix",352],[10,"Any",353],[5,"Proxy",0],[1,"tuple"],[1,"usize"],[6,"Error",0],[5,"Formatter",354],[8,"Result",354],[10,"Debug",354],[6,"Error",355],[5,"Box",356],[5,"Arc",357],[5,"Rc",358],[5,"EventLoopProxy",359],[17,"Output"],[10,"Future",360],[5,"Pin",361],[5,"Context",362],[6,"Result",363],[6,"Poll",364],[5,"SmolStr",365],[5,"String",366],[5,"OutOfBounds",367],[5,"TypeId",353],[5,"State",97],[5,"Color",368],[10,"Application",97],[5,"Cache",369],[5,"Size",370],[5,"Debug",371],[5,"UserInterface",369],[5,"Appearance",97],[6,"Cursor",372],[6,"Theme",373],[10,"DefaultStyle",97],[1,"bool"],[1,"f32"],[5,"ModifiersState",374],[17,"Flags"],[5,"Command",375],[5,"Window",376],[1,"u32"],[6,"WindowEvent",377],[5,"Settings",309],[5,"Settings",378],[5,"Runtime",379],[5,"Clipboard",197],[17,"Renderer"],[10,"Compositor",380],[10,"Executor",381],[1,"f64"],[5,"Subscription",382],[5,"Vec",383],[5,"Viewport",384],[6,"Kind",385],[6,"Option",386],[5,"PhysicalPosition",387],[5,"Point",388],[5,"MonitorHandle",389],[6,"Mode",390],[6,"Fullscreen",376],[5,"Icon",391],[5,"Icon",392],[6,"Key",374],[6,"Key",393],[5,"Modifiers",394],[6,"MouseButton",377],[6,"Button",395],[6,"Interaction",396],[6,"CursorIcon",397],[6,"Position",398],[6,"Position",387],[5,"Touch",377],[6,"Event",399],[6,"UserAttention",400],[6,"UserAttentionType",376],[5,"Id",401],[6,"Event",402],[6,"Level",403],[6,"WindowLevel",376],[5,"Settings",404],[1,"str"],[5,"WindowBuilder",376],[5,"State",249],[10,"Application",249],[8,"FxHashMap",405],[1,"u64"],[10,"Clone",406],[10,"Default",407],[5,"Information",408],[10,"Fn",409],[10,"Send",410]],"b":[[36,"impl-Debug-for-Error"],[37,"impl-Display-for-Error"],[221,"impl-Clipboard"],[222,"impl-Clipboard-for-Clipboard"],[232,"impl-Clipboard"],[233,"impl-Clipboard-for-Clipboard"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
