searchState.loadedDescShard("iced", 3, "Calls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllow the acceleration structure to be compacted in a copy …\nAllow for incremental updates (no change in size)\n<code>offset</code> - offset in bytes\nFlags for acceleration structures\nInformation of the required size for a corresponding …\nEntries for a single descriptor\nFlags for acceleration structure geometries\n<code>offset</code> - offset in bytes\n<code>offset</code> - offset in bytes\n<code>offset</code> - offset in bytes\n<code>first_vertex</code> - offset in the vertex buffer (as number of …\nBindGroup descriptor.\nBindGroupLayout descriptor.\nPipeline layout creation flags.\nSimilar to <code>wgt::BufferUsages</code> but for internal use.\nUpdates use source_acceleration_structure if present, else …\nFormat can be used as color and input attachment.\nFormat can be used as color (with blending) and input …\nThe color target of a renderpass.\nFlag used by the wgpu-core texture tracker to say a …\nFormat can be copied to.\nThe destination of a hardware copy.\nThe destination of a hardware copy.\nFormat can be copied from.\nThe source of a hardware copy.\nThe source of a hardware copy.\nEncoder for commands in command buffers. Serves as a …\nDescribes a compute pipeline.\nFormat can be used as depth-stencil and input attachment.\nRead-only depth stencil usage.\nRead-write depth stencil usage\nDrop guard to signal wgpu-hal is no longer using an …\nThe combination of states that a buffer must exclusively …\nThe combination of states that a texture must exclusively …\nInclude support for <code>first_vertex</code> / <code>first_instance</code> drawing.\nTexture format capability flags.\nAll buffers, buffer addresses and offsets will be ignored.…\nThe combination of states that a buffer may be in <em>at the </em>…\nThe combination of states that a texture may be in <em>at the </em>…\nThe index buffer used for drawing.\nThe indirect or count buffer in a indirect draw or …\nError occurring while trying to create an instance, or …\nOptimize for low memory footprint (scratch and output)\nThe argument to a read-only mapping.\nThe argument to a write-only mapping.\nFormat can be used for render pass resolve targets.\nFormat can be multisampled by x16.\nFormat can be multisampled by x2.\nFormat can be multisampled by x4.\nFormat can be multisampled by x8.\nNO_DUPLICATE_ANY_HIT_INVOCATION\nInclude support for num work groups builtin.\nNaga shader module.\nNo value.\nIs OPAQUE\nThe combination of all usages that the are guaranteed to …\nThe combination of all usages that the are guaranteed to …\nAllows for bind group binding arrays to be shorter than …\nOptimize for fast build time\nOptimize for fast ray tracing performance\nReady to present image to the surface.\nPipeline layout creation flags.\nDescribes a programmable pipeline stage.\nA buffer used to store query results.\nSize of a single occlusion/timestamp query, when copied …\nRead-only sampled or fetched resource.\nDescribes a render (graphics) pipeline.\nFormat can be sampled.\nFormat can be sampled with a linear sampler.\nFormat can be sampled with a min/max reduction sampler.\nFormat can be used as storage with write-only access.\nFormat can be used as storage with atomics.\nA read-only storage buffer used in a bind group.\nRead-only storage buffer usage. Corresponds to a UAV in …\nFormat can be used as storage with read and read/write …\nA read-write or write-only buffer used in a bind group.\nRead-write or write-only storage buffer usage.\nShader input.\nSome value of type <code>T</code>.\nDescribes information about what a <code>Surface</code>’s …\nTexture format capability flags.\nSimilar to <code>wgt::TextureUsages</code> but for internal use.\nTextureView descriptor.\nA uniform buffer bound in a bind group.\nThe texture is in unknown state.\nFlag used by the wgpu-core texture tracker to say that the …\nStores the text of any validation errors that have …\nA vertex buffer used for drawing.\nFlag for internal testing.\nDescribes how the vertex buffer is interpreted.\nReturns the next texture to be presented by the swapchain …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe stride, in bytes, between elements of this buffer.\nThe list of attributes which comprise a single vertex.\nBegin encoding a new command buffer.\nSafety:\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe buffer being bound.\nThe alignment of the start of the buffer used as a GPU …\nThe alignment of the row pitch of the texture data stored …\nTo get the required sizes for the buffer allocations use …\nThe effect of draw calls on the color aspect of the output …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nAlpha composition mode.\nList of supported alpha composition modes.\nConfigures the surface to use the given device.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nReturns true if the bitflags contains bits that are not …\nReturns true if the bitflags contains bits that are not …\nCopy from buffer to texture. Works with a single array …\nCopy from texture to buffer. Works with a single array …\nCopy from one texture to another. Works with a single …\nCreates a bind group layout.\nCreates a new buffer.\nCreates a new texture.\nCurrent extent of the surface, if known.\nSource codes for debug\nThe effect of draw calls on the depth and stencil aspects …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDiscard currently recorded list, if any.\nA dummy API implementation.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe upper bound of the range (exclusive).\nSafety:\nThe name of the entry point in the compiled shader. There …\nExit connection to this logical device.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nRequested texture extent. Must be in …\nFormat of the surface textures.\nList of supported texture formats.\nThe fragment stage for this pipeline.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nReturns any API validation errors that hav occurred in …\nCreates a <code>PresentationTimestamp</code> using the adapter’s WSI.\nGLES API internals.\nAnalysis information of the module.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturns <code>true</code> if only one flag is set\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe layout of bind groups for this pipeline.\nThe layout of bind groups for this pipeline.\nRange for the number of queued frames.\nMaximum number of queued frames. Must be in …\nShader module IR.\nThe compiled shader module for this stage.\nThe multi-sampling properties of the pipeline.\nIf the pipeline will be used with a multiview render pass, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe offset at which the bound region starts.\nOrigin within a texture. Note: for 1D and 2D textures, Z …\nVertical synchronization mode.\nList of supported V-sync modes.\nThe properties of the pipeline at the primitive assembly …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReclaims all resources that are allocated for this encoder.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the bind group at <code>index</code> to <code>group</code>, assuming the layout …\nSets a range in push constant data.\nThe size of the region bound, in bytes.\nThe compiled compute stage and its entry point.\nThe lower bound of the range (inclusive).\nHow often this vertex buffer is “stepped” forward.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSubmits the command buffers for execution on GPU.\nThe presentation configuration no longer matches the …\nReturns the capabilities of working with a specified …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturn the set of supported capabilities for a texture …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nUnconfigures the surface on the given device.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSupported texture usage flags.\nAllowed usage of surface textures,\nContains either a single mutating usage as a target, or a …\nThe format of any vertex buffers used with this pipeline.\nThe vertex stage for this pipeline.\nAllows views of this texture to have a different format …\nAllows views of swapchain texture to have a different …\nVulkan API internals.\nCalling wait with a lower value than the current fence …\nMaximum binding size for the shaders that only support <code>i32</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA wrapper around a <code>glow::Context</code> and the required EGL …\nA guard containing a lock to an <code>AdapterContext</code>\nReturns the underlying EGL context.\nReturns the EGL instance.\nReturns the EGL version the adapter context was created …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet’s the <code>glow::Context</code> without waiting for a lock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain a lock to the EGL context and get handle to the …\nCreates a new external adapter using the specified loader …\nReturns the EGLDisplay corresponding to the adapter …\nSafety\nSafety\nUser data needed by …\nQualcomm OOMs when there are zero color attachments but a …\nIf the following code returns false, then nvidia will end …\nOnly generate SPIR-V for one entry point at a time.\nWorkaround flags.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSafety\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturn the instance extension names wgpu would like to …\nSafety\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nSafety\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\n<code>features</code> must be the same features used to create …\nReturns the queue family index of the device’s internal …\nSafety\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSafety\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe pending fence values have to be ascending.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nCreate an Android-based display handle.\nCreate an AppKit-based display handle.\nGet the underlying raw display handle.\nGet the underlying raw window handle.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nCreate a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.\nBorrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gbm device.\nThe gbm surface.\nCreate an Haiku-based display handle.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new empty display handle.\nCreate a new handle to an <code>ANativeWindow</code>.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to an <code>OHNativeWindow</code> on OpenHarmony.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new empty display handle.\nCreate a new handle to a view.\nCreate a new handle to a display.\nCreate a new handle to a window.\nCreate a new handle to a connection and screen.\nCreate a new handle to a window.\nCreate a new display handle.\nCreate a new handle to a surface.\nCreate a new handle to a file descriptor.\nCreate a new handle to a plane.\nCreate a new handle to a device.\nCreate a new handle to a surface.\nCreate a new empty display handle.\nCreate a new handle to a canvas element.\nCreate a new handle from a pointer to <code>HtmlCanvasElement</code>.\nCreate a new handle from a pointer to an <code>OffscreenCanvas</code>.\nCreate a new empty display handle.\nCreate a new handle to a window.\nCreate a new handle to a window.\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nCreate an OpenHarmony-based display handle.\nCreate an Orbital-based display handle.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nCreate a UiKit-based display handle.\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nCreate a Web-based display handle.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nCreate a Windows-based display handle.\nDescribes a Buffer when allocating.\nUtility methods not meant to be in the main API.\nArgument buffer layout for dispatch_indirect commands.\nCPU accessible buffer used to download data back from the …\nArgument buffer layout for draw_indexed_indirect commands.\nArgument buffer layout for draw_indirect commands.\nThe texture is laid out densely in memory as:\nThe texture is laid out densely in memory as:\nMethods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.\nEfficiently performs many buffer writes by sharing and …\nOrder in which TextureData is laid out in memory.\nAligns a <code>value</code> to an <code>alignment</code>.\nReturns the bytes representation of the struct, ready to …\nReturns the bytes representation of the struct, ready to …\nReturns the bytes representation of the struct, ready to …\nGet a set of backend bits from the environment variable …\nThe value added to the vertex index before indexing into …\nContents of a buffer on creation.\nCreates a Buffer with data to initialize it.\nUpload an entire texture and its mipmaps from a source …\nDraws primitives from the active vertex buffer(s).\nDraws indexed primitives using the active index buffer and …\nDraws indexed primitives using the active index buffer and …\nDraws primitives from the active vertex buffer(s) based on …\nChoose which DX12 shader compiler to use from the …\nPrepare currently mapped buffers for use in a submission.\nThe first index within the index buffer.\nThe instance ID of the first instance to draw.\nThe instance ID of the first instance to draw.\nThe Index of the first vertex to draw.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChoose which minor OpenGL ES version to use from the …\nThe number of indices to draw.\nInitialize the adapter obeying the WGPU_ADAPTER_NAME …\nInitialize the adapter obeying the WGPU_ADAPTER_NAME …\nThe number of instances to draw.\nThe number of instances to draw.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDebug label of a buffer. This will show up in graphics …\nVersion of make_spirv intended for use with …\nCreate a new staging belt.\nGenerates a set of backends from a comma separated list of …\nGet a power preference from the environment variable …\nAsynchronously read the contents of a buffer.\nRecall all of the closed buffers back to be reused.\nSets the active bind group for a given bind group index. …\nSets the active index buffer.\nSets the active render pipeline.\n<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …\nAssign a vertex buffer to a slot.\nUsages of a buffer. If the buffer is used in any way that …\nThe number of vertices to draw.\nAllocate the staging belt slice of <code>size</code> to be uploaded …\nThe number of work groups in X dimension.\nThe number of work groups in Y dimension.\nThe number of work groups in Z dimension.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nThe appearance of a slider rail\nA rectangular shape.\nAn horizontal bar and a handle that selects a single value …\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nThe border <code>Color</code> of the handle.\nThe border radius of the corners of the rail.\nThe border width of the handle.\nThe <code>Color</code> of the handle.\nThe colors of the rail of the slider.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nThe appearance of the <code>Handle</code> of the slider.\nCalls <code>U::from(self)</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nThe theme catalog of an <code>Svg</code>.\nThe item class of the <code>Catalog</code>.\nA handle of Svg data.\nThe <code>Svg</code> is being hovered.\nThe <code>Svg</code> is idle.\nThe possible status of an <code>Svg</code>.\nThe appearance of an <code>Svg</code>.\nA styling function for an <code>Svg</code>.\nA vector graphics image.\nThe <code>Color</code> filter of an <code>Svg</code>.\nReturns a reference to the SVG <code>Data</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an SVG <code>Handle</code> from raw bytes containing either an …\nCreates an SVG <code>Handle</code> pointing to the vector image of the …\nReturns the unique identifier of the <code>Handle</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Style</code> of a class with the given status.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nA fragment of <code>Text</code>.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nOwned data.\nA factor of the size of the text.\nA bunch of <code>Rich</code> text.\nThe settings to configure the <code>Highlighter</code>.\nThe shaping strategy of some text.\nA span of text.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA paragraph.\nSets the <code>alignment::Horizontal</code> of the <code>Rich</code> text.\nSets the <code>alignment::Vertical</code> of the <code>Rich</code> text.\nSets the <code>Background</code> of the <code>Span</code>.\nSets the <code>Background</code> of the <code>Span</code>, if any.\nText with the default base color.\nSets the <code>Border</code> of the <code>Span</code>.\nSets the <code>Border</code> of the <code>Span</code>, if any.\nCenters the <code>Rich</code> text, both horizontally and vertically.\nNotifies the <code>Highlighter</code> that the line at the given index …\nSets the default style class of the <code>Rich</code> text.\nSets the default <code>Color</code> of the <code>Rich</code> text.\nSets the <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the text.\nSets the default <code>Color</code> of the <code>Rich</code> text, if <code>Some</code>.\nSets the <code>Color</code> of the <code>Span</code>, if any.\nReturns the current line of the <code>Highlighter</code>.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nSets the default font of the <code>Rich</code> text.\nSets the font of the <code>Span</code>.\nThe font of the <code>Span</code>.\nSets the font of the <code>Span</code>, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Rich</code> text boundaries.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the value to some text <code>Fragment</code>.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nSets the defualt <code>LineHeight</code> of the <code>Rich</code> text.\nSets the <code>LineHeight</code> of the <code>Span</code>.\nThe <code>LineHeight</code> of the <code>Span</code>.\nSets the link of the <code>Span</code>.\nThe link of the <code>Span</code>.\nSets the link of the <code>Span</code>, if any.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nCreates a new empty <code>Rich</code> text.\nCreates a new <code>Span</code> of text with the given text fragment.\nSets the <code>Padding</code> of the <code>Span</code>.\nThe <code>Padding</code> of the <code>Span</code>.\nText conveying some important information, like an action.\nAdds a new text <code>Span</code> to the <code>Rich</code> text.\nText conveying some secondary information, like a footnote.\nSets the default size of the <code>Rich</code> text.\nSets the size of the <code>Span</code>.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nSets whether the <code>Span</code> shoud be struck through or not.\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Style</code> of a class with the given status.\nSets the default style of the <code>Rich</code> text.\nText conveying some positive information, like a …\nThe <code>Fragment</code> of text.\nReturns the <code>LineHeight</code> in absolute logical pixels.\nTurns the <code>Span</code> into a static one.\nSets whether the <code>Span</code> shoud be underlined or not.\nWhether the <code>Span</code> should be underlined or not.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nSets the width of the <code>Rich</code> text boundaries.\nCreates a new <code>Rich</code> text with the given text spans.\nAn interaction with an <code>Editor</code>.\nThe <code>TextEditor</code> can be interacted with.\nDelete the previous character.\nDelete the previous character.\nA binding to an action in the <code>TextEditor</code>.\nThe theme catalog of a <code>TextEditor</code>.\nThe item class of the <code>Catalog</code>.\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe content of a <code>TextEditor</code>.\nCopy the selection of the <code>TextEditor</code>.\nProduce the given message.\nCut the selection of the <code>TextEditor</code>.\nDelete the next character.\nDelete the next character.\nThe <code>TextEditor</code> cannot be interacted with.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nMove to the end of the line.\nBreak the current line.\nBreak the current line.\nThe <code>TextEditor</code> is focused.\nMove to the start of the line.\nThe <code>TextEditor</code> is being hovered.\nInsert the given character.\nInsert the given character.\nA key press.\nMove left.\nA cursor movement.\nApply a <code>Motion</code>.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nPaste the clipboard contents in the <code>TextEditor</code>.\nMove right.\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nSelect the word at the current cursor.\nA sequence of bindings to execute.\nThe state of a <code>TextEditor</code>.\nThe possible status of a <code>TextEditor</code>.\nThe appearance of a text input.\nA styling function for a <code>TextEditor</code>.\nA multi-line text input.\nUnfocus the <code>TextEditor</code>.\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nReturns the current cursor position of the <code>Content</code>.\nThe default style of a <code>TextEditor</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the <code>Direction</code> of the <code>Motion</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the default <code>Binding</code> for the given key press.\nThe <code>Color</code> of the icon of the text input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Action</code> is an editing action.\nReturns whether the <code>TextEditor</code> is currently focused or not.\nThe key pressed.\nReturns the text of the line at the given index, if it …\nReturns the amount of lines of the <code>Content</code>.\nReturns an iterator of the text of the lines in the <code>Content</code>…\nThe state of the keyboard modifiers.\nCreates an empty <code>Content</code>.\nPerforms an <code>Action</code> on the <code>Content</code>.\nThe <code>Color</code> of the placeholder of the text input.\nReturns the selected text of the <code>Content</code>.\nThe <code>Color</code> of the selection of the text input.\nThe current <code>Status</code> of the <code>TextEditor</code>.\nThe <code>Style</code> of a class with the given status.\nReturns the text of the <code>Content</code>.\nThe text produced by the key press.\nThe <code>Color</code> of the value of the text input.\nWidens the <code>Motion</code>, if possible.\nCreates a <code>Content</code> with the given text.\nThe amount of lines to scroll.\nThe <code>TextInput</code> can be interacted with.\nThe theme catalog of a <code>TextInput</code>.\nThe item class of the <code>Catalog</code>.\nThe cursor of a text input.\nThe default <code>Padding</code> of a <code>TextInput</code>.\nThe <code>TextInput</code> cannot be interacted with.\nThe <code>TextInput</code> is focused.\nThe <code>TextInput</code> is being hovered.\nThe content of the <code>Icon</code>.\nThe identifier of a <code>TextInput</code>.\nThe left side of a <code>TextInput</code>.\nThe right side of a <code>TextInput</code>.\nThe side of a <code>TextInput</code>.\nThe state of a <code>TextInput</code>.\nThe possible status of a <code>TextInput</code>.\nThe appearance of a text input.\nA styling function for a <code>TextInput</code>.\nA field that can be filled with text.\nThe value of a <code>TextInput</code>.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe unicode code point that will be used as the icon.\nTrack the cursor of a text input.\nReturns the <code>Cursor</code> of the <code>TextInput</code>.\nThe default style of a <code>TextInput</code>.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>TextInput</code> with the given …\nFocuses the <code>TextInput</code>.\nThe font that will be used to display the <code>code_point</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Color</code> of the icon of the text input.\nInserts a new <code>char</code> at the given grapheme <code>index</code>.\nInserts a bunch of graphemes at the given grapheme <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Value</code> is empty or not.\nReturns whether the <code>TextInput</code> is currently focused or not.\nReturns the total amount of graphemes in the <code>Value</code>.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …\nCreates a new <code>Value</code> from a string slice.\nCreates a custom <code>Id</code>.\nCreates a new <code>State</code>, representing an unfocused <code>TextInput</code>.\nReturns the position of the next end of a word from the …\nThe <code>Color</code> of the placeholder of the text input.\nReturns the position of the previous start of a word from …\nRemoves the grapheme at the given <code>index</code>.\nRemoves the graphemes from <code>start</code> to <code>end</code>.\nReturns a new <code>Value</code> with all its graphemes replaced with …\nReturns a new <code>Value</code> containing the graphemes from <code>start</code> …\nProduces a <code>Task</code> that selects all the content of the …\nSelects all the content of the <code>TextInput</code>.\nReturns the current selection of the <code>Cursor</code> for the given …\nThe <code>Color</code> of the selection of the text input.\nThe side of a <code>TextInput</code> where to display the <code>Icon</code>.\nThe font size of the content.\nThe spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.\nReturns the <code>State</code> of the <code>Cursor</code>.\nThe <code>Style</code> of a class with the given status.\nUnfocuses the <code>TextInput</code>.\nCreates a unique <code>Id</code>.\nReturns a new <code>Value</code> containing the graphemes until the …\nThe <code>Color</code> of the value of the text input.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe end of the selection\nThe start of the selection\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nThe built-in light variant.\nThe built-in Moonfly variant.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nA color palette.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe danger <code>Color</code> of the <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nA set of background colors.\nA set of danger colors.\nThe built-in Catppuccin Frappé variant of an <code>Extended</code> …\nThe built-in Catppuccin Latte variant of an <code>Extended</code> …\nThe built-in Catppuccin Macchiato variant of an <code>Extended</code> …\nThe built-in Catppuccin Mocha variant of an <code>Extended</code> …\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in Dracula variant of an <code>Extended</code> palette.\nThe built-in Ferra variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Dark variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Light variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Dragon variant of an <code>Extended</code> …\nThe built-in Kanagawa Lotus variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Wave variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nThe built-in Moonfly variant of an <code>Extended</code> palette.\nThe built-in Nightfly variant of an <code>Extended</code> palette.\nThe built-in Nord variant of an <code>Extended</code> palette.\nThe built-in Oxocarbon variant of an <code>Extended</code> palette.\nThe built-in Solarized Dark variant of an <code>Extended</code> palette.\nThe built-in Solarized Light variant of an <code>Extended</code> …\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night Storm variant of an <code>Extended</code> …\nAn extended set of colors generated from a <code>Palette</code>.\nA pair of background and text colors.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nWhether the palette is dark or not.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nThe <code>Toggler</code> can be interacted with.\nThe theme catalog of a <code>Toggler</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Toggler</code> is being hovered.\nThe possible status of a <code>Toggler</code>.\nThe appearance of a toggler.\nA styling function for a <code>Toggler</code>.\nA toggler widget.\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe width of the background border of the toggler.\nThe default style of a <code>Toggler</code>.\nThe default class produced by the <code>Catalog</code>.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nThe width of the foreground border of the toggler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Style</code> of a class with the given status.\nIndicates whether the <code>Toggler</code> is toggled.\nIndicates whether the <code>Toggler</code> is toggled.\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nAn element to display a widget over another.\nThe tooltip will appear on the top of the widget.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nA rectangular shape.\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nAn vertical bar and a handle that selects a single value …\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe <code>Color</code> of the handle.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe appearance of the <code>Handle</code> of the slider.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nChanges the <code>HandleShape</code> of the <code>Style</code> to a circle with the …\nThe border radius of the corners of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nAn operation to be performed on some window.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nMove the window with the left mouse button until the …\nA window-related event.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current logical dimensions of the window.\nThe application is hidden\nAn window icon normally used for the titlebar or taskbar.\nAn window icon normally used for the titlebar or taskbar.\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nSet the window to maximized or back\nSet the window to minimized or back\nThe mode of a window-based application.\nMove the window to the given logical coordinates.\nA window was moved.\nRedraw the next frame.\nThe default behavior.\nOpens a new window with some <code>Settings</code>.\nA window was opened.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nA window was resized.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nThe window settings of an application.\nShow the system menu at cursor position.\nThe window is positioned with specific coordinates: <code>(X, Y)</code>.\nLike <code>Specific</code>, but the window is positioned with the …\nToggle whether window has decorations.\nToggle the window to maximized or back\nA window was unfocused.\nThe type of user attention to request.\nThe application appears in its own window.\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurences in the …\nCrops a <code>Screenshot</code> to the provided <code>region</code>. This will …\nWhether the window should have a border, a title bar, etc. …\nBegins dragging the window while the left mouse button is …\nSubscribes to all window events of the running application.\nWhether the window will close when the user requests it, …\nSubscribes to the frames of the window of the running …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGet the window’s size in logical dimensions.\nAttach an icon to the window of your application.\nThe icon of the window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the raw data of the <code>Icon</code>.\nThe window <code>Level</code>.\nThe maximum size of the window.\nMaximizes the window.\nThe minimum size of the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nCreates a new <code>Screenshot</code>.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nPlatform specific settings.\nThe initial position of the window.\nRequest user attention to the window. This has no effect …\nWhether the window should be resizable or not.\nResizes the window to the given logical dimensions.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nConfigure your windows.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nThe initial logical dimensions of the window.\nToggles the window decorations.\nToggles the window to maximized or back.\nWhether the window should be transparent.\nCreates a new unique window <code>Id</code>.\nWhether the window should be visible or not.\nThe position of the opened window. This is relative to the …\nThe size of the created window. This is its “inner” …\nAn error produced when creating an <code>Icon</code>.\nAn window icon normally used for the titlebar or taskbar.\nThe <code>image</code> crate reported an error.\nThe <code>Icon</code> is not valid.\nThe underlying OS failed to create the icon.\nReturns the argument unchanged.\nCreates an icon from an image file.\nCreates an icon from the content of an image file.\nBuilds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …\nCalls <code>U::from(self)</code>.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nThe gbm device.\nThe gbm surface.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe platform specific window settings of an application.\nThe window settings of an application.\nSets the application id of the window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nReturns the argument unchanged.\nThe icon of the window.\nCalls <code>U::from(self)</code>.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.")