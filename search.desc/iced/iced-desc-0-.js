searchState.loadedDescShard("iced", 0, "iced is a cross-platform GUI library focused on simplicity …\nA list with all the defined themes.\nAlignment on the axis of a container.\nThe black color.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA non-monospaced sans-serif font with normal <code>Weight</code>.\nThe built-in dark variant.\nDegrees\nThe built-in Dracula variant.\nA generic widget.\nAlign at the end of the axis.\nContains the error value\nAn error that occurred while running an application.\nA user interface event.\nA type that can run futures.\nThe futures executor could not be created.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe application graphics context could not be created.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nA <code>Transformation</code> that preserves whatever is transformed.\nA rectangle starting at <code>Point::ORIGIN</code> with infinite width …\nA <code>Size</code> with infinite width and height.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA linear gradient interpolates colors along a direction at …\nA monospaced font with normal <code>Weight</code>.\nThe built-in Moonfly variant.\nA mouse event\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nThe origin (i.e. a <code>Point</code> at (0, 0)).\nContains the success value\nThe built-in Oxocarbon variant.\nThe amount of radians in half a circle.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nA 2D point.\nThe primary rendering option.\nThe range of degrees of a circle.\nThe range of radians of a circle.\nRadians\nAn axis-aligned rectangle.\nThe default graphics renderer for <code>iced</code>.\nThe result of running an iced program.\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nThe secondary (or fallback) rendering option.\nA shadow.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nA request to listen to external events.\nA color with no opacity.\nA set of concurrent actions to be performed by the iced …\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA <code>Size</code> with a width and height of 1 unit.\nA 2D vector.\nThe white color.\nA window event\nThe application window could not be created.\nPadding of zero\nZero pixels.\nA <code>Size</code> with zero width and height.\nThe zero <code>Vector</code>.\nTransparency, 0.0 - 1.0\nCreates a new <code>Task</code> that can be aborted with the returned …\nLeverage advanced concepts like custom widgets.\nAlign and position widgets.\nExecutes a new <code>Task</code> after this one, only when it succeeds …\nExecutes a new <code>Task</code> after this one, only when it produces …\nCreate and run iced applications step by step.\nCreates an iced <code>Application</code> given its title, update, and …\nApplies the <code>Rotation</code> to the given <code>Size</code>, returning the …\nReturns the area of the <code>Rectangle</code>.\nBlue component, 0.0 - 1.0\nCombines the given tasks and produces a single <code>Task</code> that …\nBatches all the provided subscriptions and returns the …\nThe blur radius of the shadow.\nDraw lines around containers.\nSets the <code>bottom</code> of the <code>Padding</code>.\nBottom padding\nReturns the <code>Point</code> at the center of the <code>Rectangle</code>.\nReturns the X coordinate of the <code>Point</code> at the center of the …\nReturns the Y coordinate of the <code>Point</code> at the center of the …\nChains a new <code>Task</code> to be performed once the current one …\nAccess the clipboard.\nCreates a new <code>Task</code> that collects all the output of the …\nSets the <code>Color</code> of the <code>Border</code>.\nThe color of the border.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nReturns true if the given <code>Point</code> is contained in the …\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nCreate and run daemons that run in the background.\nCreates an iced <code>Daemon</code> given its title, update, and view …\nReturns the angle of the <code>Rotation</code> in <code>Degrees</code>.\nCreates a new <code>Task</code> that discards the result of the current …\nComputes the distance to another <code>Point</code>.\nCreates a new <code>Task</code> that instantly produces the given value.\nAdapts the <code>Length</code> so it can contain the other <code>Length</code> and …\nRuns the given closure inside the <code>Executor</code>.\nHandle events of a user interface.\nChoose your preferred executor to power your application.\nCreates a <code>Task</code> that exits the iced runtime.\nExpands the <code>Rectangle</code> a given amount.\nExpands this <code>Size</code> by the given amount.\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the <em>fill factor</em> of the <code>Length</code>.\nFits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.\nAttempt to apply the given fit for a content size within …\nReturns the “fluid” variant of the <code>Length</code>.\nLoad and use fonts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Color</code> from its linear RGBA components.\nCreates a <code>Color</code> from its RGB components.\nCreates a <code>Color</code> from its RGB8 components.\nCreates a <code>Color</code> from its RGBA components.\nCreates a <code>Color</code> from its RGB8 components and an alpha …\nCreates a new <code>Task</code> that runs the given <code>Future</code> and produces …\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nHeight of the rectangle.\nThe height.\nReturns the total amount of horizontal <code>Padding</code>.\nComputes the intersection with the given <code>Rectangle</code>.\nReturns whether the <code>Rectangle</code> intersects with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>Color</code> into its linear values.\nConverts the <code>Color</code> into its RGBA8 equivalent.\nReturns the inverted <code>Color</code>.\nInverts the <code>Color</code> in-place.\nReturns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or\nReturns true if the current <code>Rectangle</code> is completely within …\nListen and react to keyboard events.\nSets the <code>left</code> of the <code>Padding</code>.\nLeft padding\nMaps the output of a <code>Task</code> with the given closure.\nTransforms the <code>Subscription</code> output with the given function.\nReturns the maximum of each component of this size and …\nReturns the minimum of each component of this size and …\nListen and react to mouse events.\nCreates a new <code>Executor</code>.\nCreate a <code>Padding</code> that is equal on all sides.\nCreates a new <code>Color</code>.\nCreates a new <code>Point</code> with the given coordinates.\nCreates a new <code>Rectangle</code> with its top-left corner in the …\nCreates a new  <code>Size</code> with the given width and height.\nCreates a new <code>Vector</code> with the given components.\nCreates a <code>Task</code> that does nothing.\nReturns an empty <code>Subscription</code> that will not produce any …\nThe offset of the shadow.\nCreates an orthographic projection.\nDisplay interactive elements on top of other widgets.\nSpace stuff around the perimeter.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nCreates a <code>Task</code> that runs the given <code>Future</code> to completion …\nReturns the position of the top left corner of the …\nRed component, 0.0 - 1.0\nReturns the angle of the <code>Rotation</code> in <code>Radians</code>.\nReturns a mutable reference to the angle of the <code>Rotation</code> …\nThe <code>Radius</code> of the border.\nSets the <code>right</code> of the <code>Padding</code>.\nRight padding\nRotates the <code>Rectangle</code> and returns the smallest <code>Rectangle</code> …\nRotates the given <code>Size</code> and returns the minimum <code>Size</code> …\nSets the <code>Radius</code> of the <code>Border</code>.\nRuns a basic iced application with default <code>Settings</code> given …\nCreates a <code>Task</code> that runs the given <code>Stream</code> to completion …\nReturns a <code>Subscription</code> that will call the given function …\nReturns a <code>Subscription</code> that will create and asynchronously …\nCreates a uniform scaling transformation.\nScales the alpha channel of the <code>Gradient</code> by the given …\nScales the alpha channel of the <code>Background</code> by the given …\nScales the alpha channel of the <code>Color</code> by the given factor.\nReturns the scale factor of the <code>Transformation</code>.\nConfigure your application.\nShrinks the <code>Rectangle</code> a given amount.\nReturns the <code>Size</code> of the <code>Rectangle</code>.\nSnaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.\nSpawns a future in the <code>Executor</code>.\nCreate asynchronous streams of data.\nCreates a new <code>Task</code> that runs the given <code>Stream</code> and produces …\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nRetrieve system information.\nCreate runtime tasks.\nUse the built-in theme and styles.\nPerforms a new <code>Task</code> for every output of the current <code>Task</code> …\nListen and react to time.\nCalculates the line in which the angle intercepts the …\nSets the <code>top</code> of the <code>Padding</code>.\nTop padding\nListen and react to touch events.\nCreates a translate transformation.\nReturns the translation of the <code>Transformation</code>.\nComputes the union with the given <code>Rectangle</code>.\nReturns the total amount of vertical <code>Padding</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nUse the built-in widgets or create your own.\nSets the width of the <code>Border</code>.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nConfigure the window of your application in native …\nAdds a value to the <code>Subscription</code> context.\nCreates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …\nCreates a new square <code>Rectangle</code> with the center at the …\nCreates a new <code>Rectangle</code> with its top-left corner at the …\nCreates a new axis-aligned <code>Rectangle</code> from the given …\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nA buffer for short-term storage and transfer within and …\nThe bounds of a <code>Node</code> and its children, using absolute …\nAn interactive component that can be displayed on top of …\nA component that can be used by widgets to draw themselves …\nA connection to the state of a shell.\nA paragraph.\nA component that displays information and allows …\nReturns whether the widgets of the current application …\nReturns the bounds of the <code>Layout</code>.\nThe bounds of the paragraph.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns an iterator over the <code>Layout</code> of the children of a …\nClears all of the recorded primitives in the <code>Renderer</code>.\nAccess the clipboard.\nThe content of the paragraph.\nReconciles the <code>Widget</code> with the provided <code>Tree</code>.\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe font of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe horizontal alignment of the <code>Text</code>.\nLoad and draw raster graphics.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates the current application layout.\nInvalidates the current application widgets.\nReturns true if the <code>Shell</code> contains no published messages\nReturns whether the current layout is invalid or not.\nReturns true if the cursor is over the <code>Overlay</code>.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nThe line height of the <code>Text</code>.\nMerges the current <code>Shell</code> with another one by applying the …\nHandle mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreates a new <code>Layout</code> for the given <code>Node</code> at the origin.\nCreates a new <code>Shell</code> with the provided buffer of messages.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nDisplay interactive elements on top of other widgets.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the position of the <code>Layout</code>.\nPublish the given <code>Message</code> for an application to process it.\nReads the current content of the <code>Clipboard</code> as text.\nReturns the request a redraw should happen, if any.\nWrite your own renderer.\nRequests a new frame to be drawn.\nTriggers the given function if the layout is invalid, …\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nWrite your own subscriptions.\nLoad and draw vector graphics.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nDraw and interact with text.\nThe vertical alignment of the <code>Text</code>.\nCreate custom widgets and operate on them.\nDraws the primitives recorded in the given closure in a …\nCreates a new <code>Layout</code> for the given <code>Node</code> with the provided …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nA buffer for short-term storage and transfer within and …\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads the current content of the <code>Clipboard</code> as text.\nWrites the given text contents to the <code>Clipboard</code>.\nA cheaply cloneable and sliceable chunk of contiguous …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nThe unique identifier of some <code>Handle</code> data.\nA raster image that can be drawn.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA <code>Renderer</code> that can render raster graphics.\nA handle pointing to decoded image pixels in RGBA format.\nClears the buffer, removing all data.\nCreates <code>Bytes</code> instance from slice, by copying it.\nDraws an <code>Image</code> inside the provided <code>bounds</code>.\nThe filter method of the image.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Bytes</code> from a static slice.\nThe handle of the image.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if this is the only reference to the data.\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the dimensions of an image for the given <code>Handle</code>.\nCreates a new empty <code>Bytes</code>.\nThe opacity of the image.\nThe rotation to be applied to the image; on its center.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nIf set to <code>true</code>, the image will be snapped to the pixel …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nTry to convert self into <code>BytesMut</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nNo limits\nThe bounds of an element and its children.\nAligns the <code>Node</code> in the given space.\nMutable reference version of <code>Self::align</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nReturns the bounds of the <code>Node</code>.\nReturns the children of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nCreates a new <code>Node</code> that wraps a single child with some …\nDistribute elements using a flex-based layout.\nReturns the argument unchanged.\nReturns the argument unchanged.\nApplies a height constraint to the current <code>Limits</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the minimum width constraint for the current <code>Limits</code>…\nReturns the maximum <code>Size</code> of the <code>Limits</code>.\nApplies a maximum height constraint to the current <code>Limits</code>.\nApplies a maximum width constraint to the current <code>Limits</code>.\nReturns the minimum <code>Size</code> of the <code>Limits</code>.\nApplies a minimum height constraint to the current <code>Limits</code>.\nApplies a minimum width constraint to the current <code>Limits</code>.\nMoves the <code>Node</code> to the given position.\nMutable reference version of <code>Self::move_to</code>.\nCreates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.\nCreates a new <code>Node</code> with the given <code>Size</code>.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nComputes the resulting <code>Size</code> that fits the <code>Limits</code> given …\nShrinks the current <code>Limits</code> by the given <code>Size</code>.\nReturns the <code>Size</code> of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nTranslates the <code>Node</code> by the given translation.\nTranslates the <code>Node</code> by the given translation.\nApplies a width constraint to the current <code>Limits</code>.\nCreates a new <code>Node</code> with the given <code>Size</code> and children.\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nA mouse click.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the <code>Kind</code> of <code>Click</code>.\nCreates a new <code>Click</code> with the given position and previous …\nReturns the position of the <code>Click</code>.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Element</code> and its children using the given <code>Layout</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the cursor is over the <code>Element</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nComputes the layout of the <code>Element</code> in the given bounds.\nApplies a transformation to the produced message of the …\nReturns the current <code>mouse::Interaction</code> of the <code>Element</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nCreates a new <code>Element</code> containing the given <code>Overlay</code>.\nCreates an empty <code>Group</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Element</code>.\nApplies a <code>widget::Operation</code> to the <code>Overlay</code>.\nReturns the nested overlay of the <code>Element</code>, if there is any.\nTurns the <code>Group</code> into an overlay <code>overlay::Element</code>.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nAdds an <code>overlay::Element</code> to the <code>Group</code>.\nCreates a <code>Group</code> with the given elements.\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>. The border is drawn on the inside …\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Shadow</code> of the <code>Quad</code>.\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe text color\nDraws the primitives recorded in the given closure in a …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nA subscription event.\nA stream of runtime events.\nThe hasher used for identifying subscriptions.\nA user interacted with a user interface in a window.\nDescribes an event specific to MacOS\nA MacOS specific event\nThe events that will be produced by a <code>Subscription</code> with …\nA platform specific event\nA platform specific event.\nTriggered when the app receives an URL from the system\nThe description of a <code>Subscription</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Subscription</code> from a <code>Recipe</code> describing it.\nHashes the <code>Recipe</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the different recipes of the <code>Subscription</code>.\nExecutes the <code>Recipe</code> and produces the stream of events of …\nThe <code>Event</code> describing the interaction.\nThe <code>event::Status</code> of the interaction.\nThe window holding the interface of the interaction.\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nA raster image that can be drawn.\nSets the <code>Color</code> filter of the <code>Svg</code>.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe handle of the <code>Svg</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the default dimensions of an SVG for the given …\nCreates a new <code>Svg</code> with the given handle.\nSets the opacity of the <code>Svg</code>.\nThe opacity of the <code>Svg</code>.\nSets the rotation of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nA component that can be used by widgets to edit multi-line …\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font of the <code>Editor</code>.\nThe font of this <code>Paragraph</code>.\nThe font type used.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nA text highlight.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe result of hit testing on text.\nThe icon font of the backend.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wrapping.\nNo difference.\nOwned data.\nA text paragraph.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nThe settings to configure the <code>Highlighter</code>.\nA shape difference.\nThe shaping strategy of some text.\nA span of text.\nA paragraph.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nThe <code>Background</code> of the highlight.\nThe <code>Border</code> of the highlight.\nReturns the current boundaries of the <code>Editor</code>.\nThe bounds of the paragraph.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the <code>Span</code>.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nThe content of the paragraph.\nReturns the current line of the <code>Highlighter</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nComputes the cursor position of the <code>Hit</code> .\nReturns the current cursor position of the <code>Editor</code>.\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given <code>Text</code> at the given position and with the …\nThe font of the <code>Text</code>.\nThe font of the <code>Span</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the distance to the given grapheme index in the …\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nHighlight text.\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nThe horizontal alignment of the <code>Text</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the value to some text <code>Fragment</code>.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nThe line height of the <code>Text</code>.\nThe <code>LineHeight</code> of the <code>Span</code>.\nThe link of the <code>Span</code>.\nReturns the minimum boundaries to fit the current contents …\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum width that can fit the contents of the …\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nThe <code>Padding</code> of the <code>Span</code>.\nDraw paragraphs.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns the current selected text of the <code>Editor</code>.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nThe size of the <code>Text</code> in logical pixels.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nReturns all bounds for the provided <code>Span</code> index of the …\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Fragment</code> of text.\nWhether the <code>Span</code> should be underlined or not.\nUpdates the <code>Editor</code> with some new attributes.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nReturns the vertical alignment of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Editor</code> laid out with the given text.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nAn interaction with an <code>Editor</code>.\nDelete the previous character.\nCursor without a selection\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe cursor of an <code>Editor</code>.\nDelete the next character.\nA direction in some text.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nA component that can be used by widgets to edit multi-line …\nMove to the end of the line.\nBreak the current line.\nThe font of the <code>Editor</code>.\nMove to the start of the line.\nInsert the given character.\nMove left.\n&lt;-\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\n-&gt;\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nCursor selecting a range of text\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nReturns the current boundaries of the <code>Editor</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nReturns the minimum boundaries to fit the current contents …\nPerforms an <code>Action</code> on the <code>Editor</code>.\nReturns the current selected text of the <code>Editor</code>.\nUpdates the <code>Editor</code> with some new attributes.\nCreates a new <code>Editor</code> laid out with the given text.\nThe amount of lines to scroll.\nThe format of some text.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe highlight iterator type.\nA highlighter that highlights nothing.\nThe settings to configure the <code>Highlighter</code>.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nThe <code>Font</code> of the text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHighlights the given line.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nThe font of this <code>Paragraph</code>.\nA text paragraph.\nA <code>Paragraph</code> of plain text.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nReturns the argument unchanged.\nReturns the distance to the given grapheme index in the …\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nReturns the horizontal alignment of the <code>Paragraph</code>.\nCalls <code>U::from(self)</code>.\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum width that can fit the contents of the …\nReturns the minimum width that can fit the contents of the …\nCreates a new <code>Plain</code> paragraph.\nReturns the cached <code>Paragraph</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns all bounds for the provided <code>Span</code> index of the …\nUpdates the plain <code>Paragraph</code> to match the given <code>Text</code>, if …\nReturns the vertical alignment of the <code>Paragraph</code>.\nReturns the vertical alignment of the <code>Paragraph</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nThe identifier of a generic widget.\nA piece of logic that can traverse the widget tree of an …\nA paragraph of text.\nA persistent state widget tree.\nA component that displays information and allows …\nSets the <code>alignment::Horizontal</code> of the <code>Text</code>.\nSets the <code>alignment::Vertical</code> of the <code>Text</code>.\nCenters the <code>Text</code>, both horizontally and vertically.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nThe children of the root widget of the <code>Tree</code>.\nSets the style class of the <code>Text</code>.\nSets the <code>Color</code> of the <code>Text</code>.\nSets the <code>Color</code> of the <code>Text</code>, if <code>Some</code>.\nOperates on a widget that contains other widgets.\nOperates on a custom widget with some state.\nReconciles the <code>Widget</code> with the provided <code>Tree</code>.\nReconciles the current tree with the provided <code>Widget</code>.\nReconciles the children of the tree with the provided list …\nReconciles the children of the tree with the provided list …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nCreates an empty, stateless <code>Tree</code> with no children.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nOperates on a widget that can be focused.\nSets the <code>Font</code> of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Text</code> boundaries.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nSets the <code>LineHeight</code> of the <code>Text</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreate a new fragment of <code>Text</code> with the given contents.\nCreates a new <code>Tree</code> for the provided <code>Widget</code>.\nCreates a custom <code>Id</code>.\nProcesses a runtime <code>Event</code>.\nCreates a new <code>Task</code> that runs the given <code>widget::Operation</code> …\nApplies an <code>Operation</code> to the <code>Widget</code>.\nQuery or update internal widget state.\nReturns the overlay of the <code>Widget</code>, if there is any.\nOperates on a widget that can be scrolled.\nSets the <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nSets the size of the <code>Text</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nThe <code>State</code> of the <code>Tree</code>.\nSets the style of the <code>Text</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nThe tag of the <code>Tree</code>.\nWrite some text for your users to read.\nOperates on a widget that has text input.\nStore internal widget state in a state tree to ensure …\nCreates a unique <code>Id</code>.\nSets the width of the <code>Text</code> boundaries.\nSets the <code>Wrapping</code> strategy of the <code>Text</code>.\nThe <code>Operation</code> needs to be followed by another <code>Operation</code>.\nThe internal state of a widget that can be focused.\nThe <code>Operation</code> produced no result.\nA piece of logic that can traverse the widget tree of an …\nThe result of an <code>Operation</code>.\nThe internal state of a widget that can be scrolled.\nThe <code>Operation</code> produced some result.\nThe internal state of a widget that has text input.\nWraps the <code>Operation</code> in a black box, erasing its returning …\nOperates on a widget that contains other widgets.\nOperates on a custom widget with some state.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFocuses the widget.\nOperate on widgets that can be focused.\nOperates on a widget that can be focused.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether the widget is focused or not.\nMaps the output of an <code>Operation</code> using the given function.\nMoves the cursor of the text input to an arbitrary …\nMoves the cursor of the text input to the end of the input …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that applies the given <code>Operation</code> to …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nOperate on widgets that can be scrolled.\nOperates on a widget that can be scrolled.\nSelects all the content of the text input.\nSnaps the scroll of the widget to the given <code>percentage</code> …\nOperate on widgets that have text input.\nOperates on a widget that has text input.\nChains the output of an <code>Operation</code> with the provided …\nUnfocuses the widget.\nA summary of the focusable widgets present on a widget …\nThe internal state of a widget that can be focused.\nProduces an <code>Operation</code> that generates a <code>Count</code> and chains it …\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that focuses the widget with the …\nFocuses the widget.\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that searches for the current …\nThe index of the current focused widget, if any.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether the widget is focused or not.\nThe total amount of focusable widgets.\nUnfocuses the widget.\nThe amount of absolute offset in each direction of a …\nThe amount of relative offset in each direction of a …\nThe internal state of a widget that can be scrolled.\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that snaps the widget with the given …\nSnaps the scroll of the widget to the given <code>percentage</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nThe internal state of a widget that has text input.\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to an arbitrary …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the end of the input …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that selects all the content of the …\nSelects all the content of the text input.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nWraps at the glyph level.\nThe height of a line of text in a paragraph.\nNo wrapping.\nA factor of the size of the text.\nThe shaping strategy of some text.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA paragraph of text.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nText with the default base color.\nThe <code>Color</code> of the text.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nText conveying some important information, like an action.\nText conveying some secondary information, like a footnote.\nThe <code>Style</code> of a class with the given status.\nText conveying some positive information, like a …\nNo meaningful internal state.\nSome meaningful internal state.\nThe internal <code>State</code> of a widget.\nThe identifier of some widget state.\nA persistent state widget tree.\nThe children of the root widget of the <code>Tree</code>.\nReconciles the <code>current_children</code> with the provided list of …\nDowncasts the <code>State</code> to <code>T</code> and returns a mutable reference …\nDowncasts the <code>State</code> to <code>T</code> and returns a reference to it.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>State</code>.\nCreates a <code>Tag</code> for a state of type <code>T</code>.\nThe <code>State</code> of the <code>Tree</code>.\nCreates a <code>Tag</code> for a stateless widget.\nThe tag of the <code>Tree</code>.\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe appearance of a program.\nThe underlying definition and configuration of an iced …\nThe default style of a <code>Program</code>.\nThe title logic of some <code>Application</code>.\nThe update logic of some <code>Application</code>.\nThe view logic of some <code>Application</code>.\nSets the <code>Settings::antialiasing</code> of the <code>Application</code>.\nCreates an iced <code>Application</code> given its title, update, and …\nThe background <code>Color</code> of the application.\nSets the <code>window::Settings::position</code> to …\nSets the <code>window::Settings::decorations</code> of the <code>Application</code>.\nSets the default <code>Font</code> of the <code>Application</code>.\nReturns the default style of a <code>Program</code>.\nSets the <code>window::Settings::exit_on_close_request</code> of the …\nAdds a font to the list of fonts that will be loaded at …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the <code>window::Settings::level</code> of the <code>Application</code>.\nSets the <code>window::Settings::position</code> of the <code>Application</code>.\nSets the <code>window::Settings::resizable</code> of the <code>Application</code>.\nRuns the <code>Application</code>.\nRuns the <code>Application</code> with a closure that creates the …\nSets the scale factor of the <code>Application</code>.\nSets the <code>Settings</code> that will be used to run the <code>Application</code>.\nSets the style logic of the <code>Application</code>.\nSets the subscription logic of the <code>Application</code>.\nThe default text <code>Color</code> of the application.\nSets the theme logic of the <code>Application</code>.\nProduces the title of the <code>Application</code>.\nSets the <code>window::Settings::transparent</code> of the <code>Application</code>.\nProcesses the message and updates the state of the …\nProduces the widget of the <code>Application</code>.\nSets the <code>window::Settings</code> of the <code>Application</code>.\nSets the <code>window::Settings::size</code> of the <code>Application</code>.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nSets the bottom left and bottom right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given bottom left value.\nSets the bottom left value of the <code>Radius</code>.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nSets the bottom right value of the <code>Radius</code>.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nThe color of the border.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and bottom left values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the same value for each corner.\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nSets the top right and bottom right values of the <code>Radius</code>.\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and top right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given top left value.\nSets the top left value of the <code>Radius</code>.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nSets the top right value of the <code>Radius</code>.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nThe width of the border.\nRead the current contents of the clipboard.\nRead the current contents of the primary clipboard.\nWrite the given contents to the clipboard.\nWrite the given contents to the primary clipboard.\nThe appearance of a program.\nThe underlying definition and configuration of an iced …\nThe default style of a <code>Program</code>.\nThe title logic of some <code>Daemon</code>.\nThe view logic of some <code>Daemon</code>.\nSets the <code>Settings::antialiasing</code> of the <code>Daemon</code>.\nThe background <code>Color</code> of the application.\nCreates an iced <code>Daemon</code> given its title, update, and view …\nSets the default <code>Font</code> of the <code>Daemon</code>.\nReturns the default style of a <code>Program</code>.\nAdds a font to the list of fonts that will be loaded at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns the <code>Daemon</code>.\nRuns the <code>Daemon</code> with a closure that creates the initial …\nSets the scale factor of the <code>Daemon</code>.\nSets the <code>Settings</code> that will be used to run the <code>Daemon</code>.\nSets the style logic of the <code>Daemon</code>.\nSets the subscription logic of the <code>Daemon</code>.\nThe default text <code>Color</code> of the application.\nSets the theme logic of the <code>Daemon</code>.\nProduces the title of the <code>Daemon</code>.\nProduces the widget of the <code>Daemon</code>.\nThe <code>Event</code> was handled and processed by a widget.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nReturns a <code>Subscription</code> to all the ignored runtime events.\nCreates a <code>Subscription</code> that produces a message for every …\nCreates a <code>Subscription</code> that notifies of custom application …\nCreates a <code>Subscription</code> that listens and filters all the …\nA default cross-platform executor.\nA type that can run futures.\nRuns the given closure inside the <code>Executor</code>.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nGlyphs in cursive fonts generally use a more informal …\nAn error while loading a font.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a font from its bytes.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> gradient with the given angle in …\nOffset along the gradient vector.\nScales the alpha channel of the <code>Linear</code> gradient by the …\n<code>ColorStop</code>s along the linear gradient path.\nThe “alt” key.\nThe “command” key.\nThe “control” key.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe “windows” key on Windows, “command” key on …\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe “shift” key.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nGet a flags value with all known bits set.\nReturns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns true if a “command key” is pressed in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns true if the “jump key” is pressed in the …\nIdentify keyboard keys.\nReturns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.\nReturns true if the “command key” is pressed on a …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nListens to keyboard key presses and calls the given …\nListens to keyboard key releases and calls the given …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nInitate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\nUsed to remove the character to the left of the cursor. …\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nConvert the current input method sequence.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nThe Function switch <code>Fn</code> key. Activating this key …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nScroll down or display next page of content.\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause the current state or application (as appropriate).\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nThe properties (Props) key.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nAn unidentified key.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nCause device to identify itself in some manner, e.g., …\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Cursor</code> is over the given <code>bounds</code>.\nReturns the absolute position of the <code>Cursor</code>, if available.\nReturns the relative position of the <code>Cursor</code> from the given …\nReturns the relative position of the <code>Cursor</code> inside the …\nReturns the absolute position of the <code>Cursor</code>, if available …\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA generic overlay.\nBuild and show dropdown menus.\nThe theme catalog of a <code>Menu</code>.\nThe item class of the <code>Catalog</code>.\nA list of selectable options.\nThe local state of a <code>Menu</code>.\nThe appearance of a <code>Menu</code>.\nA styling function for a <code>Menu</code>.\nThe <code>Background</code> of the menu.\nThe <code>Border</code> of the menu.\nThe default style of the list of a <code>Menu</code>.\nThe default class produced by the <code>Catalog</code>.\nThe default class for the scrollable of the <code>Menu</code>.\nThe background <code>Color</code> of a selected option in the menu.\nThe text <code>Color</code> of a selected option in the menu.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the menu.\nAn amount of space to pad for each side of a box\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some bottom <code>Padding</code>.\nBottom padding\nCreate some left <code>Padding</code>.\nLeft padding\nCreate some right <code>Padding</code>.\nRight padding\nCreate some top <code>Padding</code>.\nTop padding\nThe settings of an iced program.\nIf set to true, the renderer will try to perform …\nThe default <code>Font</code> to be used.\nThe text size that will be used by default.\nThe fonts to load on boot.\nReturns the argument unchanged.\nThe identifier of the application.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Stream</code> that produces the items sent from a …\nCreates a new <code>Stream</code> that produces the items sent from a …\nContains informations about the system (e.g. system name, …\nDetailed processor model information\nThe number of physical cores on the processor\nQuery for available system information.\nReturns the argument unchanged.\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nCalls <code>U::from(self)</code>.\nTotal RAM size, in bytes\nMemory used by this process, in bytes\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nAborts the <code>Task</code> of this <code>Handle</code>.\nReturns a new <code>Handle</code> that will call <code>Handle::abort</code> whenever …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Task</code> of this <code>Handle</code> has been aborted.\nThe built-in Catppuccin Frappé variant of a <code>Palette</code>.\nThe built-in Catppuccin Latte variant of a <code>Palette</code>.\nThe built-in Catppuccin Macchiato variant of a <code>Palette</code>.\nThe built-in Catppuccin Mocha variant of a <code>Palette</code>.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant of a <code>Palette</code>.\nThe built-in Dracula variant of a <code>Palette</code>.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe built-in Ferra variant of a <code>Palette</code>.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant of a <code>Palette</code>.\nThe built-in Gruvbox Light variant of a <code>Palette</code>.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe built-in Kanagawa Dragon variant of a <code>Palette</code>.\nThe built-in Kanagawa Lotus variant of a <code>Palette</code>.\nThe built-in Kanagawa Wave variant of a <code>Palette</code>.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nThe built-in light variant of a <code>Palette</code>.\nThe built-in light variant.\nThe built-in Moonfly variant of a <code>Palette</code>.\nThe built-in Moonfly variant.\nThe built-in Nightfly variant of a <code>Palette</code>.\nThe built-in Nord variant of a <code>Palette</code>.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant of a <code>Palette</code>.\nThe built-in Oxocarbon variant.\nA color palette.\nThe built-in Solarized Dark variant of a <code>Palette</code>.\nThe built-in Solarized Light variant of a <code>Palette</code>.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe built-in Tokyo Night variant of a <code>Palette</code>.\nThe built-in Tokyo Night Light variant of a <code>Palette</code>.\nThe built-in Tokyo Night Storm variant of a <code>Palette</code>.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe danger <code>Color</code> of the <code>Palette</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code> with a …\nA set of background colors.\nA set of danger colors.\nThe built-in Catppuccin Frappé variant of an <code>Extended</code> …\nThe built-in Catppuccin Latte variant of an <code>Extended</code> …\nThe built-in Catppuccin Macchiato variant of an <code>Extended</code> …\nThe built-in Catppuccin Mocha variant of an <code>Extended</code> …\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in Dracula variant of an <code>Extended</code> palette.\nThe built-in Ferra variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Dark variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Light variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Dragon variant of an <code>Extended</code> …\nThe built-in Kanagawa Lotus variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Wave variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nThe built-in Moonfly variant of an <code>Extended</code> palette.\nThe built-in Nightfly variant of an <code>Extended</code> palette.\nThe built-in Nord variant of an <code>Extended</code> palette.\nThe built-in Oxocarbon variant of an <code>Extended</code> palette.\nThe built-in Solarized Dark variant of an <code>Extended</code> palette.\nThe built-in Solarized Light variant of an <code>Extended</code> …\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night Storm variant of an <code>Extended</code> …\nAn extended set of colors generated from a <code>Palette</code>.\nA pair of background and text colors.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an <code>Extended</code> palette from a simple <code>Palette</code>.\nGenerates a set of <code>Primary</code> colors from the base, …\nGenerates a set of <code>Secondary</code> colors from the base and text …\nGenerates a set of <code>Success</code> colors from the base, …\nGenerates a set of <code>Danger</code> colors from the base, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the palette is dark or not.\nCreates a new <code>Pair</code> from a background <code>Color</code> and some text …\nGenerates a set of <code>Background</code> colors from the base and …\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant.\nReturns a <code>Subscription</code> that produces messages at a set …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nPanics\nPanics\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA generic widget that produces a message when pressed.\nA widget capable of drawing 2D graphics.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA box that can be checked.\nA container that distributes its contents vertically.\nA widget for searching and selecting a single value from a …\nA reusable, custom widget that uses The Elm Architecture.\nAn element decorating some content.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default height of a <code>ProgressBar</code>.\nThe default height of a <code>Slider</code>.\nThe default size of a <code>Radio</code> button.\nThe default size of a <code>Toggler</code>.\nThe default spacing of a <code>Radio</code> button.\nThe default width of a <code>VerticalSlider</code>.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe type of event this <code>Component</code> handles internally.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nA frame that displays an image while keeping aspect ratio.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA widget that only rebuilds its contents when necessary.\nThe built-in light variant.\nThe built-in Moonfly variant.\nEmit messages on mouse events.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nA collection of panes distributed using either vertical or …\nA widget for selecting a single value from a list of …\nThe primary rendering option.\nA bar that displays progress.\nA type of matrix barcode consisting of squares arranged in …\nA circular button representing a choice.\nThe default graphics renderer for <code>iced</code>.\nA widget that is aware of its dimensions.\nA container that distributes its contents horizontally.\nDisplay a horizontal or vertical rule for dividing content.\nA widget that can vertically display an infinite amount of …\nThe secondary (or fallback) rendering option.\nA widget which can render custom shaders with Iced’s <code>wgpu</code>…\nAn horizontal bar and a handle that selects a single value …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nAn amount of empty space.\nA container that displays children on top of each other.\nThe internal state of this <code>Component</code>.\nA vector graphics image.\nA paragraph.\nA multi-line text input.\nA field that can be filled with text.\nA built-in theme.\nA widget that applies any <code>Theme</code> to its contents.\nA toggler widget.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nAn element to display a widget over another.\nAn vertical bar and a handle that selects a single value …\nAligns the contents of the <code>Container</code> to the bottom.\nAligns the contents of the <code>Container</code> to the left.\nAligns the contents of the <code>Container</code> to the right.\nAligns the contents of the <code>Container</code> to the top.\nSets the horizontal alignment of the contents of the <code>Column</code>…\nSets the content alignment for the horizontal axis of the …\nSets the horizontal alignment of the <code>TextInput</code>.\nSets the vertical alignment of the contents of the <code>Row</code> .\nSets the content alignment for the vertical axis of the …\nAnchors the vertical <code>Scrollable</code> direction to the bottom.\nAnchors the horizontal <code>Scrollable</code> direction to the left.\nAnchors the horizontal <code>Scrollable</code> direction to the right.\nAnchors the vertical <code>Scrollable</code> direction to the top.\nSets the <code>Anchor</code> of the horizontal direction of the …\nSets the <code>Anchor</code> of the vertical direction of the <code>Scrollable</code>…\nSets the <code>Background</code> of the <code>Themer</code>.\nAllow your users to perform actions by pressing a button.\nCreates a new <code>Button</code> with the provided content.\nDraw 2D graphics for your users.\nCreates a new <code>Canvas</code>.\nSets the size of the squares of the grid cell of the <code>QRCode</code>…\nCreates a new <code>Container</code> that fills all the available space …\nCenters the contents in both the horizontal and vertical …\nSets the width of the <code>Container</code> and centers its contents …\nSets the height of the <code>Container</code> and centers its contents …\nShow toggle controls using checkboxes.\nCreates a new <code>Checkbox</code>.\nSets the style class of the <code>Button</code>.\nSets the style class of the <code>Checkbox</code>.\nSets the style class of the <code>Container</code>.\nSets the style class of the <code>PaneGrid</code>.\nSets the style class of the <code>PickList</code>.\nSets the style class of the <code>ProgressBar</code>.\nSets the style class of the <code>Radio</code> button.\nSets the style class of the <code>Rule</code>.\nSets the style class of the <code>Scrollable</code>.\nSets the style class of the <code>Slider</code>.\nSets the style class of the <code>TextEditor</code>.\nSets the style class of the <code>TextInput</code>.\nSets the style class of the <code>Toggler</code>.\nSets the style class of the <code>Tooltip</code>.\nSets the style class of the <code>VerticalSlider</code>.\nSets the style class of the <code>Svg</code>.\nSets the style class of the <code>QRCode</code>.\nSets whether the contents of the <code>Column</code> should be clipped …\nSets whether the contents of the <code>Row</code> should be clipped on …\nSets whether the contents of the <code>Button</code> should be clipped …\nSets whether the contents of the <code>Container</code> should be …\nCreates a new <code>Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nDisplay a dropdown list of searchable and selectable …\nCreates a new <code>ComboBox</code>.\nTurns an implementor of <code>Component</code> into an <code>Element</code> that can …\nDecorate content and apply alignment.\nCreates a new <code>Container</code> with the provided content.\nSets the <code>ContentFit</code> of the <code>Svg</code>.\nSets the <code>ContentFit</code> of the <code>Image</code>.\nSets the optional default value for the <code>Slider</code>.\nSets the optional default value for the <code>VerticalSlider</code>.\nCreates a new <code>Scrollable</code> with the given <code>Direction</code>.\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nExtends the <code>Column</code> with the given children.\nExtends the <code>Row</code> with the given children.\nExtends the <code>Stack</code> with the given children.\nSets the <code>FilterMethod</code> of the <code>Image</code>.\nFocuses the next focusable widget.\nFocuses the previous focusable widget.\nSets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.\nSets the <code>Renderer::Font</code> of the <code>ComboBox</code>.\nSets the font of the <code>PickList</code>.\nSets the text font of the <code>Radio</code> button.\nSets the <code>Font</code> of the <code>TextEditor</code>.\nSets the <code>Font</code> of the <code>TextInput</code>.\nSets the <code>Renderer::Font</code> of the text of the <code>Toggler</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Svg</code> that will display the contents of the …\nCreates a <code>Column</code> from an already allocated <code>Vec</code>.\nCreates a <code>Row</code> from an already allocated <code>Vec</code>.\nCreates a <code>Stack</code> from an already allocated <code>Vec</code>.\nSets the gap between the content and its <code>Tooltip</code>.\nSets the <code>Handle</code> of the <code>PickList</code>.\nSets the height of the <code>Column</code>.\nSets the height of the <code>Row</code>.\nSets the height of the <code>Stack</code>.\nSets the height of the <code>Button</code>.\nSets the height of the <code>Container</code>.\nSets the height of the <code>PaneGrid</code>.\nSets the height of the <code>ProgressBar</code>.\nSets the height of the <code>Scrollable</code>.\nSets the height of the <code>Slider</code>.\nSets the height of the <code>TextEditor</code>.\nSets the height of the <code>VerticalSlider</code>.\nSet the <code>height</code> of the custom <code>Shader</code>.\nSets the height of the <code>Svg</code>.\nSets the height of the <code>Space</code>.\nSets the height of the <code>Image</code> boundaries.\nSets the height of the <code>Canvas</code>.\nHighlights the <code>TextEditor</code> using the given syntax and theme.\nHighlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a horizontal <code>Rule</code> with the given height.\nCreates a new <code>Space</code> widget that fills the available …\nDisplays a widget on top of another one, only when the …\nCreates an <code>Element</code> that displays the iced logo with the …\nSets the <code>Icon</code> of the <code>Checkbox</code>.\nSets the <code>text_input::Icon</code> of the <code>ComboBox</code>.\nSets the <code>Icon</code> of the <code>TextInput</code>.\nSets the <code>Id</code> of the <code>Container</code>.\nSets the <code>Id</code> of the <code>Scrollable</code>.\nSets the <code>Id</code> of the <code>TextInput</code>.\nDisplay images in your user interface.\nCreates a new <code>Image</code>.\nSets the style class of the input of the <code>ComboBox</code>.\nSets the style of the input of the <code>ComboBox</code>.\nThe <code>mouse::Interaction</code> to use when hovering the area.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the closure to produce key bindings on key presses.\nUse widgets that can provide hints to ensure continuity.\nCreates a new <code>keyed::Column</code> with the given children.\nCreates a <code>Column</code> with the given children.\nLays out the <code>TextInput</code>, overriding its <code>Value</code> if provided.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nSets the <code>LineHeight</code> of the <code>ComboBox</code>.\nSets the <code>text::LineHeight</code> of the <code>TextEditor</code>.\nSets the <code>text::LineHeight</code> of the <code>TextInput</code>.\nParse and display Markdown.\nDisplay a bunch of Markdown items.\nSets the maximum height of the <code>Container</code>.\nSets the maximum width of the <code>Column</code>.\nSets the maximum width of the <code>Container</code>.\nSets the style class of the menu of the <code>ComboBox</code>.\nSets the style class of the <code>Menu</code>.\nSets the style of the menu of the <code>ComboBox</code>.\nSets the style of the <code>Menu</code>.\nA container intercepting mouse events.\nCreates an empty <code>Column</code>.\nCreates a <code>MouseArea</code> with the given content.\nCreates an empty <code>Row</code>.\nCreates an empty <code>Stack</code>.\nCreates an empty <code>Themer</code> that applies the given <code>Theme</code> to …\nCreates a new <code>Button</code> with the given content.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>ComboBox</code> with the given list of options, a …\nCreates a <code>Container</code> with the given content.\nCreates a <code>PaneGrid</code> with the given <code>State</code> and view function.\nCreates a new <code>PickList</code> with the given list of options, the …\nCreates a new <code>ProgressBar</code>.\nCreates a new <code>Radio</code> button.\nCreates a new vertical <code>Scrollable</code>.\nCreates a new <code>Slider</code>.\nCreates new <code>TextEditor</code> with the given <code>Content</code>.\nCreates a new <code>TextInput</code> with the given placeholder and its …\nCreates a new <code>Toggler</code>.\nCreates a new <code>Tooltip</code>.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nCreate a new custom <code>Shader</code>.\nCreates a new <code>Svg</code> from the given <code>Handle</code>.\nCreates a new <code>QRCode</code> with the provided <code>Data</code>.\nCreates an amount of empty <code>Space</code> with the given width and …\nCreates a new <code>Image</code> with the given path.\nCreates a new <code>Canvas</code>.\nSets the message that should be produced when some action …\nSets the message that will be produced when a <code>Pane</code> of the …\nSets the message that will be produced when the outside …\nSets the message that will be produced when the <code>PickList</code> …\nEnables the drag and drop interactions of the <code>PaneGrid</code>, …\nThe message to emit when the mouse enters the area.\nThe message to emit when the mouse exits the area.\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nThe message to emit on a middle button press.\nThe message to emit on a middle button release.\nThe message to emit when the mouse moves in the area.\nSets the message that will be produced when the <code>PickList</code> …\nSets the message that will be produced when an option of …\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nThe message to emit on a left button press.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nThe message to emit on a left button release.\nSets the release message of the <code>Slider</code>. This is called …\nSets the release message of the <code>VerticalSlider</code>. This is …\nEnables the resize interactions of the <code>PaneGrid</code>, which will\nThe message to emit on a right button press.\nThe message to emit on a right button release.\nSets a function to call when the <code>Scrollable</code> is scrolled.\nSets the message that should be produced when the <code>TextInput</code>…\nSets the message that should be produced when the <code>TextInput</code>…\nSets the function that will be called when the <code>Checkbox</code> is …\nSets the function that will be called when the <code>Checkbox</code> is …\nSets the opacity of the <code>Svg</code>.\nSets the opacity of the <code>Image</code>.\nWraps the given widget and captures any mouse button …\nUpdate the <code>Component</code> state based on the provided <code>Operation</code>\nDisplay interactive elements on top of other widgets.\nSets the <code>Padding</code> of the <code>Column</code>.\nSets the <code>Padding</code> of the <code>Row</code>.\nSets the <code>Padding</code> of the <code>Button</code>.\nSets the <code>Padding</code> of the <code>ComboBox</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>PickList</code>.\nSets the <code>Padding</code> of the <code>TextEditor</code>.\nSets the <code>Padding</code> of the <code>TextInput</code>.\nSets the padding of the <code>Tooltip</code>.\nLet your users split regions of your application and …\nDisplay a dropdown list of selectable values.\nCreates a new <code>PickList</code>.\nSets the placeholder of the <code>PickList</code>.\nSets the placeholder of the <code>TextEditor</code>.\nProvide progress feedback to your users.\nCreates a new <code>ProgressBar</code>.\nAdds an element to the <code>Column</code>.\nAdds an <code>Element</code> to the <code>Row</code>.\nAdds an element to the <code>Stack</code>.\nAdds an element to the <code>Column</code>, if <code>Some</code>.\nAdds an element to the <code>Row</code>, if <code>Some</code>.\nAdds an element to the <code>Stack</code>, if <code>Some</code>.\nEncode and display information in a QR code.\nCreates a new <code>QRCode</code> widget from the given <code>Data</code>.\nCreate choices using radio buttons.\nCreates a new <code>Radio</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Rich</code> text widget with the provided spans.\nCreates some <code>Rich</code> text with the given spans.\nApplies the given <code>Rotation</code> to the <code>Svg</code>.\nApplies the given <code>Rotation</code> to the <code>Image</code>.\nCreates a new <code>Row</code> with the given children.\nCreates a <code>Row</code> with the given children.\nDisplay a horizontal or vertical rule for dividing content.\nNavigate an endless amount of content with a scrollbar.\nCreates a new <code>Scrollable</code> with the provided content.\nConverts the <code>TextInput</code> into a secure password input.\nA custom shader widget for wgpu applications.\nCreates a new <code>Shader</code>.\nSets the optional “shift” step for the <code>Slider</code>.\nSets the optional “shift” step for the <code>VerticalSlider</code>.\nSets the size of the <code>Checkbox</code>.\nSets the text sixe of the <code>ComboBox</code>.\nSets the size of the <code>Radio</code> button.\nSets the text size of the <code>TextEditor</code>.\nSets the text size of the <code>TextInput</code>.\nSets the size of the <code>Toggler</code>.\nReturns a <code>Size</code> hint for laying out the <code>Component</code>.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>Slider</code>.\nSets whether the <code>Tooltip</code> is snapped within the viewport.\nSets the vertical spacing <em>between</em> elements.\nSets the horizontal spacing <em>between</em> elements.\nSets the spacing between the <code>Checkbox</code> and the text.\nSets the spacing <em>between</em> the panes of the <code>PaneGrid</code>.\nSets the spacing between the <code>Radio</code> button and the text.\nEmbeds the <code>Scrollbar</code> into the <code>Scrollable</code>, instead of …\nSets the spacing between the <code>Toggler</code> and the text.\nCreates a new <code>Span</code> of text with the provided content.\nCreates a new <code>Stack</code> with the given children.\nCreates a <code>Stack</code> with the given children.\nSets the step size of the <code>Slider</code>.\nSets the step size of the <code>VerticalSlider</code>.\nSets the style of the <code>Button</code>.\nSets the style of the <code>Checkbox</code>.\nSets the style of the <code>Container</code>.\nSets the style of the <code>PaneGrid</code>.\nSets the style of the <code>PickList</code>.\nSets the style of the <code>ProgressBar</code>.\nSets the style of the <code>Radio</code> button.\nSets the style of the <code>Rule</code>.\nSets the style of this <code>Scrollable</code>.\nSets the style of the <code>Slider</code>.\nSets the style of the <code>TextEditor</code>.\nSets the style of the <code>TextInput</code>.\nSets the style of the <code>Toggler</code>.\nSets the style of the <code>Tooltip</code>.\nSets the style of the <code>VerticalSlider</code>.\nSets the style of the <code>Svg</code>.\nSets the style of the <code>QRCode</code>.\nDisplay vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nDraw and interact with text.\nCreates a new <code>Text</code> widget with the provided content.\nCreates a new <code>Text</code> widget with the provided content.\nSets the horizontal alignment of the text of the <code>Toggler</code>\nSets the default text <code>Color</code> of the <code>Themer</code>.\nDisplay a multi-line text input for text editing.\nCreates a new <code>TextEditor</code>.\nDisplay fields that can be filled with text.\nCreates a new <code>TextInput</code>.\nSets the text <code>text::LineHeight</code> of the <code>Checkbox</code>.\nSets the text <code>text::LineHeight</code> of the <code>PickList</code>.\nSets the text <code>text::LineHeight</code> of the <code>Radio</code> button.\nSets the text <code>text::LineHeight</code> of the <code>Toggler</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Checkbox</code>.\nSets the <code>text::Shaping</code> strategy of the <code>PickList</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Radio</code> button.\nSets the <code>text::Shaping</code> strategy of the <code>Toggler</code>.\nSets the text size of the <code>Checkbox</code>.\nSets the text size of the <code>PickList</code>.\nSets the text size of the <code>Radio</code> button.\nSets the text size o the <code>Toggler</code>.\nSets the <code>text::Wrapping</code> strategy of the <code>Checkbox</code>.\nSets the <code>text::Wrapping</code> strategy of the <code>Radio</code> button.\nSets the <code>text::Wrapping</code> strategy of the <code>Toggler</code>.\nUse the built-in theme and styles.\nA widget that applies any <code>Theme</code> to its contents.\nShow toggle controls using togglers.\nCreates a new <code>Toggler</code>.\nDisplay a widget over another.\nCreates a new <code>Tooltip</code> for the provided content with the …\nProcesses an <code>Event</code> and updates the <code>Component</code> state …\nCreates a new <code>Text</code> widget that displays the provided value.\nCreates a vertical <code>Rule</code> with the given width.\nCreates a vertical <code>Rule</code> with the given width.\nDisplay an interactive selector of a single value from a …\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Space</code> widget that fills the available …\nProduces the widgets of the <code>Component</code>, which may trigger …\nSets the width of the <code>Column</code>.\nSets the width of the <code>Row</code>.\nSets the width of the <code>Stack</code>.\nSets the width of the <code>Button</code>.\nSets the width of the <code>Checkbox</code>.\nSets the width of the <code>ComboBox</code>.\nSets the width of the <code>Container</code>.\nSets the width of the <code>PaneGrid</code>.\nSets the width of the <code>PickList</code>.\nSets the width of the <code>ProgressBar</code>.\nSets the width of the <code>Radio</code> button.\nSets the width of the <code>Scrollable</code>.\nSets the width of the <code>Slider</code>.\nSets the width of the <code>TextInput</code>.\nSets the width of the <code>Toggler</code>.\nSets the width of the <code>VerticalSlider</code>.\nSet the <code>width</code> of the custom <code>Shader</code>.\nSets the width of the <code>Svg</code>.\nSets the width of the <code>Space</code>.\nSets the width of the <code>Image</code> boundaries.\nSets the width of the <code>Canvas</code>.\nCreates a <code>Column</code> with the given capacity.\nCreates a <code>Row</code> with the given capacity.\nCreates a <code>Stack</code> with the given capacity.\nCreates a <code>Column</code> with the given elements.\nCreates a <code>Row</code> with the given elements.\nCreates a <code>Stack</code> with the given elements.\nCreates a new vertical <code>Scrollable</code>.\nCreates an amount of vertical <code>Space</code>.\nCreates an amount of horizontal <code>Space</code>.\nTurns the <code>Row</code> into a <code>Wrapping</code> row.\nSets the <code>Wrapping</code> strategy of the <code>TextEditor</code>.\nThe <code>Button</code> can be pressed.\nA generic widget that produces a message when pressed.\nThe theme catalog of a <code>Button</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Button</code> cannot be pressed.\nThe <code>Button</code> can be pressed and it is being hovered.\nThe <code>Button</code> is being pressed.\nThe possible status of a <code>Button</code>.\nThe style of a button.\nA styling function for a <code>Button</code>.\nThe <code>Background</code> of the button.\nThe <code>Border</code> of the buton.\nA danger button; denoting a destructive action.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA primary button; denoting a main action.\nA secondary button; denoting a complementary action.\nThe <code>Shadow</code> of the butoon.\nThe <code>Style</code> of a class with the given status.\nA success button; denoting a good outcome.\nA text button; useful for links.\nThe text <code>Color</code> of the button.\nUpdates the <code>Style</code> with the given <code>Background</code>.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe frame supported by a renderer.\nThe geometry supported by a renderer.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA cache group.\nA raster image that can be drawn.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nCreates a new <code>Path</code> representing a circle given its center …\nThe color of the text\nThe contents of the text\nDraws the state of the <code>Program</code>, producing a bunch of …\nComputes the <code>Path</code>s of the <code>Text</code> and draws them using the …\nHandle events of a canvas.\nFill <code>Geometry</code> with a certain style.\nSets the filter method of the <code>Image</code>.\nThe filter method of the image.\nThe font of the text\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA gradient that can be used as a fill for some geometry.\nThe handle of the image.\nThe horizontal alignment of the text\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Group</code> can only ever have a single <code>Cache</code>…\nCreates a new <code>Path</code> representing a line segment given its …\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nCreates a new <code>Path</code> with the provided closure.\nCreates a new <code>Image</code> with the given handle.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nSets the opacity of the <code>Image</code>.\nThe opacity of the image.\nPacks the <code>Gradient</code> for use in shader code.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nReturns the internal <code>lyon_path::Path</code>.\nCreates a new <code>Path</code> representing a rectangle given its …\nSets the rotation of the <code>Image</code>.\nThe rotation to be applied to the image; on its center.\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nSets whether the <code>Image</code> should be snapped to the pixel grid.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nCreate lines from a <code>Path</code> and assigns them various …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nReturns the current <code>Path</code> with the given transform applied …\nGenerates a new unique cache <code>Group</code>.\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nSets the color of the <code>Stroke</code>.\nSets the <code>LineCap</code> of the <code>Stroke</code>.\nSets the <code>LineJoin</code> of the <code>Stroke</code>.\nSets the width of the <code>Stroke</code>.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMerges two <code>Status</code> into one.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nThe absolute ending position of the gradient.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> builder.\nCreates a new <code>Packed</code> gradient for use in shader code.\nPacks the <code>Gradient</code> for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nAdds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …\nAdds a circular arc to the <code>Path</code> with the given control …\nAdds a cubic Bézier curve to the <code>Path</code> given its two …\nBuilds the <code>Path</code> of this <code>Builder</code>.\nThe center of the arc.\nAdds a circle to the <code>Path</code> given its center coordinate and …\nCloses the current sub-path in the <code>Path</code> with a straight …\nAdds an ellipse to the <code>Path</code> using a clockwise direction.\nThe end of the segment’s angle, clockwise rotation from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnects the last point in the <code>Path</code> to the given <code>Point</code> …\nMoves the starting point of a new sub-path to the given …\nCreates a new <code>Builder</code>.\nAdds a quadratic Bézier curve to the <code>Path</code> given its …\nThe radius of the arc.\nAdds a rectangle to the <code>Path</code> given its top-left corner …\nThe start of the segment’s angle, clockwise rotation …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe end of the segment’s angle, clockwise rotation from …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle, clockwise rotation …\nThe start of the segment’s angle, clockwise rotation …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nReturns a view on the path commands.\nReturns a view on this <code>Path</code>.\nReturns a slice over an endpoint’s custom attributes.\nReturns a slice over an endpoint’s custom attributes.\nPath building utilities.\nCreates a PathCommandsBuilder to create path commands.\nCreates a Builder to build a path.\nCreates a BuilderWithAttributes to build a path with …\nA generic representation for paths that allow more control …\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns an iterator over the path, with endpoints and …\nReturns the first endpoint and its custom attributes if …\nIterate on a flattened approximation of the path with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the endpoint’s custom attributes as a slice of …\nIterates over the endpoint and control point ids of the …\nIterates over the endpoint and control point ids of the …\nReturns an iterator of <code>IdEvent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuilds a <code>Path</code> from This iterator.\nReturns whether the path buffer is empty.\nReturns whether the path buffer is empty.\nReturns an iterator over the path commands.\nReturns an iterator over the path commands.\nIterates over the entire <code>Path</code>, ignoring custom attributes.\nIterates over the path.\nReturns an iterator of <code>Event&lt;&amp;T&gt;</code>.\nIterates over the entire <code>Path</code> with custom attributes.\nIterates over the entire <code>Path</code> with custom attributes.\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nReturns the last endpoint and its custom attributes if any.\nReturns the number of paths in the path buffer.\nReturns the number of paths in the path buffer.\nf32 version of the lyon_geom types used everywhere. Most …\nCreates an Empty <code>Path</code>.\nReturns the next event id within the path.\nReturns the next event id within the path.\nReturns the next event id within the sub-path.\nReturns the next event id within the path.\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nReturns an iterator of <code>PathEvent</code>.\nReturns a view on a path made of these commands with …\nSpecific path types for polygons.\nReturns a reversed version of this path in the form of an …\nReturns a reversed version of this path in the form of an …\nCreates an WithSvg to build a path with a rich set of …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nApplies a transform to all endpoints and control points of …\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nAdds a cubic bézier curve to the current sub-path.\nEnds the current sub path.\nEnds the current sub path.")